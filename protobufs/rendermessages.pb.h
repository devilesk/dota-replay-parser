// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rendermessages.proto

#ifndef PROTOBUF_rendermessages_2eproto__INCLUDED
#define PROTOBUF_rendermessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_rendermessages_2eproto();
void protobuf_AssignDesc_rendermessages_2eproto();
void protobuf_ShutdownFile_rendermessages_2eproto();

class CBorderData;
class CBorderData_CBorderSide;
class CBoxShadowData;
class CMsg3DTransformMatrix;
class CMsg3DTransformMatrix_AnimationFrameData;
class CMsg3DTransformOrigin;
class CMsg3DTransformOrigin_AnimationFrameData;
class CMsg3DTransformPerspective;
class CMsg3DTransformPerspectiveOrigin;
class CMsg3DTransformPerspectiveOrigin_AnimationFrameData;
class CMsg3DTransformPerspective_AnimationFrameData;
class CMsgAnimationData;
class CMsgAnimationFrameData;
class CMsgBeginFrame;
class CMsgBeginPaintBackground;
class CMsgBeginPaintLast;
class CMsgBorder;
class CMsgBorderRadius;
class CMsgBorderRadius_AnimationFrameData;
class CMsgBorder_AnimationFrameData;
class CMsgBoxShadow;
class CMsgBoxShadow_AnimationFrameData;
class CMsgBrightness;
class CMsgBrightness_AnimationFrameData;
class CMsgClearBackbuffer;
class CMsgClip;
class CMsgClipData;
class CMsgClip_AnimationFrameData;
class CMsgColor;
class CMsgColorStop;
class CMsgColor_AnimationFrameData;
class CMsgContrast;
class CMsgContrast_AnimationFrameData;
class CMsgDeletePanel;
class CMsgDeleteParticleSystem;
class CMsgDeleteTexture;
class CMsgDrawDoubleBufferedRect;
class CMsgDrawFilledRect;
class CMsgDrawTextRegion;
class CMsgDrawTexturedRect;
class CMsgDrawYUV420DoubleBufferedRect;
class CMsgEndFrame;
class CMsgEndPaintBackground;
class CMsgEndPaintLast;
class CMsgFillBrush;
class CMsgFillBrushCollection;
class CMsgFillBrushCollection_AnimationFrameData;
class CMsgFreeCompositingLayer;
class CMsgGaussianBlur;
class CMsgGaussianBlur_AnimationFrameData;
class CMsgGaussianValues;
class CMsgHueShift;
class CMsgHueShift_AnimationFrameData;
class CMsgLinearGradient;
class CMsgLockTexture;
class CMsgMatrix4x4;
class CMsgOpacity;
class CMsgOpacityMask;
class CMsgOpacityMaskData;
class CMsgOpacityMask_AnimationFrameData;
class CMsgOpacity_AnimationFrameData;
class CMsgPanelPosition;
class CMsgPanelPosition_AnimationFrameData;
class CMsgParticle;
class CMsgParticleSystem;
class CMsgPoint;
class CMsgPointWithTransition;
class CMsgPointWithTransition_AnimationFrameData;
class CMsgPopAAndTContext;
class CMsgPopClipLayer;
class CMsgPopCompositingLayer;
class CMsgPushAAndTContext;
class CMsgPushClipLayer;
class CMsgPushCompositingLayer;
class CMsgRadialGradient;
class CMsgRenderFillBrushCollection;
class CMsgRenderFilledRect;
class CMsgRenderTextFormat;
class CMsgRenderTextRangeFormat;
class CMsgRenderTextRegion;
class CMsgRenderTexturedRect;
class CMsgRequestRenderCallback;
class CMsgRotate2D;
class CMsgRotate2D_AnimationFrameData;
class CMsgSaturation;
class CMsgSaturation_AnimationFrameData;
class CMsgTextFormat;
class CMsgTextInlineObject;
class CMsgTextRangeFormat;
class CMsgTextShadow;
class CMsgTextShadow_AnimationFrameData;
class CMsgTransformOriginData;
class CMsgTransitionData;
class CRadiusData;
class CRadiusData_CCornerRadius;
class CTextShadowData;

// ===================================================================

class CMsgBeginFrame : public ::google::protobuf::Message {
 public:
  CMsgBeginFrame();
  virtual ~CMsgBeginFrame();

  CMsgBeginFrame(const CMsgBeginFrame& from);

  inline CMsgBeginFrame& operator=(const CMsgBeginFrame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBeginFrame& default_instance();

  void Swap(CMsgBeginFrame* other);

  // implements Message ----------------------------------------------

  inline CMsgBeginFrame* New() const { return New(NULL); }

  CMsgBeginFrame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBeginFrame& from);
  void MergeFrom(const CMsgBeginFrame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBeginFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double frame_paint_time = 1;
  bool has_frame_paint_time() const;
  void clear_frame_paint_time();
  static const int kFramePaintTimeFieldNumber = 1;
  double frame_paint_time() const;
  void set_frame_paint_time(double value);

  // optional uint32 surface_width = 2;
  bool has_surface_width() const;
  void clear_surface_width();
  static const int kSurfaceWidthFieldNumber = 2;
  ::google::protobuf::uint32 surface_width() const;
  void set_surface_width(::google::protobuf::uint32 value);

  // optional uint32 surface_height = 3;
  bool has_surface_height() const;
  void clear_surface_height();
  static const int kSurfaceHeightFieldNumber = 3;
  ::google::protobuf::uint32 surface_height() const;
  void set_surface_height(::google::protobuf::uint32 value);

  // optional uint32 render_target = 4;
  bool has_render_target() const;
  void clear_render_target();
  static const int kRenderTargetFieldNumber = 4;
  ::google::protobuf::uint32 render_target() const;
  void set_render_target(::google::protobuf::uint32 value);

  // optional double ui_scale_factor = 5;
  bool has_ui_scale_factor() const;
  void clear_ui_scale_factor();
  static const int kUiScaleFactorFieldNumber = 5;
  double ui_scale_factor() const;
  void set_ui_scale_factor(double value);

  // optional bool empty_frame = 6;
  bool has_empty_frame() const;
  void clear_empty_frame();
  static const int kEmptyFrameFieldNumber = 6;
  bool empty_frame() const;
  void set_empty_frame(bool value);

  // optional bool clear_gpu_resources_before_frame = 7;
  bool has_clear_gpu_resources_before_frame() const;
  void clear_clear_gpu_resources_before_frame();
  static const int kClearGpuResourcesBeforeFrameFieldNumber = 7;
  bool clear_gpu_resources_before_frame() const;
  void set_clear_gpu_resources_before_frame(bool value);

  // @@protoc_insertion_point(class_scope:CMsgBeginFrame)
 private:
  inline void set_has_frame_paint_time();
  inline void clear_has_frame_paint_time();
  inline void set_has_surface_width();
  inline void clear_has_surface_width();
  inline void set_has_surface_height();
  inline void clear_has_surface_height();
  inline void set_has_render_target();
  inline void clear_has_render_target();
  inline void set_has_ui_scale_factor();
  inline void clear_has_ui_scale_factor();
  inline void set_has_empty_frame();
  inline void clear_has_empty_frame();
  inline void set_has_clear_gpu_resources_before_frame();
  inline void clear_has_clear_gpu_resources_before_frame();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double frame_paint_time_;
  ::google::protobuf::uint32 surface_width_;
  ::google::protobuf::uint32 surface_height_;
  double ui_scale_factor_;
  ::google::protobuf::uint32 render_target_;
  bool empty_frame_;
  bool clear_gpu_resources_before_frame_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBeginFrame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgEndFrame : public ::google::protobuf::Message {
 public:
  CMsgEndFrame();
  virtual ~CMsgEndFrame();

  CMsgEndFrame(const CMsgEndFrame& from);

  inline CMsgEndFrame& operator=(const CMsgEndFrame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEndFrame& default_instance();

  void Swap(CMsgEndFrame* other);

  // implements Message ----------------------------------------------

  inline CMsgEndFrame* New() const { return New(NULL); }

  CMsgEndFrame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgEndFrame& from);
  void MergeFrom(const CMsgEndFrame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgEndFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mouse_cursor_texture_id = 1;
  bool has_mouse_cursor_texture_id() const;
  void clear_mouse_cursor_texture_id();
  static const int kMouseCursorTextureIdFieldNumber = 1;
  ::google::protobuf::uint32 mouse_cursor_texture_id() const;
  void set_mouse_cursor_texture_id(::google::protobuf::uint32 value);

  // optional float mouse_cursor_hotspot_x = 2;
  bool has_mouse_cursor_hotspot_x() const;
  void clear_mouse_cursor_hotspot_x();
  static const int kMouseCursorHotspotXFieldNumber = 2;
  float mouse_cursor_hotspot_x() const;
  void set_mouse_cursor_hotspot_x(float value);

  // optional float mouse_cursor_hotspot_y = 3;
  bool has_mouse_cursor_hotspot_y() const;
  void clear_mouse_cursor_hotspot_y();
  static const int kMouseCursorHotspotYFieldNumber = 3;
  float mouse_cursor_hotspot_y() const;
  void set_mouse_cursor_hotspot_y(float value);

  // @@protoc_insertion_point(class_scope:CMsgEndFrame)
 private:
  inline void set_has_mouse_cursor_texture_id();
  inline void clear_has_mouse_cursor_texture_id();
  inline void set_has_mouse_cursor_hotspot_x();
  inline void clear_has_mouse_cursor_hotspot_x();
  inline void set_has_mouse_cursor_hotspot_y();
  inline void clear_has_mouse_cursor_hotspot_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mouse_cursor_texture_id_;
  float mouse_cursor_hotspot_x_;
  float mouse_cursor_hotspot_y_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgEndFrame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClearBackbuffer : public ::google::protobuf::Message {
 public:
  CMsgClearBackbuffer();
  virtual ~CMsgClearBackbuffer();

  CMsgClearBackbuffer(const CMsgClearBackbuffer& from);

  inline CMsgClearBackbuffer& operator=(const CMsgClearBackbuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClearBackbuffer& default_instance();

  void Swap(CMsgClearBackbuffer* other);

  // implements Message ----------------------------------------------

  inline CMsgClearBackbuffer* New() const { return New(NULL); }

  CMsgClearBackbuffer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClearBackbuffer& from);
  void MergeFrom(const CMsgClearBackbuffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgClearBackbuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 clear_color_rgba = 1;
  bool has_clear_color_rgba() const;
  void clear_clear_color_rgba();
  static const int kClearColorRgbaFieldNumber = 1;
  ::google::protobuf::uint32 clear_color_rgba() const;
  void set_clear_color_rgba(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClearBackbuffer)
 private:
  inline void set_has_clear_color_rgba();
  inline void clear_has_clear_color_rgba();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 clear_color_rgba_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgClearBackbuffer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDeleteTexture : public ::google::protobuf::Message {
 public:
  CMsgDeleteTexture();
  virtual ~CMsgDeleteTexture();

  CMsgDeleteTexture(const CMsgDeleteTexture& from);

  inline CMsgDeleteTexture& operator=(const CMsgDeleteTexture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDeleteTexture& default_instance();

  void Swap(CMsgDeleteTexture* other);

  // implements Message ----------------------------------------------

  inline CMsgDeleteTexture* New() const { return New(NULL); }

  CMsgDeleteTexture* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDeleteTexture& from);
  void MergeFrom(const CMsgDeleteTexture& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDeleteTexture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 texture_pointer = 1;
  bool has_texture_pointer() const;
  void clear_texture_pointer();
  static const int kTexturePointerFieldNumber = 1;
  ::google::protobuf::uint64 texture_pointer() const;
  void set_texture_pointer(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDeleteTexture)
 private:
  inline void set_has_texture_pointer();
  inline void clear_has_texture_pointer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 texture_pointer_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDeleteTexture* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDeletePanel : public ::google::protobuf::Message {
 public:
  CMsgDeletePanel();
  virtual ~CMsgDeletePanel();

  CMsgDeletePanel(const CMsgDeletePanel& from);

  inline CMsgDeletePanel& operator=(const CMsgDeletePanel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDeletePanel& default_instance();

  void Swap(CMsgDeletePanel* other);

  // implements Message ----------------------------------------------

  inline CMsgDeletePanel* New() const { return New(NULL); }

  CMsgDeletePanel* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDeletePanel& from);
  void MergeFrom(const CMsgDeletePanel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDeletePanel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 context_id = 1;
  bool has_context_id() const;
  void clear_context_id();
  static const int kContextIdFieldNumber = 1;
  ::google::protobuf::uint64 context_id() const;
  void set_context_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDeletePanel)
 private:
  inline void set_has_context_id();
  inline void clear_has_context_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 context_id_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDeletePanel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDeleteParticleSystem : public ::google::protobuf::Message {
 public:
  CMsgDeleteParticleSystem();
  virtual ~CMsgDeleteParticleSystem();

  CMsgDeleteParticleSystem(const CMsgDeleteParticleSystem& from);

  inline CMsgDeleteParticleSystem& operator=(const CMsgDeleteParticleSystem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDeleteParticleSystem& default_instance();

  void Swap(CMsgDeleteParticleSystem* other);

  // implements Message ----------------------------------------------

  inline CMsgDeleteParticleSystem* New() const { return New(NULL); }

  CMsgDeleteParticleSystem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDeleteParticleSystem& from);
  void MergeFrom(const CMsgDeleteParticleSystem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDeleteParticleSystem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 panel_handle = 1;
  bool has_panel_handle() const;
  void clear_panel_handle();
  static const int kPanelHandleFieldNumber = 1;
  ::google::protobuf::uint64 panel_handle() const;
  void set_panel_handle(::google::protobuf::uint64 value);

  // optional uint32 brush_index = 2;
  bool has_brush_index() const;
  void clear_brush_index();
  static const int kBrushIndexFieldNumber = 2;
  ::google::protobuf::uint32 brush_index() const;
  void set_brush_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDeleteParticleSystem)
 private:
  inline void set_has_panel_handle();
  inline void clear_has_panel_handle();
  inline void set_has_brush_index();
  inline void clear_has_brush_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 panel_handle_;
  ::google::protobuf::uint32 brush_index_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDeleteParticleSystem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPoint : public ::google::protobuf::Message {
 public:
  CMsgPoint();
  virtual ~CMsgPoint();

  CMsgPoint(const CMsgPoint& from);

  inline CMsgPoint& operator=(const CMsgPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPoint& default_instance();

  void Swap(CMsgPoint* other);

  // implements Message ----------------------------------------------

  inline CMsgPoint* New() const { return New(NULL); }

  CMsgPoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPoint& from);
  void MergeFrom(const CMsgPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:CMsgPoint)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  double z_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPoint* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatrix4x4 : public ::google::protobuf::Message {
 public:
  CMsgMatrix4x4();
  virtual ~CMsgMatrix4x4();

  CMsgMatrix4x4(const CMsgMatrix4x4& from);

  inline CMsgMatrix4x4& operator=(const CMsgMatrix4x4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatrix4x4& default_instance();

  void Swap(CMsgMatrix4x4* other);

  // implements Message ----------------------------------------------

  inline CMsgMatrix4x4* New() const { return New(NULL); }

  CMsgMatrix4x4* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatrix4x4& from);
  void MergeFrom(const CMsgMatrix4x4& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgMatrix4x4* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double m00 = 1;
  bool has_m00() const;
  void clear_m00();
  static const int kM00FieldNumber = 1;
  double m00() const;
  void set_m00(double value);

  // optional double m01 = 2;
  bool has_m01() const;
  void clear_m01();
  static const int kM01FieldNumber = 2;
  double m01() const;
  void set_m01(double value);

  // optional double m02 = 3;
  bool has_m02() const;
  void clear_m02();
  static const int kM02FieldNumber = 3;
  double m02() const;
  void set_m02(double value);

  // optional double m03 = 4;
  bool has_m03() const;
  void clear_m03();
  static const int kM03FieldNumber = 4;
  double m03() const;
  void set_m03(double value);

  // optional double m10 = 5;
  bool has_m10() const;
  void clear_m10();
  static const int kM10FieldNumber = 5;
  double m10() const;
  void set_m10(double value);

  // optional double m11 = 6;
  bool has_m11() const;
  void clear_m11();
  static const int kM11FieldNumber = 6;
  double m11() const;
  void set_m11(double value);

  // optional double m12 = 7;
  bool has_m12() const;
  void clear_m12();
  static const int kM12FieldNumber = 7;
  double m12() const;
  void set_m12(double value);

  // optional double m13 = 8;
  bool has_m13() const;
  void clear_m13();
  static const int kM13FieldNumber = 8;
  double m13() const;
  void set_m13(double value);

  // optional double m20 = 9;
  bool has_m20() const;
  void clear_m20();
  static const int kM20FieldNumber = 9;
  double m20() const;
  void set_m20(double value);

  // optional double m21 = 10;
  bool has_m21() const;
  void clear_m21();
  static const int kM21FieldNumber = 10;
  double m21() const;
  void set_m21(double value);

  // optional double m22 = 11;
  bool has_m22() const;
  void clear_m22();
  static const int kM22FieldNumber = 11;
  double m22() const;
  void set_m22(double value);

  // optional double m23 = 12;
  bool has_m23() const;
  void clear_m23();
  static const int kM23FieldNumber = 12;
  double m23() const;
  void set_m23(double value);

  // optional double m30 = 13;
  bool has_m30() const;
  void clear_m30();
  static const int kM30FieldNumber = 13;
  double m30() const;
  void set_m30(double value);

  // optional double m31 = 14;
  bool has_m31() const;
  void clear_m31();
  static const int kM31FieldNumber = 14;
  double m31() const;
  void set_m31(double value);

  // optional double m32 = 15;
  bool has_m32() const;
  void clear_m32();
  static const int kM32FieldNumber = 15;
  double m32() const;
  void set_m32(double value);

  // optional double m33 = 16;
  bool has_m33() const;
  void clear_m33();
  static const int kM33FieldNumber = 16;
  double m33() const;
  void set_m33(double value);

  // @@protoc_insertion_point(class_scope:CMsgMatrix4x4)
 private:
  inline void set_has_m00();
  inline void clear_has_m00();
  inline void set_has_m01();
  inline void clear_has_m01();
  inline void set_has_m02();
  inline void clear_has_m02();
  inline void set_has_m03();
  inline void clear_has_m03();
  inline void set_has_m10();
  inline void clear_has_m10();
  inline void set_has_m11();
  inline void clear_has_m11();
  inline void set_has_m12();
  inline void clear_has_m12();
  inline void set_has_m13();
  inline void clear_has_m13();
  inline void set_has_m20();
  inline void clear_has_m20();
  inline void set_has_m21();
  inline void clear_has_m21();
  inline void set_has_m22();
  inline void clear_has_m22();
  inline void set_has_m23();
  inline void clear_has_m23();
  inline void set_has_m30();
  inline void clear_has_m30();
  inline void set_has_m31();
  inline void clear_has_m31();
  inline void set_has_m32();
  inline void clear_has_m32();
  inline void set_has_m33();
  inline void clear_has_m33();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double m00_;
  double m01_;
  double m02_;
  double m03_;
  double m10_;
  double m11_;
  double m12_;
  double m13_;
  double m20_;
  double m21_;
  double m22_;
  double m23_;
  double m30_;
  double m31_;
  double m32_;
  double m33_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatrix4x4* default_instance_;
};
// -------------------------------------------------------------------

class CRadiusData_CCornerRadius : public ::google::protobuf::Message {
 public:
  CRadiusData_CCornerRadius();
  virtual ~CRadiusData_CCornerRadius();

  CRadiusData_CCornerRadius(const CRadiusData_CCornerRadius& from);

  inline CRadiusData_CCornerRadius& operator=(const CRadiusData_CCornerRadius& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRadiusData_CCornerRadius& default_instance();

  void Swap(CRadiusData_CCornerRadius* other);

  // implements Message ----------------------------------------------

  inline CRadiusData_CCornerRadius* New() const { return New(NULL); }

  CRadiusData_CCornerRadius* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CRadiusData_CCornerRadius& from);
  void MergeFrom(const CRadiusData_CCornerRadius& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CRadiusData_CCornerRadius* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double horizontal = 1;
  bool has_horizontal() const;
  void clear_horizontal();
  static const int kHorizontalFieldNumber = 1;
  double horizontal() const;
  void set_horizontal(double value);

  // optional double vertical = 2;
  bool has_vertical() const;
  void clear_vertical();
  static const int kVerticalFieldNumber = 2;
  double vertical() const;
  void set_vertical(double value);

  // @@protoc_insertion_point(class_scope:CRadiusData.CCornerRadius)
 private:
  inline void set_has_horizontal();
  inline void clear_has_horizontal();
  inline void set_has_vertical();
  inline void clear_has_vertical();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double horizontal_;
  double vertical_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CRadiusData_CCornerRadius* default_instance_;
};
// -------------------------------------------------------------------

class CRadiusData : public ::google::protobuf::Message {
 public:
  CRadiusData();
  virtual ~CRadiusData();

  CRadiusData(const CRadiusData& from);

  inline CRadiusData& operator=(const CRadiusData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRadiusData& default_instance();

  void Swap(CRadiusData* other);

  // implements Message ----------------------------------------------

  inline CRadiusData* New() const { return New(NULL); }

  CRadiusData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CRadiusData& from);
  void MergeFrom(const CRadiusData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CRadiusData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CRadiusData_CCornerRadius CCornerRadius;

  // accessors -------------------------------------------------------

  // optional .CRadiusData.CCornerRadius top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CRadiusData_CCornerRadius& top_left() const;
  ::CRadiusData_CCornerRadius* mutable_top_left();
  ::CRadiusData_CCornerRadius* release_top_left();
  void set_allocated_top_left(::CRadiusData_CCornerRadius* top_left);

  // optional .CRadiusData.CCornerRadius top_right = 2;
  bool has_top_right() const;
  void clear_top_right();
  static const int kTopRightFieldNumber = 2;
  const ::CRadiusData_CCornerRadius& top_right() const;
  ::CRadiusData_CCornerRadius* mutable_top_right();
  ::CRadiusData_CCornerRadius* release_top_right();
  void set_allocated_top_right(::CRadiusData_CCornerRadius* top_right);

  // optional .CRadiusData.CCornerRadius bottom_right = 3;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 3;
  const ::CRadiusData_CCornerRadius& bottom_right() const;
  ::CRadiusData_CCornerRadius* mutable_bottom_right();
  ::CRadiusData_CCornerRadius* release_bottom_right();
  void set_allocated_bottom_right(::CRadiusData_CCornerRadius* bottom_right);

  // optional .CRadiusData.CCornerRadius bottom_left = 4;
  bool has_bottom_left() const;
  void clear_bottom_left();
  static const int kBottomLeftFieldNumber = 4;
  const ::CRadiusData_CCornerRadius& bottom_left() const;
  ::CRadiusData_CCornerRadius* mutable_bottom_left();
  ::CRadiusData_CCornerRadius* release_bottom_left();
  void set_allocated_bottom_left(::CRadiusData_CCornerRadius* bottom_left);

  // @@protoc_insertion_point(class_scope:CRadiusData)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_top_right();
  inline void clear_has_top_right();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_bottom_left();
  inline void clear_has_bottom_left();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CRadiusData_CCornerRadius* top_left_;
  ::CRadiusData_CCornerRadius* top_right_;
  ::CRadiusData_CCornerRadius* bottom_right_;
  ::CRadiusData_CCornerRadius* bottom_left_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CRadiusData* default_instance_;
};
// -------------------------------------------------------------------

class CBorderData_CBorderSide : public ::google::protobuf::Message {
 public:
  CBorderData_CBorderSide();
  virtual ~CBorderData_CBorderSide();

  CBorderData_CBorderSide(const CBorderData_CBorderSide& from);

  inline CBorderData_CBorderSide& operator=(const CBorderData_CBorderSide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBorderData_CBorderSide& default_instance();

  void Swap(CBorderData_CBorderSide* other);

  // implements Message ----------------------------------------------

  inline CBorderData_CBorderSide* New() const { return New(NULL); }

  CBorderData_CBorderSide* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBorderData_CBorderSide& from);
  void MergeFrom(const CBorderData_CBorderSide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CBorderData_CBorderSide* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 style = 1;
  bool has_style() const;
  void clear_style();
  static const int kStyleFieldNumber = 1;
  ::google::protobuf::uint32 style() const;
  void set_style(::google::protobuf::uint32 value);

  // optional double width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  double width() const;
  void set_width(double value);

  // optional uint32 color = 3;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 3;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CBorderData.CBorderSide)
 private:
  inline void set_has_style();
  inline void clear_has_style();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double width_;
  ::google::protobuf::uint32 style_;
  ::google::protobuf::uint32 color_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CBorderData_CBorderSide* default_instance_;
};
// -------------------------------------------------------------------

class CBorderData : public ::google::protobuf::Message {
 public:
  CBorderData();
  virtual ~CBorderData();

  CBorderData(const CBorderData& from);

  inline CBorderData& operator=(const CBorderData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBorderData& default_instance();

  void Swap(CBorderData* other);

  // implements Message ----------------------------------------------

  inline CBorderData* New() const { return New(NULL); }

  CBorderData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBorderData& from);
  void MergeFrom(const CBorderData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CBorderData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CBorderData_CBorderSide CBorderSide;

  // accessors -------------------------------------------------------

  // optional .CBorderData.CBorderSide top = 1;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 1;
  const ::CBorderData_CBorderSide& top() const;
  ::CBorderData_CBorderSide* mutable_top();
  ::CBorderData_CBorderSide* release_top();
  void set_allocated_top(::CBorderData_CBorderSide* top);

  // optional .CBorderData.CBorderSide right = 2;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 2;
  const ::CBorderData_CBorderSide& right() const;
  ::CBorderData_CBorderSide* mutable_right();
  ::CBorderData_CBorderSide* release_right();
  void set_allocated_right(::CBorderData_CBorderSide* right);

  // optional .CBorderData.CBorderSide bottom = 3;
  bool has_bottom() const;
  void clear_bottom();
  static const int kBottomFieldNumber = 3;
  const ::CBorderData_CBorderSide& bottom() const;
  ::CBorderData_CBorderSide* mutable_bottom();
  ::CBorderData_CBorderSide* release_bottom();
  void set_allocated_bottom(::CBorderData_CBorderSide* bottom);

  // optional .CBorderData.CBorderSide left = 4;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 4;
  const ::CBorderData_CBorderSide& left() const;
  ::CBorderData_CBorderSide* mutable_left();
  ::CBorderData_CBorderSide* release_left();
  void set_allocated_left(::CBorderData_CBorderSide* left);

  // @@protoc_insertion_point(class_scope:CBorderData)
 private:
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_bottom();
  inline void clear_has_bottom();
  inline void set_has_left();
  inline void clear_has_left();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CBorderData_CBorderSide* top_;
  ::CBorderData_CBorderSide* right_;
  ::CBorderData_CBorderSide* bottom_;
  ::CBorderData_CBorderSide* left_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CBorderData* default_instance_;
};
// -------------------------------------------------------------------

class CBoxShadowData : public ::google::protobuf::Message {
 public:
  CBoxShadowData();
  virtual ~CBoxShadowData();

  CBoxShadowData(const CBoxShadowData& from);

  inline CBoxShadowData& operator=(const CBoxShadowData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBoxShadowData& default_instance();

  void Swap(CBoxShadowData* other);

  // implements Message ----------------------------------------------

  inline CBoxShadowData* New() const { return New(NULL); }

  CBoxShadowData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBoxShadowData& from);
  void MergeFrom(const CBoxShadowData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CBoxShadowData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool inset = 1;
  bool has_inset() const;
  void clear_inset();
  static const int kInsetFieldNumber = 1;
  bool inset() const;
  void set_inset(bool value);

  // optional double horizontal_offset = 2;
  bool has_horizontal_offset() const;
  void clear_horizontal_offset();
  static const int kHorizontalOffsetFieldNumber = 2;
  double horizontal_offset() const;
  void set_horizontal_offset(double value);

  // optional double vertical_offset = 3;
  bool has_vertical_offset() const;
  void clear_vertical_offset();
  static const int kVerticalOffsetFieldNumber = 3;
  double vertical_offset() const;
  void set_vertical_offset(double value);

  // optional double blur_radius = 4;
  bool has_blur_radius() const;
  void clear_blur_radius();
  static const int kBlurRadiusFieldNumber = 4;
  double blur_radius() const;
  void set_blur_radius(double value);

  // optional double spread_distance = 5;
  bool has_spread_distance() const;
  void clear_spread_distance();
  static const int kSpreadDistanceFieldNumber = 5;
  double spread_distance() const;
  void set_spread_distance(double value);

  // optional uint32 color = 6;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 6;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // optional bool fill = 7;
  bool has_fill() const;
  void clear_fill();
  static const int kFillFieldNumber = 7;
  bool fill() const;
  void set_fill(bool value);

  // optional bool animating = 8;
  bool has_animating() const;
  void clear_animating();
  static const int kAnimatingFieldNumber = 8;
  bool animating() const;
  void set_animating(bool value);

  // @@protoc_insertion_point(class_scope:CBoxShadowData)
 private:
  inline void set_has_inset();
  inline void clear_has_inset();
  inline void set_has_horizontal_offset();
  inline void clear_has_horizontal_offset();
  inline void set_has_vertical_offset();
  inline void clear_has_vertical_offset();
  inline void set_has_blur_radius();
  inline void clear_has_blur_radius();
  inline void set_has_spread_distance();
  inline void clear_has_spread_distance();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_fill();
  inline void clear_has_fill();
  inline void set_has_animating();
  inline void clear_has_animating();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double horizontal_offset_;
  double vertical_offset_;
  double blur_radius_;
  double spread_distance_;
  bool inset_;
  bool fill_;
  bool animating_;
  ::google::protobuf::uint32 color_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CBoxShadowData* default_instance_;
};
// -------------------------------------------------------------------

class CTextShadowData : public ::google::protobuf::Message {
 public:
  CTextShadowData();
  virtual ~CTextShadowData();

  CTextShadowData(const CTextShadowData& from);

  inline CTextShadowData& operator=(const CTextShadowData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTextShadowData& default_instance();

  void Swap(CTextShadowData* other);

  // implements Message ----------------------------------------------

  inline CTextShadowData* New() const { return New(NULL); }

  CTextShadowData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTextShadowData& from);
  void MergeFrom(const CTextShadowData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CTextShadowData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double horizontal_offset = 2;
  bool has_horizontal_offset() const;
  void clear_horizontal_offset();
  static const int kHorizontalOffsetFieldNumber = 2;
  double horizontal_offset() const;
  void set_horizontal_offset(double value);

  // optional double vertical_offset = 3;
  bool has_vertical_offset() const;
  void clear_vertical_offset();
  static const int kVerticalOffsetFieldNumber = 3;
  double vertical_offset() const;
  void set_vertical_offset(double value);

  // optional double blur_radius = 4;
  bool has_blur_radius() const;
  void clear_blur_radius();
  static const int kBlurRadiusFieldNumber = 4;
  double blur_radius() const;
  void set_blur_radius(double value);

  // optional uint32 color = 6;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 6;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // optional bool animating = 8;
  bool has_animating() const;
  void clear_animating();
  static const int kAnimatingFieldNumber = 8;
  bool animating() const;
  void set_animating(bool value);

  // optional double strength = 9;
  bool has_strength() const;
  void clear_strength();
  static const int kStrengthFieldNumber = 9;
  double strength() const;
  void set_strength(double value);

  // @@protoc_insertion_point(class_scope:CTextShadowData)
 private:
  inline void set_has_horizontal_offset();
  inline void clear_has_horizontal_offset();
  inline void set_has_vertical_offset();
  inline void clear_has_vertical_offset();
  inline void set_has_blur_radius();
  inline void clear_has_blur_radius();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_animating();
  inline void clear_has_animating();
  inline void set_has_strength();
  inline void clear_has_strength();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double horizontal_offset_;
  double vertical_offset_;
  double blur_radius_;
  ::google::protobuf::uint32 color_;
  bool animating_;
  double strength_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CTextShadowData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClipData : public ::google::protobuf::Message {
 public:
  CMsgClipData();
  virtual ~CMsgClipData();

  CMsgClipData(const CMsgClipData& from);

  inline CMsgClipData& operator=(const CMsgClipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClipData& default_instance();

  void Swap(CMsgClipData* other);

  // implements Message ----------------------------------------------

  inline CMsgClipData* New() const { return New(NULL); }

  CMsgClipData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClipData& from);
  void MergeFrom(const CMsgClipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgClipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  double left() const;
  void set_left(double value);

  // optional double top = 2;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  double top() const;
  void set_top(double value);

  // optional double right = 3;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 3;
  double right() const;
  void set_right(double value);

  // optional double bottom = 4;
  bool has_bottom() const;
  void clear_bottom();
  static const int kBottomFieldNumber = 4;
  double bottom() const;
  void set_bottom(double value);

  // @@protoc_insertion_point(class_scope:CMsgClipData)
 private:
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_bottom();
  inline void clear_has_bottom();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double left_;
  double top_;
  double right_;
  double bottom_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgClipData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPushCompositingLayer : public ::google::protobuf::Message {
 public:
  CMsgPushCompositingLayer();
  virtual ~CMsgPushCompositingLayer();

  CMsgPushCompositingLayer(const CMsgPushCompositingLayer& from);

  inline CMsgPushCompositingLayer& operator=(const CMsgPushCompositingLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPushCompositingLayer& default_instance();

  void Swap(CMsgPushCompositingLayer* other);

  // implements Message ----------------------------------------------

  inline CMsgPushCompositingLayer* New() const { return New(NULL); }

  CMsgPushCompositingLayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPushCompositingLayer& from);
  void MergeFrom(const CMsgPushCompositingLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPushCompositingLayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 layer_id = 1;
  bool has_layer_id() const;
  void clear_layer_id();
  static const int kLayerIdFieldNumber = 1;
  ::google::protobuf::uint64 layer_id() const;
  void set_layer_id(::google::protobuf::uint64 value);

  // optional double width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  double width() const;
  void set_width(double value);

  // optional double height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  double height() const;
  void set_height(double value);

  // optional double layer_quad_top_left_x = 4;
  bool has_layer_quad_top_left_x() const;
  void clear_layer_quad_top_left_x();
  static const int kLayerQuadTopLeftXFieldNumber = 4;
  double layer_quad_top_left_x() const;
  void set_layer_quad_top_left_x(double value);

  // optional double layer_quad_top_left_y = 5;
  bool has_layer_quad_top_left_y() const;
  void clear_layer_quad_top_left_y();
  static const int kLayerQuadTopLeftYFieldNumber = 5;
  double layer_quad_top_left_y() const;
  void set_layer_quad_top_left_y(double value);

  // optional double layer_quad_top_left_z = 6;
  bool has_layer_quad_top_left_z() const;
  void clear_layer_quad_top_left_z();
  static const int kLayerQuadTopLeftZFieldNumber = 6;
  double layer_quad_top_left_z() const;
  void set_layer_quad_top_left_z(double value);

  // optional double layer_quad_top_right_x = 7;
  bool has_layer_quad_top_right_x() const;
  void clear_layer_quad_top_right_x();
  static const int kLayerQuadTopRightXFieldNumber = 7;
  double layer_quad_top_right_x() const;
  void set_layer_quad_top_right_x(double value);

  // optional double layer_quad_top_right_y = 8;
  bool has_layer_quad_top_right_y() const;
  void clear_layer_quad_top_right_y();
  static const int kLayerQuadTopRightYFieldNumber = 8;
  double layer_quad_top_right_y() const;
  void set_layer_quad_top_right_y(double value);

  // optional double layer_quad_top_right_z = 9;
  bool has_layer_quad_top_right_z() const;
  void clear_layer_quad_top_right_z();
  static const int kLayerQuadTopRightZFieldNumber = 9;
  double layer_quad_top_right_z() const;
  void set_layer_quad_top_right_z(double value);

  // optional double layer_quad_bottom_left_x = 10;
  bool has_layer_quad_bottom_left_x() const;
  void clear_layer_quad_bottom_left_x();
  static const int kLayerQuadBottomLeftXFieldNumber = 10;
  double layer_quad_bottom_left_x() const;
  void set_layer_quad_bottom_left_x(double value);

  // optional double layer_quad_bottom_left_y = 11;
  bool has_layer_quad_bottom_left_y() const;
  void clear_layer_quad_bottom_left_y();
  static const int kLayerQuadBottomLeftYFieldNumber = 11;
  double layer_quad_bottom_left_y() const;
  void set_layer_quad_bottom_left_y(double value);

  // optional double layer_quad_bottom_left_z = 12;
  bool has_layer_quad_bottom_left_z() const;
  void clear_layer_quad_bottom_left_z();
  static const int kLayerQuadBottomLeftZFieldNumber = 12;
  double layer_quad_bottom_left_z() const;
  void set_layer_quad_bottom_left_z(double value);

  // optional double layer_quad_bottom_right_x = 13;
  bool has_layer_quad_bottom_right_x() const;
  void clear_layer_quad_bottom_right_x();
  static const int kLayerQuadBottomRightXFieldNumber = 13;
  double layer_quad_bottom_right_x() const;
  void set_layer_quad_bottom_right_x(double value);

  // optional double layer_quad_bottom_right_y = 14;
  bool has_layer_quad_bottom_right_y() const;
  void clear_layer_quad_bottom_right_y();
  static const int kLayerQuadBottomRightYFieldNumber = 14;
  double layer_quad_bottom_right_y() const;
  void set_layer_quad_bottom_right_y(double value);

  // optional double layer_quad_bottom_right_z = 15;
  bool has_layer_quad_bottom_right_z() const;
  void clear_layer_quad_bottom_right_z();
  static const int kLayerQuadBottomRightZFieldNumber = 15;
  double layer_quad_bottom_right_z() const;
  void set_layer_quad_bottom_right_z(double value);

  // optional double transform_m00 = 16;
  bool has_transform_m00() const;
  void clear_transform_m00();
  static const int kTransformM00FieldNumber = 16;
  double transform_m00() const;
  void set_transform_m00(double value);

  // optional double transform_m01 = 17;
  bool has_transform_m01() const;
  void clear_transform_m01();
  static const int kTransformM01FieldNumber = 17;
  double transform_m01() const;
  void set_transform_m01(double value);

  // optional double transform_m02 = 18;
  bool has_transform_m02() const;
  void clear_transform_m02();
  static const int kTransformM02FieldNumber = 18;
  double transform_m02() const;
  void set_transform_m02(double value);

  // optional double transform_m03 = 19;
  bool has_transform_m03() const;
  void clear_transform_m03();
  static const int kTransformM03FieldNumber = 19;
  double transform_m03() const;
  void set_transform_m03(double value);

  // optional double transform_m10 = 20;
  bool has_transform_m10() const;
  void clear_transform_m10();
  static const int kTransformM10FieldNumber = 20;
  double transform_m10() const;
  void set_transform_m10(double value);

  // optional double transform_m11 = 21;
  bool has_transform_m11() const;
  void clear_transform_m11();
  static const int kTransformM11FieldNumber = 21;
  double transform_m11() const;
  void set_transform_m11(double value);

  // optional double transform_m12 = 22;
  bool has_transform_m12() const;
  void clear_transform_m12();
  static const int kTransformM12FieldNumber = 22;
  double transform_m12() const;
  void set_transform_m12(double value);

  // optional double transform_m13 = 23;
  bool has_transform_m13() const;
  void clear_transform_m13();
  static const int kTransformM13FieldNumber = 23;
  double transform_m13() const;
  void set_transform_m13(double value);

  // optional double transform_m20 = 24;
  bool has_transform_m20() const;
  void clear_transform_m20();
  static const int kTransformM20FieldNumber = 24;
  double transform_m20() const;
  void set_transform_m20(double value);

  // optional double transform_m21 = 25;
  bool has_transform_m21() const;
  void clear_transform_m21();
  static const int kTransformM21FieldNumber = 25;
  double transform_m21() const;
  void set_transform_m21(double value);

  // optional double transform_m22 = 26;
  bool has_transform_m22() const;
  void clear_transform_m22();
  static const int kTransformM22FieldNumber = 26;
  double transform_m22() const;
  void set_transform_m22(double value);

  // optional double transform_m23 = 27;
  bool has_transform_m23() const;
  void clear_transform_m23();
  static const int kTransformM23FieldNumber = 27;
  double transform_m23() const;
  void set_transform_m23(double value);

  // optional double transform_m30 = 28;
  bool has_transform_m30() const;
  void clear_transform_m30();
  static const int kTransformM30FieldNumber = 28;
  double transform_m30() const;
  void set_transform_m30(double value);

  // optional double transform_m31 = 29;
  bool has_transform_m31() const;
  void clear_transform_m31();
  static const int kTransformM31FieldNumber = 29;
  double transform_m31() const;
  void set_transform_m31(double value);

  // optional double transform_m32 = 30;
  bool has_transform_m32() const;
  void clear_transform_m32();
  static const int kTransformM32FieldNumber = 30;
  double transform_m32() const;
  void set_transform_m32(double value);

  // optional double transform_m33 = 31;
  bool has_transform_m33() const;
  void clear_transform_m33();
  static const int kTransformM33FieldNumber = 31;
  double transform_m33() const;
  void set_transform_m33(double value);

  // optional double perspective_depth = 32;
  bool has_perspective_depth() const;
  void clear_perspective_depth();
  static const int kPerspectiveDepthFieldNumber = 32;
  double perspective_depth() const;
  void set_perspective_depth(double value);

  // optional double opacity = 33;
  bool has_opacity() const;
  void clear_opacity();
  static const int kOpacityFieldNumber = 33;
  double opacity() const;
  void set_opacity(double value);

  // optional uint32 composition_color = 34;
  bool has_composition_color() const;
  void clear_composition_color();
  static const int kCompositionColorFieldNumber = 34;
  ::google::protobuf::uint32 composition_color() const;
  void set_composition_color(::google::protobuf::uint32 value);

  // optional double saturation = 35;
  bool has_saturation() const;
  void clear_saturation();
  static const int kSaturationFieldNumber = 35;
  double saturation() const;
  void set_saturation(double value);

  // optional double hue_shift = 36;
  bool has_hue_shift() const;
  void clear_hue_shift();
  static const int kHueShiftFieldNumber = 36;
  double hue_shift() const;
  void set_hue_shift(double value);

  // optional double brightness = 37;
  bool has_brightness() const;
  void clear_brightness();
  static const int kBrightnessFieldNumber = 37;
  double brightness() const;
  void set_brightness(double value);

  // optional double contrast = 38;
  bool has_contrast() const;
  void clear_contrast();
  static const int kContrastFieldNumber = 38;
  double contrast() const;
  void set_contrast(double value);

  // optional uint32 opacity_mask_texture_id = 39;
  bool has_opacity_mask_texture_id() const;
  void clear_opacity_mask_texture_id();
  static const int kOpacityMaskTextureIdFieldNumber = 39;
  ::google::protobuf::uint32 opacity_mask_texture_id() const;
  void set_opacity_mask_texture_id(::google::protobuf::uint32 value);

  // optional double opacity_mask_opacity = 40;
  bool has_opacity_mask_opacity() const;
  void clear_opacity_mask_opacity();
  static const int kOpacityMaskOpacityFieldNumber = 40;
  double opacity_mask_opacity() const;
  void set_opacity_mask_opacity(double value);

  // optional .CBorderData border = 41;
  bool has_border() const;
  void clear_border();
  static const int kBorderFieldNumber = 41;
  const ::CBorderData& border() const;
  ::CBorderData* mutable_border();
  ::CBorderData* release_border();
  void set_allocated_border(::CBorderData* border);

  // optional .CRadiusData border_radius = 42;
  bool has_border_radius() const;
  void clear_border_radius();
  static const int kBorderRadiusFieldNumber = 42;
  const ::CRadiusData& border_radius() const;
  ::CRadiusData* mutable_border_radius();
  ::CRadiusData* release_border_radius();
  void set_allocated_border_radius(::CRadiusData* border_radius);

  // optional .CBoxShadowData box_shadow = 43;
  bool has_box_shadow() const;
  void clear_box_shadow();
  static const int kBoxShadowFieldNumber = 43;
  const ::CBoxShadowData& box_shadow() const;
  ::CBoxShadowData* mutable_box_shadow();
  ::CBoxShadowData* release_box_shadow();
  void set_allocated_box_shadow(::CBoxShadowData* box_shadow);

  // optional double gaussianblur_passes = 44;
  bool has_gaussianblur_passes() const;
  void clear_gaussianblur_passes();
  static const int kGaussianblurPassesFieldNumber = 44;
  double gaussianblur_passes() const;
  void set_gaussianblur_passes(double value);

  // optional double gaussianblur_stddevhor = 45;
  bool has_gaussianblur_stddevhor() const;
  void clear_gaussianblur_stddevhor();
  static const int kGaussianblurStddevhorFieldNumber = 45;
  double gaussianblur_stddevhor() const;
  void set_gaussianblur_stddevhor(double value);

  // optional double gaussianblur_stddevver = 46;
  bool has_gaussianblur_stddevver() const;
  void clear_gaussianblur_stddevver();
  static const int kGaussianblurStddevverFieldNumber = 46;
  double gaussianblur_stddevver() const;
  void set_gaussianblur_stddevver(double value);

  // optional double scale_2d_factors_x = 47;
  bool has_scale_2d_factors_x() const;
  void clear_scale_2d_factors_x();
  static const int kScale2DFactorsXFieldNumber = 47;
  double scale_2d_factors_x() const;
  void set_scale_2d_factors_x(double value);

  // optional double scale_2d_factors_y = 48;
  bool has_scale_2d_factors_y() const;
  void clear_scale_2d_factors_y();
  static const int kScale2DFactorsYFieldNumber = 48;
  double scale_2d_factors_y() const;
  void set_scale_2d_factors_y(double value);

  // optional double rotate_2d = 49;
  bool has_rotate_2d() const;
  void clear_rotate_2d();
  static const int kRotate2DFieldNumber = 49;
  double rotate_2d() const;
  void set_rotate_2d(double value);

  // optional bool needs_clear = 50;
  bool has_needs_clear() const;
  void clear_needs_clear();
  static const int kNeedsClearFieldNumber = 50;
  bool needs_clear() const;
  void set_needs_clear(bool value);

  // optional bool needs_depth = 51;
  bool has_needs_depth() const;
  void clear_needs_depth();
  static const int kNeedsDepthFieldNumber = 51;
  bool needs_depth() const;
  void set_needs_depth(bool value);

  // optional bool needs_redraw_every_frame = 52;
  bool has_needs_redraw_every_frame() const;
  void clear_needs_redraw_every_frame();
  static const int kNeedsRedrawEveryFrameFieldNumber = 52;
  bool needs_redraw_every_frame() const;
  void set_needs_redraw_every_frame(bool value);

  // optional .CTextShadowData text_shadow = 53;
  bool has_text_shadow() const;
  void clear_text_shadow();
  static const int kTextShadowFieldNumber = 53;
  const ::CTextShadowData& text_shadow() const;
  ::CTextShadowData* mutable_text_shadow();
  ::CTextShadowData* release_text_shadow();
  void set_allocated_text_shadow(::CTextShadowData* text_shadow);

  // optional uint32 mix_blend_mode = 54;
  bool has_mix_blend_mode() const;
  void clear_mix_blend_mode();
  static const int kMixBlendModeFieldNumber = 54;
  ::google::protobuf::uint32 mix_blend_mode() const;
  void set_mix_blend_mode(::google::protobuf::uint32 value);

  // optional double occluded_left_edge = 55;
  bool has_occluded_left_edge() const;
  void clear_occluded_left_edge();
  static const int kOccludedLeftEdgeFieldNumber = 55;
  double occluded_left_edge() const;
  void set_occluded_left_edge(double value);

  // optional double occluded_top_edge = 56;
  bool has_occluded_top_edge() const;
  void clear_occluded_top_edge();
  static const int kOccludedTopEdgeFieldNumber = 56;
  double occluded_top_edge() const;
  void set_occluded_top_edge(double value);

  // optional double occluded_right_edge = 57;
  bool has_occluded_right_edge() const;
  void clear_occluded_right_edge();
  static const int kOccludedRightEdgeFieldNumber = 57;
  double occluded_right_edge() const;
  void set_occluded_right_edge(double value);

  // optional double occluded_bottom_edge = 58;
  bool has_occluded_bottom_edge() const;
  void clear_occluded_bottom_edge();
  static const int kOccludedBottomEdgeFieldNumber = 58;
  double occluded_bottom_edge() const;
  void set_occluded_bottom_edge(double value);

  // @@protoc_insertion_point(class_scope:CMsgPushCompositingLayer)
 private:
  inline void set_has_layer_id();
  inline void clear_has_layer_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_layer_quad_top_left_x();
  inline void clear_has_layer_quad_top_left_x();
  inline void set_has_layer_quad_top_left_y();
  inline void clear_has_layer_quad_top_left_y();
  inline void set_has_layer_quad_top_left_z();
  inline void clear_has_layer_quad_top_left_z();
  inline void set_has_layer_quad_top_right_x();
  inline void clear_has_layer_quad_top_right_x();
  inline void set_has_layer_quad_top_right_y();
  inline void clear_has_layer_quad_top_right_y();
  inline void set_has_layer_quad_top_right_z();
  inline void clear_has_layer_quad_top_right_z();
  inline void set_has_layer_quad_bottom_left_x();
  inline void clear_has_layer_quad_bottom_left_x();
  inline void set_has_layer_quad_bottom_left_y();
  inline void clear_has_layer_quad_bottom_left_y();
  inline void set_has_layer_quad_bottom_left_z();
  inline void clear_has_layer_quad_bottom_left_z();
  inline void set_has_layer_quad_bottom_right_x();
  inline void clear_has_layer_quad_bottom_right_x();
  inline void set_has_layer_quad_bottom_right_y();
  inline void clear_has_layer_quad_bottom_right_y();
  inline void set_has_layer_quad_bottom_right_z();
  inline void clear_has_layer_quad_bottom_right_z();
  inline void set_has_transform_m00();
  inline void clear_has_transform_m00();
  inline void set_has_transform_m01();
  inline void clear_has_transform_m01();
  inline void set_has_transform_m02();
  inline void clear_has_transform_m02();
  inline void set_has_transform_m03();
  inline void clear_has_transform_m03();
  inline void set_has_transform_m10();
  inline void clear_has_transform_m10();
  inline void set_has_transform_m11();
  inline void clear_has_transform_m11();
  inline void set_has_transform_m12();
  inline void clear_has_transform_m12();
  inline void set_has_transform_m13();
  inline void clear_has_transform_m13();
  inline void set_has_transform_m20();
  inline void clear_has_transform_m20();
  inline void set_has_transform_m21();
  inline void clear_has_transform_m21();
  inline void set_has_transform_m22();
  inline void clear_has_transform_m22();
  inline void set_has_transform_m23();
  inline void clear_has_transform_m23();
  inline void set_has_transform_m30();
  inline void clear_has_transform_m30();
  inline void set_has_transform_m31();
  inline void clear_has_transform_m31();
  inline void set_has_transform_m32();
  inline void clear_has_transform_m32();
  inline void set_has_transform_m33();
  inline void clear_has_transform_m33();
  inline void set_has_perspective_depth();
  inline void clear_has_perspective_depth();
  inline void set_has_opacity();
  inline void clear_has_opacity();
  inline void set_has_composition_color();
  inline void clear_has_composition_color();
  inline void set_has_saturation();
  inline void clear_has_saturation();
  inline void set_has_hue_shift();
  inline void clear_has_hue_shift();
  inline void set_has_brightness();
  inline void clear_has_brightness();
  inline void set_has_contrast();
  inline void clear_has_contrast();
  inline void set_has_opacity_mask_texture_id();
  inline void clear_has_opacity_mask_texture_id();
  inline void set_has_opacity_mask_opacity();
  inline void clear_has_opacity_mask_opacity();
  inline void set_has_border();
  inline void clear_has_border();
  inline void set_has_border_radius();
  inline void clear_has_border_radius();
  inline void set_has_box_shadow();
  inline void clear_has_box_shadow();
  inline void set_has_gaussianblur_passes();
  inline void clear_has_gaussianblur_passes();
  inline void set_has_gaussianblur_stddevhor();
  inline void clear_has_gaussianblur_stddevhor();
  inline void set_has_gaussianblur_stddevver();
  inline void clear_has_gaussianblur_stddevver();
  inline void set_has_scale_2d_factors_x();
  inline void clear_has_scale_2d_factors_x();
  inline void set_has_scale_2d_factors_y();
  inline void clear_has_scale_2d_factors_y();
  inline void set_has_rotate_2d();
  inline void clear_has_rotate_2d();
  inline void set_has_needs_clear();
  inline void clear_has_needs_clear();
  inline void set_has_needs_depth();
  inline void clear_has_needs_depth();
  inline void set_has_needs_redraw_every_frame();
  inline void clear_has_needs_redraw_every_frame();
  inline void set_has_text_shadow();
  inline void clear_has_text_shadow();
  inline void set_has_mix_blend_mode();
  inline void clear_has_mix_blend_mode();
  inline void set_has_occluded_left_edge();
  inline void clear_has_occluded_left_edge();
  inline void set_has_occluded_top_edge();
  inline void clear_has_occluded_top_edge();
  inline void set_has_occluded_right_edge();
  inline void clear_has_occluded_right_edge();
  inline void set_has_occluded_bottom_edge();
  inline void clear_has_occluded_bottom_edge();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 layer_id_;
  double width_;
  double height_;
  double layer_quad_top_left_x_;
  double layer_quad_top_left_y_;
  double layer_quad_top_left_z_;
  double layer_quad_top_right_x_;
  double layer_quad_top_right_y_;
  double layer_quad_top_right_z_;
  double layer_quad_bottom_left_x_;
  double layer_quad_bottom_left_y_;
  double layer_quad_bottom_left_z_;
  double layer_quad_bottom_right_x_;
  double layer_quad_bottom_right_y_;
  double layer_quad_bottom_right_z_;
  double transform_m00_;
  double transform_m01_;
  double transform_m02_;
  double transform_m03_;
  double transform_m10_;
  double transform_m11_;
  double transform_m12_;
  double transform_m13_;
  double transform_m20_;
  double transform_m21_;
  double transform_m22_;
  double transform_m23_;
  double transform_m30_;
  double transform_m31_;
  double transform_m32_;
  double transform_m33_;
  double perspective_depth_;
  double opacity_;
  double saturation_;
  double hue_shift_;
  ::google::protobuf::uint32 composition_color_;
  ::google::protobuf::uint32 opacity_mask_texture_id_;
  double brightness_;
  double contrast_;
  double opacity_mask_opacity_;
  ::CBorderData* border_;
  ::CRadiusData* border_radius_;
  ::CBoxShadowData* box_shadow_;
  double gaussianblur_passes_;
  double gaussianblur_stddevhor_;
  double gaussianblur_stddevver_;
  double scale_2d_factors_x_;
  double scale_2d_factors_y_;
  double rotate_2d_;
  bool needs_clear_;
  bool needs_depth_;
  bool needs_redraw_every_frame_;
  ::google::protobuf::uint32 mix_blend_mode_;
  ::CTextShadowData* text_shadow_;
  double occluded_left_edge_;
  double occluded_top_edge_;
  double occluded_right_edge_;
  double occluded_bottom_edge_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPushCompositingLayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPopCompositingLayer : public ::google::protobuf::Message {
 public:
  CMsgPopCompositingLayer();
  virtual ~CMsgPopCompositingLayer();

  CMsgPopCompositingLayer(const CMsgPopCompositingLayer& from);

  inline CMsgPopCompositingLayer& operator=(const CMsgPopCompositingLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPopCompositingLayer& default_instance();

  void Swap(CMsgPopCompositingLayer* other);

  // implements Message ----------------------------------------------

  inline CMsgPopCompositingLayer* New() const { return New(NULL); }

  CMsgPopCompositingLayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPopCompositingLayer& from);
  void MergeFrom(const CMsgPopCompositingLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPopCompositingLayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPopCompositingLayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPopCompositingLayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFreeCompositingLayer : public ::google::protobuf::Message {
 public:
  CMsgFreeCompositingLayer();
  virtual ~CMsgFreeCompositingLayer();

  CMsgFreeCompositingLayer(const CMsgFreeCompositingLayer& from);

  inline CMsgFreeCompositingLayer& operator=(const CMsgFreeCompositingLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFreeCompositingLayer& default_instance();

  void Swap(CMsgFreeCompositingLayer* other);

  // implements Message ----------------------------------------------

  inline CMsgFreeCompositingLayer* New() const { return New(NULL); }

  CMsgFreeCompositingLayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFreeCompositingLayer& from);
  void MergeFrom(const CMsgFreeCompositingLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgFreeCompositingLayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 layer_id = 1;
  bool has_layer_id() const;
  void clear_layer_id();
  static const int kLayerIdFieldNumber = 1;
  ::google::protobuf::uint64 layer_id() const;
  void set_layer_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgFreeCompositingLayer)
 private:
  inline void set_has_layer_id();
  inline void clear_has_layer_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 layer_id_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgFreeCompositingLayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTransitionData : public ::google::protobuf::Message {
 public:
  CMsgTransitionData();
  virtual ~CMsgTransitionData();

  CMsgTransitionData(const CMsgTransitionData& from);

  inline CMsgTransitionData& operator=(const CMsgTransitionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTransitionData& default_instance();

  void Swap(CMsgTransitionData* other);

  // implements Message ----------------------------------------------

  inline CMsgTransitionData* New() const { return New(NULL); }

  CMsgTransitionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTransitionData& from);
  void MergeFrom(const CMsgTransitionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTransitionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  double start_time() const;
  void set_start_time(double value);

  // optional double delay_seconds = 2;
  bool has_delay_seconds() const;
  void clear_delay_seconds();
  static const int kDelaySecondsFieldNumber = 2;
  double delay_seconds() const;
  void set_delay_seconds(double value);

  // optional double duration_seconds = 3;
  bool has_duration_seconds() const;
  void clear_duration_seconds();
  static const int kDurationSecondsFieldNumber = 3;
  double duration_seconds() const;
  void set_duration_seconds(double value);

  // optional uint32 timing_func = 4 [default = 0];
  bool has_timing_func() const;
  void clear_timing_func();
  static const int kTimingFuncFieldNumber = 4;
  ::google::protobuf::uint32 timing_func() const;
  void set_timing_func(::google::protobuf::uint32 value);

  // optional float cubic_bezier_0 = 5;
  bool has_cubic_bezier_0() const;
  void clear_cubic_bezier_0();
  static const int kCubicBezier0FieldNumber = 5;
  float cubic_bezier_0() const;
  void set_cubic_bezier_0(float value);

  // optional float cubic_bezier_1 = 6;
  bool has_cubic_bezier_1() const;
  void clear_cubic_bezier_1();
  static const int kCubicBezier1FieldNumber = 6;
  float cubic_bezier_1() const;
  void set_cubic_bezier_1(float value);

  // optional float cubic_bezier_2 = 7;
  bool has_cubic_bezier_2() const;
  void clear_cubic_bezier_2();
  static const int kCubicBezier2FieldNumber = 7;
  float cubic_bezier_2() const;
  void set_cubic_bezier_2(float value);

  // optional float cubic_bezier_3 = 8;
  bool has_cubic_bezier_3() const;
  void clear_cubic_bezier_3();
  static const int kCubicBezier3FieldNumber = 8;
  float cubic_bezier_3() const;
  void set_cubic_bezier_3(float value);

  // @@protoc_insertion_point(class_scope:CMsgTransitionData)
 private:
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_delay_seconds();
  inline void clear_has_delay_seconds();
  inline void set_has_duration_seconds();
  inline void clear_has_duration_seconds();
  inline void set_has_timing_func();
  inline void clear_has_timing_func();
  inline void set_has_cubic_bezier_0();
  inline void clear_has_cubic_bezier_0();
  inline void set_has_cubic_bezier_1();
  inline void clear_has_cubic_bezier_1();
  inline void set_has_cubic_bezier_2();
  inline void clear_has_cubic_bezier_2();
  inline void set_has_cubic_bezier_3();
  inline void clear_has_cubic_bezier_3();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double start_time_;
  double delay_seconds_;
  double duration_seconds_;
  ::google::protobuf::uint32 timing_func_;
  float cubic_bezier_0_;
  float cubic_bezier_1_;
  float cubic_bezier_2_;
  float cubic_bezier_3_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTransitionData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAnimationData : public ::google::protobuf::Message {
 public:
  CMsgAnimationData();
  virtual ~CMsgAnimationData();

  CMsgAnimationData(const CMsgAnimationData& from);

  inline CMsgAnimationData& operator=(const CMsgAnimationData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAnimationData& default_instance();

  void Swap(CMsgAnimationData* other);

  // implements Message ----------------------------------------------

  inline CMsgAnimationData* New() const { return New(NULL); }

  CMsgAnimationData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAnimationData& from);
  void MergeFrom(const CMsgAnimationData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgAnimationData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  double start_time() const;
  void set_start_time(double value);

  // optional double delay_seconds = 2;
  bool has_delay_seconds() const;
  void clear_delay_seconds();
  static const int kDelaySecondsFieldNumber = 2;
  double delay_seconds() const;
  void set_delay_seconds(double value);

  // optional double duration_seconds = 3;
  bool has_duration_seconds() const;
  void clear_duration_seconds();
  static const int kDurationSecondsFieldNumber = 3;
  double duration_seconds() const;
  void set_duration_seconds(double value);

  // optional uint32 timing_func = 4;
  bool has_timing_func() const;
  void clear_timing_func();
  static const int kTimingFuncFieldNumber = 4;
  ::google::protobuf::uint32 timing_func() const;
  void set_timing_func(::google::protobuf::uint32 value);

  // optional float cubic_bezier_0 = 5;
  bool has_cubic_bezier_0() const;
  void clear_cubic_bezier_0();
  static const int kCubicBezier0FieldNumber = 5;
  float cubic_bezier_0() const;
  void set_cubic_bezier_0(float value);

  // optional float cubic_bezier_1 = 6;
  bool has_cubic_bezier_1() const;
  void clear_cubic_bezier_1();
  static const int kCubicBezier1FieldNumber = 6;
  float cubic_bezier_1() const;
  void set_cubic_bezier_1(float value);

  // optional float cubic_bezier_2 = 7;
  bool has_cubic_bezier_2() const;
  void clear_cubic_bezier_2();
  static const int kCubicBezier2FieldNumber = 7;
  float cubic_bezier_2() const;
  void set_cubic_bezier_2(float value);

  // optional float cubic_bezier_3 = 8;
  bool has_cubic_bezier_3() const;
  void clear_cubic_bezier_3();
  static const int kCubicBezier3FieldNumber = 8;
  float cubic_bezier_3() const;
  void set_cubic_bezier_3(float value);

  // optional uint32 direction = 9;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 9;
  ::google::protobuf::uint32 direction() const;
  void set_direction(::google::protobuf::uint32 value);

  // optional float iteration = 10;
  bool has_iteration() const;
  void clear_iteration();
  static const int kIterationFieldNumber = 10;
  float iteration() const;
  void set_iteration(float value);

  // repeated .CMsgAnimationFrameData frames = 11;
  int frames_size() const;
  void clear_frames();
  static const int kFramesFieldNumber = 11;
  const ::CMsgAnimationFrameData& frames(int index) const;
  ::CMsgAnimationFrameData* mutable_frames(int index);
  ::CMsgAnimationFrameData* add_frames();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationFrameData >*
      mutable_frames();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationFrameData >&
      frames() const;

  // @@protoc_insertion_point(class_scope:CMsgAnimationData)
 private:
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_delay_seconds();
  inline void clear_has_delay_seconds();
  inline void set_has_duration_seconds();
  inline void clear_has_duration_seconds();
  inline void set_has_timing_func();
  inline void clear_has_timing_func();
  inline void set_has_cubic_bezier_0();
  inline void clear_has_cubic_bezier_0();
  inline void set_has_cubic_bezier_1();
  inline void clear_has_cubic_bezier_1();
  inline void set_has_cubic_bezier_2();
  inline void clear_has_cubic_bezier_2();
  inline void set_has_cubic_bezier_3();
  inline void clear_has_cubic_bezier_3();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_iteration();
  inline void clear_has_iteration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double start_time_;
  double delay_seconds_;
  double duration_seconds_;
  ::google::protobuf::uint32 timing_func_;
  float cubic_bezier_0_;
  float cubic_bezier_1_;
  float cubic_bezier_2_;
  float cubic_bezier_3_;
  ::google::protobuf::uint32 direction_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationFrameData > frames_;
  float iteration_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAnimationData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgAnimationFrameData();
  virtual ~CMsgAnimationFrameData();

  CMsgAnimationFrameData(const CMsgAnimationFrameData& from);

  inline CMsgAnimationFrameData& operator=(const CMsgAnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAnimationFrameData& default_instance();

  void Swap(CMsgAnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgAnimationFrameData* New() const { return New(NULL); }

  CMsgAnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAnimationFrameData& from);
  void MergeFrom(const CMsgAnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgAnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float percent = 1;
  bool has_percent() const;
  void clear_percent();
  static const int kPercentFieldNumber = 1;
  float percent() const;
  void set_percent(float value);

  // optional uint32 timing_func = 2 [default = 0];
  bool has_timing_func() const;
  void clear_timing_func();
  static const int kTimingFuncFieldNumber = 2;
  ::google::protobuf::uint32 timing_func() const;
  void set_timing_func(::google::protobuf::uint32 value);

  // optional float cubic_bezier_0 = 3;
  bool has_cubic_bezier_0() const;
  void clear_cubic_bezier_0();
  static const int kCubicBezier0FieldNumber = 3;
  float cubic_bezier_0() const;
  void set_cubic_bezier_0(float value);

  // optional float cubic_bezier_1 = 4;
  bool has_cubic_bezier_1() const;
  void clear_cubic_bezier_1();
  static const int kCubicBezier1FieldNumber = 4;
  float cubic_bezier_1() const;
  void set_cubic_bezier_1(float value);

  // optional float cubic_bezier_2 = 5;
  bool has_cubic_bezier_2() const;
  void clear_cubic_bezier_2();
  static const int kCubicBezier2FieldNumber = 5;
  float cubic_bezier_2() const;
  void set_cubic_bezier_2(float value);

  // optional float cubic_bezier_3 = 6;
  bool has_cubic_bezier_3() const;
  void clear_cubic_bezier_3();
  static const int kCubicBezier3FieldNumber = 6;
  float cubic_bezier_3() const;
  void set_cubic_bezier_3(float value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(CMsgAnimationFrameData)
  // @@protoc_insertion_point(class_scope:CMsgAnimationFrameData)
 private:
  inline void set_has_percent();
  inline void clear_has_percent();
  inline void set_has_timing_func();
  inline void clear_has_timing_func();
  inline void set_has_cubic_bezier_0();
  inline void clear_has_cubic_bezier_0();
  inline void set_has_cubic_bezier_1();
  inline void clear_has_cubic_bezier_1();
  inline void set_has_cubic_bezier_2();
  inline void clear_has_cubic_bezier_2();
  inline void set_has_cubic_bezier_3();
  inline void clear_has_cubic_bezier_3();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float percent_;
  ::google::protobuf::uint32 timing_func_;
  float cubic_bezier_0_;
  float cubic_bezier_1_;
  float cubic_bezier_2_;
  float cubic_bezier_3_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPointWithTransition_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgPointWithTransition_AnimationFrameData();
  virtual ~CMsgPointWithTransition_AnimationFrameData();

  CMsgPointWithTransition_AnimationFrameData(const CMsgPointWithTransition_AnimationFrameData& from);

  inline CMsgPointWithTransition_AnimationFrameData& operator=(const CMsgPointWithTransition_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPointWithTransition_AnimationFrameData& default_instance();

  void Swap(CMsgPointWithTransition_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgPointWithTransition_AnimationFrameData* New() const { return New(NULL); }

  CMsgPointWithTransition_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPointWithTransition_AnimationFrameData& from);
  void MergeFrom(const CMsgPointWithTransition_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPointWithTransition_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgPoint& data() const;
  ::CMsgPoint* mutable_data();
  ::CMsgPoint* release_data();
  void set_allocated_data(::CMsgPoint* data);

  // @@protoc_insertion_point(class_scope:CMsgPointWithTransition.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPointWithTransition_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPointWithTransition : public ::google::protobuf::Message {
 public:
  CMsgPointWithTransition();
  virtual ~CMsgPointWithTransition();

  CMsgPointWithTransition(const CMsgPointWithTransition& from);

  inline CMsgPointWithTransition& operator=(const CMsgPointWithTransition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPointWithTransition& default_instance();

  void Swap(CMsgPointWithTransition* other);

  // implements Message ----------------------------------------------

  inline CMsgPointWithTransition* New() const { return New(NULL); }

  CMsgPointWithTransition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPointWithTransition& from);
  void MergeFrom(const CMsgPointWithTransition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPointWithTransition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPointWithTransition_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgPoint base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgPoint& base() const;
  ::CMsgPoint* mutable_base();
  ::CMsgPoint* release_base();
  void set_allocated_base(::CMsgPoint* base);

  // optional .CMsgPoint transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  const ::CMsgPoint& transition() const;
  ::CMsgPoint* mutable_transition();
  ::CMsgPoint* release_transition();
  void set_allocated_transition(::CMsgPoint* transition);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1012;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgPointWithTransition_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgPointWithTransition)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* base_;
  ::CMsgPoint* transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPointWithTransition* default_instance_;
};
// -------------------------------------------------------------------

class CMsgColor_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgColor_AnimationFrameData();
  virtual ~CMsgColor_AnimationFrameData();

  CMsgColor_AnimationFrameData(const CMsgColor_AnimationFrameData& from);

  inline CMsgColor_AnimationFrameData& operator=(const CMsgColor_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgColor_AnimationFrameData& default_instance();

  void Swap(CMsgColor_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgColor_AnimationFrameData* New() const { return New(NULL); }

  CMsgColor_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgColor_AnimationFrameData& from);
  void MergeFrom(const CMsgColor_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgColor_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgColor.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgColor_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgColor : public ::google::protobuf::Message {
 public:
  CMsgColor();
  virtual ~CMsgColor();

  CMsgColor(const CMsgColor& from);

  inline CMsgColor& operator=(const CMsgColor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgColor& default_instance();

  void Swap(CMsgColor* other);

  // implements Message ----------------------------------------------

  inline CMsgColor* New() const { return New(NULL); }

  CMsgColor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgColor& from);
  void MergeFrom(const CMsgColor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgColor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgColor_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional uint32 base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  ::google::protobuf::uint32 base() const;
  void set_base(::google::protobuf::uint32 value);

  // optional uint32 transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  ::google::protobuf::uint32 transition() const;
  void set_transition(::google::protobuf::uint32 value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1001;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgColor_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgColor)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 base_;
  ::google::protobuf::uint32 transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgColor* default_instance_;
};
// -------------------------------------------------------------------

class CMsgColorStop : public ::google::protobuf::Message {
 public:
  CMsgColorStop();
  virtual ~CMsgColorStop();

  CMsgColorStop(const CMsgColorStop& from);

  inline CMsgColorStop& operator=(const CMsgColorStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgColorStop& default_instance();

  void Swap(CMsgColorStop* other);

  // implements Message ----------------------------------------------

  inline CMsgColorStop* New() const { return New(NULL); }

  CMsgColorStop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgColorStop& from);
  void MergeFrom(const CMsgColorStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgColorStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  double position() const;
  void set_position(double value);

  // optional uint32 color_rgba = 2;
  bool has_color_rgba() const;
  void clear_color_rgba();
  static const int kColorRgbaFieldNumber = 2;
  ::google::protobuf::uint32 color_rgba() const;
  void set_color_rgba(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgColorStop)
 private:
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_color_rgba();
  inline void clear_has_color_rgba();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double position_;
  ::google::protobuf::uint32 color_rgba_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgColorStop* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLinearGradient : public ::google::protobuf::Message {
 public:
  CMsgLinearGradient();
  virtual ~CMsgLinearGradient();

  CMsgLinearGradient(const CMsgLinearGradient& from);

  inline CMsgLinearGradient& operator=(const CMsgLinearGradient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLinearGradient& default_instance();

  void Swap(CMsgLinearGradient* other);

  // implements Message ----------------------------------------------

  inline CMsgLinearGradient* New() const { return New(NULL); }

  CMsgLinearGradient* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLinearGradient& from);
  void MergeFrom(const CMsgLinearGradient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgLinearGradient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint start_position = 1;
  bool has_start_position() const;
  void clear_start_position();
  static const int kStartPositionFieldNumber = 1;
  const ::CMsgPoint& start_position() const;
  ::CMsgPoint* mutable_start_position();
  ::CMsgPoint* release_start_position();
  void set_allocated_start_position(::CMsgPoint* start_position);

  // optional .CMsgPoint end_position = 2;
  bool has_end_position() const;
  void clear_end_position();
  static const int kEndPositionFieldNumber = 2;
  const ::CMsgPoint& end_position() const;
  ::CMsgPoint* mutable_end_position();
  ::CMsgPoint* release_end_position();
  void set_allocated_end_position(::CMsgPoint* end_position);

  // repeated .CMsgColorStop color_stop = 3;
  int color_stop_size() const;
  void clear_color_stop();
  static const int kColorStopFieldNumber = 3;
  const ::CMsgColorStop& color_stop(int index) const;
  ::CMsgColorStop* mutable_color_stop(int index);
  ::CMsgColorStop* add_color_stop();
  ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >*
      mutable_color_stop();
  const ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >&
      color_stop() const;

  // @@protoc_insertion_point(class_scope:CMsgLinearGradient)
 private:
  inline void set_has_start_position();
  inline void clear_has_start_position();
  inline void set_has_end_position();
  inline void clear_has_end_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* start_position_;
  ::CMsgPoint* end_position_;
  ::google::protobuf::RepeatedPtrField< ::CMsgColorStop > color_stop_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgLinearGradient* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRadialGradient : public ::google::protobuf::Message {
 public:
  CMsgRadialGradient();
  virtual ~CMsgRadialGradient();

  CMsgRadialGradient(const CMsgRadialGradient& from);

  inline CMsgRadialGradient& operator=(const CMsgRadialGradient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRadialGradient& default_instance();

  void Swap(CMsgRadialGradient* other);

  // implements Message ----------------------------------------------

  inline CMsgRadialGradient* New() const { return New(NULL); }

  CMsgRadialGradient* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRadialGradient& from);
  void MergeFrom(const CMsgRadialGradient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRadialGradient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint center_position = 1;
  bool has_center_position() const;
  void clear_center_position();
  static const int kCenterPositionFieldNumber = 1;
  const ::CMsgPoint& center_position() const;
  ::CMsgPoint* mutable_center_position();
  ::CMsgPoint* release_center_position();
  void set_allocated_center_position(::CMsgPoint* center_position);

  // optional .CMsgPoint offset_distance = 2;
  bool has_offset_distance() const;
  void clear_offset_distance();
  static const int kOffsetDistanceFieldNumber = 2;
  const ::CMsgPoint& offset_distance() const;
  ::CMsgPoint* mutable_offset_distance();
  ::CMsgPoint* release_offset_distance();
  void set_allocated_offset_distance(::CMsgPoint* offset_distance);

  // optional .CMsgPoint radii = 3;
  bool has_radii() const;
  void clear_radii();
  static const int kRadiiFieldNumber = 3;
  const ::CMsgPoint& radii() const;
  ::CMsgPoint* mutable_radii();
  ::CMsgPoint* release_radii();
  void set_allocated_radii(::CMsgPoint* radii);

  // repeated .CMsgColorStop color_stop = 4;
  int color_stop_size() const;
  void clear_color_stop();
  static const int kColorStopFieldNumber = 4;
  const ::CMsgColorStop& color_stop(int index) const;
  ::CMsgColorStop* mutable_color_stop(int index);
  ::CMsgColorStop* add_color_stop();
  ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >*
      mutable_color_stop();
  const ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >&
      color_stop() const;

  // @@protoc_insertion_point(class_scope:CMsgRadialGradient)
 private:
  inline void set_has_center_position();
  inline void clear_has_center_position();
  inline void set_has_offset_distance();
  inline void clear_has_offset_distance();
  inline void set_has_radii();
  inline void clear_has_radii();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* center_position_;
  ::CMsgPoint* offset_distance_;
  ::CMsgPoint* radii_;
  ::google::protobuf::RepeatedPtrField< ::CMsgColorStop > color_stop_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRadialGradient* default_instance_;
};
// -------------------------------------------------------------------

class CMsgParticle : public ::google::protobuf::Message {
 public:
  CMsgParticle();
  virtual ~CMsgParticle();

  CMsgParticle(const CMsgParticle& from);

  inline CMsgParticle& operator=(const CMsgParticle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgParticle& default_instance();

  void Swap(CMsgParticle* other);

  // implements Message ----------------------------------------------

  inline CMsgParticle* New() const { return New(NULL); }

  CMsgParticle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgParticle& from);
  void MergeFrom(const CMsgParticle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgParticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint particle_position = 1;
  bool has_particle_position() const;
  void clear_particle_position();
  static const int kParticlePositionFieldNumber = 1;
  const ::CMsgPoint& particle_position() const;
  ::CMsgPoint* mutable_particle_position();
  ::CMsgPoint* release_particle_position();
  void set_allocated_particle_position(::CMsgPoint* particle_position);

  // optional float particle_size = 2;
  bool has_particle_size() const;
  void clear_particle_size();
  static const int kParticleSizeFieldNumber = 2;
  float particle_size() const;
  void set_particle_size(float value);

  // optional float particle_sharpness = 3;
  bool has_particle_sharpness() const;
  void clear_particle_sharpness();
  static const int kParticleSharpnessFieldNumber = 3;
  float particle_sharpness() const;
  void set_particle_sharpness(float value);

  // optional uint32 color_rgba = 4;
  bool has_color_rgba() const;
  void clear_color_rgba();
  static const int kColorRgbaFieldNumber = 4;
  ::google::protobuf::uint32 color_rgba() const;
  void set_color_rgba(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgParticle)
 private:
  inline void set_has_particle_position();
  inline void clear_has_particle_position();
  inline void set_has_particle_size();
  inline void clear_has_particle_size();
  inline void set_has_particle_sharpness();
  inline void clear_has_particle_sharpness();
  inline void set_has_color_rgba();
  inline void clear_has_color_rgba();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* particle_position_;
  float particle_size_;
  float particle_sharpness_;
  ::google::protobuf::uint32 color_rgba_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgParticle* default_instance_;
};
// -------------------------------------------------------------------

class CMsgParticleSystem : public ::google::protobuf::Message {
 public:
  CMsgParticleSystem();
  virtual ~CMsgParticleSystem();

  CMsgParticleSystem(const CMsgParticleSystem& from);

  inline CMsgParticleSystem& operator=(const CMsgParticleSystem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgParticleSystem& default_instance();

  void Swap(CMsgParticleSystem* other);

  // implements Message ----------------------------------------------

  inline CMsgParticleSystem* New() const { return New(NULL); }

  CMsgParticleSystem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgParticleSystem& from);
  void MergeFrom(const CMsgParticleSystem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgParticleSystem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint base_position = 1;
  bool has_base_position() const;
  void clear_base_position();
  static const int kBasePositionFieldNumber = 1;
  const ::CMsgPoint& base_position() const;
  ::CMsgPoint* mutable_base_position();
  ::CMsgPoint* release_base_position();
  void set_allocated_base_position(::CMsgPoint* base_position);

  // optional .CMsgPoint base_position_variance = 2;
  bool has_base_position_variance() const;
  void clear_base_position_variance();
  static const int kBasePositionVarianceFieldNumber = 2;
  const ::CMsgPoint& base_position_variance() const;
  ::CMsgPoint* mutable_base_position_variance();
  ::CMsgPoint* release_base_position_variance();
  void set_allocated_base_position_variance(::CMsgPoint* base_position_variance);

  // optional double particle_size = 3;
  bool has_particle_size() const;
  void clear_particle_size();
  static const int kParticleSizeFieldNumber = 3;
  double particle_size() const;
  void set_particle_size(double value);

  // optional double particle_size_variance = 4;
  bool has_particle_size_variance() const;
  void clear_particle_size_variance();
  static const int kParticleSizeVarianceFieldNumber = 4;
  double particle_size_variance() const;
  void set_particle_size_variance(double value);

  // optional double particles_per_second = 5;
  bool has_particles_per_second() const;
  void clear_particles_per_second();
  static const int kParticlesPerSecondFieldNumber = 5;
  double particles_per_second() const;
  void set_particles_per_second(double value);

  // optional double particles_per_second_variance = 6;
  bool has_particles_per_second_variance() const;
  void clear_particles_per_second_variance();
  static const int kParticlesPerSecondVarianceFieldNumber = 6;
  double particles_per_second_variance() const;
  void set_particles_per_second_variance(double value);

  // optional double particle_lifespan_seconds = 7;
  bool has_particle_lifespan_seconds() const;
  void clear_particle_lifespan_seconds();
  static const int kParticleLifespanSecondsFieldNumber = 7;
  double particle_lifespan_seconds() const;
  void set_particle_lifespan_seconds(double value);

  // optional double particle_lifespan_seconds_variance = 8;
  bool has_particle_lifespan_seconds_variance() const;
  void clear_particle_lifespan_seconds_variance();
  static const int kParticleLifespanSecondsVarianceFieldNumber = 8;
  double particle_lifespan_seconds_variance() const;
  void set_particle_lifespan_seconds_variance(double value);

  // optional .CMsgPoint particle_initial_velocity = 9;
  bool has_particle_initial_velocity() const;
  void clear_particle_initial_velocity();
  static const int kParticleInitialVelocityFieldNumber = 9;
  const ::CMsgPoint& particle_initial_velocity() const;
  ::CMsgPoint* mutable_particle_initial_velocity();
  ::CMsgPoint* release_particle_initial_velocity();
  void set_allocated_particle_initial_velocity(::CMsgPoint* particle_initial_velocity);

  // optional .CMsgPoint particle_initial_velocity_variance = 10;
  bool has_particle_initial_velocity_variance() const;
  void clear_particle_initial_velocity_variance();
  static const int kParticleInitialVelocityVarianceFieldNumber = 10;
  const ::CMsgPoint& particle_initial_velocity_variance() const;
  ::CMsgPoint* mutable_particle_initial_velocity_variance();
  ::CMsgPoint* release_particle_initial_velocity_variance();
  void set_allocated_particle_initial_velocity_variance(::CMsgPoint* particle_initial_velocity_variance);

  // optional .CMsgPoint gravity_acceleration = 11;
  bool has_gravity_acceleration() const;
  void clear_gravity_acceleration();
  static const int kGravityAccelerationFieldNumber = 11;
  const ::CMsgPoint& gravity_acceleration() const;
  ::CMsgPoint* mutable_gravity_acceleration();
  ::CMsgPoint* release_gravity_acceleration();
  void set_allocated_gravity_acceleration(::CMsgPoint* gravity_acceleration);

  // optional .CMsgPoint gravity_acceleration_particle_variance = 12;
  bool has_gravity_acceleration_particle_variance() const;
  void clear_gravity_acceleration_particle_variance();
  static const int kGravityAccelerationParticleVarianceFieldNumber = 12;
  const ::CMsgPoint& gravity_acceleration_particle_variance() const;
  ::CMsgPoint* mutable_gravity_acceleration_particle_variance();
  ::CMsgPoint* release_gravity_acceleration_particle_variance();
  void set_allocated_gravity_acceleration_particle_variance(::CMsgPoint* gravity_acceleration_particle_variance);

  // optional uint32 color_start_rgba = 13;
  bool has_color_start_rgba() const;
  void clear_color_start_rgba();
  static const int kColorStartRgbaFieldNumber = 13;
  ::google::protobuf::uint32 color_start_rgba() const;
  void set_color_start_rgba(::google::protobuf::uint32 value);

  // optional uint32 color_start_rgba_variance = 14;
  bool has_color_start_rgba_variance() const;
  void clear_color_start_rgba_variance();
  static const int kColorStartRgbaVarianceFieldNumber = 14;
  ::google::protobuf::uint32 color_start_rgba_variance() const;
  void set_color_start_rgba_variance(::google::protobuf::uint32 value);

  // optional uint32 color_end_rgba = 15;
  bool has_color_end_rgba() const;
  void clear_color_end_rgba();
  static const int kColorEndRgbaFieldNumber = 15;
  ::google::protobuf::uint32 color_end_rgba() const;
  void set_color_end_rgba(::google::protobuf::uint32 value);

  // optional uint32 color_end_rgba_variance = 16;
  bool has_color_end_rgba_variance() const;
  void clear_color_end_rgba_variance();
  static const int kColorEndRgbaVarianceFieldNumber = 16;
  ::google::protobuf::uint32 color_end_rgba_variance() const;
  void set_color_end_rgba_variance(::google::protobuf::uint32 value);

  // optional uint64 parent_panel_handle = 17;
  bool has_parent_panel_handle() const;
  void clear_parent_panel_handle();
  static const int kParentPanelHandleFieldNumber = 17;
  ::google::protobuf::uint64 parent_panel_handle() const;
  void set_parent_panel_handle(::google::protobuf::uint64 value);

  // optional uint32 parent_brush_index = 18;
  bool has_parent_brush_index() const;
  void clear_parent_brush_index();
  static const int kParentBrushIndexFieldNumber = 18;
  ::google::protobuf::uint32 parent_brush_index() const;
  void set_parent_brush_index(::google::protobuf::uint32 value);

  // optional float particle_sharpness = 19;
  bool has_particle_sharpness() const;
  void clear_particle_sharpness();
  static const int kParticleSharpnessFieldNumber = 19;
  float particle_sharpness() const;
  void set_particle_sharpness(float value);

  // optional float particle_sharpness_variance = 20;
  bool has_particle_sharpness_variance() const;
  void clear_particle_sharpness_variance();
  static const int kParticleSharpnessVarianceFieldNumber = 20;
  float particle_sharpness_variance() const;
  void set_particle_sharpness_variance(float value);

  // optional float particle_flicker = 21;
  bool has_particle_flicker() const;
  void clear_particle_flicker();
  static const int kParticleFlickerFieldNumber = 21;
  float particle_flicker() const;
  void set_particle_flicker(float value);

  // optional float particle_flicker_variance = 22;
  bool has_particle_flicker_variance() const;
  void clear_particle_flicker_variance();
  static const int kParticleFlickerVarianceFieldNumber = 22;
  float particle_flicker_variance() const;
  void set_particle_flicker_variance(float value);

  // optional .CMsgPoint particle_velocity_min = 23;
  bool has_particle_velocity_min() const;
  void clear_particle_velocity_min();
  static const int kParticleVelocityMinFieldNumber = 23;
  const ::CMsgPoint& particle_velocity_min() const;
  ::CMsgPoint* mutable_particle_velocity_min();
  ::CMsgPoint* release_particle_velocity_min();
  void set_allocated_particle_velocity_min(::CMsgPoint* particle_velocity_min);

  // optional .CMsgPoint particle_velocity_max = 24;
  bool has_particle_velocity_max() const;
  void clear_particle_velocity_max();
  static const int kParticleVelocityMaxFieldNumber = 24;
  const ::CMsgPoint& particle_velocity_max() const;
  ::CMsgPoint* mutable_particle_velocity_max();
  ::CMsgPoint* release_particle_velocity_max();
  void set_allocated_particle_velocity_max(::CMsgPoint* particle_velocity_max);

  // repeated .CMsgParticle particles = 50;
  int particles_size() const;
  void clear_particles();
  static const int kParticlesFieldNumber = 50;
  const ::CMsgParticle& particles(int index) const;
  ::CMsgParticle* mutable_particles(int index);
  ::CMsgParticle* add_particles();
  ::google::protobuf::RepeatedPtrField< ::CMsgParticle >*
      mutable_particles();
  const ::google::protobuf::RepeatedPtrField< ::CMsgParticle >&
      particles() const;

  // @@protoc_insertion_point(class_scope:CMsgParticleSystem)
 private:
  inline void set_has_base_position();
  inline void clear_has_base_position();
  inline void set_has_base_position_variance();
  inline void clear_has_base_position_variance();
  inline void set_has_particle_size();
  inline void clear_has_particle_size();
  inline void set_has_particle_size_variance();
  inline void clear_has_particle_size_variance();
  inline void set_has_particles_per_second();
  inline void clear_has_particles_per_second();
  inline void set_has_particles_per_second_variance();
  inline void clear_has_particles_per_second_variance();
  inline void set_has_particle_lifespan_seconds();
  inline void clear_has_particle_lifespan_seconds();
  inline void set_has_particle_lifespan_seconds_variance();
  inline void clear_has_particle_lifespan_seconds_variance();
  inline void set_has_particle_initial_velocity();
  inline void clear_has_particle_initial_velocity();
  inline void set_has_particle_initial_velocity_variance();
  inline void clear_has_particle_initial_velocity_variance();
  inline void set_has_gravity_acceleration();
  inline void clear_has_gravity_acceleration();
  inline void set_has_gravity_acceleration_particle_variance();
  inline void clear_has_gravity_acceleration_particle_variance();
  inline void set_has_color_start_rgba();
  inline void clear_has_color_start_rgba();
  inline void set_has_color_start_rgba_variance();
  inline void clear_has_color_start_rgba_variance();
  inline void set_has_color_end_rgba();
  inline void clear_has_color_end_rgba();
  inline void set_has_color_end_rgba_variance();
  inline void clear_has_color_end_rgba_variance();
  inline void set_has_parent_panel_handle();
  inline void clear_has_parent_panel_handle();
  inline void set_has_parent_brush_index();
  inline void clear_has_parent_brush_index();
  inline void set_has_particle_sharpness();
  inline void clear_has_particle_sharpness();
  inline void set_has_particle_sharpness_variance();
  inline void clear_has_particle_sharpness_variance();
  inline void set_has_particle_flicker();
  inline void clear_has_particle_flicker();
  inline void set_has_particle_flicker_variance();
  inline void clear_has_particle_flicker_variance();
  inline void set_has_particle_velocity_min();
  inline void clear_has_particle_velocity_min();
  inline void set_has_particle_velocity_max();
  inline void clear_has_particle_velocity_max();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* base_position_;
  ::CMsgPoint* base_position_variance_;
  double particle_size_;
  double particle_size_variance_;
  double particles_per_second_;
  double particles_per_second_variance_;
  double particle_lifespan_seconds_;
  double particle_lifespan_seconds_variance_;
  ::CMsgPoint* particle_initial_velocity_;
  ::CMsgPoint* particle_initial_velocity_variance_;
  ::CMsgPoint* gravity_acceleration_;
  ::CMsgPoint* gravity_acceleration_particle_variance_;
  ::google::protobuf::uint32 color_start_rgba_;
  ::google::protobuf::uint32 color_start_rgba_variance_;
  ::google::protobuf::uint32 color_end_rgba_;
  ::google::protobuf::uint32 color_end_rgba_variance_;
  ::google::protobuf::uint64 parent_panel_handle_;
  ::google::protobuf::uint32 parent_brush_index_;
  float particle_sharpness_;
  float particle_sharpness_variance_;
  float particle_flicker_;
  ::CMsgPoint* particle_velocity_min_;
  ::CMsgPoint* particle_velocity_max_;
  ::google::protobuf::RepeatedPtrField< ::CMsgParticle > particles_;
  float particle_flicker_variance_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgParticleSystem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFillBrush : public ::google::protobuf::Message {
 public:
  CMsgFillBrush();
  virtual ~CMsgFillBrush();

  CMsgFillBrush(const CMsgFillBrush& from);

  inline CMsgFillBrush& operator=(const CMsgFillBrush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFillBrush& default_instance();

  void Swap(CMsgFillBrush* other);

  // implements Message ----------------------------------------------

  inline CMsgFillBrush* New() const { return New(NULL); }

  CMsgFillBrush* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFillBrush& from);
  void MergeFrom(const CMsgFillBrush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgFillBrush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double opacity = 1;
  bool has_opacity() const;
  void clear_opacity();
  static const int kOpacityFieldNumber = 1;
  double opacity() const;
  void set_opacity(double value);

  // optional uint32 color_rgba = 2;
  bool has_color_rgba() const;
  void clear_color_rgba();
  static const int kColorRgbaFieldNumber = 2;
  ::google::protobuf::uint32 color_rgba() const;
  void set_color_rgba(::google::protobuf::uint32 value);

  // optional .CMsgLinearGradient linear_gradient = 3;
  bool has_linear_gradient() const;
  void clear_linear_gradient();
  static const int kLinearGradientFieldNumber = 3;
  const ::CMsgLinearGradient& linear_gradient() const;
  ::CMsgLinearGradient* mutable_linear_gradient();
  ::CMsgLinearGradient* release_linear_gradient();
  void set_allocated_linear_gradient(::CMsgLinearGradient* linear_gradient);

  // optional .CMsgRadialGradient radial_gradient = 4;
  bool has_radial_gradient() const;
  void clear_radial_gradient();
  static const int kRadialGradientFieldNumber = 4;
  const ::CMsgRadialGradient& radial_gradient() const;
  ::CMsgRadialGradient* mutable_radial_gradient();
  ::CMsgRadialGradient* release_radial_gradient();
  void set_allocated_radial_gradient(::CMsgRadialGradient* radial_gradient);

  // optional .CMsgParticleSystem particle_system = 5;
  bool has_particle_system() const;
  void clear_particle_system();
  static const int kParticleSystemFieldNumber = 5;
  const ::CMsgParticleSystem& particle_system() const;
  ::CMsgParticleSystem* mutable_particle_system();
  ::CMsgParticleSystem* release_particle_system();
  void set_allocated_particle_system(::CMsgParticleSystem* particle_system);

  // @@protoc_insertion_point(class_scope:CMsgFillBrush)
 private:
  inline void set_has_opacity();
  inline void clear_has_opacity();
  inline void set_has_color_rgba();
  inline void clear_has_color_rgba();
  inline void set_has_linear_gradient();
  inline void clear_has_linear_gradient();
  inline void set_has_radial_gradient();
  inline void clear_has_radial_gradient();
  inline void set_has_particle_system();
  inline void clear_has_particle_system();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double opacity_;
  ::CMsgLinearGradient* linear_gradient_;
  ::CMsgRadialGradient* radial_gradient_;
  ::CMsgParticleSystem* particle_system_;
  ::google::protobuf::uint32 color_rgba_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgFillBrush* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFillBrushCollection_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgFillBrushCollection_AnimationFrameData();
  virtual ~CMsgFillBrushCollection_AnimationFrameData();

  CMsgFillBrushCollection_AnimationFrameData(const CMsgFillBrushCollection_AnimationFrameData& from);

  inline CMsgFillBrushCollection_AnimationFrameData& operator=(const CMsgFillBrushCollection_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFillBrushCollection_AnimationFrameData& default_instance();

  void Swap(CMsgFillBrushCollection_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgFillBrushCollection_AnimationFrameData* New() const { return New(NULL); }

  CMsgFillBrushCollection_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFillBrushCollection_AnimationFrameData& from);
  void MergeFrom(const CMsgFillBrushCollection_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgFillBrushCollection_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgFillBrush data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgFillBrush& data(int index) const;
  ::CMsgFillBrush* mutable_data(int index);
  ::CMsgFillBrush* add_data();
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
      data() const;

  // @@protoc_insertion_point(class_scope:CMsgFillBrushCollection.AnimationFrameData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush > data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgFillBrushCollection_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFillBrushCollection : public ::google::protobuf::Message {
 public:
  CMsgFillBrushCollection();
  virtual ~CMsgFillBrushCollection();

  CMsgFillBrushCollection(const CMsgFillBrushCollection& from);

  inline CMsgFillBrushCollection& operator=(const CMsgFillBrushCollection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFillBrushCollection& default_instance();

  void Swap(CMsgFillBrushCollection* other);

  // implements Message ----------------------------------------------

  inline CMsgFillBrushCollection* New() const { return New(NULL); }

  CMsgFillBrushCollection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFillBrushCollection& from);
  void MergeFrom(const CMsgFillBrushCollection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgFillBrushCollection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgFillBrushCollection_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // repeated .CMsgFillBrush base = 1;
  int base_size() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgFillBrush& base(int index) const;
  ::CMsgFillBrush* mutable_base(int index);
  ::CMsgFillBrush* add_base();
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
      mutable_base();
  const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
      base() const;

  // repeated .CMsgFillBrush transition = 2;
  int transition_size() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  const ::CMsgFillBrush& transition(int index) const;
  ::CMsgFillBrush* mutable_transition(int index);
  ::CMsgFillBrush* add_transition();
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
      mutable_transition();
  const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
      transition() const;

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1007;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgFillBrushCollection_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgFillBrushCollection)
 private:
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush > base_;
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush > transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgFillBrushCollection* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenderFillBrushCollection : public ::google::protobuf::Message {
 public:
  CMsgRenderFillBrushCollection();
  virtual ~CMsgRenderFillBrushCollection();

  CMsgRenderFillBrushCollection(const CMsgRenderFillBrushCollection& from);

  inline CMsgRenderFillBrushCollection& operator=(const CMsgRenderFillBrushCollection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenderFillBrushCollection& default_instance();

  void Swap(CMsgRenderFillBrushCollection* other);

  // implements Message ----------------------------------------------

  inline CMsgRenderFillBrushCollection* New() const { return New(NULL); }

  CMsgRenderFillBrushCollection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenderFillBrushCollection& from);
  void MergeFrom(const CMsgRenderFillBrushCollection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRenderFillBrushCollection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgFillBrush fill_brush = 1;
  int fill_brush_size() const;
  void clear_fill_brush();
  static const int kFillBrushFieldNumber = 1;
  const ::CMsgFillBrush& fill_brush(int index) const;
  ::CMsgFillBrush* mutable_fill_brush(int index);
  ::CMsgFillBrush* add_fill_brush();
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
      mutable_fill_brush();
  const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
      fill_brush() const;

  // @@protoc_insertion_point(class_scope:CMsgRenderFillBrushCollection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush > fill_brush_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenderFillBrushCollection* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPanelPosition_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgPanelPosition_AnimationFrameData();
  virtual ~CMsgPanelPosition_AnimationFrameData();

  CMsgPanelPosition_AnimationFrameData(const CMsgPanelPosition_AnimationFrameData& from);

  inline CMsgPanelPosition_AnimationFrameData& operator=(const CMsgPanelPosition_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPanelPosition_AnimationFrameData& default_instance();

  void Swap(CMsgPanelPosition_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgPanelPosition_AnimationFrameData* New() const { return New(NULL); }

  CMsgPanelPosition_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPanelPosition_AnimationFrameData& from);
  void MergeFrom(const CMsgPanelPosition_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPanelPosition_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgPoint& data() const;
  ::CMsgPoint* mutable_data();
  ::CMsgPoint* release_data();
  void set_allocated_data(::CMsgPoint* data);

  // @@protoc_insertion_point(class_scope:CMsgPanelPosition.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPanelPosition_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPanelPosition : public ::google::protobuf::Message {
 public:
  CMsgPanelPosition();
  virtual ~CMsgPanelPosition();

  CMsgPanelPosition(const CMsgPanelPosition& from);

  inline CMsgPanelPosition& operator=(const CMsgPanelPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPanelPosition& default_instance();

  void Swap(CMsgPanelPosition* other);

  // implements Message ----------------------------------------------

  inline CMsgPanelPosition* New() const { return New(NULL); }

  CMsgPanelPosition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPanelPosition& from);
  void MergeFrom(const CMsgPanelPosition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPanelPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPanelPosition_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgPoint base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgPoint& base() const;
  ::CMsgPoint* mutable_base();
  ::CMsgPoint* release_base();
  void set_allocated_base(::CMsgPoint* base);

  // optional .CMsgPoint transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  const ::CMsgPoint& transition() const;
  ::CMsgPoint* mutable_transition();
  ::CMsgPoint* release_transition();
  void set_allocated_transition(::CMsgPoint* transition);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  // optional .CMsgPoint scroll_offset = 5;
  bool has_scroll_offset() const;
  void clear_scroll_offset();
  static const int kScrollOffsetFieldNumber = 5;
  const ::CMsgPoint& scroll_offset() const;
  ::CMsgPoint* mutable_scroll_offset();
  ::CMsgPoint* release_scroll_offset();
  void set_allocated_scroll_offset(::CMsgPoint* scroll_offset);

  // optional .CMsgPoint scroll_offset_target = 6;
  bool has_scroll_offset_target() const;
  void clear_scroll_offset_target();
  static const int kScrollOffsetTargetFieldNumber = 6;
  const ::CMsgPoint& scroll_offset_target() const;
  ::CMsgPoint* mutable_scroll_offset_target();
  ::CMsgPoint* release_scroll_offset_target();
  void set_allocated_scroll_offset_target(::CMsgPoint* scroll_offset_target);

  // optional .CMsgTransitionData scroll_transition_x = 7;
  bool has_scroll_transition_x() const;
  void clear_scroll_transition_x();
  static const int kScrollTransitionXFieldNumber = 7;
  const ::CMsgTransitionData& scroll_transition_x() const;
  ::CMsgTransitionData* mutable_scroll_transition_x();
  ::CMsgTransitionData* release_scroll_transition_x();
  void set_allocated_scroll_transition_x(::CMsgTransitionData* scroll_transition_x);

  // optional .CMsgTransitionData scroll_transition_y = 8;
  bool has_scroll_transition_y() const;
  void clear_scroll_transition_y();
  static const int kScrollTransitionYFieldNumber = 8;
  const ::CMsgTransitionData& scroll_transition_y() const;
  ::CMsgTransitionData* mutable_scroll_transition_y();
  ::CMsgTransitionData* release_scroll_transition_y();
  void set_allocated_scroll_transition_y(::CMsgTransitionData* scroll_transition_y);

  static const int kAnimationFrameDataFieldNumber = 1011;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgPanelPosition_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgPanelPosition)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();
  inline void set_has_scroll_offset();
  inline void clear_has_scroll_offset();
  inline void set_has_scroll_offset_target();
  inline void clear_has_scroll_offset_target();
  inline void set_has_scroll_transition_x();
  inline void clear_has_scroll_transition_x();
  inline void set_has_scroll_transition_y();
  inline void clear_has_scroll_transition_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* base_;
  ::CMsgPoint* transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  ::CMsgPoint* scroll_offset_;
  ::CMsgPoint* scroll_offset_target_;
  ::CMsgTransitionData* scroll_transition_x_;
  ::CMsgTransitionData* scroll_transition_y_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPanelPosition* default_instance_;
};
// -------------------------------------------------------------------

class CMsgOpacity_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgOpacity_AnimationFrameData();
  virtual ~CMsgOpacity_AnimationFrameData();

  CMsgOpacity_AnimationFrameData(const CMsgOpacity_AnimationFrameData& from);

  inline CMsgOpacity_AnimationFrameData& operator=(const CMsgOpacity_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpacity_AnimationFrameData& default_instance();

  void Swap(CMsgOpacity_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgOpacity_AnimationFrameData* New() const { return New(NULL); }

  CMsgOpacity_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgOpacity_AnimationFrameData& from);
  void MergeFrom(const CMsgOpacity_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgOpacity_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:CMsgOpacity.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgOpacity_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgOpacity : public ::google::protobuf::Message {
 public:
  CMsgOpacity();
  virtual ~CMsgOpacity();

  CMsgOpacity(const CMsgOpacity& from);

  inline CMsgOpacity& operator=(const CMsgOpacity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpacity& default_instance();

  void Swap(CMsgOpacity* other);

  // implements Message ----------------------------------------------

  inline CMsgOpacity* New() const { return New(NULL); }

  CMsgOpacity* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgOpacity& from);
  void MergeFrom(const CMsgOpacity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgOpacity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgOpacity_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional double base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  double base() const;
  void set_base(double value);

  // optional double transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  double transition() const;
  void set_transition(double value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1004;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgOpacity_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgOpacity)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double base_;
  double transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgOpacity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRotate2D_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgRotate2D_AnimationFrameData();
  virtual ~CMsgRotate2D_AnimationFrameData();

  CMsgRotate2D_AnimationFrameData(const CMsgRotate2D_AnimationFrameData& from);

  inline CMsgRotate2D_AnimationFrameData& operator=(const CMsgRotate2D_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRotate2D_AnimationFrameData& default_instance();

  void Swap(CMsgRotate2D_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgRotate2D_AnimationFrameData* New() const { return New(NULL); }

  CMsgRotate2D_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRotate2D_AnimationFrameData& from);
  void MergeFrom(const CMsgRotate2D_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRotate2D_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:CMsgRotate2D.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRotate2D_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRotate2D : public ::google::protobuf::Message {
 public:
  CMsgRotate2D();
  virtual ~CMsgRotate2D();

  CMsgRotate2D(const CMsgRotate2D& from);

  inline CMsgRotate2D& operator=(const CMsgRotate2D& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRotate2D& default_instance();

  void Swap(CMsgRotate2D* other);

  // implements Message ----------------------------------------------

  inline CMsgRotate2D* New() const { return New(NULL); }

  CMsgRotate2D* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRotate2D& from);
  void MergeFrom(const CMsgRotate2D& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRotate2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgRotate2D_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional double base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  double base() const;
  void set_base(double value);

  // optional double transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  double transition() const;
  void set_transition(double value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1014;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgRotate2D_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgRotate2D)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double base_;
  double transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRotate2D* default_instance_;
};
// -------------------------------------------------------------------

class CMsgOpacityMaskData : public ::google::protobuf::Message {
 public:
  CMsgOpacityMaskData();
  virtual ~CMsgOpacityMaskData();

  CMsgOpacityMaskData(const CMsgOpacityMaskData& from);

  inline CMsgOpacityMaskData& operator=(const CMsgOpacityMaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpacityMaskData& default_instance();

  void Swap(CMsgOpacityMaskData* other);

  // implements Message ----------------------------------------------

  inline CMsgOpacityMaskData* New() const { return New(NULL); }

  CMsgOpacityMaskData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgOpacityMaskData& from);
  void MergeFrom(const CMsgOpacityMaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgOpacityMaskData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 opacity_mask_texture_id = 1;
  bool has_opacity_mask_texture_id() const;
  void clear_opacity_mask_texture_id();
  static const int kOpacityMaskTextureIdFieldNumber = 1;
  ::google::protobuf::uint32 opacity_mask_texture_id() const;
  void set_opacity_mask_texture_id(::google::protobuf::uint32 value);

  // optional double opacity_mask_opacity = 2;
  bool has_opacity_mask_opacity() const;
  void clear_opacity_mask_opacity();
  static const int kOpacityMaskOpacityFieldNumber = 2;
  double opacity_mask_opacity() const;
  void set_opacity_mask_opacity(double value);

  // @@protoc_insertion_point(class_scope:CMsgOpacityMaskData)
 private:
  inline void set_has_opacity_mask_texture_id();
  inline void clear_has_opacity_mask_texture_id();
  inline void set_has_opacity_mask_opacity();
  inline void clear_has_opacity_mask_opacity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double opacity_mask_opacity_;
  ::google::protobuf::uint32 opacity_mask_texture_id_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgOpacityMaskData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgOpacityMask_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgOpacityMask_AnimationFrameData();
  virtual ~CMsgOpacityMask_AnimationFrameData();

  CMsgOpacityMask_AnimationFrameData(const CMsgOpacityMask_AnimationFrameData& from);

  inline CMsgOpacityMask_AnimationFrameData& operator=(const CMsgOpacityMask_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpacityMask_AnimationFrameData& default_instance();

  void Swap(CMsgOpacityMask_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgOpacityMask_AnimationFrameData* New() const { return New(NULL); }

  CMsgOpacityMask_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgOpacityMask_AnimationFrameData& from);
  void MergeFrom(const CMsgOpacityMask_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgOpacityMask_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgOpacityMaskData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgOpacityMaskData& data() const;
  ::CMsgOpacityMaskData* mutable_data();
  ::CMsgOpacityMaskData* release_data();
  void set_allocated_data(::CMsgOpacityMaskData* data);

  // @@protoc_insertion_point(class_scope:CMsgOpacityMask.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgOpacityMaskData* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgOpacityMask_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgOpacityMask : public ::google::protobuf::Message {
 public:
  CMsgOpacityMask();
  virtual ~CMsgOpacityMask();

  CMsgOpacityMask(const CMsgOpacityMask& from);

  inline CMsgOpacityMask& operator=(const CMsgOpacityMask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpacityMask& default_instance();

  void Swap(CMsgOpacityMask* other);

  // implements Message ----------------------------------------------

  inline CMsgOpacityMask* New() const { return New(NULL); }

  CMsgOpacityMask* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgOpacityMask& from);
  void MergeFrom(const CMsgOpacityMask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgOpacityMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgOpacityMask_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgOpacityMaskData base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgOpacityMaskData& base() const;
  ::CMsgOpacityMaskData* mutable_base();
  ::CMsgOpacityMaskData* release_base();
  void set_allocated_base(::CMsgOpacityMaskData* base);

  // optional .CMsgOpacityMaskData transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  const ::CMsgOpacityMaskData& transition() const;
  ::CMsgOpacityMaskData* mutable_transition();
  ::CMsgOpacityMaskData* release_transition();
  void set_allocated_transition(::CMsgOpacityMaskData* transition);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1013;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgOpacityMask_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgOpacityMask)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgOpacityMaskData* base_;
  ::CMsgOpacityMaskData* transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgOpacityMask* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHueShift_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgHueShift_AnimationFrameData();
  virtual ~CMsgHueShift_AnimationFrameData();

  CMsgHueShift_AnimationFrameData(const CMsgHueShift_AnimationFrameData& from);

  inline CMsgHueShift_AnimationFrameData& operator=(const CMsgHueShift_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHueShift_AnimationFrameData& default_instance();

  void Swap(CMsgHueShift_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgHueShift_AnimationFrameData* New() const { return New(NULL); }

  CMsgHueShift_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHueShift_AnimationFrameData& from);
  void MergeFrom(const CMsgHueShift_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgHueShift_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:CMsgHueShift.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHueShift_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHueShift : public ::google::protobuf::Message {
 public:
  CMsgHueShift();
  virtual ~CMsgHueShift();

  CMsgHueShift(const CMsgHueShift& from);

  inline CMsgHueShift& operator=(const CMsgHueShift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHueShift& default_instance();

  void Swap(CMsgHueShift* other);

  // implements Message ----------------------------------------------

  inline CMsgHueShift* New() const { return New(NULL); }

  CMsgHueShift* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHueShift& from);
  void MergeFrom(const CMsgHueShift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgHueShift* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgHueShift_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional double base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  double base() const;
  void set_base(double value);

  // optional double transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  double transition() const;
  void set_transition(double value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1019;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgHueShift_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgHueShift)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double base_;
  double transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHueShift* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSaturation_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgSaturation_AnimationFrameData();
  virtual ~CMsgSaturation_AnimationFrameData();

  CMsgSaturation_AnimationFrameData(const CMsgSaturation_AnimationFrameData& from);

  inline CMsgSaturation_AnimationFrameData& operator=(const CMsgSaturation_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSaturation_AnimationFrameData& default_instance();

  void Swap(CMsgSaturation_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgSaturation_AnimationFrameData* New() const { return New(NULL); }

  CMsgSaturation_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSaturation_AnimationFrameData& from);
  void MergeFrom(const CMsgSaturation_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSaturation_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:CMsgSaturation.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSaturation_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSaturation : public ::google::protobuf::Message {
 public:
  CMsgSaturation();
  virtual ~CMsgSaturation();

  CMsgSaturation(const CMsgSaturation& from);

  inline CMsgSaturation& operator=(const CMsgSaturation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSaturation& default_instance();

  void Swap(CMsgSaturation* other);

  // implements Message ----------------------------------------------

  inline CMsgSaturation* New() const { return New(NULL); }

  CMsgSaturation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSaturation& from);
  void MergeFrom(const CMsgSaturation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSaturation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSaturation_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional double base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  double base() const;
  void set_base(double value);

  // optional double transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  double transition() const;
  void set_transition(double value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1005;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgSaturation_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgSaturation)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double base_;
  double transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSaturation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBrightness_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgBrightness_AnimationFrameData();
  virtual ~CMsgBrightness_AnimationFrameData();

  CMsgBrightness_AnimationFrameData(const CMsgBrightness_AnimationFrameData& from);

  inline CMsgBrightness_AnimationFrameData& operator=(const CMsgBrightness_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrightness_AnimationFrameData& default_instance();

  void Swap(CMsgBrightness_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgBrightness_AnimationFrameData* New() const { return New(NULL); }

  CMsgBrightness_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBrightness_AnimationFrameData& from);
  void MergeFrom(const CMsgBrightness_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBrightness_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:CMsgBrightness.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBrightness_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBrightness : public ::google::protobuf::Message {
 public:
  CMsgBrightness();
  virtual ~CMsgBrightness();

  CMsgBrightness(const CMsgBrightness& from);

  inline CMsgBrightness& operator=(const CMsgBrightness& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrightness& default_instance();

  void Swap(CMsgBrightness* other);

  // implements Message ----------------------------------------------

  inline CMsgBrightness* New() const { return New(NULL); }

  CMsgBrightness* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBrightness& from);
  void MergeFrom(const CMsgBrightness& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBrightness* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgBrightness_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional double base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  double base() const;
  void set_base(double value);

  // optional double transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  double transition() const;
  void set_transition(double value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1020;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgBrightness_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgBrightness)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double base_;
  double transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBrightness* default_instance_;
};
// -------------------------------------------------------------------

class CMsgContrast_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgContrast_AnimationFrameData();
  virtual ~CMsgContrast_AnimationFrameData();

  CMsgContrast_AnimationFrameData(const CMsgContrast_AnimationFrameData& from);

  inline CMsgContrast_AnimationFrameData& operator=(const CMsgContrast_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgContrast_AnimationFrameData& default_instance();

  void Swap(CMsgContrast_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgContrast_AnimationFrameData* New() const { return New(NULL); }

  CMsgContrast_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgContrast_AnimationFrameData& from);
  void MergeFrom(const CMsgContrast_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgContrast_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:CMsgContrast.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgContrast_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgContrast : public ::google::protobuf::Message {
 public:
  CMsgContrast();
  virtual ~CMsgContrast();

  CMsgContrast(const CMsgContrast& from);

  inline CMsgContrast& operator=(const CMsgContrast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgContrast& default_instance();

  void Swap(CMsgContrast* other);

  // implements Message ----------------------------------------------

  inline CMsgContrast* New() const { return New(NULL); }

  CMsgContrast* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgContrast& from);
  void MergeFrom(const CMsgContrast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgContrast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgContrast_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional double base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  double base() const;
  void set_base(double value);

  // optional double transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  double transition() const;
  void set_transition(double value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1021;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgContrast_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgContrast)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double base_;
  double transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgContrast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGaussianValues : public ::google::protobuf::Message {
 public:
  CMsgGaussianValues();
  virtual ~CMsgGaussianValues();

  CMsgGaussianValues(const CMsgGaussianValues& from);

  inline CMsgGaussianValues& operator=(const CMsgGaussianValues& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGaussianValues& default_instance();

  void Swap(CMsgGaussianValues* other);

  // implements Message ----------------------------------------------

  inline CMsgGaussianValues* New() const { return New(NULL); }

  CMsgGaussianValues* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGaussianValues& from);
  void MergeFrom(const CMsgGaussianValues& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGaussianValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double passes = 1;
  bool has_passes() const;
  void clear_passes();
  static const int kPassesFieldNumber = 1;
  double passes() const;
  void set_passes(double value);

  // optional double stddev_hor = 2;
  bool has_stddev_hor() const;
  void clear_stddev_hor();
  static const int kStddevHorFieldNumber = 2;
  double stddev_hor() const;
  void set_stddev_hor(double value);

  // optional double stddev_ver = 3;
  bool has_stddev_ver() const;
  void clear_stddev_ver();
  static const int kStddevVerFieldNumber = 3;
  double stddev_ver() const;
  void set_stddev_ver(double value);

  // @@protoc_insertion_point(class_scope:CMsgGaussianValues)
 private:
  inline void set_has_passes();
  inline void clear_has_passes();
  inline void set_has_stddev_hor();
  inline void clear_has_stddev_hor();
  inline void set_has_stddev_ver();
  inline void clear_has_stddev_ver();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double passes_;
  double stddev_hor_;
  double stddev_ver_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGaussianValues* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGaussianBlur_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgGaussianBlur_AnimationFrameData();
  virtual ~CMsgGaussianBlur_AnimationFrameData();

  CMsgGaussianBlur_AnimationFrameData(const CMsgGaussianBlur_AnimationFrameData& from);

  inline CMsgGaussianBlur_AnimationFrameData& operator=(const CMsgGaussianBlur_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGaussianBlur_AnimationFrameData& default_instance();

  void Swap(CMsgGaussianBlur_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgGaussianBlur_AnimationFrameData* New() const { return New(NULL); }

  CMsgGaussianBlur_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGaussianBlur_AnimationFrameData& from);
  void MergeFrom(const CMsgGaussianBlur_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGaussianBlur_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgGaussianValues data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgGaussianValues& data() const;
  ::CMsgGaussianValues* mutable_data();
  ::CMsgGaussianValues* release_data();
  void set_allocated_data(::CMsgGaussianValues* data);

  // @@protoc_insertion_point(class_scope:CMsgGaussianBlur.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgGaussianValues* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGaussianBlur_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGaussianBlur : public ::google::protobuf::Message {
 public:
  CMsgGaussianBlur();
  virtual ~CMsgGaussianBlur();

  CMsgGaussianBlur(const CMsgGaussianBlur& from);

  inline CMsgGaussianBlur& operator=(const CMsgGaussianBlur& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGaussianBlur& default_instance();

  void Swap(CMsgGaussianBlur* other);

  // implements Message ----------------------------------------------

  inline CMsgGaussianBlur* New() const { return New(NULL); }

  CMsgGaussianBlur* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGaussianBlur& from);
  void MergeFrom(const CMsgGaussianBlur& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGaussianBlur* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGaussianBlur_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgGaussianValues base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgGaussianValues& base() const;
  ::CMsgGaussianValues* mutable_base();
  ::CMsgGaussianValues* release_base();
  void set_allocated_base(::CMsgGaussianValues* base);

  // optional .CMsgGaussianValues transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  const ::CMsgGaussianValues& transition() const;
  ::CMsgGaussianValues* mutable_transition();
  ::CMsgGaussianValues* release_transition();
  void set_allocated_transition(::CMsgGaussianValues* transition);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1008;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgGaussianBlur_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgGaussianBlur)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgGaussianValues* base_;
  ::CMsgGaussianValues* transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGaussianBlur* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformPerspective_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsg3DTransformPerspective_AnimationFrameData();
  virtual ~CMsg3DTransformPerspective_AnimationFrameData();

  CMsg3DTransformPerspective_AnimationFrameData(const CMsg3DTransformPerspective_AnimationFrameData& from);

  inline CMsg3DTransformPerspective_AnimationFrameData& operator=(const CMsg3DTransformPerspective_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformPerspective_AnimationFrameData& default_instance();

  void Swap(CMsg3DTransformPerspective_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformPerspective_AnimationFrameData* New() const { return New(NULL); }

  CMsg3DTransformPerspective_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformPerspective_AnimationFrameData& from);
  void MergeFrom(const CMsg3DTransformPerspective_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformPerspective_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:CMsg3DTransformPerspective.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformPerspective_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformPerspective : public ::google::protobuf::Message {
 public:
  CMsg3DTransformPerspective();
  virtual ~CMsg3DTransformPerspective();

  CMsg3DTransformPerspective(const CMsg3DTransformPerspective& from);

  inline CMsg3DTransformPerspective& operator=(const CMsg3DTransformPerspective& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformPerspective& default_instance();

  void Swap(CMsg3DTransformPerspective* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformPerspective* New() const { return New(NULL); }

  CMsg3DTransformPerspective* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformPerspective& from);
  void MergeFrom(const CMsg3DTransformPerspective& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformPerspective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg3DTransformPerspective_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional double base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  double base() const;
  void set_base(double value);

  // optional double transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  double transition() const;
  void set_transition(double value);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1003;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsg3DTransformPerspective_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsg3DTransformPerspective)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double base_;
  double transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformPerspective* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformPerspectiveOrigin_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsg3DTransformPerspectiveOrigin_AnimationFrameData();
  virtual ~CMsg3DTransformPerspectiveOrigin_AnimationFrameData();

  CMsg3DTransformPerspectiveOrigin_AnimationFrameData(const CMsg3DTransformPerspectiveOrigin_AnimationFrameData& from);

  inline CMsg3DTransformPerspectiveOrigin_AnimationFrameData& operator=(const CMsg3DTransformPerspectiveOrigin_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformPerspectiveOrigin_AnimationFrameData& default_instance();

  void Swap(CMsg3DTransformPerspectiveOrigin_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformPerspectiveOrigin_AnimationFrameData* New() const { return New(NULL); }

  CMsg3DTransformPerspectiveOrigin_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformPerspectiveOrigin_AnimationFrameData& from);
  void MergeFrom(const CMsg3DTransformPerspectiveOrigin_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformPerspectiveOrigin_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgPoint& data() const;
  ::CMsgPoint* mutable_data();
  ::CMsgPoint* release_data();
  void set_allocated_data(::CMsgPoint* data);

  // @@protoc_insertion_point(class_scope:CMsg3DTransformPerspectiveOrigin.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformPerspectiveOrigin_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformPerspectiveOrigin : public ::google::protobuf::Message {
 public:
  CMsg3DTransformPerspectiveOrigin();
  virtual ~CMsg3DTransformPerspectiveOrigin();

  CMsg3DTransformPerspectiveOrigin(const CMsg3DTransformPerspectiveOrigin& from);

  inline CMsg3DTransformPerspectiveOrigin& operator=(const CMsg3DTransformPerspectiveOrigin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformPerspectiveOrigin& default_instance();

  void Swap(CMsg3DTransformPerspectiveOrigin* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformPerspectiveOrigin* New() const { return New(NULL); }

  CMsg3DTransformPerspectiveOrigin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformPerspectiveOrigin& from);
  void MergeFrom(const CMsg3DTransformPerspectiveOrigin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformPerspectiveOrigin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg3DTransformPerspectiveOrigin_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgPoint base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgPoint& base() const;
  ::CMsgPoint* mutable_base();
  ::CMsgPoint* release_base();
  void set_allocated_base(::CMsgPoint* base);

  // optional .CMsgPoint transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  const ::CMsgPoint& transition() const;
  ::CMsgPoint* mutable_transition();
  ::CMsgPoint* release_transition();
  void set_allocated_transition(::CMsgPoint* transition);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1002;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsg3DTransformPerspectiveOrigin_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsg3DTransformPerspectiveOrigin)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* base_;
  ::CMsgPoint* transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformPerspectiveOrigin* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTransformOriginData : public ::google::protobuf::Message {
 public:
  CMsgTransformOriginData();
  virtual ~CMsgTransformOriginData();

  CMsgTransformOriginData(const CMsgTransformOriginData& from);

  inline CMsgTransformOriginData& operator=(const CMsgTransformOriginData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTransformOriginData& default_instance();

  void Swap(CMsgTransformOriginData* other);

  // implements Message ----------------------------------------------

  inline CMsgTransformOriginData* New() const { return New(NULL); }

  CMsgTransformOriginData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTransformOriginData& from);
  void MergeFrom(const CMsgTransformOriginData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTransformOriginData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional bool x_is_percent = 3;
  bool has_x_is_percent() const;
  void clear_x_is_percent();
  static const int kXIsPercentFieldNumber = 3;
  bool x_is_percent() const;
  void set_x_is_percent(bool value);

  // optional bool y_is_percent = 4;
  bool has_y_is_percent() const;
  void clear_y_is_percent();
  static const int kYIsPercentFieldNumber = 4;
  bool y_is_percent() const;
  void set_y_is_percent(bool value);

  // optional bool is_parent_relative = 5;
  bool has_is_parent_relative() const;
  void clear_is_parent_relative();
  static const int kIsParentRelativeFieldNumber = 5;
  bool is_parent_relative() const;
  void set_is_parent_relative(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTransformOriginData)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_x_is_percent();
  inline void clear_has_x_is_percent();
  inline void set_has_y_is_percent();
  inline void clear_has_y_is_percent();
  inline void set_has_is_parent_relative();
  inline void clear_has_is_parent_relative();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  bool x_is_percent_;
  bool y_is_percent_;
  bool is_parent_relative_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTransformOriginData* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformOrigin_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsg3DTransformOrigin_AnimationFrameData();
  virtual ~CMsg3DTransformOrigin_AnimationFrameData();

  CMsg3DTransformOrigin_AnimationFrameData(const CMsg3DTransformOrigin_AnimationFrameData& from);

  inline CMsg3DTransformOrigin_AnimationFrameData& operator=(const CMsg3DTransformOrigin_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformOrigin_AnimationFrameData& default_instance();

  void Swap(CMsg3DTransformOrigin_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformOrigin_AnimationFrameData* New() const { return New(NULL); }

  CMsg3DTransformOrigin_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformOrigin_AnimationFrameData& from);
  void MergeFrom(const CMsg3DTransformOrigin_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformOrigin_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgTransformOriginData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgTransformOriginData& data() const;
  ::CMsgTransformOriginData* mutable_data();
  ::CMsgTransformOriginData* release_data();
  void set_allocated_data(::CMsgTransformOriginData* data);

  // @@protoc_insertion_point(class_scope:CMsg3DTransformOrigin.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgTransformOriginData* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformOrigin_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformOrigin : public ::google::protobuf::Message {
 public:
  CMsg3DTransformOrigin();
  virtual ~CMsg3DTransformOrigin();

  CMsg3DTransformOrigin(const CMsg3DTransformOrigin& from);

  inline CMsg3DTransformOrigin& operator=(const CMsg3DTransformOrigin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformOrigin& default_instance();

  void Swap(CMsg3DTransformOrigin* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformOrigin* New() const { return New(NULL); }

  CMsg3DTransformOrigin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformOrigin& from);
  void MergeFrom(const CMsg3DTransformOrigin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformOrigin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg3DTransformOrigin_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgTransformOriginData base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgTransformOriginData& base() const;
  ::CMsgTransformOriginData* mutable_base();
  ::CMsgTransformOriginData* release_base();
  void set_allocated_base(::CMsgTransformOriginData* base);

  // optional .CMsgTransformOriginData transition = 2;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 2;
  const ::CMsgTransformOriginData& transition() const;
  ::CMsgTransformOriginData* mutable_transition();
  ::CMsgTransformOriginData* release_transition();
  void set_allocated_transition(::CMsgTransformOriginData* transition);

  // optional .CMsgTransitionData transition_data = 3;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 3;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1015;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsg3DTransformOrigin_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsg3DTransformOrigin)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition();
  inline void clear_has_transition();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgTransformOriginData* base_;
  ::CMsgTransformOriginData* transition_;
  ::CMsgTransitionData* transition_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformOrigin* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformMatrix_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsg3DTransformMatrix_AnimationFrameData();
  virtual ~CMsg3DTransformMatrix_AnimationFrameData();

  CMsg3DTransformMatrix_AnimationFrameData(const CMsg3DTransformMatrix_AnimationFrameData& from);

  inline CMsg3DTransformMatrix_AnimationFrameData& operator=(const CMsg3DTransformMatrix_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformMatrix_AnimationFrameData& default_instance();

  void Swap(CMsg3DTransformMatrix_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformMatrix_AnimationFrameData* New() const { return New(NULL); }

  CMsg3DTransformMatrix_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformMatrix_AnimationFrameData& from);
  void MergeFrom(const CMsg3DTransformMatrix_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformMatrix_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgMatrix4x4 data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgMatrix4x4& data() const;
  ::CMsgMatrix4x4* mutable_data();
  ::CMsgMatrix4x4* release_data();
  void set_allocated_data(::CMsgMatrix4x4* data);

  // @@protoc_insertion_point(class_scope:CMsg3DTransformMatrix.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgMatrix4x4* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformMatrix_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsg3DTransformMatrix : public ::google::protobuf::Message {
 public:
  CMsg3DTransformMatrix();
  virtual ~CMsg3DTransformMatrix();

  CMsg3DTransformMatrix(const CMsg3DTransformMatrix& from);

  inline CMsg3DTransformMatrix& operator=(const CMsg3DTransformMatrix& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg3DTransformMatrix& default_instance();

  void Swap(CMsg3DTransformMatrix* other);

  // implements Message ----------------------------------------------

  inline CMsg3DTransformMatrix* New() const { return New(NULL); }

  CMsg3DTransformMatrix* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg3DTransformMatrix& from);
  void MergeFrom(const CMsg3DTransformMatrix& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg3DTransformMatrix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg3DTransformMatrix_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgMatrix4x4 base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgMatrix4x4& base() const;
  ::CMsgMatrix4x4* mutable_base();
  ::CMsgMatrix4x4* release_base();
  void set_allocated_base(::CMsgMatrix4x4* base);

  // optional .CMsgTransitionData transition_data = 2;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 2;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // optional .CMsgMatrix4x4 transition = 3;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 3;
  const ::CMsgMatrix4x4& transition() const;
  ::CMsgMatrix4x4* mutable_transition();
  ::CMsgMatrix4x4* release_transition();
  void set_allocated_transition(::CMsgMatrix4x4* transition);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1000;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsg3DTransformMatrix_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsg3DTransformMatrix)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();
  inline void set_has_transition();
  inline void clear_has_transition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgMatrix4x4* base_;
  ::CMsgTransitionData* transition_data_;
  ::CMsgMatrix4x4* transition_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsg3DTransformMatrix* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBorderRadius_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgBorderRadius_AnimationFrameData();
  virtual ~CMsgBorderRadius_AnimationFrameData();

  CMsgBorderRadius_AnimationFrameData(const CMsgBorderRadius_AnimationFrameData& from);

  inline CMsgBorderRadius_AnimationFrameData& operator=(const CMsgBorderRadius_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBorderRadius_AnimationFrameData& default_instance();

  void Swap(CMsgBorderRadius_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgBorderRadius_AnimationFrameData* New() const { return New(NULL); }

  CMsgBorderRadius_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBorderRadius_AnimationFrameData& from);
  void MergeFrom(const CMsgBorderRadius_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBorderRadius_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CRadiusData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CRadiusData& data() const;
  ::CRadiusData* mutable_data();
  ::CRadiusData* release_data();
  void set_allocated_data(::CRadiusData* data);

  // @@protoc_insertion_point(class_scope:CMsgBorderRadius.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CRadiusData* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBorderRadius_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBorderRadius : public ::google::protobuf::Message {
 public:
  CMsgBorderRadius();
  virtual ~CMsgBorderRadius();

  CMsgBorderRadius(const CMsgBorderRadius& from);

  inline CMsgBorderRadius& operator=(const CMsgBorderRadius& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBorderRadius& default_instance();

  void Swap(CMsgBorderRadius* other);

  // implements Message ----------------------------------------------

  inline CMsgBorderRadius* New() const { return New(NULL); }

  CMsgBorderRadius* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBorderRadius& from);
  void MergeFrom(const CMsgBorderRadius& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBorderRadius* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgBorderRadius_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CRadiusData base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CRadiusData& base() const;
  ::CRadiusData* mutable_base();
  ::CRadiusData* release_base();
  void set_allocated_base(::CRadiusData* base);

  // optional .CMsgTransitionData transition_data = 2;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 2;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // optional .CRadiusData transition = 3;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 3;
  const ::CRadiusData& transition() const;
  ::CRadiusData* mutable_transition();
  ::CRadiusData* release_transition();
  void set_allocated_transition(::CRadiusData* transition);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1006;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgBorderRadius_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgBorderRadius)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();
  inline void set_has_transition();
  inline void clear_has_transition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CRadiusData* base_;
  ::CMsgTransitionData* transition_data_;
  ::CRadiusData* transition_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBorderRadius* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBorder_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgBorder_AnimationFrameData();
  virtual ~CMsgBorder_AnimationFrameData();

  CMsgBorder_AnimationFrameData(const CMsgBorder_AnimationFrameData& from);

  inline CMsgBorder_AnimationFrameData& operator=(const CMsgBorder_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBorder_AnimationFrameData& default_instance();

  void Swap(CMsgBorder_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgBorder_AnimationFrameData* New() const { return New(NULL); }

  CMsgBorder_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBorder_AnimationFrameData& from);
  void MergeFrom(const CMsgBorder_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBorder_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CBorderData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CBorderData& data() const;
  ::CBorderData* mutable_data();
  ::CBorderData* release_data();
  void set_allocated_data(::CBorderData* data);

  // @@protoc_insertion_point(class_scope:CMsgBorder.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CBorderData* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBorder_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBorder : public ::google::protobuf::Message {
 public:
  CMsgBorder();
  virtual ~CMsgBorder();

  CMsgBorder(const CMsgBorder& from);

  inline CMsgBorder& operator=(const CMsgBorder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBorder& default_instance();

  void Swap(CMsgBorder* other);

  // implements Message ----------------------------------------------

  inline CMsgBorder* New() const { return New(NULL); }

  CMsgBorder* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBorder& from);
  void MergeFrom(const CMsgBorder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBorder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgBorder_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CBorderData base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CBorderData& base() const;
  ::CBorderData* mutable_base();
  ::CBorderData* release_base();
  void set_allocated_base(::CBorderData* base);

  // optional .CMsgTransitionData transition_data = 2;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 2;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // optional .CBorderData transition = 3;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 3;
  const ::CBorderData& transition() const;
  ::CBorderData* mutable_transition();
  ::CBorderData* release_transition();
  void set_allocated_transition(::CBorderData* transition);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1009;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgBorder_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgBorder)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();
  inline void set_has_transition();
  inline void clear_has_transition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CBorderData* base_;
  ::CMsgTransitionData* transition_data_;
  ::CBorderData* transition_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBorder* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBoxShadow_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgBoxShadow_AnimationFrameData();
  virtual ~CMsgBoxShadow_AnimationFrameData();

  CMsgBoxShadow_AnimationFrameData(const CMsgBoxShadow_AnimationFrameData& from);

  inline CMsgBoxShadow_AnimationFrameData& operator=(const CMsgBoxShadow_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBoxShadow_AnimationFrameData& default_instance();

  void Swap(CMsgBoxShadow_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgBoxShadow_AnimationFrameData* New() const { return New(NULL); }

  CMsgBoxShadow_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBoxShadow_AnimationFrameData& from);
  void MergeFrom(const CMsgBoxShadow_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBoxShadow_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CBoxShadowData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CBoxShadowData& data() const;
  ::CBoxShadowData* mutable_data();
  ::CBoxShadowData* release_data();
  void set_allocated_data(::CBoxShadowData* data);

  // @@protoc_insertion_point(class_scope:CMsgBoxShadow.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CBoxShadowData* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBoxShadow_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBoxShadow : public ::google::protobuf::Message {
 public:
  CMsgBoxShadow();
  virtual ~CMsgBoxShadow();

  CMsgBoxShadow(const CMsgBoxShadow& from);

  inline CMsgBoxShadow& operator=(const CMsgBoxShadow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBoxShadow& default_instance();

  void Swap(CMsgBoxShadow* other);

  // implements Message ----------------------------------------------

  inline CMsgBoxShadow* New() const { return New(NULL); }

  CMsgBoxShadow* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBoxShadow& from);
  void MergeFrom(const CMsgBoxShadow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBoxShadow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgBoxShadow_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CBoxShadowData base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CBoxShadowData& base() const;
  ::CBoxShadowData* mutable_base();
  ::CBoxShadowData* release_base();
  void set_allocated_base(::CBoxShadowData* base);

  // optional .CMsgTransitionData transition_data = 2;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 2;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // optional .CBoxShadowData transition = 3;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 3;
  const ::CBoxShadowData& transition() const;
  ::CBoxShadowData* mutable_transition();
  ::CBoxShadowData* release_transition();
  void set_allocated_transition(::CBoxShadowData* transition);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1010;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgBoxShadow_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgBoxShadow)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();
  inline void set_has_transition();
  inline void clear_has_transition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CBoxShadowData* base_;
  ::CMsgTransitionData* transition_data_;
  ::CBoxShadowData* transition_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBoxShadow* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTextShadow_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgTextShadow_AnimationFrameData();
  virtual ~CMsgTextShadow_AnimationFrameData();

  CMsgTextShadow_AnimationFrameData(const CMsgTextShadow_AnimationFrameData& from);

  inline CMsgTextShadow_AnimationFrameData& operator=(const CMsgTextShadow_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTextShadow_AnimationFrameData& default_instance();

  void Swap(CMsgTextShadow_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgTextShadow_AnimationFrameData* New() const { return New(NULL); }

  CMsgTextShadow_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTextShadow_AnimationFrameData& from);
  void MergeFrom(const CMsgTextShadow_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTextShadow_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CTextShadowData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CTextShadowData& data() const;
  ::CTextShadowData* mutable_data();
  ::CTextShadowData* release_data();
  void set_allocated_data(::CTextShadowData* data);

  // @@protoc_insertion_point(class_scope:CMsgTextShadow.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CTextShadowData* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTextShadow_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTextShadow : public ::google::protobuf::Message {
 public:
  CMsgTextShadow();
  virtual ~CMsgTextShadow();

  CMsgTextShadow(const CMsgTextShadow& from);

  inline CMsgTextShadow& operator=(const CMsgTextShadow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTextShadow& default_instance();

  void Swap(CMsgTextShadow* other);

  // implements Message ----------------------------------------------

  inline CMsgTextShadow* New() const { return New(NULL); }

  CMsgTextShadow* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTextShadow& from);
  void MergeFrom(const CMsgTextShadow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTextShadow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTextShadow_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CTextShadowData base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CTextShadowData& base() const;
  ::CTextShadowData* mutable_base();
  ::CTextShadowData* release_base();
  void set_allocated_base(::CTextShadowData* base);

  // optional .CMsgTransitionData transition_data = 2;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 2;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // optional .CTextShadowData transition = 3;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 3;
  const ::CTextShadowData& transition() const;
  ::CTextShadowData* mutable_transition();
  ::CTextShadowData* release_transition();
  void set_allocated_transition(::CTextShadowData* transition);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1017;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgTextShadow_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgTextShadow)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();
  inline void set_has_transition();
  inline void clear_has_transition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CTextShadowData* base_;
  ::CMsgTransitionData* transition_data_;
  ::CTextShadowData* transition_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTextShadow* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClip_AnimationFrameData : public ::google::protobuf::Message {
 public:
  CMsgClip_AnimationFrameData();
  virtual ~CMsgClip_AnimationFrameData();

  CMsgClip_AnimationFrameData(const CMsgClip_AnimationFrameData& from);

  inline CMsgClip_AnimationFrameData& operator=(const CMsgClip_AnimationFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClip_AnimationFrameData& default_instance();

  void Swap(CMsgClip_AnimationFrameData* other);

  // implements Message ----------------------------------------------

  inline CMsgClip_AnimationFrameData* New() const { return New(NULL); }

  CMsgClip_AnimationFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClip_AnimationFrameData& from);
  void MergeFrom(const CMsgClip_AnimationFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgClip_AnimationFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgClipData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::CMsgClipData& data() const;
  ::CMsgClipData* mutable_data();
  ::CMsgClipData* release_data();
  void set_allocated_data(::CMsgClipData* data);

  // @@protoc_insertion_point(class_scope:CMsgClip.AnimationFrameData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgClipData* data_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgClip_AnimationFrameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClip : public ::google::protobuf::Message {
 public:
  CMsgClip();
  virtual ~CMsgClip();

  CMsgClip(const CMsgClip& from);

  inline CMsgClip& operator=(const CMsgClip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClip& default_instance();

  void Swap(CMsgClip* other);

  // implements Message ----------------------------------------------

  inline CMsgClip* New() const { return New(NULL); }

  CMsgClip* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClip& from);
  void MergeFrom(const CMsgClip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgClip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClip_AnimationFrameData AnimationFrameData;

  // accessors -------------------------------------------------------

  // optional .CMsgClipData base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::CMsgClipData& base() const;
  ::CMsgClipData* mutable_base();
  ::CMsgClipData* release_base();
  void set_allocated_base(::CMsgClipData* base);

  // optional .CMsgTransitionData transition_data = 2;
  bool has_transition_data() const;
  void clear_transition_data();
  static const int kTransitionDataFieldNumber = 2;
  const ::CMsgTransitionData& transition_data() const;
  ::CMsgTransitionData* mutable_transition_data();
  ::CMsgTransitionData* release_transition_data();
  void set_allocated_transition_data(::CMsgTransitionData* transition_data);

  // optional .CMsgClipData transition = 3;
  bool has_transition() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 3;
  const ::CMsgClipData& transition() const;
  ::CMsgClipData* mutable_transition();
  ::CMsgClipData* release_transition();
  void set_allocated_transition(::CMsgClipData* transition);

  // repeated .CMsgAnimationData animations = 4;
  int animations_size() const;
  void clear_animations();
  static const int kAnimationsFieldNumber = 4;
  const ::CMsgAnimationData& animations(int index) const;
  ::CMsgAnimationData* mutable_animations(int index);
  ::CMsgAnimationData* add_animations();
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
      mutable_animations();
  const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
      animations() const;

  static const int kAnimationFrameDataFieldNumber = 1018;
  static ::google::protobuf::internal::ExtensionIdentifier< ::CMsgAnimationFrameData,
      ::google::protobuf::internal::MessageTypeTraits< ::CMsgClip_AnimationFrameData >, 11, false >
    animation_frame_data;
  // @@protoc_insertion_point(class_scope:CMsgClip)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_transition_data();
  inline void clear_has_transition_data();
  inline void set_has_transition();
  inline void clear_has_transition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgClipData* base_;
  ::CMsgTransitionData* transition_data_;
  ::CMsgClipData* transition_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData > animations_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgClip* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPushClipLayer : public ::google::protobuf::Message {
 public:
  CMsgPushClipLayer();
  virtual ~CMsgPushClipLayer();

  CMsgPushClipLayer(const CMsgPushClipLayer& from);

  inline CMsgPushClipLayer& operator=(const CMsgPushClipLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPushClipLayer& default_instance();

  void Swap(CMsgPushClipLayer* other);

  // implements Message ----------------------------------------------

  inline CMsgPushClipLayer* New() const { return New(NULL); }

  CMsgPushClipLayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPushClipLayer& from);
  void MergeFrom(const CMsgPushClipLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPushClipLayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 2;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 2;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional .CRadiusData border_radius = 3;
  bool has_border_radius() const;
  void clear_border_radius();
  static const int kBorderRadiusFieldNumber = 3;
  const ::CRadiusData& border_radius() const;
  ::CRadiusData* mutable_border_radius();
  ::CRadiusData* release_border_radius();
  void set_allocated_border_radius(::CRadiusData* border_radius);

  // @@protoc_insertion_point(class_scope:CMsgPushClipLayer)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_border_radius();
  inline void clear_has_border_radius();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CRadiusData* border_radius_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPushClipLayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPopClipLayer : public ::google::protobuf::Message {
 public:
  CMsgPopClipLayer();
  virtual ~CMsgPopClipLayer();

  CMsgPopClipLayer(const CMsgPopClipLayer& from);

  inline CMsgPopClipLayer& operator=(const CMsgPopClipLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPopClipLayer& default_instance();

  void Swap(CMsgPopClipLayer* other);

  // implements Message ----------------------------------------------

  inline CMsgPopClipLayer* New() const { return New(NULL); }

  CMsgPopClipLayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPopClipLayer& from);
  void MergeFrom(const CMsgPopClipLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPopClipLayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPopClipLayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPopClipLayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPushAAndTContext : public ::google::protobuf::Message {
 public:
  CMsgPushAAndTContext();
  virtual ~CMsgPushAAndTContext();

  CMsgPushAAndTContext(const CMsgPushAAndTContext& from);

  inline CMsgPushAAndTContext& operator=(const CMsgPushAAndTContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPushAAndTContext& default_instance();

  void Swap(CMsgPushAAndTContext* other);

  // implements Message ----------------------------------------------

  inline CMsgPushAAndTContext* New() const { return New(NULL); }

  CMsgPushAAndTContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPushAAndTContext& from);
  void MergeFrom(const CMsgPushAAndTContext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPushAAndTContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 context_id = 1;
  bool has_context_id() const;
  void clear_context_id();
  static const int kContextIdFieldNumber = 1;
  ::google::protobuf::uint64 context_id() const;
  void set_context_id(::google::protobuf::uint64 value);

  // optional double width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  double width() const;
  void set_width(double value);

  // optional double height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  double height() const;
  void set_height(double value);

  // optional bool chilren_have_3dtransforms = 5;
  bool has_chilren_have_3dtransforms() const;
  void clear_chilren_have_3dtransforms();
  static const int kChilrenHave3DtransformsFieldNumber = 5;
  bool chilren_have_3dtransforms() const;
  void set_chilren_have_3dtransforms(bool value);

  // optional float zindex = 6;
  bool has_zindex() const;
  void clear_zindex();
  static const int kZindexFieldNumber = 6;
  float zindex() const;
  void set_zindex(float value);

  // optional .CMsgPanelPosition panel_position = 7;
  bool has_panel_position() const;
  void clear_panel_position();
  static const int kPanelPositionFieldNumber = 7;
  const ::CMsgPanelPosition& panel_position() const;
  ::CMsgPanelPosition* mutable_panel_position();
  ::CMsgPanelPosition* release_panel_position();
  void set_allocated_panel_position(::CMsgPanelPosition* panel_position);

  // optional .CMsg3DTransformMatrix transform_matrix = 8;
  bool has_transform_matrix() const;
  void clear_transform_matrix();
  static const int kTransformMatrixFieldNumber = 8;
  const ::CMsg3DTransformMatrix& transform_matrix() const;
  ::CMsg3DTransformMatrix* mutable_transform_matrix();
  ::CMsg3DTransformMatrix* release_transform_matrix();
  void set_allocated_transform_matrix(::CMsg3DTransformMatrix* transform_matrix);

  // optional .CMsg3DTransformOrigin transform_origin = 9;
  bool has_transform_origin() const;
  void clear_transform_origin();
  static const int kTransformOriginFieldNumber = 9;
  const ::CMsg3DTransformOrigin& transform_origin() const;
  ::CMsg3DTransformOrigin* mutable_transform_origin();
  ::CMsg3DTransformOrigin* release_transform_origin();
  void set_allocated_transform_origin(::CMsg3DTransformOrigin* transform_origin);

  // optional .CMsg3DTransformPerspective transform_perspective = 10;
  bool has_transform_perspective() const;
  void clear_transform_perspective();
  static const int kTransformPerspectiveFieldNumber = 10;
  const ::CMsg3DTransformPerspective& transform_perspective() const;
  ::CMsg3DTransformPerspective* mutable_transform_perspective();
  ::CMsg3DTransformPerspective* release_transform_perspective();
  void set_allocated_transform_perspective(::CMsg3DTransformPerspective* transform_perspective);

  // optional .CMsg3DTransformPerspectiveOrigin transform_perspective_origin = 11;
  bool has_transform_perspective_origin() const;
  void clear_transform_perspective_origin();
  static const int kTransformPerspectiveOriginFieldNumber = 11;
  const ::CMsg3DTransformPerspectiveOrigin& transform_perspective_origin() const;
  ::CMsg3DTransformPerspectiveOrigin* mutable_transform_perspective_origin();
  ::CMsg3DTransformPerspectiveOrigin* release_transform_perspective_origin();
  void set_allocated_transform_perspective_origin(::CMsg3DTransformPerspectiveOrigin* transform_perspective_origin);

  // optional .CMsgOpacity opacity = 12;
  bool has_opacity() const;
  void clear_opacity();
  static const int kOpacityFieldNumber = 12;
  const ::CMsgOpacity& opacity() const;
  ::CMsgOpacity* mutable_opacity();
  ::CMsgOpacity* release_opacity();
  void set_allocated_opacity(::CMsgOpacity* opacity);

  // optional .CMsgColor wash_color = 13;
  bool has_wash_color() const;
  void clear_wash_color();
  static const int kWashColorFieldNumber = 13;
  const ::CMsgColor& wash_color() const;
  ::CMsgColor* mutable_wash_color();
  ::CMsgColor* release_wash_color();
  void set_allocated_wash_color(::CMsgColor* wash_color);

  // optional .CMsgHueShift hue_shift = 14;
  bool has_hue_shift() const;
  void clear_hue_shift();
  static const int kHueShiftFieldNumber = 14;
  const ::CMsgHueShift& hue_shift() const;
  ::CMsgHueShift* mutable_hue_shift();
  ::CMsgHueShift* release_hue_shift();
  void set_allocated_hue_shift(::CMsgHueShift* hue_shift);

  // optional .CMsgSaturation saturation = 15;
  bool has_saturation() const;
  void clear_saturation();
  static const int kSaturationFieldNumber = 15;
  const ::CMsgSaturation& saturation() const;
  ::CMsgSaturation* mutable_saturation();
  ::CMsgSaturation* release_saturation();
  void set_allocated_saturation(::CMsgSaturation* saturation);

  // optional .CMsgBrightness brightness = 16;
  bool has_brightness() const;
  void clear_brightness();
  static const int kBrightnessFieldNumber = 16;
  const ::CMsgBrightness& brightness() const;
  ::CMsgBrightness* mutable_brightness();
  ::CMsgBrightness* release_brightness();
  void set_allocated_brightness(::CMsgBrightness* brightness);

  // optional .CMsgContrast contrast = 17;
  bool has_contrast() const;
  void clear_contrast();
  static const int kContrastFieldNumber = 17;
  const ::CMsgContrast& contrast() const;
  ::CMsgContrast* mutable_contrast();
  ::CMsgContrast* release_contrast();
  void set_allocated_contrast(::CMsgContrast* contrast);

  // optional .CMsgOpacityMask opacity_mask = 18;
  bool has_opacity_mask() const;
  void clear_opacity_mask();
  static const int kOpacityMaskFieldNumber = 18;
  const ::CMsgOpacityMask& opacity_mask() const;
  ::CMsgOpacityMask* mutable_opacity_mask();
  ::CMsgOpacityMask* release_opacity_mask();
  void set_allocated_opacity_mask(::CMsgOpacityMask* opacity_mask);

  // optional .CMsgBorderRadius border_radius = 19;
  bool has_border_radius() const;
  void clear_border_radius();
  static const int kBorderRadiusFieldNumber = 19;
  const ::CMsgBorderRadius& border_radius() const;
  ::CMsgBorderRadius* mutable_border_radius();
  ::CMsgBorderRadius* release_border_radius();
  void set_allocated_border_radius(::CMsgBorderRadius* border_radius);

  // optional .CMsgGaussianBlur gaussian_blur = 20;
  bool has_gaussian_blur() const;
  void clear_gaussian_blur();
  static const int kGaussianBlurFieldNumber = 20;
  const ::CMsgGaussianBlur& gaussian_blur() const;
  ::CMsgGaussianBlur* mutable_gaussian_blur();
  ::CMsgGaussianBlur* release_gaussian_blur();
  void set_allocated_gaussian_blur(::CMsgGaussianBlur* gaussian_blur);

  // optional .CMsgBorder border = 21;
  bool has_border() const;
  void clear_border();
  static const int kBorderFieldNumber = 21;
  const ::CMsgBorder& border() const;
  ::CMsgBorder* mutable_border();
  ::CMsgBorder* release_border();
  void set_allocated_border(::CMsgBorder* border);

  // optional .CMsgBoxShadow box_shadow = 22;
  bool has_box_shadow() const;
  void clear_box_shadow();
  static const int kBoxShadowFieldNumber = 22;
  const ::CMsgBoxShadow& box_shadow() const;
  ::CMsgBoxShadow* mutable_box_shadow();
  ::CMsgBoxShadow* release_box_shadow();
  void set_allocated_box_shadow(::CMsgBoxShadow* box_shadow);

  // optional .CMsgPointWithTransition scale_2d_centered = 23;
  bool has_scale_2d_centered() const;
  void clear_scale_2d_centered();
  static const int kScale2DCenteredFieldNumber = 23;
  const ::CMsgPointWithTransition& scale_2d_centered() const;
  ::CMsgPointWithTransition* mutable_scale_2d_centered();
  ::CMsgPointWithTransition* release_scale_2d_centered();
  void set_allocated_scale_2d_centered(::CMsgPointWithTransition* scale_2d_centered);

  // optional .CMsgRotate2D rotate_2d_centered = 24;
  bool has_rotate_2d_centered() const;
  void clear_rotate_2d_centered();
  static const int kRotate2DCenteredFieldNumber = 24;
  const ::CMsgRotate2D& rotate_2d_centered() const;
  ::CMsgRotate2D* mutable_rotate_2d_centered();
  ::CMsgRotate2D* release_rotate_2d_centered();
  void set_allocated_rotate_2d_centered(::CMsgRotate2D* rotate_2d_centered);

  // optional .CMsgTextShadow text_shadow = 25;
  bool has_text_shadow() const;
  void clear_text_shadow();
  static const int kTextShadowFieldNumber = 25;
  const ::CMsgTextShadow& text_shadow() const;
  ::CMsgTextShadow* mutable_text_shadow();
  ::CMsgTextShadow* release_text_shadow();
  void set_allocated_text_shadow(::CMsgTextShadow* text_shadow);

  // optional .CMsgClip clip = 26;
  bool has_clip() const;
  void clear_clip();
  static const int kClipFieldNumber = 26;
  const ::CMsgClip& clip() const;
  ::CMsgClip* mutable_clip();
  ::CMsgClip* release_clip();
  void set_allocated_clip(::CMsgClip* clip);

  // optional bool suppress_clip_to_bounds = 27;
  bool has_suppress_clip_to_bounds() const;
  void clear_suppress_clip_to_bounds();
  static const int kSuppressClipToBoundsFieldNumber = 27;
  bool suppress_clip_to_bounds() const;
  void set_suppress_clip_to_bounds(bool value);

  // optional int32 needs_full_repaint = 28;
  bool has_needs_full_repaint() const;
  void clear_needs_full_repaint();
  static const int kNeedsFullRepaintFieldNumber = 28;
  ::google::protobuf::int32 needs_full_repaint() const;
  void set_needs_full_repaint(::google::protobuf::int32 value);

  // optional bool wants_hit_test = 29;
  bool has_wants_hit_test() const;
  void clear_wants_hit_test();
  static const int kWantsHitTestFieldNumber = 29;
  bool wants_hit_test() const;
  void set_wants_hit_test(bool value);

  // optional uint32 mix_blend_mode = 30;
  bool has_mix_blend_mode() const;
  void clear_mix_blend_mode();
  static const int kMixBlendModeFieldNumber = 30;
  ::google::protobuf::uint32 mix_blend_mode() const;
  void set_mix_blend_mode(::google::protobuf::uint32 value);

  // optional bool opaque_background = 31;
  bool has_opaque_background() const;
  void clear_opaque_background();
  static const int kOpaqueBackgroundFieldNumber = 31;
  bool opaque_background() const;
  void set_opaque_background(bool value);

  // @@protoc_insertion_point(class_scope:CMsgPushAAndTContext)
 private:
  inline void set_has_context_id();
  inline void clear_has_context_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_chilren_have_3dtransforms();
  inline void clear_has_chilren_have_3dtransforms();
  inline void set_has_zindex();
  inline void clear_has_zindex();
  inline void set_has_panel_position();
  inline void clear_has_panel_position();
  inline void set_has_transform_matrix();
  inline void clear_has_transform_matrix();
  inline void set_has_transform_origin();
  inline void clear_has_transform_origin();
  inline void set_has_transform_perspective();
  inline void clear_has_transform_perspective();
  inline void set_has_transform_perspective_origin();
  inline void clear_has_transform_perspective_origin();
  inline void set_has_opacity();
  inline void clear_has_opacity();
  inline void set_has_wash_color();
  inline void clear_has_wash_color();
  inline void set_has_hue_shift();
  inline void clear_has_hue_shift();
  inline void set_has_saturation();
  inline void clear_has_saturation();
  inline void set_has_brightness();
  inline void clear_has_brightness();
  inline void set_has_contrast();
  inline void clear_has_contrast();
  inline void set_has_opacity_mask();
  inline void clear_has_opacity_mask();
  inline void set_has_border_radius();
  inline void clear_has_border_radius();
  inline void set_has_gaussian_blur();
  inline void clear_has_gaussian_blur();
  inline void set_has_border();
  inline void clear_has_border();
  inline void set_has_box_shadow();
  inline void clear_has_box_shadow();
  inline void set_has_scale_2d_centered();
  inline void clear_has_scale_2d_centered();
  inline void set_has_rotate_2d_centered();
  inline void clear_has_rotate_2d_centered();
  inline void set_has_text_shadow();
  inline void clear_has_text_shadow();
  inline void set_has_clip();
  inline void clear_has_clip();
  inline void set_has_suppress_clip_to_bounds();
  inline void clear_has_suppress_clip_to_bounds();
  inline void set_has_needs_full_repaint();
  inline void clear_has_needs_full_repaint();
  inline void set_has_wants_hit_test();
  inline void clear_has_wants_hit_test();
  inline void set_has_mix_blend_mode();
  inline void clear_has_mix_blend_mode();
  inline void set_has_opaque_background();
  inline void clear_has_opaque_background();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 context_id_;
  double width_;
  double height_;
  ::CMsgPanelPosition* panel_position_;
  ::CMsg3DTransformMatrix* transform_matrix_;
  ::CMsg3DTransformOrigin* transform_origin_;
  ::CMsg3DTransformPerspective* transform_perspective_;
  ::CMsg3DTransformPerspectiveOrigin* transform_perspective_origin_;
  ::CMsgOpacity* opacity_;
  ::CMsgColor* wash_color_;
  ::CMsgHueShift* hue_shift_;
  ::CMsgSaturation* saturation_;
  ::CMsgBrightness* brightness_;
  ::CMsgContrast* contrast_;
  ::CMsgOpacityMask* opacity_mask_;
  ::CMsgBorderRadius* border_radius_;
  float zindex_;
  bool chilren_have_3dtransforms_;
  bool suppress_clip_to_bounds_;
  bool wants_hit_test_;
  bool opaque_background_;
  ::CMsgGaussianBlur* gaussian_blur_;
  ::CMsgBorder* border_;
  ::CMsgBoxShadow* box_shadow_;
  ::CMsgPointWithTransition* scale_2d_centered_;
  ::CMsgRotate2D* rotate_2d_centered_;
  ::CMsgTextShadow* text_shadow_;
  ::CMsgClip* clip_;
  ::google::protobuf::int32 needs_full_repaint_;
  ::google::protobuf::uint32 mix_blend_mode_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPushAAndTContext* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPopAAndTContext : public ::google::protobuf::Message {
 public:
  CMsgPopAAndTContext();
  virtual ~CMsgPopAAndTContext();

  CMsgPopAAndTContext(const CMsgPopAAndTContext& from);

  inline CMsgPopAAndTContext& operator=(const CMsgPopAAndTContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPopAAndTContext& default_instance();

  void Swap(CMsgPopAAndTContext* other);

  // implements Message ----------------------------------------------

  inline CMsgPopAAndTContext* New() const { return New(NULL); }

  CMsgPopAAndTContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPopAAndTContext& from);
  void MergeFrom(const CMsgPopAAndTContext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPopAAndTContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 context_id = 1;
  bool has_context_id() const;
  void clear_context_id();
  static const int kContextIdFieldNumber = 1;
  ::google::protobuf::uint64 context_id() const;
  void set_context_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPopAAndTContext)
 private:
  inline void set_has_context_id();
  inline void clear_has_context_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 context_id_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPopAAndTContext* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBeginPaintBackground : public ::google::protobuf::Message {
 public:
  CMsgBeginPaintBackground();
  virtual ~CMsgBeginPaintBackground();

  CMsgBeginPaintBackground(const CMsgBeginPaintBackground& from);

  inline CMsgBeginPaintBackground& operator=(const CMsgBeginPaintBackground& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBeginPaintBackground& default_instance();

  void Swap(CMsgBeginPaintBackground* other);

  // implements Message ----------------------------------------------

  inline CMsgBeginPaintBackground* New() const { return New(NULL); }

  CMsgBeginPaintBackground* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBeginPaintBackground& from);
  void MergeFrom(const CMsgBeginPaintBackground& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBeginPaintBackground* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgBeginPaintBackground)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBeginPaintBackground* default_instance_;
};
// -------------------------------------------------------------------

class CMsgEndPaintBackground : public ::google::protobuf::Message {
 public:
  CMsgEndPaintBackground();
  virtual ~CMsgEndPaintBackground();

  CMsgEndPaintBackground(const CMsgEndPaintBackground& from);

  inline CMsgEndPaintBackground& operator=(const CMsgEndPaintBackground& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEndPaintBackground& default_instance();

  void Swap(CMsgEndPaintBackground* other);

  // implements Message ----------------------------------------------

  inline CMsgEndPaintBackground* New() const { return New(NULL); }

  CMsgEndPaintBackground* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgEndPaintBackground& from);
  void MergeFrom(const CMsgEndPaintBackground& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgEndPaintBackground* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgEndPaintBackground)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgEndPaintBackground* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBeginPaintLast : public ::google::protobuf::Message {
 public:
  CMsgBeginPaintLast();
  virtual ~CMsgBeginPaintLast();

  CMsgBeginPaintLast(const CMsgBeginPaintLast& from);

  inline CMsgBeginPaintLast& operator=(const CMsgBeginPaintLast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBeginPaintLast& default_instance();

  void Swap(CMsgBeginPaintLast* other);

  // implements Message ----------------------------------------------

  inline CMsgBeginPaintLast* New() const { return New(NULL); }

  CMsgBeginPaintLast* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBeginPaintLast& from);
  void MergeFrom(const CMsgBeginPaintLast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgBeginPaintLast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgBeginPaintLast)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgBeginPaintLast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgEndPaintLast : public ::google::protobuf::Message {
 public:
  CMsgEndPaintLast();
  virtual ~CMsgEndPaintLast();

  CMsgEndPaintLast(const CMsgEndPaintLast& from);

  inline CMsgEndPaintLast& operator=(const CMsgEndPaintLast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEndPaintLast& default_instance();

  void Swap(CMsgEndPaintLast* other);

  // implements Message ----------------------------------------------

  inline CMsgEndPaintLast* New() const { return New(NULL); }

  CMsgEndPaintLast* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgEndPaintLast& from);
  void MergeFrom(const CMsgEndPaintLast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgEndPaintLast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgEndPaintLast)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgEndPaintLast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDrawFilledRect : public ::google::protobuf::Message {
 public:
  CMsgDrawFilledRect();
  virtual ~CMsgDrawFilledRect();

  CMsgDrawFilledRect(const CMsgDrawFilledRect& from);

  inline CMsgDrawFilledRect& operator=(const CMsgDrawFilledRect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDrawFilledRect& default_instance();

  void Swap(CMsgDrawFilledRect* other);

  // implements Message ----------------------------------------------

  inline CMsgDrawFilledRect* New() const { return New(NULL); }

  CMsgDrawFilledRect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDrawFilledRect& from);
  void MergeFrom(const CMsgDrawFilledRect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDrawFilledRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 2;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 2;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional .CMsgFillBrushCollection fill_brush_collection = 3;
  bool has_fill_brush_collection() const;
  void clear_fill_brush_collection();
  static const int kFillBrushCollectionFieldNumber = 3;
  const ::CMsgFillBrushCollection& fill_brush_collection() const;
  ::CMsgFillBrushCollection* mutable_fill_brush_collection();
  ::CMsgFillBrushCollection* release_fill_brush_collection();
  void set_allocated_fill_brush_collection(::CMsgFillBrushCollection* fill_brush_collection);

  // optional uint32 antialiasing = 4;
  bool has_antialiasing() const;
  void clear_antialiasing();
  static const int kAntialiasingFieldNumber = 4;
  ::google::protobuf::uint32 antialiasing() const;
  void set_antialiasing(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDrawFilledRect)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_fill_brush_collection();
  inline void clear_has_fill_brush_collection();
  inline void set_has_antialiasing();
  inline void clear_has_antialiasing();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CMsgFillBrushCollection* fill_brush_collection_;
  ::google::protobuf::uint32 antialiasing_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDrawFilledRect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenderFilledRect : public ::google::protobuf::Message {
 public:
  CMsgRenderFilledRect();
  virtual ~CMsgRenderFilledRect();

  CMsgRenderFilledRect(const CMsgRenderFilledRect& from);

  inline CMsgRenderFilledRect& operator=(const CMsgRenderFilledRect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenderFilledRect& default_instance();

  void Swap(CMsgRenderFilledRect* other);

  // implements Message ----------------------------------------------

  inline CMsgRenderFilledRect* New() const { return New(NULL); }

  CMsgRenderFilledRect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenderFilledRect& from);
  void MergeFrom(const CMsgRenderFilledRect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRenderFilledRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 2;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 2;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional .CMsgRenderFillBrushCollection fill_brush_collection = 3;
  bool has_fill_brush_collection() const;
  void clear_fill_brush_collection();
  static const int kFillBrushCollectionFieldNumber = 3;
  const ::CMsgRenderFillBrushCollection& fill_brush_collection() const;
  ::CMsgRenderFillBrushCollection* mutable_fill_brush_collection();
  ::CMsgRenderFillBrushCollection* release_fill_brush_collection();
  void set_allocated_fill_brush_collection(::CMsgRenderFillBrushCollection* fill_brush_collection);

  // optional uint32 antialiasing = 4;
  bool has_antialiasing() const;
  void clear_antialiasing();
  static const int kAntialiasingFieldNumber = 4;
  ::google::protobuf::uint32 antialiasing() const;
  void set_antialiasing(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRenderFilledRect)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_fill_brush_collection();
  inline void clear_has_fill_brush_collection();
  inline void set_has_antialiasing();
  inline void clear_has_antialiasing();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CMsgRenderFillBrushCollection* fill_brush_collection_;
  ::google::protobuf::uint32 antialiasing_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenderFilledRect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDrawTexturedRect : public ::google::protobuf::Message {
 public:
  CMsgDrawTexturedRect();
  virtual ~CMsgDrawTexturedRect();

  CMsgDrawTexturedRect(const CMsgDrawTexturedRect& from);

  inline CMsgDrawTexturedRect& operator=(const CMsgDrawTexturedRect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDrawTexturedRect& default_instance();

  void Swap(CMsgDrawTexturedRect* other);

  // implements Message ----------------------------------------------

  inline CMsgDrawTexturedRect* New() const { return New(NULL); }

  CMsgDrawTexturedRect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDrawTexturedRect& from);
  void MergeFrom(const CMsgDrawTexturedRect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDrawTexturedRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 2;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 2;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional uint32 texture_id = 3;
  bool has_texture_id() const;
  void clear_texture_id();
  static const int kTextureIdFieldNumber = 3;
  ::google::protobuf::uint32 texture_id() const;
  void set_texture_id(::google::protobuf::uint32 value);

  // optional .CMsgPoint texture_top_left = 4;
  bool has_texture_top_left() const;
  void clear_texture_top_left();
  static const int kTextureTopLeftFieldNumber = 4;
  const ::CMsgPoint& texture_top_left() const;
  ::CMsgPoint* mutable_texture_top_left();
  ::CMsgPoint* release_texture_top_left();
  void set_allocated_texture_top_left(::CMsgPoint* texture_top_left);

  // optional .CMsgPoint texture_bottom_right = 5;
  bool has_texture_bottom_right() const;
  void clear_texture_bottom_right();
  static const int kTextureBottomRightFieldNumber = 5;
  const ::CMsgPoint& texture_bottom_right() const;
  ::CMsgPoint* mutable_texture_bottom_right();
  ::CMsgPoint* release_texture_bottom_right();
  void set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right);

  // optional int32 texture_serial = 6 [default = 0];
  bool has_texture_serial() const;
  void clear_texture_serial();
  static const int kTextureSerialFieldNumber = 6;
  ::google::protobuf::int32 texture_serial() const;
  void set_texture_serial(::google::protobuf::int32 value);

  // optional uint32 texture_sample_mode = 7 [default = 0];
  bool has_texture_sample_mode() const;
  void clear_texture_sample_mode();
  static const int kTextureSampleModeFieldNumber = 7;
  ::google::protobuf::uint32 texture_sample_mode() const;
  void set_texture_sample_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDrawTexturedRect)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_texture_id();
  inline void clear_has_texture_id();
  inline void set_has_texture_top_left();
  inline void clear_has_texture_top_left();
  inline void set_has_texture_bottom_right();
  inline void clear_has_texture_bottom_right();
  inline void set_has_texture_serial();
  inline void clear_has_texture_serial();
  inline void set_has_texture_sample_mode();
  inline void clear_has_texture_sample_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CMsgPoint* texture_top_left_;
  ::google::protobuf::uint32 texture_id_;
  ::google::protobuf::int32 texture_serial_;
  ::CMsgPoint* texture_bottom_right_;
  ::google::protobuf::uint32 texture_sample_mode_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDrawTexturedRect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDrawDoubleBufferedRect : public ::google::protobuf::Message {
 public:
  CMsgDrawDoubleBufferedRect();
  virtual ~CMsgDrawDoubleBufferedRect();

  CMsgDrawDoubleBufferedRect(const CMsgDrawDoubleBufferedRect& from);

  inline CMsgDrawDoubleBufferedRect& operator=(const CMsgDrawDoubleBufferedRect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDrawDoubleBufferedRect& default_instance();

  void Swap(CMsgDrawDoubleBufferedRect* other);

  // implements Message ----------------------------------------------

  inline CMsgDrawDoubleBufferedRect* New() const { return New(NULL); }

  CMsgDrawDoubleBufferedRect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDrawDoubleBufferedRect& from);
  void MergeFrom(const CMsgDrawDoubleBufferedRect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDrawDoubleBufferedRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 2;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 2;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional uint32 texture_id = 3;
  bool has_texture_id() const;
  void clear_texture_id();
  static const int kTextureIdFieldNumber = 3;
  ::google::protobuf::uint32 texture_id() const;
  void set_texture_id(::google::protobuf::uint32 value);

  // optional .CMsgPoint texture_top_left = 4;
  bool has_texture_top_left() const;
  void clear_texture_top_left();
  static const int kTextureTopLeftFieldNumber = 4;
  const ::CMsgPoint& texture_top_left() const;
  ::CMsgPoint* mutable_texture_top_left();
  ::CMsgPoint* release_texture_top_left();
  void set_allocated_texture_top_left(::CMsgPoint* texture_top_left);

  // optional .CMsgPoint texture_bottom_right = 5;
  bool has_texture_bottom_right() const;
  void clear_texture_bottom_right();
  static const int kTextureBottomRightFieldNumber = 5;
  const ::CMsgPoint& texture_bottom_right() const;
  ::CMsgPoint* mutable_texture_bottom_right();
  ::CMsgPoint* release_texture_bottom_right();
  void set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right);

  // @@protoc_insertion_point(class_scope:CMsgDrawDoubleBufferedRect)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_texture_id();
  inline void clear_has_texture_id();
  inline void set_has_texture_top_left();
  inline void clear_has_texture_top_left();
  inline void set_has_texture_bottom_right();
  inline void clear_has_texture_bottom_right();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CMsgPoint* texture_top_left_;
  ::CMsgPoint* texture_bottom_right_;
  ::google::protobuf::uint32 texture_id_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDrawDoubleBufferedRect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDrawYUV420DoubleBufferedRect : public ::google::protobuf::Message {
 public:
  CMsgDrawYUV420DoubleBufferedRect();
  virtual ~CMsgDrawYUV420DoubleBufferedRect();

  CMsgDrawYUV420DoubleBufferedRect(const CMsgDrawYUV420DoubleBufferedRect& from);

  inline CMsgDrawYUV420DoubleBufferedRect& operator=(const CMsgDrawYUV420DoubleBufferedRect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDrawYUV420DoubleBufferedRect& default_instance();

  void Swap(CMsgDrawYUV420DoubleBufferedRect* other);

  // implements Message ----------------------------------------------

  inline CMsgDrawYUV420DoubleBufferedRect* New() const { return New(NULL); }

  CMsgDrawYUV420DoubleBufferedRect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDrawYUV420DoubleBufferedRect& from);
  void MergeFrom(const CMsgDrawYUV420DoubleBufferedRect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDrawYUV420DoubleBufferedRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 2;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 2;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional uint32 texture_id = 3;
  bool has_texture_id() const;
  void clear_texture_id();
  static const int kTextureIdFieldNumber = 3;
  ::google::protobuf::uint32 texture_id() const;
  void set_texture_id(::google::protobuf::uint32 value);

  // optional .CMsgPoint texture_top_left = 4;
  bool has_texture_top_left() const;
  void clear_texture_top_left();
  static const int kTextureTopLeftFieldNumber = 4;
  const ::CMsgPoint& texture_top_left() const;
  ::CMsgPoint* mutable_texture_top_left();
  ::CMsgPoint* release_texture_top_left();
  void set_allocated_texture_top_left(::CMsgPoint* texture_top_left);

  // optional .CMsgPoint texture_bottom_right = 5;
  bool has_texture_bottom_right() const;
  void clear_texture_bottom_right();
  static const int kTextureBottomRightFieldNumber = 5;
  const ::CMsgPoint& texture_bottom_right() const;
  ::CMsgPoint* mutable_texture_bottom_right();
  ::CMsgPoint* release_texture_bottom_right();
  void set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right);

  // @@protoc_insertion_point(class_scope:CMsgDrawYUV420DoubleBufferedRect)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_texture_id();
  inline void clear_has_texture_id();
  inline void set_has_texture_top_left();
  inline void clear_has_texture_top_left();
  inline void set_has_texture_bottom_right();
  inline void clear_has_texture_bottom_right();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CMsgPoint* texture_top_left_;
  ::CMsgPoint* texture_bottom_right_;
  ::google::protobuf::uint32 texture_id_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDrawYUV420DoubleBufferedRect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenderTexturedRect : public ::google::protobuf::Message {
 public:
  CMsgRenderTexturedRect();
  virtual ~CMsgRenderTexturedRect();

  CMsgRenderTexturedRect(const CMsgRenderTexturedRect& from);

  inline CMsgRenderTexturedRect& operator=(const CMsgRenderTexturedRect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenderTexturedRect& default_instance();

  void Swap(CMsgRenderTexturedRect* other);

  // implements Message ----------------------------------------------

  inline CMsgRenderTexturedRect* New() const { return New(NULL); }

  CMsgRenderTexturedRect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenderTexturedRect& from);
  void MergeFrom(const CMsgRenderTexturedRect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRenderTexturedRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgPoint top_left = 1;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 2;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 2;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional uint32 texture_id = 3;
  bool has_texture_id() const;
  void clear_texture_id();
  static const int kTextureIdFieldNumber = 3;
  ::google::protobuf::uint32 texture_id() const;
  void set_texture_id(::google::protobuf::uint32 value);

  // optional .CMsgPoint texture_top_left = 4;
  bool has_texture_top_left() const;
  void clear_texture_top_left();
  static const int kTextureTopLeftFieldNumber = 4;
  const ::CMsgPoint& texture_top_left() const;
  ::CMsgPoint* mutable_texture_top_left();
  ::CMsgPoint* release_texture_top_left();
  void set_allocated_texture_top_left(::CMsgPoint* texture_top_left);

  // optional .CMsgPoint texture_bottom_right = 5;
  bool has_texture_bottom_right() const;
  void clear_texture_bottom_right();
  static const int kTextureBottomRightFieldNumber = 5;
  const ::CMsgPoint& texture_bottom_right() const;
  ::CMsgPoint* mutable_texture_bottom_right();
  ::CMsgPoint* release_texture_bottom_right();
  void set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right);

  // optional int32 texture_serial = 6 [default = 0];
  bool has_texture_serial() const;
  void clear_texture_serial();
  static const int kTextureSerialFieldNumber = 6;
  ::google::protobuf::int32 texture_serial() const;
  void set_texture_serial(::google::protobuf::int32 value);

  // optional uint32 texture_sample_mode = 7 [default = 0];
  bool has_texture_sample_mode() const;
  void clear_texture_sample_mode();
  static const int kTextureSampleModeFieldNumber = 7;
  ::google::protobuf::uint32 texture_sample_mode() const;
  void set_texture_sample_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRenderTexturedRect)
 private:
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_texture_id();
  inline void clear_has_texture_id();
  inline void set_has_texture_top_left();
  inline void clear_has_texture_top_left();
  inline void set_has_texture_bottom_right();
  inline void clear_has_texture_bottom_right();
  inline void set_has_texture_serial();
  inline void clear_has_texture_serial();
  inline void set_has_texture_sample_mode();
  inline void clear_has_texture_sample_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CMsgPoint* texture_top_left_;
  ::google::protobuf::uint32 texture_id_;
  ::google::protobuf::int32 texture_serial_;
  ::CMsgPoint* texture_bottom_right_;
  ::google::protobuf::uint32 texture_sample_mode_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenderTexturedRect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLockTexture : public ::google::protobuf::Message {
 public:
  CMsgLockTexture();
  virtual ~CMsgLockTexture();

  CMsgLockTexture(const CMsgLockTexture& from);

  inline CMsgLockTexture& operator=(const CMsgLockTexture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLockTexture& default_instance();

  void Swap(CMsgLockTexture* other);

  // implements Message ----------------------------------------------

  inline CMsgLockTexture* New() const { return New(NULL); }

  CMsgLockTexture* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLockTexture& from);
  void MergeFrom(const CMsgLockTexture& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgLockTexture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 texture_id = 1;
  bool has_texture_id() const;
  void clear_texture_id();
  static const int kTextureIdFieldNumber = 1;
  ::google::protobuf::uint32 texture_id() const;
  void set_texture_id(::google::protobuf::uint32 value);

  // optional int32 texture_serial = 2 [default = 0];
  bool has_texture_serial() const;
  void clear_texture_serial();
  static const int kTextureSerialFieldNumber = 2;
  ::google::protobuf::int32 texture_serial() const;
  void set_texture_serial(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgLockTexture)
 private:
  inline void set_has_texture_id();
  inline void clear_has_texture_id();
  inline void set_has_texture_serial();
  inline void clear_has_texture_serial();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 texture_id_;
  ::google::protobuf::int32 texture_serial_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgLockTexture* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTextInlineObject : public ::google::protobuf::Message {
 public:
  CMsgTextInlineObject();
  virtual ~CMsgTextInlineObject();

  CMsgTextInlineObject(const CMsgTextInlineObject& from);

  inline CMsgTextInlineObject& operator=(const CMsgTextInlineObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTextInlineObject& default_instance();

  void Swap(CMsgTextInlineObject* other);

  // implements Message ----------------------------------------------

  inline CMsgTextInlineObject* New() const { return New(NULL); }

  CMsgTextInlineObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTextInlineObject& from);
  void MergeFrom(const CMsgTextInlineObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTextInlineObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  float width() const;
  void set_width(float value);

  // optional float height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:CMsgTextInlineObject)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float width_;
  float height_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTextInlineObject* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTextFormat : public ::google::protobuf::Message {
 public:
  CMsgTextFormat();
  virtual ~CMsgTextFormat();

  CMsgTextFormat(const CMsgTextFormat& from);

  inline CMsgTextFormat& operator=(const CMsgTextFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTextFormat& default_instance();

  void Swap(CMsgTextFormat* other);

  // implements Message ----------------------------------------------

  inline CMsgTextFormat* New() const { return New(NULL); }

  CMsgTextFormat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTextFormat& from);
  void MergeFrom(const CMsgTextFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTextFormat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string font_name = 1;
  bool has_font_name() const;
  void clear_font_name();
  static const int kFontNameFieldNumber = 1;
  const ::std::string& font_name() const;
  void set_font_name(const ::std::string& value);
  void set_font_name(const char* value);
  void set_font_name(const char* value, size_t size);
  ::std::string* mutable_font_name();
  ::std::string* release_font_name();
  void set_allocated_font_name(::std::string* font_name);

  // optional double font_size = 2;
  bool has_font_size() const;
  void clear_font_size();
  static const int kFontSizeFieldNumber = 2;
  double font_size() const;
  void set_font_size(double value);

  // optional int32 font_weight = 3 [default = -1];
  bool has_font_weight() const;
  void clear_font_weight();
  static const int kFontWeightFieldNumber = 3;
  ::google::protobuf::int32 font_weight() const;
  void set_font_weight(::google::protobuf::int32 value);

  // optional int32 font_style = 4 [default = -1];
  bool has_font_style() const;
  void clear_font_style();
  static const int kFontStyleFieldNumber = 4;
  ::google::protobuf::int32 font_style() const;
  void set_font_style(::google::protobuf::int32 value);

  // optional bool underline = 5;
  bool has_underline() const;
  void clear_underline();
  static const int kUnderlineFieldNumber = 5;
  bool underline() const;
  void set_underline(bool value);

  // optional bool strikethrough = 6;
  bool has_strikethrough() const;
  void clear_strikethrough();
  static const int kStrikethroughFieldNumber = 6;
  bool strikethrough() const;
  void set_strikethrough(bool value);

  // optional .CMsgFillBrushCollection fill_brush_collection = 7;
  bool has_fill_brush_collection() const;
  void clear_fill_brush_collection();
  static const int kFillBrushCollectionFieldNumber = 7;
  const ::CMsgFillBrushCollection& fill_brush_collection() const;
  ::CMsgFillBrushCollection* mutable_fill_brush_collection();
  ::CMsgFillBrushCollection* release_fill_brush_collection();
  void set_allocated_fill_brush_collection(::CMsgFillBrushCollection* fill_brush_collection);

  // optional int32 letter_spacing = 8 [default = 0];
  bool has_letter_spacing() const;
  void clear_letter_spacing();
  static const int kLetterSpacingFieldNumber = 8;
  ::google::protobuf::int32 letter_spacing() const;
  void set_letter_spacing(::google::protobuf::int32 value);

  // optional .CMsgTextInlineObject inline_object = 9;
  bool has_inline_object() const;
  void clear_inline_object();
  static const int kInlineObjectFieldNumber = 9;
  const ::CMsgTextInlineObject& inline_object() const;
  ::CMsgTextInlineObject* mutable_inline_object();
  ::CMsgTextInlineObject* release_inline_object();
  void set_allocated_inline_object(::CMsgTextInlineObject* inline_object);

  // @@protoc_insertion_point(class_scope:CMsgTextFormat)
 private:
  inline void set_has_font_name();
  inline void clear_has_font_name();
  inline void set_has_font_size();
  inline void clear_has_font_size();
  inline void set_has_font_weight();
  inline void clear_has_font_weight();
  inline void set_has_font_style();
  inline void clear_has_font_style();
  inline void set_has_underline();
  inline void clear_has_underline();
  inline void set_has_strikethrough();
  inline void clear_has_strikethrough();
  inline void set_has_fill_brush_collection();
  inline void clear_has_fill_brush_collection();
  inline void set_has_letter_spacing();
  inline void clear_has_letter_spacing();
  inline void set_has_inline_object();
  inline void clear_has_inline_object();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr font_name_;
  double font_size_;
  ::google::protobuf::int32 font_weight_;
  ::google::protobuf::int32 font_style_;
  bool underline_;
  bool strikethrough_;
  ::google::protobuf::int32 letter_spacing_;
  ::CMsgFillBrushCollection* fill_brush_collection_;
  ::CMsgTextInlineObject* inline_object_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTextFormat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTextRangeFormat : public ::google::protobuf::Message {
 public:
  CMsgTextRangeFormat();
  virtual ~CMsgTextRangeFormat();

  CMsgTextRangeFormat(const CMsgTextRangeFormat& from);

  inline CMsgTextRangeFormat& operator=(const CMsgTextRangeFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTextRangeFormat& default_instance();

  void Swap(CMsgTextRangeFormat* other);

  // implements Message ----------------------------------------------

  inline CMsgTextRangeFormat* New() const { return New(NULL); }

  CMsgTextRangeFormat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTextRangeFormat& from);
  void MergeFrom(const CMsgTextRangeFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTextRangeFormat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 start_index = 1;
  bool has_start_index() const;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 1;
  ::google::protobuf::uint32 start_index() const;
  void set_start_index(::google::protobuf::uint32 value);

  // optional uint32 end_index = 2;
  bool has_end_index() const;
  void clear_end_index();
  static const int kEndIndexFieldNumber = 2;
  ::google::protobuf::uint32 end_index() const;
  void set_end_index(::google::protobuf::uint32 value);

  // optional .CMsgTextFormat format = 3;
  bool has_format() const;
  void clear_format();
  static const int kFormatFieldNumber = 3;
  const ::CMsgTextFormat& format() const;
  ::CMsgTextFormat* mutable_format();
  ::CMsgTextFormat* release_format();
  void set_allocated_format(::CMsgTextFormat* format);

  // @@protoc_insertion_point(class_scope:CMsgTextRangeFormat)
 private:
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();
  inline void set_has_format();
  inline void clear_has_format();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 start_index_;
  ::google::protobuf::uint32 end_index_;
  ::CMsgTextFormat* format_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTextRangeFormat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenderTextFormat : public ::google::protobuf::Message {
 public:
  CMsgRenderTextFormat();
  virtual ~CMsgRenderTextFormat();

  CMsgRenderTextFormat(const CMsgRenderTextFormat& from);

  inline CMsgRenderTextFormat& operator=(const CMsgRenderTextFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenderTextFormat& default_instance();

  void Swap(CMsgRenderTextFormat* other);

  // implements Message ----------------------------------------------

  inline CMsgRenderTextFormat* New() const { return New(NULL); }

  CMsgRenderTextFormat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenderTextFormat& from);
  void MergeFrom(const CMsgRenderTextFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRenderTextFormat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string font_name = 1;
  bool has_font_name() const;
  void clear_font_name();
  static const int kFontNameFieldNumber = 1;
  const ::std::string& font_name() const;
  void set_font_name(const ::std::string& value);
  void set_font_name(const char* value);
  void set_font_name(const char* value, size_t size);
  ::std::string* mutable_font_name();
  ::std::string* release_font_name();
  void set_allocated_font_name(::std::string* font_name);

  // optional double font_size = 2;
  bool has_font_size() const;
  void clear_font_size();
  static const int kFontSizeFieldNumber = 2;
  double font_size() const;
  void set_font_size(double value);

  // optional int32 font_weight = 3 [default = -1];
  bool has_font_weight() const;
  void clear_font_weight();
  static const int kFontWeightFieldNumber = 3;
  ::google::protobuf::int32 font_weight() const;
  void set_font_weight(::google::protobuf::int32 value);

  // optional int32 font_style = 4 [default = -1];
  bool has_font_style() const;
  void clear_font_style();
  static const int kFontStyleFieldNumber = 4;
  ::google::protobuf::int32 font_style() const;
  void set_font_style(::google::protobuf::int32 value);

  // optional bool underline = 5;
  bool has_underline() const;
  void clear_underline();
  static const int kUnderlineFieldNumber = 5;
  bool underline() const;
  void set_underline(bool value);

  // optional bool strikethrough = 6;
  bool has_strikethrough() const;
  void clear_strikethrough();
  static const int kStrikethroughFieldNumber = 6;
  bool strikethrough() const;
  void set_strikethrough(bool value);

  // optional .CMsgRenderFillBrushCollection fill_brush_collection = 7;
  bool has_fill_brush_collection() const;
  void clear_fill_brush_collection();
  static const int kFillBrushCollectionFieldNumber = 7;
  const ::CMsgRenderFillBrushCollection& fill_brush_collection() const;
  ::CMsgRenderFillBrushCollection* mutable_fill_brush_collection();
  ::CMsgRenderFillBrushCollection* release_fill_brush_collection();
  void set_allocated_fill_brush_collection(::CMsgRenderFillBrushCollection* fill_brush_collection);

  // optional int32 letter_spacing = 8 [default = 0];
  bool has_letter_spacing() const;
  void clear_letter_spacing();
  static const int kLetterSpacingFieldNumber = 8;
  ::google::protobuf::int32 letter_spacing() const;
  void set_letter_spacing(::google::protobuf::int32 value);

  // optional .CMsgTextInlineObject inline_object = 9;
  bool has_inline_object() const;
  void clear_inline_object();
  static const int kInlineObjectFieldNumber = 9;
  const ::CMsgTextInlineObject& inline_object() const;
  ::CMsgTextInlineObject* mutable_inline_object();
  ::CMsgTextInlineObject* release_inline_object();
  void set_allocated_inline_object(::CMsgTextInlineObject* inline_object);

  // @@protoc_insertion_point(class_scope:CMsgRenderTextFormat)
 private:
  inline void set_has_font_name();
  inline void clear_has_font_name();
  inline void set_has_font_size();
  inline void clear_has_font_size();
  inline void set_has_font_weight();
  inline void clear_has_font_weight();
  inline void set_has_font_style();
  inline void clear_has_font_style();
  inline void set_has_underline();
  inline void clear_has_underline();
  inline void set_has_strikethrough();
  inline void clear_has_strikethrough();
  inline void set_has_fill_brush_collection();
  inline void clear_has_fill_brush_collection();
  inline void set_has_letter_spacing();
  inline void clear_has_letter_spacing();
  inline void set_has_inline_object();
  inline void clear_has_inline_object();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr font_name_;
  double font_size_;
  ::google::protobuf::int32 font_weight_;
  ::google::protobuf::int32 font_style_;
  bool underline_;
  bool strikethrough_;
  ::google::protobuf::int32 letter_spacing_;
  ::CMsgRenderFillBrushCollection* fill_brush_collection_;
  ::CMsgTextInlineObject* inline_object_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenderTextFormat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenderTextRangeFormat : public ::google::protobuf::Message {
 public:
  CMsgRenderTextRangeFormat();
  virtual ~CMsgRenderTextRangeFormat();

  CMsgRenderTextRangeFormat(const CMsgRenderTextRangeFormat& from);

  inline CMsgRenderTextRangeFormat& operator=(const CMsgRenderTextRangeFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenderTextRangeFormat& default_instance();

  void Swap(CMsgRenderTextRangeFormat* other);

  // implements Message ----------------------------------------------

  inline CMsgRenderTextRangeFormat* New() const { return New(NULL); }

  CMsgRenderTextRangeFormat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenderTextRangeFormat& from);
  void MergeFrom(const CMsgRenderTextRangeFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRenderTextRangeFormat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 start_index = 1;
  bool has_start_index() const;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 1;
  ::google::protobuf::uint32 start_index() const;
  void set_start_index(::google::protobuf::uint32 value);

  // optional uint32 end_index = 2;
  bool has_end_index() const;
  void clear_end_index();
  static const int kEndIndexFieldNumber = 2;
  ::google::protobuf::uint32 end_index() const;
  void set_end_index(::google::protobuf::uint32 value);

  // optional .CMsgRenderTextFormat format = 3;
  bool has_format() const;
  void clear_format();
  static const int kFormatFieldNumber = 3;
  const ::CMsgRenderTextFormat& format() const;
  ::CMsgRenderTextFormat* mutable_format();
  ::CMsgRenderTextFormat* release_format();
  void set_allocated_format(::CMsgRenderTextFormat* format);

  // @@protoc_insertion_point(class_scope:CMsgRenderTextRangeFormat)
 private:
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();
  inline void set_has_format();
  inline void clear_has_format();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 start_index_;
  ::google::protobuf::uint32 end_index_;
  ::CMsgRenderTextFormat* format_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenderTextRangeFormat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDrawTextRegion : public ::google::protobuf::Message {
 public:
  CMsgDrawTextRegion();
  virtual ~CMsgDrawTextRegion();

  CMsgDrawTextRegion(const CMsgDrawTextRegion& from);

  inline CMsgDrawTextRegion& operator=(const CMsgDrawTextRegion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDrawTextRegion& default_instance();

  void Swap(CMsgDrawTextRegion* other);

  // implements Message ----------------------------------------------

  inline CMsgDrawTextRegion* New() const { return New(NULL); }

  CMsgDrawTextRegion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDrawTextRegion& from);
  void MergeFrom(const CMsgDrawTextRegion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDrawTextRegion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes wtext = 2;
  bool has_wtext() const;
  void clear_wtext();
  static const int kWtextFieldNumber = 2;
  const ::std::string& wtext() const;
  void set_wtext(const ::std::string& value);
  void set_wtext(const char* value);
  void set_wtext(const void* value, size_t size);
  ::std::string* mutable_wtext();
  ::std::string* release_wtext();
  void set_allocated_wtext(::std::string* wtext);

  // optional .CMsgTextFormat default_format = 3;
  bool has_default_format() const;
  void clear_default_format();
  static const int kDefaultFormatFieldNumber = 3;
  const ::CMsgTextFormat& default_format() const;
  ::CMsgTextFormat* mutable_default_format();
  ::CMsgTextFormat* release_default_format();
  void set_allocated_default_format(::CMsgTextFormat* default_format);

  // optional uint32 text_align = 4;
  bool has_text_align() const;
  void clear_text_align();
  static const int kTextAlignFieldNumber = 4;
  ::google::protobuf::uint32 text_align() const;
  void set_text_align(::google::protobuf::uint32 value);

  // optional uint32 line_height = 5;
  bool has_line_height() const;
  void clear_line_height();
  static const int kLineHeightFieldNumber = 5;
  ::google::protobuf::uint32 line_height() const;
  void set_line_height(::google::protobuf::uint32 value);

  // optional .CMsgPoint top_left = 6;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 6;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 7;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 7;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional bool wrapping = 8;
  bool has_wrapping() const;
  void clear_wrapping();
  static const int kWrappingFieldNumber = 8;
  bool wrapping() const;
  void set_wrapping(bool value);

  // optional bool ellipsis = 9;
  bool has_ellipsis() const;
  void clear_ellipsis();
  static const int kEllipsisFieldNumber = 9;
  bool ellipsis() const;
  void set_ellipsis(bool value);

  // repeated .CMsgTextRangeFormat range_formats = 10;
  int range_formats_size() const;
  void clear_range_formats();
  static const int kRangeFormatsFieldNumber = 10;
  const ::CMsgTextRangeFormat& range_formats(int index) const;
  ::CMsgTextRangeFormat* mutable_range_formats(int index);
  ::CMsgTextRangeFormat* add_range_formats();
  ::google::protobuf::RepeatedPtrField< ::CMsgTextRangeFormat >*
      mutable_range_formats();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTextRangeFormat >&
      range_formats() const;

  // @@protoc_insertion_point(class_scope:CMsgDrawTextRegion)
 private:
  inline void set_has_wtext();
  inline void clear_has_wtext();
  inline void set_has_default_format();
  inline void clear_has_default_format();
  inline void set_has_text_align();
  inline void clear_has_text_align();
  inline void set_has_line_height();
  inline void clear_has_line_height();
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_wrapping();
  inline void clear_has_wrapping();
  inline void set_has_ellipsis();
  inline void clear_has_ellipsis();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wtext_;
  ::CMsgTextFormat* default_format_;
  ::google::protobuf::uint32 text_align_;
  ::google::protobuf::uint32 line_height_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTextRangeFormat > range_formats_;
  bool wrapping_;
  bool ellipsis_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDrawTextRegion* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenderTextRegion : public ::google::protobuf::Message {
 public:
  CMsgRenderTextRegion();
  virtual ~CMsgRenderTextRegion();

  CMsgRenderTextRegion(const CMsgRenderTextRegion& from);

  inline CMsgRenderTextRegion& operator=(const CMsgRenderTextRegion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenderTextRegion& default_instance();

  void Swap(CMsgRenderTextRegion* other);

  // implements Message ----------------------------------------------

  inline CMsgRenderTextRegion* New() const { return New(NULL); }

  CMsgRenderTextRegion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenderTextRegion& from);
  void MergeFrom(const CMsgRenderTextRegion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRenderTextRegion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes wtext = 2;
  bool has_wtext() const;
  void clear_wtext();
  static const int kWtextFieldNumber = 2;
  const ::std::string& wtext() const;
  void set_wtext(const ::std::string& value);
  void set_wtext(const char* value);
  void set_wtext(const void* value, size_t size);
  ::std::string* mutable_wtext();
  ::std::string* release_wtext();
  void set_allocated_wtext(::std::string* wtext);

  // optional .CMsgRenderTextFormat default_format = 3;
  bool has_default_format() const;
  void clear_default_format();
  static const int kDefaultFormatFieldNumber = 3;
  const ::CMsgRenderTextFormat& default_format() const;
  ::CMsgRenderTextFormat* mutable_default_format();
  ::CMsgRenderTextFormat* release_default_format();
  void set_allocated_default_format(::CMsgRenderTextFormat* default_format);

  // optional uint32 text_align = 4;
  bool has_text_align() const;
  void clear_text_align();
  static const int kTextAlignFieldNumber = 4;
  ::google::protobuf::uint32 text_align() const;
  void set_text_align(::google::protobuf::uint32 value);

  // optional uint32 line_height = 5;
  bool has_line_height() const;
  void clear_line_height();
  static const int kLineHeightFieldNumber = 5;
  ::google::protobuf::uint32 line_height() const;
  void set_line_height(::google::protobuf::uint32 value);

  // optional .CMsgPoint top_left = 6;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 6;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 7;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 7;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional bool wrapping = 8;
  bool has_wrapping() const;
  void clear_wrapping();
  static const int kWrappingFieldNumber = 8;
  bool wrapping() const;
  void set_wrapping(bool value);

  // optional bool ellipsis = 9;
  bool has_ellipsis() const;
  void clear_ellipsis();
  static const int kEllipsisFieldNumber = 9;
  bool ellipsis() const;
  void set_ellipsis(bool value);

  // repeated .CMsgRenderTextRangeFormat range_formats = 10;
  int range_formats_size() const;
  void clear_range_formats();
  static const int kRangeFormatsFieldNumber = 10;
  const ::CMsgRenderTextRangeFormat& range_formats(int index) const;
  ::CMsgRenderTextRangeFormat* mutable_range_formats(int index);
  ::CMsgRenderTextRangeFormat* add_range_formats();
  ::google::protobuf::RepeatedPtrField< ::CMsgRenderTextRangeFormat >*
      mutable_range_formats();
  const ::google::protobuf::RepeatedPtrField< ::CMsgRenderTextRangeFormat >&
      range_formats() const;

  // optional .CTextShadowData text_shadow = 11;
  bool has_text_shadow() const;
  void clear_text_shadow();
  static const int kTextShadowFieldNumber = 11;
  const ::CTextShadowData& text_shadow() const;
  ::CTextShadowData* mutable_text_shadow();
  ::CTextShadowData* release_text_shadow();
  void set_allocated_text_shadow(::CTextShadowData* text_shadow);

  // @@protoc_insertion_point(class_scope:CMsgRenderTextRegion)
 private:
  inline void set_has_wtext();
  inline void clear_has_wtext();
  inline void set_has_default_format();
  inline void clear_has_default_format();
  inline void set_has_text_align();
  inline void clear_has_text_align();
  inline void set_has_line_height();
  inline void clear_has_line_height();
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_wrapping();
  inline void clear_has_wrapping();
  inline void set_has_ellipsis();
  inline void clear_has_ellipsis();
  inline void set_has_text_shadow();
  inline void clear_has_text_shadow();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wtext_;
  ::CMsgRenderTextFormat* default_format_;
  ::google::protobuf::uint32 text_align_;
  ::google::protobuf::uint32 line_height_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::google::protobuf::RepeatedPtrField< ::CMsgRenderTextRangeFormat > range_formats_;
  ::CTextShadowData* text_shadow_;
  bool wrapping_;
  bool ellipsis_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenderTextRegion* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestRenderCallback : public ::google::protobuf::Message {
 public:
  CMsgRequestRenderCallback();
  virtual ~CMsgRequestRenderCallback();

  CMsgRequestRenderCallback(const CMsgRequestRenderCallback& from);

  inline CMsgRequestRenderCallback& operator=(const CMsgRequestRenderCallback& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestRenderCallback& default_instance();

  void Swap(CMsgRequestRenderCallback* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestRenderCallback* New() const { return New(NULL); }

  CMsgRequestRenderCallback* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestRenderCallback& from);
  void MergeFrom(const CMsgRequestRenderCallback& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRequestRenderCallback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes callback_obj = 1;
  bool has_callback_obj() const;
  void clear_callback_obj();
  static const int kCallbackObjFieldNumber = 1;
  const ::std::string& callback_obj() const;
  void set_callback_obj(const ::std::string& value);
  void set_callback_obj(const char* value);
  void set_callback_obj(const void* value, size_t size);
  ::std::string* mutable_callback_obj();
  ::std::string* release_callback_obj();
  void set_allocated_callback_obj(::std::string* callback_obj);

  // optional .CMsgPoint top_left = 2;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 2;
  const ::CMsgPoint& top_left() const;
  ::CMsgPoint* mutable_top_left();
  ::CMsgPoint* release_top_left();
  void set_allocated_top_left(::CMsgPoint* top_left);

  // optional .CMsgPoint bottom_right = 3;
  bool has_bottom_right() const;
  void clear_bottom_right();
  static const int kBottomRightFieldNumber = 3;
  const ::CMsgPoint& bottom_right() const;
  ::CMsgPoint* mutable_bottom_right();
  ::CMsgPoint* release_bottom_right();
  void set_allocated_bottom_right(::CMsgPoint* bottom_right);

  // optional .CMsgPoint top_left_padding = 4;
  bool has_top_left_padding() const;
  void clear_top_left_padding();
  static const int kTopLeftPaddingFieldNumber = 4;
  const ::CMsgPoint& top_left_padding() const;
  ::CMsgPoint* mutable_top_left_padding();
  ::CMsgPoint* release_top_left_padding();
  void set_allocated_top_left_padding(::CMsgPoint* top_left_padding);

  // optional .CMsgPoint bottom_right_padding = 5;
  bool has_bottom_right_padding() const;
  void clear_bottom_right_padding();
  static const int kBottomRightPaddingFieldNumber = 5;
  const ::CMsgPoint& bottom_right_padding() const;
  ::CMsgPoint* mutable_bottom_right_padding();
  ::CMsgPoint* release_bottom_right_padding();
  void set_allocated_bottom_right_padding(::CMsgPoint* bottom_right_padding);

  // optional bool needs_redraw_every_frame = 6;
  bool has_needs_redraw_every_frame() const;
  void clear_needs_redraw_every_frame();
  static const int kNeedsRedrawEveryFrameFieldNumber = 6;
  bool needs_redraw_every_frame() const;
  void set_needs_redraw_every_frame(bool value);

  // @@protoc_insertion_point(class_scope:CMsgRequestRenderCallback)
 private:
  inline void set_has_callback_obj();
  inline void clear_has_callback_obj();
  inline void set_has_top_left();
  inline void clear_has_top_left();
  inline void set_has_bottom_right();
  inline void clear_has_bottom_right();
  inline void set_has_top_left_padding();
  inline void clear_has_top_left_padding();
  inline void set_has_bottom_right_padding();
  inline void clear_has_bottom_right_padding();
  inline void set_has_needs_redraw_every_frame();
  inline void clear_has_needs_redraw_every_frame();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr callback_obj_;
  ::CMsgPoint* top_left_;
  ::CMsgPoint* bottom_right_;
  ::CMsgPoint* top_left_padding_;
  ::CMsgPoint* bottom_right_padding_;
  bool needs_redraw_every_frame_;
  friend void  protobuf_AddDesc_rendermessages_2eproto();
  friend void protobuf_AssignDesc_rendermessages_2eproto();
  friend void protobuf_ShutdownFile_rendermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestRenderCallback* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgBeginFrame

// optional double frame_paint_time = 1;
inline bool CMsgBeginFrame::has_frame_paint_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBeginFrame::set_has_frame_paint_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBeginFrame::clear_has_frame_paint_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBeginFrame::clear_frame_paint_time() {
  frame_paint_time_ = 0;
  clear_has_frame_paint_time();
}
inline double CMsgBeginFrame::frame_paint_time() const {
  // @@protoc_insertion_point(field_get:CMsgBeginFrame.frame_paint_time)
  return frame_paint_time_;
}
inline void CMsgBeginFrame::set_frame_paint_time(double value) {
  set_has_frame_paint_time();
  frame_paint_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgBeginFrame.frame_paint_time)
}

// optional uint32 surface_width = 2;
inline bool CMsgBeginFrame::has_surface_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBeginFrame::set_has_surface_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBeginFrame::clear_has_surface_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBeginFrame::clear_surface_width() {
  surface_width_ = 0u;
  clear_has_surface_width();
}
inline ::google::protobuf::uint32 CMsgBeginFrame::surface_width() const {
  // @@protoc_insertion_point(field_get:CMsgBeginFrame.surface_width)
  return surface_width_;
}
inline void CMsgBeginFrame::set_surface_width(::google::protobuf::uint32 value) {
  set_has_surface_width();
  surface_width_ = value;
  // @@protoc_insertion_point(field_set:CMsgBeginFrame.surface_width)
}

// optional uint32 surface_height = 3;
inline bool CMsgBeginFrame::has_surface_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBeginFrame::set_has_surface_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBeginFrame::clear_has_surface_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBeginFrame::clear_surface_height() {
  surface_height_ = 0u;
  clear_has_surface_height();
}
inline ::google::protobuf::uint32 CMsgBeginFrame::surface_height() const {
  // @@protoc_insertion_point(field_get:CMsgBeginFrame.surface_height)
  return surface_height_;
}
inline void CMsgBeginFrame::set_surface_height(::google::protobuf::uint32 value) {
  set_has_surface_height();
  surface_height_ = value;
  // @@protoc_insertion_point(field_set:CMsgBeginFrame.surface_height)
}

// optional uint32 render_target = 4;
inline bool CMsgBeginFrame::has_render_target() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgBeginFrame::set_has_render_target() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgBeginFrame::clear_has_render_target() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgBeginFrame::clear_render_target() {
  render_target_ = 0u;
  clear_has_render_target();
}
inline ::google::protobuf::uint32 CMsgBeginFrame::render_target() const {
  // @@protoc_insertion_point(field_get:CMsgBeginFrame.render_target)
  return render_target_;
}
inline void CMsgBeginFrame::set_render_target(::google::protobuf::uint32 value) {
  set_has_render_target();
  render_target_ = value;
  // @@protoc_insertion_point(field_set:CMsgBeginFrame.render_target)
}

// optional double ui_scale_factor = 5;
inline bool CMsgBeginFrame::has_ui_scale_factor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgBeginFrame::set_has_ui_scale_factor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgBeginFrame::clear_has_ui_scale_factor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgBeginFrame::clear_ui_scale_factor() {
  ui_scale_factor_ = 0;
  clear_has_ui_scale_factor();
}
inline double CMsgBeginFrame::ui_scale_factor() const {
  // @@protoc_insertion_point(field_get:CMsgBeginFrame.ui_scale_factor)
  return ui_scale_factor_;
}
inline void CMsgBeginFrame::set_ui_scale_factor(double value) {
  set_has_ui_scale_factor();
  ui_scale_factor_ = value;
  // @@protoc_insertion_point(field_set:CMsgBeginFrame.ui_scale_factor)
}

// optional bool empty_frame = 6;
inline bool CMsgBeginFrame::has_empty_frame() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgBeginFrame::set_has_empty_frame() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgBeginFrame::clear_has_empty_frame() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgBeginFrame::clear_empty_frame() {
  empty_frame_ = false;
  clear_has_empty_frame();
}
inline bool CMsgBeginFrame::empty_frame() const {
  // @@protoc_insertion_point(field_get:CMsgBeginFrame.empty_frame)
  return empty_frame_;
}
inline void CMsgBeginFrame::set_empty_frame(bool value) {
  set_has_empty_frame();
  empty_frame_ = value;
  // @@protoc_insertion_point(field_set:CMsgBeginFrame.empty_frame)
}

// optional bool clear_gpu_resources_before_frame = 7;
inline bool CMsgBeginFrame::has_clear_gpu_resources_before_frame() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgBeginFrame::set_has_clear_gpu_resources_before_frame() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgBeginFrame::clear_has_clear_gpu_resources_before_frame() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgBeginFrame::clear_clear_gpu_resources_before_frame() {
  clear_gpu_resources_before_frame_ = false;
  clear_has_clear_gpu_resources_before_frame();
}
inline bool CMsgBeginFrame::clear_gpu_resources_before_frame() const {
  // @@protoc_insertion_point(field_get:CMsgBeginFrame.clear_gpu_resources_before_frame)
  return clear_gpu_resources_before_frame_;
}
inline void CMsgBeginFrame::set_clear_gpu_resources_before_frame(bool value) {
  set_has_clear_gpu_resources_before_frame();
  clear_gpu_resources_before_frame_ = value;
  // @@protoc_insertion_point(field_set:CMsgBeginFrame.clear_gpu_resources_before_frame)
}

// -------------------------------------------------------------------

// CMsgEndFrame

// optional uint32 mouse_cursor_texture_id = 1;
inline bool CMsgEndFrame::has_mouse_cursor_texture_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEndFrame::set_has_mouse_cursor_texture_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgEndFrame::clear_has_mouse_cursor_texture_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgEndFrame::clear_mouse_cursor_texture_id() {
  mouse_cursor_texture_id_ = 0u;
  clear_has_mouse_cursor_texture_id();
}
inline ::google::protobuf::uint32 CMsgEndFrame::mouse_cursor_texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgEndFrame.mouse_cursor_texture_id)
  return mouse_cursor_texture_id_;
}
inline void CMsgEndFrame::set_mouse_cursor_texture_id(::google::protobuf::uint32 value) {
  set_has_mouse_cursor_texture_id();
  mouse_cursor_texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgEndFrame.mouse_cursor_texture_id)
}

// optional float mouse_cursor_hotspot_x = 2;
inline bool CMsgEndFrame::has_mouse_cursor_hotspot_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgEndFrame::set_has_mouse_cursor_hotspot_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgEndFrame::clear_has_mouse_cursor_hotspot_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgEndFrame::clear_mouse_cursor_hotspot_x() {
  mouse_cursor_hotspot_x_ = 0;
  clear_has_mouse_cursor_hotspot_x();
}
inline float CMsgEndFrame::mouse_cursor_hotspot_x() const {
  // @@protoc_insertion_point(field_get:CMsgEndFrame.mouse_cursor_hotspot_x)
  return mouse_cursor_hotspot_x_;
}
inline void CMsgEndFrame::set_mouse_cursor_hotspot_x(float value) {
  set_has_mouse_cursor_hotspot_x();
  mouse_cursor_hotspot_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgEndFrame.mouse_cursor_hotspot_x)
}

// optional float mouse_cursor_hotspot_y = 3;
inline bool CMsgEndFrame::has_mouse_cursor_hotspot_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgEndFrame::set_has_mouse_cursor_hotspot_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgEndFrame::clear_has_mouse_cursor_hotspot_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgEndFrame::clear_mouse_cursor_hotspot_y() {
  mouse_cursor_hotspot_y_ = 0;
  clear_has_mouse_cursor_hotspot_y();
}
inline float CMsgEndFrame::mouse_cursor_hotspot_y() const {
  // @@protoc_insertion_point(field_get:CMsgEndFrame.mouse_cursor_hotspot_y)
  return mouse_cursor_hotspot_y_;
}
inline void CMsgEndFrame::set_mouse_cursor_hotspot_y(float value) {
  set_has_mouse_cursor_hotspot_y();
  mouse_cursor_hotspot_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgEndFrame.mouse_cursor_hotspot_y)
}

// -------------------------------------------------------------------

// CMsgClearBackbuffer

// optional uint32 clear_color_rgba = 1;
inline bool CMsgClearBackbuffer::has_clear_color_rgba() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClearBackbuffer::set_has_clear_color_rgba() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClearBackbuffer::clear_has_clear_color_rgba() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClearBackbuffer::clear_clear_color_rgba() {
  clear_color_rgba_ = 0u;
  clear_has_clear_color_rgba();
}
inline ::google::protobuf::uint32 CMsgClearBackbuffer::clear_color_rgba() const {
  // @@protoc_insertion_point(field_get:CMsgClearBackbuffer.clear_color_rgba)
  return clear_color_rgba_;
}
inline void CMsgClearBackbuffer::set_clear_color_rgba(::google::protobuf::uint32 value) {
  set_has_clear_color_rgba();
  clear_color_rgba_ = value;
  // @@protoc_insertion_point(field_set:CMsgClearBackbuffer.clear_color_rgba)
}

// -------------------------------------------------------------------

// CMsgDeleteTexture

// optional uint64 texture_pointer = 1;
inline bool CMsgDeleteTexture::has_texture_pointer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDeleteTexture::set_has_texture_pointer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDeleteTexture::clear_has_texture_pointer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDeleteTexture::clear_texture_pointer() {
  texture_pointer_ = GOOGLE_ULONGLONG(0);
  clear_has_texture_pointer();
}
inline ::google::protobuf::uint64 CMsgDeleteTexture::texture_pointer() const {
  // @@protoc_insertion_point(field_get:CMsgDeleteTexture.texture_pointer)
  return texture_pointer_;
}
inline void CMsgDeleteTexture::set_texture_pointer(::google::protobuf::uint64 value) {
  set_has_texture_pointer();
  texture_pointer_ = value;
  // @@protoc_insertion_point(field_set:CMsgDeleteTexture.texture_pointer)
}

// -------------------------------------------------------------------

// CMsgDeletePanel

// optional uint64 context_id = 1;
inline bool CMsgDeletePanel::has_context_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDeletePanel::set_has_context_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDeletePanel::clear_has_context_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDeletePanel::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
  clear_has_context_id();
}
inline ::google::protobuf::uint64 CMsgDeletePanel::context_id() const {
  // @@protoc_insertion_point(field_get:CMsgDeletePanel.context_id)
  return context_id_;
}
inline void CMsgDeletePanel::set_context_id(::google::protobuf::uint64 value) {
  set_has_context_id();
  context_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDeletePanel.context_id)
}

// -------------------------------------------------------------------

// CMsgDeleteParticleSystem

// optional uint64 panel_handle = 1;
inline bool CMsgDeleteParticleSystem::has_panel_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDeleteParticleSystem::set_has_panel_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDeleteParticleSystem::clear_has_panel_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDeleteParticleSystem::clear_panel_handle() {
  panel_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_panel_handle();
}
inline ::google::protobuf::uint64 CMsgDeleteParticleSystem::panel_handle() const {
  // @@protoc_insertion_point(field_get:CMsgDeleteParticleSystem.panel_handle)
  return panel_handle_;
}
inline void CMsgDeleteParticleSystem::set_panel_handle(::google::protobuf::uint64 value) {
  set_has_panel_handle();
  panel_handle_ = value;
  // @@protoc_insertion_point(field_set:CMsgDeleteParticleSystem.panel_handle)
}

// optional uint32 brush_index = 2;
inline bool CMsgDeleteParticleSystem::has_brush_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDeleteParticleSystem::set_has_brush_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDeleteParticleSystem::clear_has_brush_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDeleteParticleSystem::clear_brush_index() {
  brush_index_ = 0u;
  clear_has_brush_index();
}
inline ::google::protobuf::uint32 CMsgDeleteParticleSystem::brush_index() const {
  // @@protoc_insertion_point(field_get:CMsgDeleteParticleSystem.brush_index)
  return brush_index_;
}
inline void CMsgDeleteParticleSystem::set_brush_index(::google::protobuf::uint32 value) {
  set_has_brush_index();
  brush_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgDeleteParticleSystem.brush_index)
}

// -------------------------------------------------------------------

// CMsgPoint

// optional double x = 1;
inline bool CMsgPoint::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPoint::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPoint::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPoint::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double CMsgPoint::x() const {
  // @@protoc_insertion_point(field_get:CMsgPoint.x)
  return x_;
}
inline void CMsgPoint::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoint.x)
}

// optional double y = 2;
inline bool CMsgPoint::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPoint::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPoint::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPoint::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double CMsgPoint::y() const {
  // @@protoc_insertion_point(field_get:CMsgPoint.y)
  return y_;
}
inline void CMsgPoint::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoint.y)
}

// optional double z = 3;
inline bool CMsgPoint::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPoint::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPoint::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPoint::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double CMsgPoint::z() const {
  // @@protoc_insertion_point(field_get:CMsgPoint.z)
  return z_;
}
inline void CMsgPoint::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoint.z)
}

// -------------------------------------------------------------------

// CMsgMatrix4x4

// optional double m00 = 1;
inline bool CMsgMatrix4x4::has_m00() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatrix4x4::set_has_m00() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatrix4x4::clear_has_m00() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatrix4x4::clear_m00() {
  m00_ = 0;
  clear_has_m00();
}
inline double CMsgMatrix4x4::m00() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m00)
  return m00_;
}
inline void CMsgMatrix4x4::set_m00(double value) {
  set_has_m00();
  m00_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m00)
}

// optional double m01 = 2;
inline bool CMsgMatrix4x4::has_m01() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatrix4x4::set_has_m01() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatrix4x4::clear_has_m01() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatrix4x4::clear_m01() {
  m01_ = 0;
  clear_has_m01();
}
inline double CMsgMatrix4x4::m01() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m01)
  return m01_;
}
inline void CMsgMatrix4x4::set_m01(double value) {
  set_has_m01();
  m01_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m01)
}

// optional double m02 = 3;
inline bool CMsgMatrix4x4::has_m02() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatrix4x4::set_has_m02() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatrix4x4::clear_has_m02() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatrix4x4::clear_m02() {
  m02_ = 0;
  clear_has_m02();
}
inline double CMsgMatrix4x4::m02() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m02)
  return m02_;
}
inline void CMsgMatrix4x4::set_m02(double value) {
  set_has_m02();
  m02_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m02)
}

// optional double m03 = 4;
inline bool CMsgMatrix4x4::has_m03() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatrix4x4::set_has_m03() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatrix4x4::clear_has_m03() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatrix4x4::clear_m03() {
  m03_ = 0;
  clear_has_m03();
}
inline double CMsgMatrix4x4::m03() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m03)
  return m03_;
}
inline void CMsgMatrix4x4::set_m03(double value) {
  set_has_m03();
  m03_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m03)
}

// optional double m10 = 5;
inline bool CMsgMatrix4x4::has_m10() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMatrix4x4::set_has_m10() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMatrix4x4::clear_has_m10() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMatrix4x4::clear_m10() {
  m10_ = 0;
  clear_has_m10();
}
inline double CMsgMatrix4x4::m10() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m10)
  return m10_;
}
inline void CMsgMatrix4x4::set_m10(double value) {
  set_has_m10();
  m10_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m10)
}

// optional double m11 = 6;
inline bool CMsgMatrix4x4::has_m11() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMatrix4x4::set_has_m11() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMatrix4x4::clear_has_m11() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMatrix4x4::clear_m11() {
  m11_ = 0;
  clear_has_m11();
}
inline double CMsgMatrix4x4::m11() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m11)
  return m11_;
}
inline void CMsgMatrix4x4::set_m11(double value) {
  set_has_m11();
  m11_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m11)
}

// optional double m12 = 7;
inline bool CMsgMatrix4x4::has_m12() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMatrix4x4::set_has_m12() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMatrix4x4::clear_has_m12() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMatrix4x4::clear_m12() {
  m12_ = 0;
  clear_has_m12();
}
inline double CMsgMatrix4x4::m12() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m12)
  return m12_;
}
inline void CMsgMatrix4x4::set_m12(double value) {
  set_has_m12();
  m12_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m12)
}

// optional double m13 = 8;
inline bool CMsgMatrix4x4::has_m13() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMatrix4x4::set_has_m13() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMatrix4x4::clear_has_m13() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMatrix4x4::clear_m13() {
  m13_ = 0;
  clear_has_m13();
}
inline double CMsgMatrix4x4::m13() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m13)
  return m13_;
}
inline void CMsgMatrix4x4::set_m13(double value) {
  set_has_m13();
  m13_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m13)
}

// optional double m20 = 9;
inline bool CMsgMatrix4x4::has_m20() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgMatrix4x4::set_has_m20() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgMatrix4x4::clear_has_m20() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgMatrix4x4::clear_m20() {
  m20_ = 0;
  clear_has_m20();
}
inline double CMsgMatrix4x4::m20() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m20)
  return m20_;
}
inline void CMsgMatrix4x4::set_m20(double value) {
  set_has_m20();
  m20_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m20)
}

// optional double m21 = 10;
inline bool CMsgMatrix4x4::has_m21() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgMatrix4x4::set_has_m21() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgMatrix4x4::clear_has_m21() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgMatrix4x4::clear_m21() {
  m21_ = 0;
  clear_has_m21();
}
inline double CMsgMatrix4x4::m21() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m21)
  return m21_;
}
inline void CMsgMatrix4x4::set_m21(double value) {
  set_has_m21();
  m21_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m21)
}

// optional double m22 = 11;
inline bool CMsgMatrix4x4::has_m22() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgMatrix4x4::set_has_m22() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgMatrix4x4::clear_has_m22() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgMatrix4x4::clear_m22() {
  m22_ = 0;
  clear_has_m22();
}
inline double CMsgMatrix4x4::m22() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m22)
  return m22_;
}
inline void CMsgMatrix4x4::set_m22(double value) {
  set_has_m22();
  m22_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m22)
}

// optional double m23 = 12;
inline bool CMsgMatrix4x4::has_m23() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgMatrix4x4::set_has_m23() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgMatrix4x4::clear_has_m23() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgMatrix4x4::clear_m23() {
  m23_ = 0;
  clear_has_m23();
}
inline double CMsgMatrix4x4::m23() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m23)
  return m23_;
}
inline void CMsgMatrix4x4::set_m23(double value) {
  set_has_m23();
  m23_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m23)
}

// optional double m30 = 13;
inline bool CMsgMatrix4x4::has_m30() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgMatrix4x4::set_has_m30() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgMatrix4x4::clear_has_m30() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgMatrix4x4::clear_m30() {
  m30_ = 0;
  clear_has_m30();
}
inline double CMsgMatrix4x4::m30() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m30)
  return m30_;
}
inline void CMsgMatrix4x4::set_m30(double value) {
  set_has_m30();
  m30_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m30)
}

// optional double m31 = 14;
inline bool CMsgMatrix4x4::has_m31() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgMatrix4x4::set_has_m31() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgMatrix4x4::clear_has_m31() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgMatrix4x4::clear_m31() {
  m31_ = 0;
  clear_has_m31();
}
inline double CMsgMatrix4x4::m31() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m31)
  return m31_;
}
inline void CMsgMatrix4x4::set_m31(double value) {
  set_has_m31();
  m31_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m31)
}

// optional double m32 = 15;
inline bool CMsgMatrix4x4::has_m32() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgMatrix4x4::set_has_m32() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgMatrix4x4::clear_has_m32() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgMatrix4x4::clear_m32() {
  m32_ = 0;
  clear_has_m32();
}
inline double CMsgMatrix4x4::m32() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m32)
  return m32_;
}
inline void CMsgMatrix4x4::set_m32(double value) {
  set_has_m32();
  m32_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m32)
}

// optional double m33 = 16;
inline bool CMsgMatrix4x4::has_m33() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgMatrix4x4::set_has_m33() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgMatrix4x4::clear_has_m33() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgMatrix4x4::clear_m33() {
  m33_ = 0;
  clear_has_m33();
}
inline double CMsgMatrix4x4::m33() const {
  // @@protoc_insertion_point(field_get:CMsgMatrix4x4.m33)
  return m33_;
}
inline void CMsgMatrix4x4::set_m33(double value) {
  set_has_m33();
  m33_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatrix4x4.m33)
}

// -------------------------------------------------------------------

// CRadiusData_CCornerRadius

// optional double horizontal = 1;
inline bool CRadiusData_CCornerRadius::has_horizontal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRadiusData_CCornerRadius::set_has_horizontal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CRadiusData_CCornerRadius::clear_has_horizontal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CRadiusData_CCornerRadius::clear_horizontal() {
  horizontal_ = 0;
  clear_has_horizontal();
}
inline double CRadiusData_CCornerRadius::horizontal() const {
  // @@protoc_insertion_point(field_get:CRadiusData.CCornerRadius.horizontal)
  return horizontal_;
}
inline void CRadiusData_CCornerRadius::set_horizontal(double value) {
  set_has_horizontal();
  horizontal_ = value;
  // @@protoc_insertion_point(field_set:CRadiusData.CCornerRadius.horizontal)
}

// optional double vertical = 2;
inline bool CRadiusData_CCornerRadius::has_vertical() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CRadiusData_CCornerRadius::set_has_vertical() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CRadiusData_CCornerRadius::clear_has_vertical() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CRadiusData_CCornerRadius::clear_vertical() {
  vertical_ = 0;
  clear_has_vertical();
}
inline double CRadiusData_CCornerRadius::vertical() const {
  // @@protoc_insertion_point(field_get:CRadiusData.CCornerRadius.vertical)
  return vertical_;
}
inline void CRadiusData_CCornerRadius::set_vertical(double value) {
  set_has_vertical();
  vertical_ = value;
  // @@protoc_insertion_point(field_set:CRadiusData.CCornerRadius.vertical)
}

// -------------------------------------------------------------------

// CRadiusData

// optional .CRadiusData.CCornerRadius top_left = 1;
inline bool CRadiusData::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRadiusData::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CRadiusData::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CRadiusData::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CRadiusData_CCornerRadius::Clear();
  clear_has_top_left();
}
inline const ::CRadiusData_CCornerRadius& CRadiusData::top_left() const {
  // @@protoc_insertion_point(field_get:CRadiusData.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CRadiusData_CCornerRadius;
  }
  // @@protoc_insertion_point(field_mutable:CRadiusData.top_left)
  return top_left_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::release_top_left() {
  clear_has_top_left();
  ::CRadiusData_CCornerRadius* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CRadiusData::set_allocated_top_left(::CRadiusData_CCornerRadius* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CRadiusData.top_left)
}

// optional .CRadiusData.CCornerRadius top_right = 2;
inline bool CRadiusData::has_top_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CRadiusData::set_has_top_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CRadiusData::clear_has_top_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CRadiusData::clear_top_right() {
  if (top_right_ != NULL) top_right_->::CRadiusData_CCornerRadius::Clear();
  clear_has_top_right();
}
inline const ::CRadiusData_CCornerRadius& CRadiusData::top_right() const {
  // @@protoc_insertion_point(field_get:CRadiusData.top_right)
  return top_right_ != NULL ? *top_right_ : *default_instance_->top_right_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::mutable_top_right() {
  set_has_top_right();
  if (top_right_ == NULL) {
    top_right_ = new ::CRadiusData_CCornerRadius;
  }
  // @@protoc_insertion_point(field_mutable:CRadiusData.top_right)
  return top_right_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::release_top_right() {
  clear_has_top_right();
  ::CRadiusData_CCornerRadius* temp = top_right_;
  top_right_ = NULL;
  return temp;
}
inline void CRadiusData::set_allocated_top_right(::CRadiusData_CCornerRadius* top_right) {
  delete top_right_;
  top_right_ = top_right;
  if (top_right) {
    set_has_top_right();
  } else {
    clear_has_top_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CRadiusData.top_right)
}

// optional .CRadiusData.CCornerRadius bottom_right = 3;
inline bool CRadiusData::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CRadiusData::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CRadiusData::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CRadiusData::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CRadiusData_CCornerRadius::Clear();
  clear_has_bottom_right();
}
inline const ::CRadiusData_CCornerRadius& CRadiusData::bottom_right() const {
  // @@protoc_insertion_point(field_get:CRadiusData.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CRadiusData_CCornerRadius;
  }
  // @@protoc_insertion_point(field_mutable:CRadiusData.bottom_right)
  return bottom_right_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::release_bottom_right() {
  clear_has_bottom_right();
  ::CRadiusData_CCornerRadius* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CRadiusData::set_allocated_bottom_right(::CRadiusData_CCornerRadius* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CRadiusData.bottom_right)
}

// optional .CRadiusData.CCornerRadius bottom_left = 4;
inline bool CRadiusData::has_bottom_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CRadiusData::set_has_bottom_left() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CRadiusData::clear_has_bottom_left() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CRadiusData::clear_bottom_left() {
  if (bottom_left_ != NULL) bottom_left_->::CRadiusData_CCornerRadius::Clear();
  clear_has_bottom_left();
}
inline const ::CRadiusData_CCornerRadius& CRadiusData::bottom_left() const {
  // @@protoc_insertion_point(field_get:CRadiusData.bottom_left)
  return bottom_left_ != NULL ? *bottom_left_ : *default_instance_->bottom_left_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::mutable_bottom_left() {
  set_has_bottom_left();
  if (bottom_left_ == NULL) {
    bottom_left_ = new ::CRadiusData_CCornerRadius;
  }
  // @@protoc_insertion_point(field_mutable:CRadiusData.bottom_left)
  return bottom_left_;
}
inline ::CRadiusData_CCornerRadius* CRadiusData::release_bottom_left() {
  clear_has_bottom_left();
  ::CRadiusData_CCornerRadius* temp = bottom_left_;
  bottom_left_ = NULL;
  return temp;
}
inline void CRadiusData::set_allocated_bottom_left(::CRadiusData_CCornerRadius* bottom_left) {
  delete bottom_left_;
  bottom_left_ = bottom_left;
  if (bottom_left) {
    set_has_bottom_left();
  } else {
    clear_has_bottom_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CRadiusData.bottom_left)
}

// -------------------------------------------------------------------

// CBorderData_CBorderSide

// optional uint32 style = 1;
inline bool CBorderData_CBorderSide::has_style() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBorderData_CBorderSide::set_has_style() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBorderData_CBorderSide::clear_has_style() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBorderData_CBorderSide::clear_style() {
  style_ = 0u;
  clear_has_style();
}
inline ::google::protobuf::uint32 CBorderData_CBorderSide::style() const {
  // @@protoc_insertion_point(field_get:CBorderData.CBorderSide.style)
  return style_;
}
inline void CBorderData_CBorderSide::set_style(::google::protobuf::uint32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:CBorderData.CBorderSide.style)
}

// optional double width = 2;
inline bool CBorderData_CBorderSide::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBorderData_CBorderSide::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CBorderData_CBorderSide::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CBorderData_CBorderSide::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline double CBorderData_CBorderSide::width() const {
  // @@protoc_insertion_point(field_get:CBorderData.CBorderSide.width)
  return width_;
}
inline void CBorderData_CBorderSide::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CBorderData.CBorderSide.width)
}

// optional uint32 color = 3;
inline bool CBorderData_CBorderSide::has_color() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBorderData_CBorderSide::set_has_color() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CBorderData_CBorderSide::clear_has_color() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CBorderData_CBorderSide::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 CBorderData_CBorderSide::color() const {
  // @@protoc_insertion_point(field_get:CBorderData.CBorderSide.color)
  return color_;
}
inline void CBorderData_CBorderSide::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:CBorderData.CBorderSide.color)
}

// -------------------------------------------------------------------

// CBorderData

// optional .CBorderData.CBorderSide top = 1;
inline bool CBorderData::has_top() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBorderData::set_has_top() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBorderData::clear_has_top() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBorderData::clear_top() {
  if (top_ != NULL) top_->::CBorderData_CBorderSide::Clear();
  clear_has_top();
}
inline const ::CBorderData_CBorderSide& CBorderData::top() const {
  // @@protoc_insertion_point(field_get:CBorderData.top)
  return top_ != NULL ? *top_ : *default_instance_->top_;
}
inline ::CBorderData_CBorderSide* CBorderData::mutable_top() {
  set_has_top();
  if (top_ == NULL) {
    top_ = new ::CBorderData_CBorderSide;
  }
  // @@protoc_insertion_point(field_mutable:CBorderData.top)
  return top_;
}
inline ::CBorderData_CBorderSide* CBorderData::release_top() {
  clear_has_top();
  ::CBorderData_CBorderSide* temp = top_;
  top_ = NULL;
  return temp;
}
inline void CBorderData::set_allocated_top(::CBorderData_CBorderSide* top) {
  delete top_;
  top_ = top;
  if (top) {
    set_has_top();
  } else {
    clear_has_top();
  }
  // @@protoc_insertion_point(field_set_allocated:CBorderData.top)
}

// optional .CBorderData.CBorderSide right = 2;
inline bool CBorderData::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBorderData::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CBorderData::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CBorderData::clear_right() {
  if (right_ != NULL) right_->::CBorderData_CBorderSide::Clear();
  clear_has_right();
}
inline const ::CBorderData_CBorderSide& CBorderData::right() const {
  // @@protoc_insertion_point(field_get:CBorderData.right)
  return right_ != NULL ? *right_ : *default_instance_->right_;
}
inline ::CBorderData_CBorderSide* CBorderData::mutable_right() {
  set_has_right();
  if (right_ == NULL) {
    right_ = new ::CBorderData_CBorderSide;
  }
  // @@protoc_insertion_point(field_mutable:CBorderData.right)
  return right_;
}
inline ::CBorderData_CBorderSide* CBorderData::release_right() {
  clear_has_right();
  ::CBorderData_CBorderSide* temp = right_;
  right_ = NULL;
  return temp;
}
inline void CBorderData::set_allocated_right(::CBorderData_CBorderSide* right) {
  delete right_;
  right_ = right;
  if (right) {
    set_has_right();
  } else {
    clear_has_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CBorderData.right)
}

// optional .CBorderData.CBorderSide bottom = 3;
inline bool CBorderData::has_bottom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBorderData::set_has_bottom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CBorderData::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CBorderData::clear_bottom() {
  if (bottom_ != NULL) bottom_->::CBorderData_CBorderSide::Clear();
  clear_has_bottom();
}
inline const ::CBorderData_CBorderSide& CBorderData::bottom() const {
  // @@protoc_insertion_point(field_get:CBorderData.bottom)
  return bottom_ != NULL ? *bottom_ : *default_instance_->bottom_;
}
inline ::CBorderData_CBorderSide* CBorderData::mutable_bottom() {
  set_has_bottom();
  if (bottom_ == NULL) {
    bottom_ = new ::CBorderData_CBorderSide;
  }
  // @@protoc_insertion_point(field_mutable:CBorderData.bottom)
  return bottom_;
}
inline ::CBorderData_CBorderSide* CBorderData::release_bottom() {
  clear_has_bottom();
  ::CBorderData_CBorderSide* temp = bottom_;
  bottom_ = NULL;
  return temp;
}
inline void CBorderData::set_allocated_bottom(::CBorderData_CBorderSide* bottom) {
  delete bottom_;
  bottom_ = bottom;
  if (bottom) {
    set_has_bottom();
  } else {
    clear_has_bottom();
  }
  // @@protoc_insertion_point(field_set_allocated:CBorderData.bottom)
}

// optional .CBorderData.CBorderSide left = 4;
inline bool CBorderData::has_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CBorderData::set_has_left() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CBorderData::clear_has_left() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CBorderData::clear_left() {
  if (left_ != NULL) left_->::CBorderData_CBorderSide::Clear();
  clear_has_left();
}
inline const ::CBorderData_CBorderSide& CBorderData::left() const {
  // @@protoc_insertion_point(field_get:CBorderData.left)
  return left_ != NULL ? *left_ : *default_instance_->left_;
}
inline ::CBorderData_CBorderSide* CBorderData::mutable_left() {
  set_has_left();
  if (left_ == NULL) {
    left_ = new ::CBorderData_CBorderSide;
  }
  // @@protoc_insertion_point(field_mutable:CBorderData.left)
  return left_;
}
inline ::CBorderData_CBorderSide* CBorderData::release_left() {
  clear_has_left();
  ::CBorderData_CBorderSide* temp = left_;
  left_ = NULL;
  return temp;
}
inline void CBorderData::set_allocated_left(::CBorderData_CBorderSide* left) {
  delete left_;
  left_ = left;
  if (left) {
    set_has_left();
  } else {
    clear_has_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CBorderData.left)
}

// -------------------------------------------------------------------

// CBoxShadowData

// optional bool inset = 1;
inline bool CBoxShadowData::has_inset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBoxShadowData::set_has_inset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBoxShadowData::clear_has_inset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBoxShadowData::clear_inset() {
  inset_ = false;
  clear_has_inset();
}
inline bool CBoxShadowData::inset() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.inset)
  return inset_;
}
inline void CBoxShadowData::set_inset(bool value) {
  set_has_inset();
  inset_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.inset)
}

// optional double horizontal_offset = 2;
inline bool CBoxShadowData::has_horizontal_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBoxShadowData::set_has_horizontal_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CBoxShadowData::clear_has_horizontal_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CBoxShadowData::clear_horizontal_offset() {
  horizontal_offset_ = 0;
  clear_has_horizontal_offset();
}
inline double CBoxShadowData::horizontal_offset() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.horizontal_offset)
  return horizontal_offset_;
}
inline void CBoxShadowData::set_horizontal_offset(double value) {
  set_has_horizontal_offset();
  horizontal_offset_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.horizontal_offset)
}

// optional double vertical_offset = 3;
inline bool CBoxShadowData::has_vertical_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBoxShadowData::set_has_vertical_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CBoxShadowData::clear_has_vertical_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CBoxShadowData::clear_vertical_offset() {
  vertical_offset_ = 0;
  clear_has_vertical_offset();
}
inline double CBoxShadowData::vertical_offset() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.vertical_offset)
  return vertical_offset_;
}
inline void CBoxShadowData::set_vertical_offset(double value) {
  set_has_vertical_offset();
  vertical_offset_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.vertical_offset)
}

// optional double blur_radius = 4;
inline bool CBoxShadowData::has_blur_radius() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CBoxShadowData::set_has_blur_radius() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CBoxShadowData::clear_has_blur_radius() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CBoxShadowData::clear_blur_radius() {
  blur_radius_ = 0;
  clear_has_blur_radius();
}
inline double CBoxShadowData::blur_radius() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.blur_radius)
  return blur_radius_;
}
inline void CBoxShadowData::set_blur_radius(double value) {
  set_has_blur_radius();
  blur_radius_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.blur_radius)
}

// optional double spread_distance = 5;
inline bool CBoxShadowData::has_spread_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CBoxShadowData::set_has_spread_distance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CBoxShadowData::clear_has_spread_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CBoxShadowData::clear_spread_distance() {
  spread_distance_ = 0;
  clear_has_spread_distance();
}
inline double CBoxShadowData::spread_distance() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.spread_distance)
  return spread_distance_;
}
inline void CBoxShadowData::set_spread_distance(double value) {
  set_has_spread_distance();
  spread_distance_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.spread_distance)
}

// optional uint32 color = 6;
inline bool CBoxShadowData::has_color() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CBoxShadowData::set_has_color() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CBoxShadowData::clear_has_color() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CBoxShadowData::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 CBoxShadowData::color() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.color)
  return color_;
}
inline void CBoxShadowData::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.color)
}

// optional bool fill = 7;
inline bool CBoxShadowData::has_fill() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CBoxShadowData::set_has_fill() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CBoxShadowData::clear_has_fill() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CBoxShadowData::clear_fill() {
  fill_ = false;
  clear_has_fill();
}
inline bool CBoxShadowData::fill() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.fill)
  return fill_;
}
inline void CBoxShadowData::set_fill(bool value) {
  set_has_fill();
  fill_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.fill)
}

// optional bool animating = 8;
inline bool CBoxShadowData::has_animating() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CBoxShadowData::set_has_animating() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CBoxShadowData::clear_has_animating() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CBoxShadowData::clear_animating() {
  animating_ = false;
  clear_has_animating();
}
inline bool CBoxShadowData::animating() const {
  // @@protoc_insertion_point(field_get:CBoxShadowData.animating)
  return animating_;
}
inline void CBoxShadowData::set_animating(bool value) {
  set_has_animating();
  animating_ = value;
  // @@protoc_insertion_point(field_set:CBoxShadowData.animating)
}

// -------------------------------------------------------------------

// CTextShadowData

// optional double horizontal_offset = 2;
inline bool CTextShadowData::has_horizontal_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTextShadowData::set_has_horizontal_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTextShadowData::clear_has_horizontal_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTextShadowData::clear_horizontal_offset() {
  horizontal_offset_ = 0;
  clear_has_horizontal_offset();
}
inline double CTextShadowData::horizontal_offset() const {
  // @@protoc_insertion_point(field_get:CTextShadowData.horizontal_offset)
  return horizontal_offset_;
}
inline void CTextShadowData::set_horizontal_offset(double value) {
  set_has_horizontal_offset();
  horizontal_offset_ = value;
  // @@protoc_insertion_point(field_set:CTextShadowData.horizontal_offset)
}

// optional double vertical_offset = 3;
inline bool CTextShadowData::has_vertical_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTextShadowData::set_has_vertical_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTextShadowData::clear_has_vertical_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTextShadowData::clear_vertical_offset() {
  vertical_offset_ = 0;
  clear_has_vertical_offset();
}
inline double CTextShadowData::vertical_offset() const {
  // @@protoc_insertion_point(field_get:CTextShadowData.vertical_offset)
  return vertical_offset_;
}
inline void CTextShadowData::set_vertical_offset(double value) {
  set_has_vertical_offset();
  vertical_offset_ = value;
  // @@protoc_insertion_point(field_set:CTextShadowData.vertical_offset)
}

// optional double blur_radius = 4;
inline bool CTextShadowData::has_blur_radius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTextShadowData::set_has_blur_radius() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTextShadowData::clear_has_blur_radius() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTextShadowData::clear_blur_radius() {
  blur_radius_ = 0;
  clear_has_blur_radius();
}
inline double CTextShadowData::blur_radius() const {
  // @@protoc_insertion_point(field_get:CTextShadowData.blur_radius)
  return blur_radius_;
}
inline void CTextShadowData::set_blur_radius(double value) {
  set_has_blur_radius();
  blur_radius_ = value;
  // @@protoc_insertion_point(field_set:CTextShadowData.blur_radius)
}

// optional uint32 color = 6;
inline bool CTextShadowData::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTextShadowData::set_has_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTextShadowData::clear_has_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTextShadowData::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 CTextShadowData::color() const {
  // @@protoc_insertion_point(field_get:CTextShadowData.color)
  return color_;
}
inline void CTextShadowData::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:CTextShadowData.color)
}

// optional bool animating = 8;
inline bool CTextShadowData::has_animating() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTextShadowData::set_has_animating() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTextShadowData::clear_has_animating() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTextShadowData::clear_animating() {
  animating_ = false;
  clear_has_animating();
}
inline bool CTextShadowData::animating() const {
  // @@protoc_insertion_point(field_get:CTextShadowData.animating)
  return animating_;
}
inline void CTextShadowData::set_animating(bool value) {
  set_has_animating();
  animating_ = value;
  // @@protoc_insertion_point(field_set:CTextShadowData.animating)
}

// optional double strength = 9;
inline bool CTextShadowData::has_strength() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTextShadowData::set_has_strength() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CTextShadowData::clear_has_strength() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CTextShadowData::clear_strength() {
  strength_ = 0;
  clear_has_strength();
}
inline double CTextShadowData::strength() const {
  // @@protoc_insertion_point(field_get:CTextShadowData.strength)
  return strength_;
}
inline void CTextShadowData::set_strength(double value) {
  set_has_strength();
  strength_ = value;
  // @@protoc_insertion_point(field_set:CTextShadowData.strength)
}

// -------------------------------------------------------------------

// CMsgClipData

// optional double left = 1;
inline bool CMsgClipData::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClipData::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClipData::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClipData::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline double CMsgClipData::left() const {
  // @@protoc_insertion_point(field_get:CMsgClipData.left)
  return left_;
}
inline void CMsgClipData::set_left(double value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:CMsgClipData.left)
}

// optional double top = 2;
inline bool CMsgClipData::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClipData::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClipData::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClipData::clear_top() {
  top_ = 0;
  clear_has_top();
}
inline double CMsgClipData::top() const {
  // @@protoc_insertion_point(field_get:CMsgClipData.top)
  return top_;
}
inline void CMsgClipData::set_top(double value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:CMsgClipData.top)
}

// optional double right = 3;
inline bool CMsgClipData::has_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClipData::set_has_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClipData::clear_has_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClipData::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline double CMsgClipData::right() const {
  // @@protoc_insertion_point(field_get:CMsgClipData.right)
  return right_;
}
inline void CMsgClipData::set_right(double value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:CMsgClipData.right)
}

// optional double bottom = 4;
inline bool CMsgClipData::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClipData::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClipData::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClipData::clear_bottom() {
  bottom_ = 0;
  clear_has_bottom();
}
inline double CMsgClipData::bottom() const {
  // @@protoc_insertion_point(field_get:CMsgClipData.bottom)
  return bottom_;
}
inline void CMsgClipData::set_bottom(double value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:CMsgClipData.bottom)
}

// -------------------------------------------------------------------

// CMsgPushCompositingLayer

// optional uint64 layer_id = 1;
inline bool CMsgPushCompositingLayer::has_layer_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPushCompositingLayer::clear_layer_id() {
  layer_id_ = GOOGLE_ULONGLONG(0);
  clear_has_layer_id();
}
inline ::google::protobuf::uint64 CMsgPushCompositingLayer::layer_id() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_id)
  return layer_id_;
}
inline void CMsgPushCompositingLayer::set_layer_id(::google::protobuf::uint64 value) {
  set_has_layer_id();
  layer_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_id)
}

// optional double width = 2;
inline bool CMsgPushCompositingLayer::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPushCompositingLayer::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPushCompositingLayer::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline double CMsgPushCompositingLayer::width() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.width)
  return width_;
}
inline void CMsgPushCompositingLayer::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.width)
}

// optional double height = 3;
inline bool CMsgPushCompositingLayer::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPushCompositingLayer::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPushCompositingLayer::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline double CMsgPushCompositingLayer::height() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.height)
  return height_;
}
inline void CMsgPushCompositingLayer::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.height)
}

// optional double layer_quad_top_left_x = 4;
inline bool CMsgPushCompositingLayer::has_layer_quad_top_left_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_top_left_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_top_left_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_top_left_x() {
  layer_quad_top_left_x_ = 0;
  clear_has_layer_quad_top_left_x();
}
inline double CMsgPushCompositingLayer::layer_quad_top_left_x() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_top_left_x)
  return layer_quad_top_left_x_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_top_left_x(double value) {
  set_has_layer_quad_top_left_x();
  layer_quad_top_left_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_top_left_x)
}

// optional double layer_quad_top_left_y = 5;
inline bool CMsgPushCompositingLayer::has_layer_quad_top_left_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_top_left_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_top_left_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_top_left_y() {
  layer_quad_top_left_y_ = 0;
  clear_has_layer_quad_top_left_y();
}
inline double CMsgPushCompositingLayer::layer_quad_top_left_y() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_top_left_y)
  return layer_quad_top_left_y_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_top_left_y(double value) {
  set_has_layer_quad_top_left_y();
  layer_quad_top_left_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_top_left_y)
}

// optional double layer_quad_top_left_z = 6;
inline bool CMsgPushCompositingLayer::has_layer_quad_top_left_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_top_left_z() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_top_left_z() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_top_left_z() {
  layer_quad_top_left_z_ = 0;
  clear_has_layer_quad_top_left_z();
}
inline double CMsgPushCompositingLayer::layer_quad_top_left_z() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_top_left_z)
  return layer_quad_top_left_z_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_top_left_z(double value) {
  set_has_layer_quad_top_left_z();
  layer_quad_top_left_z_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_top_left_z)
}

// optional double layer_quad_top_right_x = 7;
inline bool CMsgPushCompositingLayer::has_layer_quad_top_right_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_top_right_x() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_top_right_x() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_top_right_x() {
  layer_quad_top_right_x_ = 0;
  clear_has_layer_quad_top_right_x();
}
inline double CMsgPushCompositingLayer::layer_quad_top_right_x() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_top_right_x)
  return layer_quad_top_right_x_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_top_right_x(double value) {
  set_has_layer_quad_top_right_x();
  layer_quad_top_right_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_top_right_x)
}

// optional double layer_quad_top_right_y = 8;
inline bool CMsgPushCompositingLayer::has_layer_quad_top_right_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_top_right_y() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_top_right_y() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_top_right_y() {
  layer_quad_top_right_y_ = 0;
  clear_has_layer_quad_top_right_y();
}
inline double CMsgPushCompositingLayer::layer_quad_top_right_y() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_top_right_y)
  return layer_quad_top_right_y_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_top_right_y(double value) {
  set_has_layer_quad_top_right_y();
  layer_quad_top_right_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_top_right_y)
}

// optional double layer_quad_top_right_z = 9;
inline bool CMsgPushCompositingLayer::has_layer_quad_top_right_z() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_top_right_z() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_top_right_z() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_top_right_z() {
  layer_quad_top_right_z_ = 0;
  clear_has_layer_quad_top_right_z();
}
inline double CMsgPushCompositingLayer::layer_quad_top_right_z() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_top_right_z)
  return layer_quad_top_right_z_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_top_right_z(double value) {
  set_has_layer_quad_top_right_z();
  layer_quad_top_right_z_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_top_right_z)
}

// optional double layer_quad_bottom_left_x = 10;
inline bool CMsgPushCompositingLayer::has_layer_quad_bottom_left_x() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_bottom_left_x() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_bottom_left_x() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_bottom_left_x() {
  layer_quad_bottom_left_x_ = 0;
  clear_has_layer_quad_bottom_left_x();
}
inline double CMsgPushCompositingLayer::layer_quad_bottom_left_x() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_bottom_left_x)
  return layer_quad_bottom_left_x_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_bottom_left_x(double value) {
  set_has_layer_quad_bottom_left_x();
  layer_quad_bottom_left_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_bottom_left_x)
}

// optional double layer_quad_bottom_left_y = 11;
inline bool CMsgPushCompositingLayer::has_layer_quad_bottom_left_y() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_bottom_left_y() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_bottom_left_y() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_bottom_left_y() {
  layer_quad_bottom_left_y_ = 0;
  clear_has_layer_quad_bottom_left_y();
}
inline double CMsgPushCompositingLayer::layer_quad_bottom_left_y() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_bottom_left_y)
  return layer_quad_bottom_left_y_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_bottom_left_y(double value) {
  set_has_layer_quad_bottom_left_y();
  layer_quad_bottom_left_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_bottom_left_y)
}

// optional double layer_quad_bottom_left_z = 12;
inline bool CMsgPushCompositingLayer::has_layer_quad_bottom_left_z() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_bottom_left_z() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_bottom_left_z() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_bottom_left_z() {
  layer_quad_bottom_left_z_ = 0;
  clear_has_layer_quad_bottom_left_z();
}
inline double CMsgPushCompositingLayer::layer_quad_bottom_left_z() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_bottom_left_z)
  return layer_quad_bottom_left_z_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_bottom_left_z(double value) {
  set_has_layer_quad_bottom_left_z();
  layer_quad_bottom_left_z_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_bottom_left_z)
}

// optional double layer_quad_bottom_right_x = 13;
inline bool CMsgPushCompositingLayer::has_layer_quad_bottom_right_x() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_bottom_right_x() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_bottom_right_x() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_bottom_right_x() {
  layer_quad_bottom_right_x_ = 0;
  clear_has_layer_quad_bottom_right_x();
}
inline double CMsgPushCompositingLayer::layer_quad_bottom_right_x() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_bottom_right_x)
  return layer_quad_bottom_right_x_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_bottom_right_x(double value) {
  set_has_layer_quad_bottom_right_x();
  layer_quad_bottom_right_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_bottom_right_x)
}

// optional double layer_quad_bottom_right_y = 14;
inline bool CMsgPushCompositingLayer::has_layer_quad_bottom_right_y() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_bottom_right_y() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_bottom_right_y() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_bottom_right_y() {
  layer_quad_bottom_right_y_ = 0;
  clear_has_layer_quad_bottom_right_y();
}
inline double CMsgPushCompositingLayer::layer_quad_bottom_right_y() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_bottom_right_y)
  return layer_quad_bottom_right_y_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_bottom_right_y(double value) {
  set_has_layer_quad_bottom_right_y();
  layer_quad_bottom_right_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_bottom_right_y)
}

// optional double layer_quad_bottom_right_z = 15;
inline bool CMsgPushCompositingLayer::has_layer_quad_bottom_right_z() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_layer_quad_bottom_right_z() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgPushCompositingLayer::clear_has_layer_quad_bottom_right_z() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgPushCompositingLayer::clear_layer_quad_bottom_right_z() {
  layer_quad_bottom_right_z_ = 0;
  clear_has_layer_quad_bottom_right_z();
}
inline double CMsgPushCompositingLayer::layer_quad_bottom_right_z() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.layer_quad_bottom_right_z)
  return layer_quad_bottom_right_z_;
}
inline void CMsgPushCompositingLayer::set_layer_quad_bottom_right_z(double value) {
  set_has_layer_quad_bottom_right_z();
  layer_quad_bottom_right_z_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.layer_quad_bottom_right_z)
}

// optional double transform_m00 = 16;
inline bool CMsgPushCompositingLayer::has_transform_m00() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m00() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m00() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m00() {
  transform_m00_ = 0;
  clear_has_transform_m00();
}
inline double CMsgPushCompositingLayer::transform_m00() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m00)
  return transform_m00_;
}
inline void CMsgPushCompositingLayer::set_transform_m00(double value) {
  set_has_transform_m00();
  transform_m00_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m00)
}

// optional double transform_m01 = 17;
inline bool CMsgPushCompositingLayer::has_transform_m01() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m01() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m01() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m01() {
  transform_m01_ = 0;
  clear_has_transform_m01();
}
inline double CMsgPushCompositingLayer::transform_m01() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m01)
  return transform_m01_;
}
inline void CMsgPushCompositingLayer::set_transform_m01(double value) {
  set_has_transform_m01();
  transform_m01_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m01)
}

// optional double transform_m02 = 18;
inline bool CMsgPushCompositingLayer::has_transform_m02() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m02() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m02() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m02() {
  transform_m02_ = 0;
  clear_has_transform_m02();
}
inline double CMsgPushCompositingLayer::transform_m02() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m02)
  return transform_m02_;
}
inline void CMsgPushCompositingLayer::set_transform_m02(double value) {
  set_has_transform_m02();
  transform_m02_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m02)
}

// optional double transform_m03 = 19;
inline bool CMsgPushCompositingLayer::has_transform_m03() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m03() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m03() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m03() {
  transform_m03_ = 0;
  clear_has_transform_m03();
}
inline double CMsgPushCompositingLayer::transform_m03() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m03)
  return transform_m03_;
}
inline void CMsgPushCompositingLayer::set_transform_m03(double value) {
  set_has_transform_m03();
  transform_m03_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m03)
}

// optional double transform_m10 = 20;
inline bool CMsgPushCompositingLayer::has_transform_m10() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m10() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m10() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m10() {
  transform_m10_ = 0;
  clear_has_transform_m10();
}
inline double CMsgPushCompositingLayer::transform_m10() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m10)
  return transform_m10_;
}
inline void CMsgPushCompositingLayer::set_transform_m10(double value) {
  set_has_transform_m10();
  transform_m10_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m10)
}

// optional double transform_m11 = 21;
inline bool CMsgPushCompositingLayer::has_transform_m11() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m11() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m11() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m11() {
  transform_m11_ = 0;
  clear_has_transform_m11();
}
inline double CMsgPushCompositingLayer::transform_m11() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m11)
  return transform_m11_;
}
inline void CMsgPushCompositingLayer::set_transform_m11(double value) {
  set_has_transform_m11();
  transform_m11_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m11)
}

// optional double transform_m12 = 22;
inline bool CMsgPushCompositingLayer::has_transform_m12() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m12() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m12() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m12() {
  transform_m12_ = 0;
  clear_has_transform_m12();
}
inline double CMsgPushCompositingLayer::transform_m12() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m12)
  return transform_m12_;
}
inline void CMsgPushCompositingLayer::set_transform_m12(double value) {
  set_has_transform_m12();
  transform_m12_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m12)
}

// optional double transform_m13 = 23;
inline bool CMsgPushCompositingLayer::has_transform_m13() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m13() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m13() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m13() {
  transform_m13_ = 0;
  clear_has_transform_m13();
}
inline double CMsgPushCompositingLayer::transform_m13() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m13)
  return transform_m13_;
}
inline void CMsgPushCompositingLayer::set_transform_m13(double value) {
  set_has_transform_m13();
  transform_m13_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m13)
}

// optional double transform_m20 = 24;
inline bool CMsgPushCompositingLayer::has_transform_m20() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m20() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m20() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m20() {
  transform_m20_ = 0;
  clear_has_transform_m20();
}
inline double CMsgPushCompositingLayer::transform_m20() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m20)
  return transform_m20_;
}
inline void CMsgPushCompositingLayer::set_transform_m20(double value) {
  set_has_transform_m20();
  transform_m20_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m20)
}

// optional double transform_m21 = 25;
inline bool CMsgPushCompositingLayer::has_transform_m21() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m21() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m21() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m21() {
  transform_m21_ = 0;
  clear_has_transform_m21();
}
inline double CMsgPushCompositingLayer::transform_m21() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m21)
  return transform_m21_;
}
inline void CMsgPushCompositingLayer::set_transform_m21(double value) {
  set_has_transform_m21();
  transform_m21_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m21)
}

// optional double transform_m22 = 26;
inline bool CMsgPushCompositingLayer::has_transform_m22() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m22() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m22() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m22() {
  transform_m22_ = 0;
  clear_has_transform_m22();
}
inline double CMsgPushCompositingLayer::transform_m22() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m22)
  return transform_m22_;
}
inline void CMsgPushCompositingLayer::set_transform_m22(double value) {
  set_has_transform_m22();
  transform_m22_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m22)
}

// optional double transform_m23 = 27;
inline bool CMsgPushCompositingLayer::has_transform_m23() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m23() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m23() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m23() {
  transform_m23_ = 0;
  clear_has_transform_m23();
}
inline double CMsgPushCompositingLayer::transform_m23() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m23)
  return transform_m23_;
}
inline void CMsgPushCompositingLayer::set_transform_m23(double value) {
  set_has_transform_m23();
  transform_m23_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m23)
}

// optional double transform_m30 = 28;
inline bool CMsgPushCompositingLayer::has_transform_m30() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m30() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m30() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m30() {
  transform_m30_ = 0;
  clear_has_transform_m30();
}
inline double CMsgPushCompositingLayer::transform_m30() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m30)
  return transform_m30_;
}
inline void CMsgPushCompositingLayer::set_transform_m30(double value) {
  set_has_transform_m30();
  transform_m30_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m30)
}

// optional double transform_m31 = 29;
inline bool CMsgPushCompositingLayer::has_transform_m31() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m31() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m31() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m31() {
  transform_m31_ = 0;
  clear_has_transform_m31();
}
inline double CMsgPushCompositingLayer::transform_m31() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m31)
  return transform_m31_;
}
inline void CMsgPushCompositingLayer::set_transform_m31(double value) {
  set_has_transform_m31();
  transform_m31_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m31)
}

// optional double transform_m32 = 30;
inline bool CMsgPushCompositingLayer::has_transform_m32() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m32() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m32() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m32() {
  transform_m32_ = 0;
  clear_has_transform_m32();
}
inline double CMsgPushCompositingLayer::transform_m32() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m32)
  return transform_m32_;
}
inline void CMsgPushCompositingLayer::set_transform_m32(double value) {
  set_has_transform_m32();
  transform_m32_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m32)
}

// optional double transform_m33 = 31;
inline bool CMsgPushCompositingLayer::has_transform_m33() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_transform_m33() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CMsgPushCompositingLayer::clear_has_transform_m33() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CMsgPushCompositingLayer::clear_transform_m33() {
  transform_m33_ = 0;
  clear_has_transform_m33();
}
inline double CMsgPushCompositingLayer::transform_m33() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.transform_m33)
  return transform_m33_;
}
inline void CMsgPushCompositingLayer::set_transform_m33(double value) {
  set_has_transform_m33();
  transform_m33_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.transform_m33)
}

// optional double perspective_depth = 32;
inline bool CMsgPushCompositingLayer::has_perspective_depth() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_perspective_depth() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CMsgPushCompositingLayer::clear_has_perspective_depth() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CMsgPushCompositingLayer::clear_perspective_depth() {
  perspective_depth_ = 0;
  clear_has_perspective_depth();
}
inline double CMsgPushCompositingLayer::perspective_depth() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.perspective_depth)
  return perspective_depth_;
}
inline void CMsgPushCompositingLayer::set_perspective_depth(double value) {
  set_has_perspective_depth();
  perspective_depth_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.perspective_depth)
}

// optional double opacity = 33;
inline bool CMsgPushCompositingLayer::has_opacity() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_opacity() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CMsgPushCompositingLayer::clear_has_opacity() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CMsgPushCompositingLayer::clear_opacity() {
  opacity_ = 0;
  clear_has_opacity();
}
inline double CMsgPushCompositingLayer::opacity() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.opacity)
  return opacity_;
}
inline void CMsgPushCompositingLayer::set_opacity(double value) {
  set_has_opacity();
  opacity_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.opacity)
}

// optional uint32 composition_color = 34;
inline bool CMsgPushCompositingLayer::has_composition_color() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_composition_color() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CMsgPushCompositingLayer::clear_has_composition_color() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CMsgPushCompositingLayer::clear_composition_color() {
  composition_color_ = 0u;
  clear_has_composition_color();
}
inline ::google::protobuf::uint32 CMsgPushCompositingLayer::composition_color() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.composition_color)
  return composition_color_;
}
inline void CMsgPushCompositingLayer::set_composition_color(::google::protobuf::uint32 value) {
  set_has_composition_color();
  composition_color_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.composition_color)
}

// optional double saturation = 35;
inline bool CMsgPushCompositingLayer::has_saturation() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_saturation() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CMsgPushCompositingLayer::clear_has_saturation() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CMsgPushCompositingLayer::clear_saturation() {
  saturation_ = 0;
  clear_has_saturation();
}
inline double CMsgPushCompositingLayer::saturation() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.saturation)
  return saturation_;
}
inline void CMsgPushCompositingLayer::set_saturation(double value) {
  set_has_saturation();
  saturation_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.saturation)
}

// optional double hue_shift = 36;
inline bool CMsgPushCompositingLayer::has_hue_shift() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_hue_shift() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CMsgPushCompositingLayer::clear_has_hue_shift() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CMsgPushCompositingLayer::clear_hue_shift() {
  hue_shift_ = 0;
  clear_has_hue_shift();
}
inline double CMsgPushCompositingLayer::hue_shift() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.hue_shift)
  return hue_shift_;
}
inline void CMsgPushCompositingLayer::set_hue_shift(double value) {
  set_has_hue_shift();
  hue_shift_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.hue_shift)
}

// optional double brightness = 37;
inline bool CMsgPushCompositingLayer::has_brightness() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_brightness() {
  _has_bits_[1] |= 0x00000010u;
}
inline void CMsgPushCompositingLayer::clear_has_brightness() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void CMsgPushCompositingLayer::clear_brightness() {
  brightness_ = 0;
  clear_has_brightness();
}
inline double CMsgPushCompositingLayer::brightness() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.brightness)
  return brightness_;
}
inline void CMsgPushCompositingLayer::set_brightness(double value) {
  set_has_brightness();
  brightness_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.brightness)
}

// optional double contrast = 38;
inline bool CMsgPushCompositingLayer::has_contrast() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_contrast() {
  _has_bits_[1] |= 0x00000020u;
}
inline void CMsgPushCompositingLayer::clear_has_contrast() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void CMsgPushCompositingLayer::clear_contrast() {
  contrast_ = 0;
  clear_has_contrast();
}
inline double CMsgPushCompositingLayer::contrast() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.contrast)
  return contrast_;
}
inline void CMsgPushCompositingLayer::set_contrast(double value) {
  set_has_contrast();
  contrast_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.contrast)
}

// optional uint32 opacity_mask_texture_id = 39;
inline bool CMsgPushCompositingLayer::has_opacity_mask_texture_id() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_opacity_mask_texture_id() {
  _has_bits_[1] |= 0x00000040u;
}
inline void CMsgPushCompositingLayer::clear_has_opacity_mask_texture_id() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void CMsgPushCompositingLayer::clear_opacity_mask_texture_id() {
  opacity_mask_texture_id_ = 0u;
  clear_has_opacity_mask_texture_id();
}
inline ::google::protobuf::uint32 CMsgPushCompositingLayer::opacity_mask_texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.opacity_mask_texture_id)
  return opacity_mask_texture_id_;
}
inline void CMsgPushCompositingLayer::set_opacity_mask_texture_id(::google::protobuf::uint32 value) {
  set_has_opacity_mask_texture_id();
  opacity_mask_texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.opacity_mask_texture_id)
}

// optional double opacity_mask_opacity = 40;
inline bool CMsgPushCompositingLayer::has_opacity_mask_opacity() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_opacity_mask_opacity() {
  _has_bits_[1] |= 0x00000080u;
}
inline void CMsgPushCompositingLayer::clear_has_opacity_mask_opacity() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void CMsgPushCompositingLayer::clear_opacity_mask_opacity() {
  opacity_mask_opacity_ = 0;
  clear_has_opacity_mask_opacity();
}
inline double CMsgPushCompositingLayer::opacity_mask_opacity() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.opacity_mask_opacity)
  return opacity_mask_opacity_;
}
inline void CMsgPushCompositingLayer::set_opacity_mask_opacity(double value) {
  set_has_opacity_mask_opacity();
  opacity_mask_opacity_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.opacity_mask_opacity)
}

// optional .CBorderData border = 41;
inline bool CMsgPushCompositingLayer::has_border() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_border() {
  _has_bits_[1] |= 0x00000100u;
}
inline void CMsgPushCompositingLayer::clear_has_border() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void CMsgPushCompositingLayer::clear_border() {
  if (border_ != NULL) border_->::CBorderData::Clear();
  clear_has_border();
}
inline const ::CBorderData& CMsgPushCompositingLayer::border() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.border)
  return border_ != NULL ? *border_ : *default_instance_->border_;
}
inline ::CBorderData* CMsgPushCompositingLayer::mutable_border() {
  set_has_border();
  if (border_ == NULL) {
    border_ = new ::CBorderData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushCompositingLayer.border)
  return border_;
}
inline ::CBorderData* CMsgPushCompositingLayer::release_border() {
  clear_has_border();
  ::CBorderData* temp = border_;
  border_ = NULL;
  return temp;
}
inline void CMsgPushCompositingLayer::set_allocated_border(::CBorderData* border) {
  delete border_;
  border_ = border;
  if (border) {
    set_has_border();
  } else {
    clear_has_border();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushCompositingLayer.border)
}

// optional .CRadiusData border_radius = 42;
inline bool CMsgPushCompositingLayer::has_border_radius() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_border_radius() {
  _has_bits_[1] |= 0x00000200u;
}
inline void CMsgPushCompositingLayer::clear_has_border_radius() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void CMsgPushCompositingLayer::clear_border_radius() {
  if (border_radius_ != NULL) border_radius_->::CRadiusData::Clear();
  clear_has_border_radius();
}
inline const ::CRadiusData& CMsgPushCompositingLayer::border_radius() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.border_radius)
  return border_radius_ != NULL ? *border_radius_ : *default_instance_->border_radius_;
}
inline ::CRadiusData* CMsgPushCompositingLayer::mutable_border_radius() {
  set_has_border_radius();
  if (border_radius_ == NULL) {
    border_radius_ = new ::CRadiusData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushCompositingLayer.border_radius)
  return border_radius_;
}
inline ::CRadiusData* CMsgPushCompositingLayer::release_border_radius() {
  clear_has_border_radius();
  ::CRadiusData* temp = border_radius_;
  border_radius_ = NULL;
  return temp;
}
inline void CMsgPushCompositingLayer::set_allocated_border_radius(::CRadiusData* border_radius) {
  delete border_radius_;
  border_radius_ = border_radius;
  if (border_radius) {
    set_has_border_radius();
  } else {
    clear_has_border_radius();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushCompositingLayer.border_radius)
}

// optional .CBoxShadowData box_shadow = 43;
inline bool CMsgPushCompositingLayer::has_box_shadow() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_box_shadow() {
  _has_bits_[1] |= 0x00000400u;
}
inline void CMsgPushCompositingLayer::clear_has_box_shadow() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void CMsgPushCompositingLayer::clear_box_shadow() {
  if (box_shadow_ != NULL) box_shadow_->::CBoxShadowData::Clear();
  clear_has_box_shadow();
}
inline const ::CBoxShadowData& CMsgPushCompositingLayer::box_shadow() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.box_shadow)
  return box_shadow_ != NULL ? *box_shadow_ : *default_instance_->box_shadow_;
}
inline ::CBoxShadowData* CMsgPushCompositingLayer::mutable_box_shadow() {
  set_has_box_shadow();
  if (box_shadow_ == NULL) {
    box_shadow_ = new ::CBoxShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushCompositingLayer.box_shadow)
  return box_shadow_;
}
inline ::CBoxShadowData* CMsgPushCompositingLayer::release_box_shadow() {
  clear_has_box_shadow();
  ::CBoxShadowData* temp = box_shadow_;
  box_shadow_ = NULL;
  return temp;
}
inline void CMsgPushCompositingLayer::set_allocated_box_shadow(::CBoxShadowData* box_shadow) {
  delete box_shadow_;
  box_shadow_ = box_shadow;
  if (box_shadow) {
    set_has_box_shadow();
  } else {
    clear_has_box_shadow();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushCompositingLayer.box_shadow)
}

// optional double gaussianblur_passes = 44;
inline bool CMsgPushCompositingLayer::has_gaussianblur_passes() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_gaussianblur_passes() {
  _has_bits_[1] |= 0x00000800u;
}
inline void CMsgPushCompositingLayer::clear_has_gaussianblur_passes() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void CMsgPushCompositingLayer::clear_gaussianblur_passes() {
  gaussianblur_passes_ = 0;
  clear_has_gaussianblur_passes();
}
inline double CMsgPushCompositingLayer::gaussianblur_passes() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.gaussianblur_passes)
  return gaussianblur_passes_;
}
inline void CMsgPushCompositingLayer::set_gaussianblur_passes(double value) {
  set_has_gaussianblur_passes();
  gaussianblur_passes_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.gaussianblur_passes)
}

// optional double gaussianblur_stddevhor = 45;
inline bool CMsgPushCompositingLayer::has_gaussianblur_stddevhor() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_gaussianblur_stddevhor() {
  _has_bits_[1] |= 0x00001000u;
}
inline void CMsgPushCompositingLayer::clear_has_gaussianblur_stddevhor() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void CMsgPushCompositingLayer::clear_gaussianblur_stddevhor() {
  gaussianblur_stddevhor_ = 0;
  clear_has_gaussianblur_stddevhor();
}
inline double CMsgPushCompositingLayer::gaussianblur_stddevhor() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.gaussianblur_stddevhor)
  return gaussianblur_stddevhor_;
}
inline void CMsgPushCompositingLayer::set_gaussianblur_stddevhor(double value) {
  set_has_gaussianblur_stddevhor();
  gaussianblur_stddevhor_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.gaussianblur_stddevhor)
}

// optional double gaussianblur_stddevver = 46;
inline bool CMsgPushCompositingLayer::has_gaussianblur_stddevver() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_gaussianblur_stddevver() {
  _has_bits_[1] |= 0x00002000u;
}
inline void CMsgPushCompositingLayer::clear_has_gaussianblur_stddevver() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void CMsgPushCompositingLayer::clear_gaussianblur_stddevver() {
  gaussianblur_stddevver_ = 0;
  clear_has_gaussianblur_stddevver();
}
inline double CMsgPushCompositingLayer::gaussianblur_stddevver() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.gaussianblur_stddevver)
  return gaussianblur_stddevver_;
}
inline void CMsgPushCompositingLayer::set_gaussianblur_stddevver(double value) {
  set_has_gaussianblur_stddevver();
  gaussianblur_stddevver_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.gaussianblur_stddevver)
}

// optional double scale_2d_factors_x = 47;
inline bool CMsgPushCompositingLayer::has_scale_2d_factors_x() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_scale_2d_factors_x() {
  _has_bits_[1] |= 0x00004000u;
}
inline void CMsgPushCompositingLayer::clear_has_scale_2d_factors_x() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void CMsgPushCompositingLayer::clear_scale_2d_factors_x() {
  scale_2d_factors_x_ = 0;
  clear_has_scale_2d_factors_x();
}
inline double CMsgPushCompositingLayer::scale_2d_factors_x() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.scale_2d_factors_x)
  return scale_2d_factors_x_;
}
inline void CMsgPushCompositingLayer::set_scale_2d_factors_x(double value) {
  set_has_scale_2d_factors_x();
  scale_2d_factors_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.scale_2d_factors_x)
}

// optional double scale_2d_factors_y = 48;
inline bool CMsgPushCompositingLayer::has_scale_2d_factors_y() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_scale_2d_factors_y() {
  _has_bits_[1] |= 0x00008000u;
}
inline void CMsgPushCompositingLayer::clear_has_scale_2d_factors_y() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void CMsgPushCompositingLayer::clear_scale_2d_factors_y() {
  scale_2d_factors_y_ = 0;
  clear_has_scale_2d_factors_y();
}
inline double CMsgPushCompositingLayer::scale_2d_factors_y() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.scale_2d_factors_y)
  return scale_2d_factors_y_;
}
inline void CMsgPushCompositingLayer::set_scale_2d_factors_y(double value) {
  set_has_scale_2d_factors_y();
  scale_2d_factors_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.scale_2d_factors_y)
}

// optional double rotate_2d = 49;
inline bool CMsgPushCompositingLayer::has_rotate_2d() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_rotate_2d() {
  _has_bits_[1] |= 0x00010000u;
}
inline void CMsgPushCompositingLayer::clear_has_rotate_2d() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void CMsgPushCompositingLayer::clear_rotate_2d() {
  rotate_2d_ = 0;
  clear_has_rotate_2d();
}
inline double CMsgPushCompositingLayer::rotate_2d() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.rotate_2d)
  return rotate_2d_;
}
inline void CMsgPushCompositingLayer::set_rotate_2d(double value) {
  set_has_rotate_2d();
  rotate_2d_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.rotate_2d)
}

// optional bool needs_clear = 50;
inline bool CMsgPushCompositingLayer::has_needs_clear() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_needs_clear() {
  _has_bits_[1] |= 0x00020000u;
}
inline void CMsgPushCompositingLayer::clear_has_needs_clear() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void CMsgPushCompositingLayer::clear_needs_clear() {
  needs_clear_ = false;
  clear_has_needs_clear();
}
inline bool CMsgPushCompositingLayer::needs_clear() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.needs_clear)
  return needs_clear_;
}
inline void CMsgPushCompositingLayer::set_needs_clear(bool value) {
  set_has_needs_clear();
  needs_clear_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.needs_clear)
}

// optional bool needs_depth = 51;
inline bool CMsgPushCompositingLayer::has_needs_depth() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_needs_depth() {
  _has_bits_[1] |= 0x00040000u;
}
inline void CMsgPushCompositingLayer::clear_has_needs_depth() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void CMsgPushCompositingLayer::clear_needs_depth() {
  needs_depth_ = false;
  clear_has_needs_depth();
}
inline bool CMsgPushCompositingLayer::needs_depth() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.needs_depth)
  return needs_depth_;
}
inline void CMsgPushCompositingLayer::set_needs_depth(bool value) {
  set_has_needs_depth();
  needs_depth_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.needs_depth)
}

// optional bool needs_redraw_every_frame = 52;
inline bool CMsgPushCompositingLayer::has_needs_redraw_every_frame() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_needs_redraw_every_frame() {
  _has_bits_[1] |= 0x00080000u;
}
inline void CMsgPushCompositingLayer::clear_has_needs_redraw_every_frame() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void CMsgPushCompositingLayer::clear_needs_redraw_every_frame() {
  needs_redraw_every_frame_ = false;
  clear_has_needs_redraw_every_frame();
}
inline bool CMsgPushCompositingLayer::needs_redraw_every_frame() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.needs_redraw_every_frame)
  return needs_redraw_every_frame_;
}
inline void CMsgPushCompositingLayer::set_needs_redraw_every_frame(bool value) {
  set_has_needs_redraw_every_frame();
  needs_redraw_every_frame_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.needs_redraw_every_frame)
}

// optional .CTextShadowData text_shadow = 53;
inline bool CMsgPushCompositingLayer::has_text_shadow() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_text_shadow() {
  _has_bits_[1] |= 0x00100000u;
}
inline void CMsgPushCompositingLayer::clear_has_text_shadow() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void CMsgPushCompositingLayer::clear_text_shadow() {
  if (text_shadow_ != NULL) text_shadow_->::CTextShadowData::Clear();
  clear_has_text_shadow();
}
inline const ::CTextShadowData& CMsgPushCompositingLayer::text_shadow() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.text_shadow)
  return text_shadow_ != NULL ? *text_shadow_ : *default_instance_->text_shadow_;
}
inline ::CTextShadowData* CMsgPushCompositingLayer::mutable_text_shadow() {
  set_has_text_shadow();
  if (text_shadow_ == NULL) {
    text_shadow_ = new ::CTextShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushCompositingLayer.text_shadow)
  return text_shadow_;
}
inline ::CTextShadowData* CMsgPushCompositingLayer::release_text_shadow() {
  clear_has_text_shadow();
  ::CTextShadowData* temp = text_shadow_;
  text_shadow_ = NULL;
  return temp;
}
inline void CMsgPushCompositingLayer::set_allocated_text_shadow(::CTextShadowData* text_shadow) {
  delete text_shadow_;
  text_shadow_ = text_shadow;
  if (text_shadow) {
    set_has_text_shadow();
  } else {
    clear_has_text_shadow();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushCompositingLayer.text_shadow)
}

// optional uint32 mix_blend_mode = 54;
inline bool CMsgPushCompositingLayer::has_mix_blend_mode() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_mix_blend_mode() {
  _has_bits_[1] |= 0x00200000u;
}
inline void CMsgPushCompositingLayer::clear_has_mix_blend_mode() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void CMsgPushCompositingLayer::clear_mix_blend_mode() {
  mix_blend_mode_ = 0u;
  clear_has_mix_blend_mode();
}
inline ::google::protobuf::uint32 CMsgPushCompositingLayer::mix_blend_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.mix_blend_mode)
  return mix_blend_mode_;
}
inline void CMsgPushCompositingLayer::set_mix_blend_mode(::google::protobuf::uint32 value) {
  set_has_mix_blend_mode();
  mix_blend_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.mix_blend_mode)
}

// optional double occluded_left_edge = 55;
inline bool CMsgPushCompositingLayer::has_occluded_left_edge() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_occluded_left_edge() {
  _has_bits_[1] |= 0x00400000u;
}
inline void CMsgPushCompositingLayer::clear_has_occluded_left_edge() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void CMsgPushCompositingLayer::clear_occluded_left_edge() {
  occluded_left_edge_ = 0;
  clear_has_occluded_left_edge();
}
inline double CMsgPushCompositingLayer::occluded_left_edge() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.occluded_left_edge)
  return occluded_left_edge_;
}
inline void CMsgPushCompositingLayer::set_occluded_left_edge(double value) {
  set_has_occluded_left_edge();
  occluded_left_edge_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.occluded_left_edge)
}

// optional double occluded_top_edge = 56;
inline bool CMsgPushCompositingLayer::has_occluded_top_edge() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_occluded_top_edge() {
  _has_bits_[1] |= 0x00800000u;
}
inline void CMsgPushCompositingLayer::clear_has_occluded_top_edge() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void CMsgPushCompositingLayer::clear_occluded_top_edge() {
  occluded_top_edge_ = 0;
  clear_has_occluded_top_edge();
}
inline double CMsgPushCompositingLayer::occluded_top_edge() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.occluded_top_edge)
  return occluded_top_edge_;
}
inline void CMsgPushCompositingLayer::set_occluded_top_edge(double value) {
  set_has_occluded_top_edge();
  occluded_top_edge_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.occluded_top_edge)
}

// optional double occluded_right_edge = 57;
inline bool CMsgPushCompositingLayer::has_occluded_right_edge() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_occluded_right_edge() {
  _has_bits_[1] |= 0x01000000u;
}
inline void CMsgPushCompositingLayer::clear_has_occluded_right_edge() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void CMsgPushCompositingLayer::clear_occluded_right_edge() {
  occluded_right_edge_ = 0;
  clear_has_occluded_right_edge();
}
inline double CMsgPushCompositingLayer::occluded_right_edge() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.occluded_right_edge)
  return occluded_right_edge_;
}
inline void CMsgPushCompositingLayer::set_occluded_right_edge(double value) {
  set_has_occluded_right_edge();
  occluded_right_edge_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.occluded_right_edge)
}

// optional double occluded_bottom_edge = 58;
inline bool CMsgPushCompositingLayer::has_occluded_bottom_edge() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void CMsgPushCompositingLayer::set_has_occluded_bottom_edge() {
  _has_bits_[1] |= 0x02000000u;
}
inline void CMsgPushCompositingLayer::clear_has_occluded_bottom_edge() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void CMsgPushCompositingLayer::clear_occluded_bottom_edge() {
  occluded_bottom_edge_ = 0;
  clear_has_occluded_bottom_edge();
}
inline double CMsgPushCompositingLayer::occluded_bottom_edge() const {
  // @@protoc_insertion_point(field_get:CMsgPushCompositingLayer.occluded_bottom_edge)
  return occluded_bottom_edge_;
}
inline void CMsgPushCompositingLayer::set_occluded_bottom_edge(double value) {
  set_has_occluded_bottom_edge();
  occluded_bottom_edge_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushCompositingLayer.occluded_bottom_edge)
}

// -------------------------------------------------------------------

// CMsgPopCompositingLayer

// -------------------------------------------------------------------

// CMsgFreeCompositingLayer

// optional uint64 layer_id = 1;
inline bool CMsgFreeCompositingLayer::has_layer_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFreeCompositingLayer::set_has_layer_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFreeCompositingLayer::clear_has_layer_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFreeCompositingLayer::clear_layer_id() {
  layer_id_ = GOOGLE_ULONGLONG(0);
  clear_has_layer_id();
}
inline ::google::protobuf::uint64 CMsgFreeCompositingLayer::layer_id() const {
  // @@protoc_insertion_point(field_get:CMsgFreeCompositingLayer.layer_id)
  return layer_id_;
}
inline void CMsgFreeCompositingLayer::set_layer_id(::google::protobuf::uint64 value) {
  set_has_layer_id();
  layer_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgFreeCompositingLayer.layer_id)
}

// -------------------------------------------------------------------

// CMsgTransitionData

// optional double start_time = 1;
inline bool CMsgTransitionData::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTransitionData::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTransitionData::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTransitionData::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline double CMsgTransitionData::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.start_time)
  return start_time_;
}
inline void CMsgTransitionData::set_start_time(double value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.start_time)
}

// optional double delay_seconds = 2;
inline bool CMsgTransitionData::has_delay_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTransitionData::set_has_delay_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTransitionData::clear_has_delay_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTransitionData::clear_delay_seconds() {
  delay_seconds_ = 0;
  clear_has_delay_seconds();
}
inline double CMsgTransitionData::delay_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.delay_seconds)
  return delay_seconds_;
}
inline void CMsgTransitionData::set_delay_seconds(double value) {
  set_has_delay_seconds();
  delay_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.delay_seconds)
}

// optional double duration_seconds = 3;
inline bool CMsgTransitionData::has_duration_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTransitionData::set_has_duration_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTransitionData::clear_has_duration_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTransitionData::clear_duration_seconds() {
  duration_seconds_ = 0;
  clear_has_duration_seconds();
}
inline double CMsgTransitionData::duration_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.duration_seconds)
  return duration_seconds_;
}
inline void CMsgTransitionData::set_duration_seconds(double value) {
  set_has_duration_seconds();
  duration_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.duration_seconds)
}

// optional uint32 timing_func = 4 [default = 0];
inline bool CMsgTransitionData::has_timing_func() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTransitionData::set_has_timing_func() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTransitionData::clear_has_timing_func() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTransitionData::clear_timing_func() {
  timing_func_ = 0u;
  clear_has_timing_func();
}
inline ::google::protobuf::uint32 CMsgTransitionData::timing_func() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.timing_func)
  return timing_func_;
}
inline void CMsgTransitionData::set_timing_func(::google::protobuf::uint32 value) {
  set_has_timing_func();
  timing_func_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.timing_func)
}

// optional float cubic_bezier_0 = 5;
inline bool CMsgTransitionData::has_cubic_bezier_0() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTransitionData::set_has_cubic_bezier_0() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTransitionData::clear_has_cubic_bezier_0() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTransitionData::clear_cubic_bezier_0() {
  cubic_bezier_0_ = 0;
  clear_has_cubic_bezier_0();
}
inline float CMsgTransitionData::cubic_bezier_0() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.cubic_bezier_0)
  return cubic_bezier_0_;
}
inline void CMsgTransitionData::set_cubic_bezier_0(float value) {
  set_has_cubic_bezier_0();
  cubic_bezier_0_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.cubic_bezier_0)
}

// optional float cubic_bezier_1 = 6;
inline bool CMsgTransitionData::has_cubic_bezier_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTransitionData::set_has_cubic_bezier_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTransitionData::clear_has_cubic_bezier_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTransitionData::clear_cubic_bezier_1() {
  cubic_bezier_1_ = 0;
  clear_has_cubic_bezier_1();
}
inline float CMsgTransitionData::cubic_bezier_1() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.cubic_bezier_1)
  return cubic_bezier_1_;
}
inline void CMsgTransitionData::set_cubic_bezier_1(float value) {
  set_has_cubic_bezier_1();
  cubic_bezier_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.cubic_bezier_1)
}

// optional float cubic_bezier_2 = 7;
inline bool CMsgTransitionData::has_cubic_bezier_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTransitionData::set_has_cubic_bezier_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgTransitionData::clear_has_cubic_bezier_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgTransitionData::clear_cubic_bezier_2() {
  cubic_bezier_2_ = 0;
  clear_has_cubic_bezier_2();
}
inline float CMsgTransitionData::cubic_bezier_2() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.cubic_bezier_2)
  return cubic_bezier_2_;
}
inline void CMsgTransitionData::set_cubic_bezier_2(float value) {
  set_has_cubic_bezier_2();
  cubic_bezier_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.cubic_bezier_2)
}

// optional float cubic_bezier_3 = 8;
inline bool CMsgTransitionData::has_cubic_bezier_3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgTransitionData::set_has_cubic_bezier_3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgTransitionData::clear_has_cubic_bezier_3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgTransitionData::clear_cubic_bezier_3() {
  cubic_bezier_3_ = 0;
  clear_has_cubic_bezier_3();
}
inline float CMsgTransitionData::cubic_bezier_3() const {
  // @@protoc_insertion_point(field_get:CMsgTransitionData.cubic_bezier_3)
  return cubic_bezier_3_;
}
inline void CMsgTransitionData::set_cubic_bezier_3(float value) {
  set_has_cubic_bezier_3();
  cubic_bezier_3_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransitionData.cubic_bezier_3)
}

// -------------------------------------------------------------------

// CMsgAnimationData

// optional double start_time = 1;
inline bool CMsgAnimationData::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAnimationData::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAnimationData::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAnimationData::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline double CMsgAnimationData::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.start_time)
  return start_time_;
}
inline void CMsgAnimationData::set_start_time(double value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.start_time)
}

// optional double delay_seconds = 2;
inline bool CMsgAnimationData::has_delay_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAnimationData::set_has_delay_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAnimationData::clear_has_delay_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAnimationData::clear_delay_seconds() {
  delay_seconds_ = 0;
  clear_has_delay_seconds();
}
inline double CMsgAnimationData::delay_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.delay_seconds)
  return delay_seconds_;
}
inline void CMsgAnimationData::set_delay_seconds(double value) {
  set_has_delay_seconds();
  delay_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.delay_seconds)
}

// optional double duration_seconds = 3;
inline bool CMsgAnimationData::has_duration_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAnimationData::set_has_duration_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAnimationData::clear_has_duration_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAnimationData::clear_duration_seconds() {
  duration_seconds_ = 0;
  clear_has_duration_seconds();
}
inline double CMsgAnimationData::duration_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.duration_seconds)
  return duration_seconds_;
}
inline void CMsgAnimationData::set_duration_seconds(double value) {
  set_has_duration_seconds();
  duration_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.duration_seconds)
}

// optional uint32 timing_func = 4;
inline bool CMsgAnimationData::has_timing_func() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAnimationData::set_has_timing_func() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgAnimationData::clear_has_timing_func() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgAnimationData::clear_timing_func() {
  timing_func_ = 0u;
  clear_has_timing_func();
}
inline ::google::protobuf::uint32 CMsgAnimationData::timing_func() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.timing_func)
  return timing_func_;
}
inline void CMsgAnimationData::set_timing_func(::google::protobuf::uint32 value) {
  set_has_timing_func();
  timing_func_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.timing_func)
}

// optional float cubic_bezier_0 = 5;
inline bool CMsgAnimationData::has_cubic_bezier_0() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAnimationData::set_has_cubic_bezier_0() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgAnimationData::clear_has_cubic_bezier_0() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgAnimationData::clear_cubic_bezier_0() {
  cubic_bezier_0_ = 0;
  clear_has_cubic_bezier_0();
}
inline float CMsgAnimationData::cubic_bezier_0() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.cubic_bezier_0)
  return cubic_bezier_0_;
}
inline void CMsgAnimationData::set_cubic_bezier_0(float value) {
  set_has_cubic_bezier_0();
  cubic_bezier_0_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.cubic_bezier_0)
}

// optional float cubic_bezier_1 = 6;
inline bool CMsgAnimationData::has_cubic_bezier_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgAnimationData::set_has_cubic_bezier_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgAnimationData::clear_has_cubic_bezier_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgAnimationData::clear_cubic_bezier_1() {
  cubic_bezier_1_ = 0;
  clear_has_cubic_bezier_1();
}
inline float CMsgAnimationData::cubic_bezier_1() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.cubic_bezier_1)
  return cubic_bezier_1_;
}
inline void CMsgAnimationData::set_cubic_bezier_1(float value) {
  set_has_cubic_bezier_1();
  cubic_bezier_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.cubic_bezier_1)
}

// optional float cubic_bezier_2 = 7;
inline bool CMsgAnimationData::has_cubic_bezier_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgAnimationData::set_has_cubic_bezier_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgAnimationData::clear_has_cubic_bezier_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgAnimationData::clear_cubic_bezier_2() {
  cubic_bezier_2_ = 0;
  clear_has_cubic_bezier_2();
}
inline float CMsgAnimationData::cubic_bezier_2() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.cubic_bezier_2)
  return cubic_bezier_2_;
}
inline void CMsgAnimationData::set_cubic_bezier_2(float value) {
  set_has_cubic_bezier_2();
  cubic_bezier_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.cubic_bezier_2)
}

// optional float cubic_bezier_3 = 8;
inline bool CMsgAnimationData::has_cubic_bezier_3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgAnimationData::set_has_cubic_bezier_3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgAnimationData::clear_has_cubic_bezier_3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgAnimationData::clear_cubic_bezier_3() {
  cubic_bezier_3_ = 0;
  clear_has_cubic_bezier_3();
}
inline float CMsgAnimationData::cubic_bezier_3() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.cubic_bezier_3)
  return cubic_bezier_3_;
}
inline void CMsgAnimationData::set_cubic_bezier_3(float value) {
  set_has_cubic_bezier_3();
  cubic_bezier_3_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.cubic_bezier_3)
}

// optional uint32 direction = 9;
inline bool CMsgAnimationData::has_direction() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgAnimationData::set_has_direction() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgAnimationData::clear_has_direction() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgAnimationData::clear_direction() {
  direction_ = 0u;
  clear_has_direction();
}
inline ::google::protobuf::uint32 CMsgAnimationData::direction() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.direction)
  return direction_;
}
inline void CMsgAnimationData::set_direction(::google::protobuf::uint32 value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.direction)
}

// optional float iteration = 10;
inline bool CMsgAnimationData::has_iteration() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgAnimationData::set_has_iteration() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgAnimationData::clear_has_iteration() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgAnimationData::clear_iteration() {
  iteration_ = 0;
  clear_has_iteration();
}
inline float CMsgAnimationData::iteration() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.iteration)
  return iteration_;
}
inline void CMsgAnimationData::set_iteration(float value) {
  set_has_iteration();
  iteration_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationData.iteration)
}

// repeated .CMsgAnimationFrameData frames = 11;
inline int CMsgAnimationData::frames_size() const {
  return frames_.size();
}
inline void CMsgAnimationData::clear_frames() {
  frames_.Clear();
}
inline const ::CMsgAnimationFrameData& CMsgAnimationData::frames(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAnimationData.frames)
  return frames_.Get(index);
}
inline ::CMsgAnimationFrameData* CMsgAnimationData::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAnimationData.frames)
  return frames_.Mutable(index);
}
inline ::CMsgAnimationFrameData* CMsgAnimationData::add_frames() {
  // @@protoc_insertion_point(field_add:CMsgAnimationData.frames)
  return frames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationFrameData >*
CMsgAnimationData::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAnimationData.frames)
  return &frames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationFrameData >&
CMsgAnimationData::frames() const {
  // @@protoc_insertion_point(field_list:CMsgAnimationData.frames)
  return frames_;
}

// -------------------------------------------------------------------

// CMsgAnimationFrameData

// optional float percent = 1;
inline bool CMsgAnimationFrameData::has_percent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAnimationFrameData::set_has_percent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAnimationFrameData::clear_has_percent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAnimationFrameData::clear_percent() {
  percent_ = 0;
  clear_has_percent();
}
inline float CMsgAnimationFrameData::percent() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationFrameData.percent)
  return percent_;
}
inline void CMsgAnimationFrameData::set_percent(float value) {
  set_has_percent();
  percent_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationFrameData.percent)
}

// optional uint32 timing_func = 2 [default = 0];
inline bool CMsgAnimationFrameData::has_timing_func() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAnimationFrameData::set_has_timing_func() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAnimationFrameData::clear_has_timing_func() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAnimationFrameData::clear_timing_func() {
  timing_func_ = 0u;
  clear_has_timing_func();
}
inline ::google::protobuf::uint32 CMsgAnimationFrameData::timing_func() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationFrameData.timing_func)
  return timing_func_;
}
inline void CMsgAnimationFrameData::set_timing_func(::google::protobuf::uint32 value) {
  set_has_timing_func();
  timing_func_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationFrameData.timing_func)
}

// optional float cubic_bezier_0 = 3;
inline bool CMsgAnimationFrameData::has_cubic_bezier_0() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAnimationFrameData::set_has_cubic_bezier_0() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAnimationFrameData::clear_has_cubic_bezier_0() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAnimationFrameData::clear_cubic_bezier_0() {
  cubic_bezier_0_ = 0;
  clear_has_cubic_bezier_0();
}
inline float CMsgAnimationFrameData::cubic_bezier_0() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationFrameData.cubic_bezier_0)
  return cubic_bezier_0_;
}
inline void CMsgAnimationFrameData::set_cubic_bezier_0(float value) {
  set_has_cubic_bezier_0();
  cubic_bezier_0_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationFrameData.cubic_bezier_0)
}

// optional float cubic_bezier_1 = 4;
inline bool CMsgAnimationFrameData::has_cubic_bezier_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAnimationFrameData::set_has_cubic_bezier_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgAnimationFrameData::clear_has_cubic_bezier_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgAnimationFrameData::clear_cubic_bezier_1() {
  cubic_bezier_1_ = 0;
  clear_has_cubic_bezier_1();
}
inline float CMsgAnimationFrameData::cubic_bezier_1() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationFrameData.cubic_bezier_1)
  return cubic_bezier_1_;
}
inline void CMsgAnimationFrameData::set_cubic_bezier_1(float value) {
  set_has_cubic_bezier_1();
  cubic_bezier_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationFrameData.cubic_bezier_1)
}

// optional float cubic_bezier_2 = 5;
inline bool CMsgAnimationFrameData::has_cubic_bezier_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAnimationFrameData::set_has_cubic_bezier_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgAnimationFrameData::clear_has_cubic_bezier_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgAnimationFrameData::clear_cubic_bezier_2() {
  cubic_bezier_2_ = 0;
  clear_has_cubic_bezier_2();
}
inline float CMsgAnimationFrameData::cubic_bezier_2() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationFrameData.cubic_bezier_2)
  return cubic_bezier_2_;
}
inline void CMsgAnimationFrameData::set_cubic_bezier_2(float value) {
  set_has_cubic_bezier_2();
  cubic_bezier_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationFrameData.cubic_bezier_2)
}

// optional float cubic_bezier_3 = 6;
inline bool CMsgAnimationFrameData::has_cubic_bezier_3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgAnimationFrameData::set_has_cubic_bezier_3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgAnimationFrameData::clear_has_cubic_bezier_3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgAnimationFrameData::clear_cubic_bezier_3() {
  cubic_bezier_3_ = 0;
  clear_has_cubic_bezier_3();
}
inline float CMsgAnimationFrameData::cubic_bezier_3() const {
  // @@protoc_insertion_point(field_get:CMsgAnimationFrameData.cubic_bezier_3)
  return cubic_bezier_3_;
}
inline void CMsgAnimationFrameData::set_cubic_bezier_3(float value) {
  set_has_cubic_bezier_3();
  cubic_bezier_3_ = value;
  // @@protoc_insertion_point(field_set:CMsgAnimationFrameData.cubic_bezier_3)
}

// -------------------------------------------------------------------

// CMsgPointWithTransition_AnimationFrameData

// optional .CMsgPoint data = 1;
inline bool CMsgPointWithTransition_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPointWithTransition_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPointWithTransition_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPointWithTransition_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgPoint::Clear();
  clear_has_data();
}
inline const ::CMsgPoint& CMsgPointWithTransition_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgPointWithTransition.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgPoint* CMsgPointWithTransition_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPointWithTransition.AnimationFrameData.data)
  return data_;
}
inline ::CMsgPoint* CMsgPointWithTransition_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgPoint* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgPointWithTransition_AnimationFrameData::set_allocated_data(::CMsgPoint* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPointWithTransition.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgPointWithTransition

// optional .CMsgPoint base = 1;
inline bool CMsgPointWithTransition::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPointWithTransition::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPointWithTransition::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPointWithTransition::clear_base() {
  if (base_ != NULL) base_->::CMsgPoint::Clear();
  clear_has_base();
}
inline const ::CMsgPoint& CMsgPointWithTransition::base() const {
  // @@protoc_insertion_point(field_get:CMsgPointWithTransition.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgPoint* CMsgPointWithTransition::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPointWithTransition.base)
  return base_;
}
inline ::CMsgPoint* CMsgPointWithTransition::release_base() {
  clear_has_base();
  ::CMsgPoint* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgPointWithTransition::set_allocated_base(::CMsgPoint* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPointWithTransition.base)
}

// optional .CMsgPoint transition = 2;
inline bool CMsgPointWithTransition::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPointWithTransition::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPointWithTransition::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPointWithTransition::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgPoint::Clear();
  clear_has_transition();
}
inline const ::CMsgPoint& CMsgPointWithTransition::transition() const {
  // @@protoc_insertion_point(field_get:CMsgPointWithTransition.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgPoint* CMsgPointWithTransition::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPointWithTransition.transition)
  return transition_;
}
inline ::CMsgPoint* CMsgPointWithTransition::release_transition() {
  clear_has_transition();
  ::CMsgPoint* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgPointWithTransition::set_allocated_transition(::CMsgPoint* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPointWithTransition.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgPointWithTransition::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPointWithTransition::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPointWithTransition::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPointWithTransition::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgPointWithTransition::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgPointWithTransition.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgPointWithTransition::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPointWithTransition.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgPointWithTransition::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgPointWithTransition::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPointWithTransition.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgPointWithTransition::animations_size() const {
  return animations_.size();
}
inline void CMsgPointWithTransition::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgPointWithTransition::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPointWithTransition.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgPointWithTransition::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPointWithTransition.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgPointWithTransition::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgPointWithTransition.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgPointWithTransition::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPointWithTransition.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgPointWithTransition::animations() const {
  // @@protoc_insertion_point(field_list:CMsgPointWithTransition.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgColor_AnimationFrameData

// optional uint32 data = 1;
inline bool CMsgColor_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgColor_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgColor_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgColor_AnimationFrameData::clear_data() {
  data_ = 0u;
  clear_has_data();
}
inline ::google::protobuf::uint32 CMsgColor_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgColor.AnimationFrameData.data)
  return data_;
}
inline void CMsgColor_AnimationFrameData::set_data(::google::protobuf::uint32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsgColor.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgColor

// optional uint32 base = 1;
inline bool CMsgColor::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgColor::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgColor::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgColor::clear_base() {
  base_ = 0u;
  clear_has_base();
}
inline ::google::protobuf::uint32 CMsgColor::base() const {
  // @@protoc_insertion_point(field_get:CMsgColor.base)
  return base_;
}
inline void CMsgColor::set_base(::google::protobuf::uint32 value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsgColor.base)
}

// optional uint32 transition = 2;
inline bool CMsgColor::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgColor::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgColor::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgColor::clear_transition() {
  transition_ = 0u;
  clear_has_transition();
}
inline ::google::protobuf::uint32 CMsgColor::transition() const {
  // @@protoc_insertion_point(field_get:CMsgColor.transition)
  return transition_;
}
inline void CMsgColor::set_transition(::google::protobuf::uint32 value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsgColor.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgColor::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgColor::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgColor::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgColor::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgColor::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgColor.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgColor::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgColor.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgColor::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgColor::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgColor.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgColor::animations_size() const {
  return animations_.size();
}
inline void CMsgColor::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgColor::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgColor.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgColor::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgColor.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgColor::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgColor.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgColor::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgColor.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgColor::animations() const {
  // @@protoc_insertion_point(field_list:CMsgColor.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgColorStop

// optional double position = 1;
inline bool CMsgColorStop::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgColorStop::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgColorStop::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgColorStop::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline double CMsgColorStop::position() const {
  // @@protoc_insertion_point(field_get:CMsgColorStop.position)
  return position_;
}
inline void CMsgColorStop::set_position(double value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:CMsgColorStop.position)
}

// optional uint32 color_rgba = 2;
inline bool CMsgColorStop::has_color_rgba() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgColorStop::set_has_color_rgba() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgColorStop::clear_has_color_rgba() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgColorStop::clear_color_rgba() {
  color_rgba_ = 0u;
  clear_has_color_rgba();
}
inline ::google::protobuf::uint32 CMsgColorStop::color_rgba() const {
  // @@protoc_insertion_point(field_get:CMsgColorStop.color_rgba)
  return color_rgba_;
}
inline void CMsgColorStop::set_color_rgba(::google::protobuf::uint32 value) {
  set_has_color_rgba();
  color_rgba_ = value;
  // @@protoc_insertion_point(field_set:CMsgColorStop.color_rgba)
}

// -------------------------------------------------------------------

// CMsgLinearGradient

// optional .CMsgPoint start_position = 1;
inline bool CMsgLinearGradient::has_start_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLinearGradient::set_has_start_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLinearGradient::clear_has_start_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLinearGradient::clear_start_position() {
  if (start_position_ != NULL) start_position_->::CMsgPoint::Clear();
  clear_has_start_position();
}
inline const ::CMsgPoint& CMsgLinearGradient::start_position() const {
  // @@protoc_insertion_point(field_get:CMsgLinearGradient.start_position)
  return start_position_ != NULL ? *start_position_ : *default_instance_->start_position_;
}
inline ::CMsgPoint* CMsgLinearGradient::mutable_start_position() {
  set_has_start_position();
  if (start_position_ == NULL) {
    start_position_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLinearGradient.start_position)
  return start_position_;
}
inline ::CMsgPoint* CMsgLinearGradient::release_start_position() {
  clear_has_start_position();
  ::CMsgPoint* temp = start_position_;
  start_position_ = NULL;
  return temp;
}
inline void CMsgLinearGradient::set_allocated_start_position(::CMsgPoint* start_position) {
  delete start_position_;
  start_position_ = start_position;
  if (start_position) {
    set_has_start_position();
  } else {
    clear_has_start_position();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLinearGradient.start_position)
}

// optional .CMsgPoint end_position = 2;
inline bool CMsgLinearGradient::has_end_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLinearGradient::set_has_end_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLinearGradient::clear_has_end_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLinearGradient::clear_end_position() {
  if (end_position_ != NULL) end_position_->::CMsgPoint::Clear();
  clear_has_end_position();
}
inline const ::CMsgPoint& CMsgLinearGradient::end_position() const {
  // @@protoc_insertion_point(field_get:CMsgLinearGradient.end_position)
  return end_position_ != NULL ? *end_position_ : *default_instance_->end_position_;
}
inline ::CMsgPoint* CMsgLinearGradient::mutable_end_position() {
  set_has_end_position();
  if (end_position_ == NULL) {
    end_position_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLinearGradient.end_position)
  return end_position_;
}
inline ::CMsgPoint* CMsgLinearGradient::release_end_position() {
  clear_has_end_position();
  ::CMsgPoint* temp = end_position_;
  end_position_ = NULL;
  return temp;
}
inline void CMsgLinearGradient::set_allocated_end_position(::CMsgPoint* end_position) {
  delete end_position_;
  end_position_ = end_position;
  if (end_position) {
    set_has_end_position();
  } else {
    clear_has_end_position();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLinearGradient.end_position)
}

// repeated .CMsgColorStop color_stop = 3;
inline int CMsgLinearGradient::color_stop_size() const {
  return color_stop_.size();
}
inline void CMsgLinearGradient::clear_color_stop() {
  color_stop_.Clear();
}
inline const ::CMsgColorStop& CMsgLinearGradient::color_stop(int index) const {
  // @@protoc_insertion_point(field_get:CMsgLinearGradient.color_stop)
  return color_stop_.Get(index);
}
inline ::CMsgColorStop* CMsgLinearGradient::mutable_color_stop(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgLinearGradient.color_stop)
  return color_stop_.Mutable(index);
}
inline ::CMsgColorStop* CMsgLinearGradient::add_color_stop() {
  // @@protoc_insertion_point(field_add:CMsgLinearGradient.color_stop)
  return color_stop_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >*
CMsgLinearGradient::mutable_color_stop() {
  // @@protoc_insertion_point(field_mutable_list:CMsgLinearGradient.color_stop)
  return &color_stop_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >&
CMsgLinearGradient::color_stop() const {
  // @@protoc_insertion_point(field_list:CMsgLinearGradient.color_stop)
  return color_stop_;
}

// -------------------------------------------------------------------

// CMsgRadialGradient

// optional .CMsgPoint center_position = 1;
inline bool CMsgRadialGradient::has_center_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRadialGradient::set_has_center_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRadialGradient::clear_has_center_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRadialGradient::clear_center_position() {
  if (center_position_ != NULL) center_position_->::CMsgPoint::Clear();
  clear_has_center_position();
}
inline const ::CMsgPoint& CMsgRadialGradient::center_position() const {
  // @@protoc_insertion_point(field_get:CMsgRadialGradient.center_position)
  return center_position_ != NULL ? *center_position_ : *default_instance_->center_position_;
}
inline ::CMsgPoint* CMsgRadialGradient::mutable_center_position() {
  set_has_center_position();
  if (center_position_ == NULL) {
    center_position_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRadialGradient.center_position)
  return center_position_;
}
inline ::CMsgPoint* CMsgRadialGradient::release_center_position() {
  clear_has_center_position();
  ::CMsgPoint* temp = center_position_;
  center_position_ = NULL;
  return temp;
}
inline void CMsgRadialGradient::set_allocated_center_position(::CMsgPoint* center_position) {
  delete center_position_;
  center_position_ = center_position;
  if (center_position) {
    set_has_center_position();
  } else {
    clear_has_center_position();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRadialGradient.center_position)
}

// optional .CMsgPoint offset_distance = 2;
inline bool CMsgRadialGradient::has_offset_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRadialGradient::set_has_offset_distance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRadialGradient::clear_has_offset_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRadialGradient::clear_offset_distance() {
  if (offset_distance_ != NULL) offset_distance_->::CMsgPoint::Clear();
  clear_has_offset_distance();
}
inline const ::CMsgPoint& CMsgRadialGradient::offset_distance() const {
  // @@protoc_insertion_point(field_get:CMsgRadialGradient.offset_distance)
  return offset_distance_ != NULL ? *offset_distance_ : *default_instance_->offset_distance_;
}
inline ::CMsgPoint* CMsgRadialGradient::mutable_offset_distance() {
  set_has_offset_distance();
  if (offset_distance_ == NULL) {
    offset_distance_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRadialGradient.offset_distance)
  return offset_distance_;
}
inline ::CMsgPoint* CMsgRadialGradient::release_offset_distance() {
  clear_has_offset_distance();
  ::CMsgPoint* temp = offset_distance_;
  offset_distance_ = NULL;
  return temp;
}
inline void CMsgRadialGradient::set_allocated_offset_distance(::CMsgPoint* offset_distance) {
  delete offset_distance_;
  offset_distance_ = offset_distance;
  if (offset_distance) {
    set_has_offset_distance();
  } else {
    clear_has_offset_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRadialGradient.offset_distance)
}

// optional .CMsgPoint radii = 3;
inline bool CMsgRadialGradient::has_radii() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRadialGradient::set_has_radii() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRadialGradient::clear_has_radii() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRadialGradient::clear_radii() {
  if (radii_ != NULL) radii_->::CMsgPoint::Clear();
  clear_has_radii();
}
inline const ::CMsgPoint& CMsgRadialGradient::radii() const {
  // @@protoc_insertion_point(field_get:CMsgRadialGradient.radii)
  return radii_ != NULL ? *radii_ : *default_instance_->radii_;
}
inline ::CMsgPoint* CMsgRadialGradient::mutable_radii() {
  set_has_radii();
  if (radii_ == NULL) {
    radii_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRadialGradient.radii)
  return radii_;
}
inline ::CMsgPoint* CMsgRadialGradient::release_radii() {
  clear_has_radii();
  ::CMsgPoint* temp = radii_;
  radii_ = NULL;
  return temp;
}
inline void CMsgRadialGradient::set_allocated_radii(::CMsgPoint* radii) {
  delete radii_;
  radii_ = radii;
  if (radii) {
    set_has_radii();
  } else {
    clear_has_radii();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRadialGradient.radii)
}

// repeated .CMsgColorStop color_stop = 4;
inline int CMsgRadialGradient::color_stop_size() const {
  return color_stop_.size();
}
inline void CMsgRadialGradient::clear_color_stop() {
  color_stop_.Clear();
}
inline const ::CMsgColorStop& CMsgRadialGradient::color_stop(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRadialGradient.color_stop)
  return color_stop_.Get(index);
}
inline ::CMsgColorStop* CMsgRadialGradient::mutable_color_stop(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgRadialGradient.color_stop)
  return color_stop_.Mutable(index);
}
inline ::CMsgColorStop* CMsgRadialGradient::add_color_stop() {
  // @@protoc_insertion_point(field_add:CMsgRadialGradient.color_stop)
  return color_stop_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >*
CMsgRadialGradient::mutable_color_stop() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRadialGradient.color_stop)
  return &color_stop_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgColorStop >&
CMsgRadialGradient::color_stop() const {
  // @@protoc_insertion_point(field_list:CMsgRadialGradient.color_stop)
  return color_stop_;
}

// -------------------------------------------------------------------

// CMsgParticle

// optional .CMsgPoint particle_position = 1;
inline bool CMsgParticle::has_particle_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgParticle::set_has_particle_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgParticle::clear_has_particle_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgParticle::clear_particle_position() {
  if (particle_position_ != NULL) particle_position_->::CMsgPoint::Clear();
  clear_has_particle_position();
}
inline const ::CMsgPoint& CMsgParticle::particle_position() const {
  // @@protoc_insertion_point(field_get:CMsgParticle.particle_position)
  return particle_position_ != NULL ? *particle_position_ : *default_instance_->particle_position_;
}
inline ::CMsgPoint* CMsgParticle::mutable_particle_position() {
  set_has_particle_position();
  if (particle_position_ == NULL) {
    particle_position_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticle.particle_position)
  return particle_position_;
}
inline ::CMsgPoint* CMsgParticle::release_particle_position() {
  clear_has_particle_position();
  ::CMsgPoint* temp = particle_position_;
  particle_position_ = NULL;
  return temp;
}
inline void CMsgParticle::set_allocated_particle_position(::CMsgPoint* particle_position) {
  delete particle_position_;
  particle_position_ = particle_position;
  if (particle_position) {
    set_has_particle_position();
  } else {
    clear_has_particle_position();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticle.particle_position)
}

// optional float particle_size = 2;
inline bool CMsgParticle::has_particle_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgParticle::set_has_particle_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgParticle::clear_has_particle_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgParticle::clear_particle_size() {
  particle_size_ = 0;
  clear_has_particle_size();
}
inline float CMsgParticle::particle_size() const {
  // @@protoc_insertion_point(field_get:CMsgParticle.particle_size)
  return particle_size_;
}
inline void CMsgParticle::set_particle_size(float value) {
  set_has_particle_size();
  particle_size_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticle.particle_size)
}

// optional float particle_sharpness = 3;
inline bool CMsgParticle::has_particle_sharpness() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgParticle::set_has_particle_sharpness() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgParticle::clear_has_particle_sharpness() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgParticle::clear_particle_sharpness() {
  particle_sharpness_ = 0;
  clear_has_particle_sharpness();
}
inline float CMsgParticle::particle_sharpness() const {
  // @@protoc_insertion_point(field_get:CMsgParticle.particle_sharpness)
  return particle_sharpness_;
}
inline void CMsgParticle::set_particle_sharpness(float value) {
  set_has_particle_sharpness();
  particle_sharpness_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticle.particle_sharpness)
}

// optional uint32 color_rgba = 4;
inline bool CMsgParticle::has_color_rgba() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgParticle::set_has_color_rgba() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgParticle::clear_has_color_rgba() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgParticle::clear_color_rgba() {
  color_rgba_ = 0u;
  clear_has_color_rgba();
}
inline ::google::protobuf::uint32 CMsgParticle::color_rgba() const {
  // @@protoc_insertion_point(field_get:CMsgParticle.color_rgba)
  return color_rgba_;
}
inline void CMsgParticle::set_color_rgba(::google::protobuf::uint32 value) {
  set_has_color_rgba();
  color_rgba_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticle.color_rgba)
}

// -------------------------------------------------------------------

// CMsgParticleSystem

// optional .CMsgPoint base_position = 1;
inline bool CMsgParticleSystem::has_base_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgParticleSystem::set_has_base_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgParticleSystem::clear_has_base_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgParticleSystem::clear_base_position() {
  if (base_position_ != NULL) base_position_->::CMsgPoint::Clear();
  clear_has_base_position();
}
inline const ::CMsgPoint& CMsgParticleSystem::base_position() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.base_position)
  return base_position_ != NULL ? *base_position_ : *default_instance_->base_position_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_base_position() {
  set_has_base_position();
  if (base_position_ == NULL) {
    base_position_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.base_position)
  return base_position_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_base_position() {
  clear_has_base_position();
  ::CMsgPoint* temp = base_position_;
  base_position_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_base_position(::CMsgPoint* base_position) {
  delete base_position_;
  base_position_ = base_position;
  if (base_position) {
    set_has_base_position();
  } else {
    clear_has_base_position();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.base_position)
}

// optional .CMsgPoint base_position_variance = 2;
inline bool CMsgParticleSystem::has_base_position_variance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgParticleSystem::set_has_base_position_variance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgParticleSystem::clear_has_base_position_variance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgParticleSystem::clear_base_position_variance() {
  if (base_position_variance_ != NULL) base_position_variance_->::CMsgPoint::Clear();
  clear_has_base_position_variance();
}
inline const ::CMsgPoint& CMsgParticleSystem::base_position_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.base_position_variance)
  return base_position_variance_ != NULL ? *base_position_variance_ : *default_instance_->base_position_variance_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_base_position_variance() {
  set_has_base_position_variance();
  if (base_position_variance_ == NULL) {
    base_position_variance_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.base_position_variance)
  return base_position_variance_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_base_position_variance() {
  clear_has_base_position_variance();
  ::CMsgPoint* temp = base_position_variance_;
  base_position_variance_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_base_position_variance(::CMsgPoint* base_position_variance) {
  delete base_position_variance_;
  base_position_variance_ = base_position_variance;
  if (base_position_variance) {
    set_has_base_position_variance();
  } else {
    clear_has_base_position_variance();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.base_position_variance)
}

// optional double particle_size = 3;
inline bool CMsgParticleSystem::has_particle_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgParticleSystem::clear_has_particle_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgParticleSystem::clear_particle_size() {
  particle_size_ = 0;
  clear_has_particle_size();
}
inline double CMsgParticleSystem::particle_size() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_size)
  return particle_size_;
}
inline void CMsgParticleSystem::set_particle_size(double value) {
  set_has_particle_size();
  particle_size_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_size)
}

// optional double particle_size_variance = 4;
inline bool CMsgParticleSystem::has_particle_size_variance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_size_variance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgParticleSystem::clear_has_particle_size_variance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgParticleSystem::clear_particle_size_variance() {
  particle_size_variance_ = 0;
  clear_has_particle_size_variance();
}
inline double CMsgParticleSystem::particle_size_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_size_variance)
  return particle_size_variance_;
}
inline void CMsgParticleSystem::set_particle_size_variance(double value) {
  set_has_particle_size_variance();
  particle_size_variance_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_size_variance)
}

// optional double particles_per_second = 5;
inline bool CMsgParticleSystem::has_particles_per_second() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgParticleSystem::set_has_particles_per_second() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgParticleSystem::clear_has_particles_per_second() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgParticleSystem::clear_particles_per_second() {
  particles_per_second_ = 0;
  clear_has_particles_per_second();
}
inline double CMsgParticleSystem::particles_per_second() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particles_per_second)
  return particles_per_second_;
}
inline void CMsgParticleSystem::set_particles_per_second(double value) {
  set_has_particles_per_second();
  particles_per_second_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particles_per_second)
}

// optional double particles_per_second_variance = 6;
inline bool CMsgParticleSystem::has_particles_per_second_variance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgParticleSystem::set_has_particles_per_second_variance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgParticleSystem::clear_has_particles_per_second_variance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgParticleSystem::clear_particles_per_second_variance() {
  particles_per_second_variance_ = 0;
  clear_has_particles_per_second_variance();
}
inline double CMsgParticleSystem::particles_per_second_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particles_per_second_variance)
  return particles_per_second_variance_;
}
inline void CMsgParticleSystem::set_particles_per_second_variance(double value) {
  set_has_particles_per_second_variance();
  particles_per_second_variance_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particles_per_second_variance)
}

// optional double particle_lifespan_seconds = 7;
inline bool CMsgParticleSystem::has_particle_lifespan_seconds() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_lifespan_seconds() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgParticleSystem::clear_has_particle_lifespan_seconds() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgParticleSystem::clear_particle_lifespan_seconds() {
  particle_lifespan_seconds_ = 0;
  clear_has_particle_lifespan_seconds();
}
inline double CMsgParticleSystem::particle_lifespan_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_lifespan_seconds)
  return particle_lifespan_seconds_;
}
inline void CMsgParticleSystem::set_particle_lifespan_seconds(double value) {
  set_has_particle_lifespan_seconds();
  particle_lifespan_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_lifespan_seconds)
}

// optional double particle_lifespan_seconds_variance = 8;
inline bool CMsgParticleSystem::has_particle_lifespan_seconds_variance() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_lifespan_seconds_variance() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgParticleSystem::clear_has_particle_lifespan_seconds_variance() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgParticleSystem::clear_particle_lifespan_seconds_variance() {
  particle_lifespan_seconds_variance_ = 0;
  clear_has_particle_lifespan_seconds_variance();
}
inline double CMsgParticleSystem::particle_lifespan_seconds_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_lifespan_seconds_variance)
  return particle_lifespan_seconds_variance_;
}
inline void CMsgParticleSystem::set_particle_lifespan_seconds_variance(double value) {
  set_has_particle_lifespan_seconds_variance();
  particle_lifespan_seconds_variance_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_lifespan_seconds_variance)
}

// optional .CMsgPoint particle_initial_velocity = 9;
inline bool CMsgParticleSystem::has_particle_initial_velocity() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_initial_velocity() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgParticleSystem::clear_has_particle_initial_velocity() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgParticleSystem::clear_particle_initial_velocity() {
  if (particle_initial_velocity_ != NULL) particle_initial_velocity_->::CMsgPoint::Clear();
  clear_has_particle_initial_velocity();
}
inline const ::CMsgPoint& CMsgParticleSystem::particle_initial_velocity() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_initial_velocity)
  return particle_initial_velocity_ != NULL ? *particle_initial_velocity_ : *default_instance_->particle_initial_velocity_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_particle_initial_velocity() {
  set_has_particle_initial_velocity();
  if (particle_initial_velocity_ == NULL) {
    particle_initial_velocity_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.particle_initial_velocity)
  return particle_initial_velocity_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_particle_initial_velocity() {
  clear_has_particle_initial_velocity();
  ::CMsgPoint* temp = particle_initial_velocity_;
  particle_initial_velocity_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_particle_initial_velocity(::CMsgPoint* particle_initial_velocity) {
  delete particle_initial_velocity_;
  particle_initial_velocity_ = particle_initial_velocity;
  if (particle_initial_velocity) {
    set_has_particle_initial_velocity();
  } else {
    clear_has_particle_initial_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.particle_initial_velocity)
}

// optional .CMsgPoint particle_initial_velocity_variance = 10;
inline bool CMsgParticleSystem::has_particle_initial_velocity_variance() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_initial_velocity_variance() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgParticleSystem::clear_has_particle_initial_velocity_variance() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgParticleSystem::clear_particle_initial_velocity_variance() {
  if (particle_initial_velocity_variance_ != NULL) particle_initial_velocity_variance_->::CMsgPoint::Clear();
  clear_has_particle_initial_velocity_variance();
}
inline const ::CMsgPoint& CMsgParticleSystem::particle_initial_velocity_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_initial_velocity_variance)
  return particle_initial_velocity_variance_ != NULL ? *particle_initial_velocity_variance_ : *default_instance_->particle_initial_velocity_variance_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_particle_initial_velocity_variance() {
  set_has_particle_initial_velocity_variance();
  if (particle_initial_velocity_variance_ == NULL) {
    particle_initial_velocity_variance_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.particle_initial_velocity_variance)
  return particle_initial_velocity_variance_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_particle_initial_velocity_variance() {
  clear_has_particle_initial_velocity_variance();
  ::CMsgPoint* temp = particle_initial_velocity_variance_;
  particle_initial_velocity_variance_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_particle_initial_velocity_variance(::CMsgPoint* particle_initial_velocity_variance) {
  delete particle_initial_velocity_variance_;
  particle_initial_velocity_variance_ = particle_initial_velocity_variance;
  if (particle_initial_velocity_variance) {
    set_has_particle_initial_velocity_variance();
  } else {
    clear_has_particle_initial_velocity_variance();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.particle_initial_velocity_variance)
}

// optional .CMsgPoint gravity_acceleration = 11;
inline bool CMsgParticleSystem::has_gravity_acceleration() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgParticleSystem::set_has_gravity_acceleration() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgParticleSystem::clear_has_gravity_acceleration() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgParticleSystem::clear_gravity_acceleration() {
  if (gravity_acceleration_ != NULL) gravity_acceleration_->::CMsgPoint::Clear();
  clear_has_gravity_acceleration();
}
inline const ::CMsgPoint& CMsgParticleSystem::gravity_acceleration() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.gravity_acceleration)
  return gravity_acceleration_ != NULL ? *gravity_acceleration_ : *default_instance_->gravity_acceleration_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_gravity_acceleration() {
  set_has_gravity_acceleration();
  if (gravity_acceleration_ == NULL) {
    gravity_acceleration_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.gravity_acceleration)
  return gravity_acceleration_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_gravity_acceleration() {
  clear_has_gravity_acceleration();
  ::CMsgPoint* temp = gravity_acceleration_;
  gravity_acceleration_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_gravity_acceleration(::CMsgPoint* gravity_acceleration) {
  delete gravity_acceleration_;
  gravity_acceleration_ = gravity_acceleration;
  if (gravity_acceleration) {
    set_has_gravity_acceleration();
  } else {
    clear_has_gravity_acceleration();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.gravity_acceleration)
}

// optional .CMsgPoint gravity_acceleration_particle_variance = 12;
inline bool CMsgParticleSystem::has_gravity_acceleration_particle_variance() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgParticleSystem::set_has_gravity_acceleration_particle_variance() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgParticleSystem::clear_has_gravity_acceleration_particle_variance() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgParticleSystem::clear_gravity_acceleration_particle_variance() {
  if (gravity_acceleration_particle_variance_ != NULL) gravity_acceleration_particle_variance_->::CMsgPoint::Clear();
  clear_has_gravity_acceleration_particle_variance();
}
inline const ::CMsgPoint& CMsgParticleSystem::gravity_acceleration_particle_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.gravity_acceleration_particle_variance)
  return gravity_acceleration_particle_variance_ != NULL ? *gravity_acceleration_particle_variance_ : *default_instance_->gravity_acceleration_particle_variance_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_gravity_acceleration_particle_variance() {
  set_has_gravity_acceleration_particle_variance();
  if (gravity_acceleration_particle_variance_ == NULL) {
    gravity_acceleration_particle_variance_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.gravity_acceleration_particle_variance)
  return gravity_acceleration_particle_variance_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_gravity_acceleration_particle_variance() {
  clear_has_gravity_acceleration_particle_variance();
  ::CMsgPoint* temp = gravity_acceleration_particle_variance_;
  gravity_acceleration_particle_variance_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_gravity_acceleration_particle_variance(::CMsgPoint* gravity_acceleration_particle_variance) {
  delete gravity_acceleration_particle_variance_;
  gravity_acceleration_particle_variance_ = gravity_acceleration_particle_variance;
  if (gravity_acceleration_particle_variance) {
    set_has_gravity_acceleration_particle_variance();
  } else {
    clear_has_gravity_acceleration_particle_variance();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.gravity_acceleration_particle_variance)
}

// optional uint32 color_start_rgba = 13;
inline bool CMsgParticleSystem::has_color_start_rgba() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgParticleSystem::set_has_color_start_rgba() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgParticleSystem::clear_has_color_start_rgba() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgParticleSystem::clear_color_start_rgba() {
  color_start_rgba_ = 0u;
  clear_has_color_start_rgba();
}
inline ::google::protobuf::uint32 CMsgParticleSystem::color_start_rgba() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.color_start_rgba)
  return color_start_rgba_;
}
inline void CMsgParticleSystem::set_color_start_rgba(::google::protobuf::uint32 value) {
  set_has_color_start_rgba();
  color_start_rgba_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.color_start_rgba)
}

// optional uint32 color_start_rgba_variance = 14;
inline bool CMsgParticleSystem::has_color_start_rgba_variance() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgParticleSystem::set_has_color_start_rgba_variance() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgParticleSystem::clear_has_color_start_rgba_variance() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgParticleSystem::clear_color_start_rgba_variance() {
  color_start_rgba_variance_ = 0u;
  clear_has_color_start_rgba_variance();
}
inline ::google::protobuf::uint32 CMsgParticleSystem::color_start_rgba_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.color_start_rgba_variance)
  return color_start_rgba_variance_;
}
inline void CMsgParticleSystem::set_color_start_rgba_variance(::google::protobuf::uint32 value) {
  set_has_color_start_rgba_variance();
  color_start_rgba_variance_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.color_start_rgba_variance)
}

// optional uint32 color_end_rgba = 15;
inline bool CMsgParticleSystem::has_color_end_rgba() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgParticleSystem::set_has_color_end_rgba() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgParticleSystem::clear_has_color_end_rgba() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgParticleSystem::clear_color_end_rgba() {
  color_end_rgba_ = 0u;
  clear_has_color_end_rgba();
}
inline ::google::protobuf::uint32 CMsgParticleSystem::color_end_rgba() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.color_end_rgba)
  return color_end_rgba_;
}
inline void CMsgParticleSystem::set_color_end_rgba(::google::protobuf::uint32 value) {
  set_has_color_end_rgba();
  color_end_rgba_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.color_end_rgba)
}

// optional uint32 color_end_rgba_variance = 16;
inline bool CMsgParticleSystem::has_color_end_rgba_variance() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgParticleSystem::set_has_color_end_rgba_variance() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgParticleSystem::clear_has_color_end_rgba_variance() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgParticleSystem::clear_color_end_rgba_variance() {
  color_end_rgba_variance_ = 0u;
  clear_has_color_end_rgba_variance();
}
inline ::google::protobuf::uint32 CMsgParticleSystem::color_end_rgba_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.color_end_rgba_variance)
  return color_end_rgba_variance_;
}
inline void CMsgParticleSystem::set_color_end_rgba_variance(::google::protobuf::uint32 value) {
  set_has_color_end_rgba_variance();
  color_end_rgba_variance_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.color_end_rgba_variance)
}

// optional uint64 parent_panel_handle = 17;
inline bool CMsgParticleSystem::has_parent_panel_handle() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgParticleSystem::set_has_parent_panel_handle() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgParticleSystem::clear_has_parent_panel_handle() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgParticleSystem::clear_parent_panel_handle() {
  parent_panel_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_parent_panel_handle();
}
inline ::google::protobuf::uint64 CMsgParticleSystem::parent_panel_handle() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.parent_panel_handle)
  return parent_panel_handle_;
}
inline void CMsgParticleSystem::set_parent_panel_handle(::google::protobuf::uint64 value) {
  set_has_parent_panel_handle();
  parent_panel_handle_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.parent_panel_handle)
}

// optional uint32 parent_brush_index = 18;
inline bool CMsgParticleSystem::has_parent_brush_index() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgParticleSystem::set_has_parent_brush_index() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgParticleSystem::clear_has_parent_brush_index() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgParticleSystem::clear_parent_brush_index() {
  parent_brush_index_ = 0u;
  clear_has_parent_brush_index();
}
inline ::google::protobuf::uint32 CMsgParticleSystem::parent_brush_index() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.parent_brush_index)
  return parent_brush_index_;
}
inline void CMsgParticleSystem::set_parent_brush_index(::google::protobuf::uint32 value) {
  set_has_parent_brush_index();
  parent_brush_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.parent_brush_index)
}

// optional float particle_sharpness = 19;
inline bool CMsgParticleSystem::has_particle_sharpness() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_sharpness() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgParticleSystem::clear_has_particle_sharpness() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgParticleSystem::clear_particle_sharpness() {
  particle_sharpness_ = 0;
  clear_has_particle_sharpness();
}
inline float CMsgParticleSystem::particle_sharpness() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_sharpness)
  return particle_sharpness_;
}
inline void CMsgParticleSystem::set_particle_sharpness(float value) {
  set_has_particle_sharpness();
  particle_sharpness_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_sharpness)
}

// optional float particle_sharpness_variance = 20;
inline bool CMsgParticleSystem::has_particle_sharpness_variance() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_sharpness_variance() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgParticleSystem::clear_has_particle_sharpness_variance() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgParticleSystem::clear_particle_sharpness_variance() {
  particle_sharpness_variance_ = 0;
  clear_has_particle_sharpness_variance();
}
inline float CMsgParticleSystem::particle_sharpness_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_sharpness_variance)
  return particle_sharpness_variance_;
}
inline void CMsgParticleSystem::set_particle_sharpness_variance(float value) {
  set_has_particle_sharpness_variance();
  particle_sharpness_variance_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_sharpness_variance)
}

// optional float particle_flicker = 21;
inline bool CMsgParticleSystem::has_particle_flicker() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_flicker() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgParticleSystem::clear_has_particle_flicker() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgParticleSystem::clear_particle_flicker() {
  particle_flicker_ = 0;
  clear_has_particle_flicker();
}
inline float CMsgParticleSystem::particle_flicker() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_flicker)
  return particle_flicker_;
}
inline void CMsgParticleSystem::set_particle_flicker(float value) {
  set_has_particle_flicker();
  particle_flicker_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_flicker)
}

// optional float particle_flicker_variance = 22;
inline bool CMsgParticleSystem::has_particle_flicker_variance() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_flicker_variance() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgParticleSystem::clear_has_particle_flicker_variance() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgParticleSystem::clear_particle_flicker_variance() {
  particle_flicker_variance_ = 0;
  clear_has_particle_flicker_variance();
}
inline float CMsgParticleSystem::particle_flicker_variance() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_flicker_variance)
  return particle_flicker_variance_;
}
inline void CMsgParticleSystem::set_particle_flicker_variance(float value) {
  set_has_particle_flicker_variance();
  particle_flicker_variance_ = value;
  // @@protoc_insertion_point(field_set:CMsgParticleSystem.particle_flicker_variance)
}

// optional .CMsgPoint particle_velocity_min = 23;
inline bool CMsgParticleSystem::has_particle_velocity_min() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_velocity_min() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgParticleSystem::clear_has_particle_velocity_min() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgParticleSystem::clear_particle_velocity_min() {
  if (particle_velocity_min_ != NULL) particle_velocity_min_->::CMsgPoint::Clear();
  clear_has_particle_velocity_min();
}
inline const ::CMsgPoint& CMsgParticleSystem::particle_velocity_min() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_velocity_min)
  return particle_velocity_min_ != NULL ? *particle_velocity_min_ : *default_instance_->particle_velocity_min_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_particle_velocity_min() {
  set_has_particle_velocity_min();
  if (particle_velocity_min_ == NULL) {
    particle_velocity_min_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.particle_velocity_min)
  return particle_velocity_min_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_particle_velocity_min() {
  clear_has_particle_velocity_min();
  ::CMsgPoint* temp = particle_velocity_min_;
  particle_velocity_min_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_particle_velocity_min(::CMsgPoint* particle_velocity_min) {
  delete particle_velocity_min_;
  particle_velocity_min_ = particle_velocity_min;
  if (particle_velocity_min) {
    set_has_particle_velocity_min();
  } else {
    clear_has_particle_velocity_min();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.particle_velocity_min)
}

// optional .CMsgPoint particle_velocity_max = 24;
inline bool CMsgParticleSystem::has_particle_velocity_max() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgParticleSystem::set_has_particle_velocity_max() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgParticleSystem::clear_has_particle_velocity_max() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgParticleSystem::clear_particle_velocity_max() {
  if (particle_velocity_max_ != NULL) particle_velocity_max_->::CMsgPoint::Clear();
  clear_has_particle_velocity_max();
}
inline const ::CMsgPoint& CMsgParticleSystem::particle_velocity_max() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particle_velocity_max)
  return particle_velocity_max_ != NULL ? *particle_velocity_max_ : *default_instance_->particle_velocity_max_;
}
inline ::CMsgPoint* CMsgParticleSystem::mutable_particle_velocity_max() {
  set_has_particle_velocity_max();
  if (particle_velocity_max_ == NULL) {
    particle_velocity_max_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.particle_velocity_max)
  return particle_velocity_max_;
}
inline ::CMsgPoint* CMsgParticleSystem::release_particle_velocity_max() {
  clear_has_particle_velocity_max();
  ::CMsgPoint* temp = particle_velocity_max_;
  particle_velocity_max_ = NULL;
  return temp;
}
inline void CMsgParticleSystem::set_allocated_particle_velocity_max(::CMsgPoint* particle_velocity_max) {
  delete particle_velocity_max_;
  particle_velocity_max_ = particle_velocity_max;
  if (particle_velocity_max) {
    set_has_particle_velocity_max();
  } else {
    clear_has_particle_velocity_max();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystem.particle_velocity_max)
}

// repeated .CMsgParticle particles = 50;
inline int CMsgParticleSystem::particles_size() const {
  return particles_.size();
}
inline void CMsgParticleSystem::clear_particles() {
  particles_.Clear();
}
inline const ::CMsgParticle& CMsgParticleSystem::particles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystem.particles)
  return particles_.Get(index);
}
inline ::CMsgParticle* CMsgParticleSystem::mutable_particles(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystem.particles)
  return particles_.Mutable(index);
}
inline ::CMsgParticle* CMsgParticleSystem::add_particles() {
  // @@protoc_insertion_point(field_add:CMsgParticleSystem.particles)
  return particles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgParticle >*
CMsgParticleSystem::mutable_particles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgParticleSystem.particles)
  return &particles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgParticle >&
CMsgParticleSystem::particles() const {
  // @@protoc_insertion_point(field_list:CMsgParticleSystem.particles)
  return particles_;
}

// -------------------------------------------------------------------

// CMsgFillBrush

// optional double opacity = 1;
inline bool CMsgFillBrush::has_opacity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFillBrush::set_has_opacity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFillBrush::clear_has_opacity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFillBrush::clear_opacity() {
  opacity_ = 0;
  clear_has_opacity();
}
inline double CMsgFillBrush::opacity() const {
  // @@protoc_insertion_point(field_get:CMsgFillBrush.opacity)
  return opacity_;
}
inline void CMsgFillBrush::set_opacity(double value) {
  set_has_opacity();
  opacity_ = value;
  // @@protoc_insertion_point(field_set:CMsgFillBrush.opacity)
}

// optional uint32 color_rgba = 2;
inline bool CMsgFillBrush::has_color_rgba() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFillBrush::set_has_color_rgba() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFillBrush::clear_has_color_rgba() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFillBrush::clear_color_rgba() {
  color_rgba_ = 0u;
  clear_has_color_rgba();
}
inline ::google::protobuf::uint32 CMsgFillBrush::color_rgba() const {
  // @@protoc_insertion_point(field_get:CMsgFillBrush.color_rgba)
  return color_rgba_;
}
inline void CMsgFillBrush::set_color_rgba(::google::protobuf::uint32 value) {
  set_has_color_rgba();
  color_rgba_ = value;
  // @@protoc_insertion_point(field_set:CMsgFillBrush.color_rgba)
}

// optional .CMsgLinearGradient linear_gradient = 3;
inline bool CMsgFillBrush::has_linear_gradient() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgFillBrush::set_has_linear_gradient() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgFillBrush::clear_has_linear_gradient() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgFillBrush::clear_linear_gradient() {
  if (linear_gradient_ != NULL) linear_gradient_->::CMsgLinearGradient::Clear();
  clear_has_linear_gradient();
}
inline const ::CMsgLinearGradient& CMsgFillBrush::linear_gradient() const {
  // @@protoc_insertion_point(field_get:CMsgFillBrush.linear_gradient)
  return linear_gradient_ != NULL ? *linear_gradient_ : *default_instance_->linear_gradient_;
}
inline ::CMsgLinearGradient* CMsgFillBrush::mutable_linear_gradient() {
  set_has_linear_gradient();
  if (linear_gradient_ == NULL) {
    linear_gradient_ = new ::CMsgLinearGradient;
  }
  // @@protoc_insertion_point(field_mutable:CMsgFillBrush.linear_gradient)
  return linear_gradient_;
}
inline ::CMsgLinearGradient* CMsgFillBrush::release_linear_gradient() {
  clear_has_linear_gradient();
  ::CMsgLinearGradient* temp = linear_gradient_;
  linear_gradient_ = NULL;
  return temp;
}
inline void CMsgFillBrush::set_allocated_linear_gradient(::CMsgLinearGradient* linear_gradient) {
  delete linear_gradient_;
  linear_gradient_ = linear_gradient;
  if (linear_gradient) {
    set_has_linear_gradient();
  } else {
    clear_has_linear_gradient();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgFillBrush.linear_gradient)
}

// optional .CMsgRadialGradient radial_gradient = 4;
inline bool CMsgFillBrush::has_radial_gradient() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgFillBrush::set_has_radial_gradient() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgFillBrush::clear_has_radial_gradient() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgFillBrush::clear_radial_gradient() {
  if (radial_gradient_ != NULL) radial_gradient_->::CMsgRadialGradient::Clear();
  clear_has_radial_gradient();
}
inline const ::CMsgRadialGradient& CMsgFillBrush::radial_gradient() const {
  // @@protoc_insertion_point(field_get:CMsgFillBrush.radial_gradient)
  return radial_gradient_ != NULL ? *radial_gradient_ : *default_instance_->radial_gradient_;
}
inline ::CMsgRadialGradient* CMsgFillBrush::mutable_radial_gradient() {
  set_has_radial_gradient();
  if (radial_gradient_ == NULL) {
    radial_gradient_ = new ::CMsgRadialGradient;
  }
  // @@protoc_insertion_point(field_mutable:CMsgFillBrush.radial_gradient)
  return radial_gradient_;
}
inline ::CMsgRadialGradient* CMsgFillBrush::release_radial_gradient() {
  clear_has_radial_gradient();
  ::CMsgRadialGradient* temp = radial_gradient_;
  radial_gradient_ = NULL;
  return temp;
}
inline void CMsgFillBrush::set_allocated_radial_gradient(::CMsgRadialGradient* radial_gradient) {
  delete radial_gradient_;
  radial_gradient_ = radial_gradient;
  if (radial_gradient) {
    set_has_radial_gradient();
  } else {
    clear_has_radial_gradient();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgFillBrush.radial_gradient)
}

// optional .CMsgParticleSystem particle_system = 5;
inline bool CMsgFillBrush::has_particle_system() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgFillBrush::set_has_particle_system() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgFillBrush::clear_has_particle_system() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgFillBrush::clear_particle_system() {
  if (particle_system_ != NULL) particle_system_->::CMsgParticleSystem::Clear();
  clear_has_particle_system();
}
inline const ::CMsgParticleSystem& CMsgFillBrush::particle_system() const {
  // @@protoc_insertion_point(field_get:CMsgFillBrush.particle_system)
  return particle_system_ != NULL ? *particle_system_ : *default_instance_->particle_system_;
}
inline ::CMsgParticleSystem* CMsgFillBrush::mutable_particle_system() {
  set_has_particle_system();
  if (particle_system_ == NULL) {
    particle_system_ = new ::CMsgParticleSystem;
  }
  // @@protoc_insertion_point(field_mutable:CMsgFillBrush.particle_system)
  return particle_system_;
}
inline ::CMsgParticleSystem* CMsgFillBrush::release_particle_system() {
  clear_has_particle_system();
  ::CMsgParticleSystem* temp = particle_system_;
  particle_system_ = NULL;
  return temp;
}
inline void CMsgFillBrush::set_allocated_particle_system(::CMsgParticleSystem* particle_system) {
  delete particle_system_;
  particle_system_ = particle_system;
  if (particle_system) {
    set_has_particle_system();
  } else {
    clear_has_particle_system();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgFillBrush.particle_system)
}

// -------------------------------------------------------------------

// CMsgFillBrushCollection_AnimationFrameData

// repeated .CMsgFillBrush data = 1;
inline int CMsgFillBrushCollection_AnimationFrameData::data_size() const {
  return data_.size();
}
inline void CMsgFillBrushCollection_AnimationFrameData::clear_data() {
  data_.Clear();
}
inline const ::CMsgFillBrush& CMsgFillBrushCollection_AnimationFrameData::data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFillBrushCollection.AnimationFrameData.data)
  return data_.Get(index);
}
inline ::CMsgFillBrush* CMsgFillBrushCollection_AnimationFrameData::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgFillBrushCollection.AnimationFrameData.data)
  return data_.Mutable(index);
}
inline ::CMsgFillBrush* CMsgFillBrushCollection_AnimationFrameData::add_data() {
  // @@protoc_insertion_point(field_add:CMsgFillBrushCollection.AnimationFrameData.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
CMsgFillBrushCollection_AnimationFrameData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFillBrushCollection.AnimationFrameData.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
CMsgFillBrushCollection_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_list:CMsgFillBrushCollection.AnimationFrameData.data)
  return data_;
}

// -------------------------------------------------------------------

// CMsgFillBrushCollection

// repeated .CMsgFillBrush base = 1;
inline int CMsgFillBrushCollection::base_size() const {
  return base_.size();
}
inline void CMsgFillBrushCollection::clear_base() {
  base_.Clear();
}
inline const ::CMsgFillBrush& CMsgFillBrushCollection::base(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFillBrushCollection.base)
  return base_.Get(index);
}
inline ::CMsgFillBrush* CMsgFillBrushCollection::mutable_base(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgFillBrushCollection.base)
  return base_.Mutable(index);
}
inline ::CMsgFillBrush* CMsgFillBrushCollection::add_base() {
  // @@protoc_insertion_point(field_add:CMsgFillBrushCollection.base)
  return base_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
CMsgFillBrushCollection::mutable_base() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFillBrushCollection.base)
  return &base_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
CMsgFillBrushCollection::base() const {
  // @@protoc_insertion_point(field_list:CMsgFillBrushCollection.base)
  return base_;
}

// repeated .CMsgFillBrush transition = 2;
inline int CMsgFillBrushCollection::transition_size() const {
  return transition_.size();
}
inline void CMsgFillBrushCollection::clear_transition() {
  transition_.Clear();
}
inline const ::CMsgFillBrush& CMsgFillBrushCollection::transition(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFillBrushCollection.transition)
  return transition_.Get(index);
}
inline ::CMsgFillBrush* CMsgFillBrushCollection::mutable_transition(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgFillBrushCollection.transition)
  return transition_.Mutable(index);
}
inline ::CMsgFillBrush* CMsgFillBrushCollection::add_transition() {
  // @@protoc_insertion_point(field_add:CMsgFillBrushCollection.transition)
  return transition_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
CMsgFillBrushCollection::mutable_transition() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFillBrushCollection.transition)
  return &transition_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
CMsgFillBrushCollection::transition() const {
  // @@protoc_insertion_point(field_list:CMsgFillBrushCollection.transition)
  return transition_;
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgFillBrushCollection::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgFillBrushCollection::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgFillBrushCollection::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgFillBrushCollection::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgFillBrushCollection::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgFillBrushCollection.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgFillBrushCollection::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgFillBrushCollection.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgFillBrushCollection::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgFillBrushCollection::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgFillBrushCollection.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgFillBrushCollection::animations_size() const {
  return animations_.size();
}
inline void CMsgFillBrushCollection::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgFillBrushCollection::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFillBrushCollection.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgFillBrushCollection::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgFillBrushCollection.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgFillBrushCollection::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgFillBrushCollection.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgFillBrushCollection::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFillBrushCollection.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgFillBrushCollection::animations() const {
  // @@protoc_insertion_point(field_list:CMsgFillBrushCollection.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgRenderFillBrushCollection

// repeated .CMsgFillBrush fill_brush = 1;
inline int CMsgRenderFillBrushCollection::fill_brush_size() const {
  return fill_brush_.size();
}
inline void CMsgRenderFillBrushCollection::clear_fill_brush() {
  fill_brush_.Clear();
}
inline const ::CMsgFillBrush& CMsgRenderFillBrushCollection::fill_brush(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRenderFillBrushCollection.fill_brush)
  return fill_brush_.Get(index);
}
inline ::CMsgFillBrush* CMsgRenderFillBrushCollection::mutable_fill_brush(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgRenderFillBrushCollection.fill_brush)
  return fill_brush_.Mutable(index);
}
inline ::CMsgFillBrush* CMsgRenderFillBrushCollection::add_fill_brush() {
  // @@protoc_insertion_point(field_add:CMsgRenderFillBrushCollection.fill_brush)
  return fill_brush_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >*
CMsgRenderFillBrushCollection::mutable_fill_brush() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRenderFillBrushCollection.fill_brush)
  return &fill_brush_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgFillBrush >&
CMsgRenderFillBrushCollection::fill_brush() const {
  // @@protoc_insertion_point(field_list:CMsgRenderFillBrushCollection.fill_brush)
  return fill_brush_;
}

// -------------------------------------------------------------------

// CMsgPanelPosition_AnimationFrameData

// optional .CMsgPoint data = 1;
inline bool CMsgPanelPosition_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPanelPosition_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPanelPosition_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPanelPosition_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgPoint::Clear();
  clear_has_data();
}
inline const ::CMsgPoint& CMsgPanelPosition_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgPoint* CMsgPanelPosition_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.AnimationFrameData.data)
  return data_;
}
inline ::CMsgPoint* CMsgPanelPosition_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgPoint* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgPanelPosition_AnimationFrameData::set_allocated_data(::CMsgPoint* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgPanelPosition

// optional .CMsgPoint base = 1;
inline bool CMsgPanelPosition::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPanelPosition::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPanelPosition::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPanelPosition::clear_base() {
  if (base_ != NULL) base_->::CMsgPoint::Clear();
  clear_has_base();
}
inline const ::CMsgPoint& CMsgPanelPosition::base() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgPoint* CMsgPanelPosition::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.base)
  return base_;
}
inline ::CMsgPoint* CMsgPanelPosition::release_base() {
  clear_has_base();
  ::CMsgPoint* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgPanelPosition::set_allocated_base(::CMsgPoint* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.base)
}

// optional .CMsgPoint transition = 2;
inline bool CMsgPanelPosition::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPanelPosition::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPanelPosition::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPanelPosition::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgPoint::Clear();
  clear_has_transition();
}
inline const ::CMsgPoint& CMsgPanelPosition::transition() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgPoint* CMsgPanelPosition::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.transition)
  return transition_;
}
inline ::CMsgPoint* CMsgPanelPosition::release_transition() {
  clear_has_transition();
  ::CMsgPoint* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgPanelPosition::set_allocated_transition(::CMsgPoint* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgPanelPosition::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPanelPosition::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPanelPosition::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPanelPosition::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgPanelPosition::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgPanelPosition::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgPanelPosition::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgPanelPosition::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgPanelPosition::animations_size() const {
  return animations_.size();
}
inline void CMsgPanelPosition::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgPanelPosition::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgPanelPosition::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgPanelPosition::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgPanelPosition.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgPanelPosition::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPanelPosition.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgPanelPosition::animations() const {
  // @@protoc_insertion_point(field_list:CMsgPanelPosition.animations)
  return animations_;
}

// optional .CMsgPoint scroll_offset = 5;
inline bool CMsgPanelPosition::has_scroll_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPanelPosition::set_has_scroll_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPanelPosition::clear_has_scroll_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPanelPosition::clear_scroll_offset() {
  if (scroll_offset_ != NULL) scroll_offset_->::CMsgPoint::Clear();
  clear_has_scroll_offset();
}
inline const ::CMsgPoint& CMsgPanelPosition::scroll_offset() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.scroll_offset)
  return scroll_offset_ != NULL ? *scroll_offset_ : *default_instance_->scroll_offset_;
}
inline ::CMsgPoint* CMsgPanelPosition::mutable_scroll_offset() {
  set_has_scroll_offset();
  if (scroll_offset_ == NULL) {
    scroll_offset_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.scroll_offset)
  return scroll_offset_;
}
inline ::CMsgPoint* CMsgPanelPosition::release_scroll_offset() {
  clear_has_scroll_offset();
  ::CMsgPoint* temp = scroll_offset_;
  scroll_offset_ = NULL;
  return temp;
}
inline void CMsgPanelPosition::set_allocated_scroll_offset(::CMsgPoint* scroll_offset) {
  delete scroll_offset_;
  scroll_offset_ = scroll_offset;
  if (scroll_offset) {
    set_has_scroll_offset();
  } else {
    clear_has_scroll_offset();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.scroll_offset)
}

// optional .CMsgPoint scroll_offset_target = 6;
inline bool CMsgPanelPosition::has_scroll_offset_target() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPanelPosition::set_has_scroll_offset_target() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPanelPosition::clear_has_scroll_offset_target() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPanelPosition::clear_scroll_offset_target() {
  if (scroll_offset_target_ != NULL) scroll_offset_target_->::CMsgPoint::Clear();
  clear_has_scroll_offset_target();
}
inline const ::CMsgPoint& CMsgPanelPosition::scroll_offset_target() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.scroll_offset_target)
  return scroll_offset_target_ != NULL ? *scroll_offset_target_ : *default_instance_->scroll_offset_target_;
}
inline ::CMsgPoint* CMsgPanelPosition::mutable_scroll_offset_target() {
  set_has_scroll_offset_target();
  if (scroll_offset_target_ == NULL) {
    scroll_offset_target_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.scroll_offset_target)
  return scroll_offset_target_;
}
inline ::CMsgPoint* CMsgPanelPosition::release_scroll_offset_target() {
  clear_has_scroll_offset_target();
  ::CMsgPoint* temp = scroll_offset_target_;
  scroll_offset_target_ = NULL;
  return temp;
}
inline void CMsgPanelPosition::set_allocated_scroll_offset_target(::CMsgPoint* scroll_offset_target) {
  delete scroll_offset_target_;
  scroll_offset_target_ = scroll_offset_target;
  if (scroll_offset_target) {
    set_has_scroll_offset_target();
  } else {
    clear_has_scroll_offset_target();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.scroll_offset_target)
}

// optional .CMsgTransitionData scroll_transition_x = 7;
inline bool CMsgPanelPosition::has_scroll_transition_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPanelPosition::set_has_scroll_transition_x() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPanelPosition::clear_has_scroll_transition_x() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPanelPosition::clear_scroll_transition_x() {
  if (scroll_transition_x_ != NULL) scroll_transition_x_->::CMsgTransitionData::Clear();
  clear_has_scroll_transition_x();
}
inline const ::CMsgTransitionData& CMsgPanelPosition::scroll_transition_x() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.scroll_transition_x)
  return scroll_transition_x_ != NULL ? *scroll_transition_x_ : *default_instance_->scroll_transition_x_;
}
inline ::CMsgTransitionData* CMsgPanelPosition::mutable_scroll_transition_x() {
  set_has_scroll_transition_x();
  if (scroll_transition_x_ == NULL) {
    scroll_transition_x_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.scroll_transition_x)
  return scroll_transition_x_;
}
inline ::CMsgTransitionData* CMsgPanelPosition::release_scroll_transition_x() {
  clear_has_scroll_transition_x();
  ::CMsgTransitionData* temp = scroll_transition_x_;
  scroll_transition_x_ = NULL;
  return temp;
}
inline void CMsgPanelPosition::set_allocated_scroll_transition_x(::CMsgTransitionData* scroll_transition_x) {
  delete scroll_transition_x_;
  scroll_transition_x_ = scroll_transition_x;
  if (scroll_transition_x) {
    set_has_scroll_transition_x();
  } else {
    clear_has_scroll_transition_x();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.scroll_transition_x)
}

// optional .CMsgTransitionData scroll_transition_y = 8;
inline bool CMsgPanelPosition::has_scroll_transition_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPanelPosition::set_has_scroll_transition_y() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPanelPosition::clear_has_scroll_transition_y() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPanelPosition::clear_scroll_transition_y() {
  if (scroll_transition_y_ != NULL) scroll_transition_y_->::CMsgTransitionData::Clear();
  clear_has_scroll_transition_y();
}
inline const ::CMsgTransitionData& CMsgPanelPosition::scroll_transition_y() const {
  // @@protoc_insertion_point(field_get:CMsgPanelPosition.scroll_transition_y)
  return scroll_transition_y_ != NULL ? *scroll_transition_y_ : *default_instance_->scroll_transition_y_;
}
inline ::CMsgTransitionData* CMsgPanelPosition::mutable_scroll_transition_y() {
  set_has_scroll_transition_y();
  if (scroll_transition_y_ == NULL) {
    scroll_transition_y_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPanelPosition.scroll_transition_y)
  return scroll_transition_y_;
}
inline ::CMsgTransitionData* CMsgPanelPosition::release_scroll_transition_y() {
  clear_has_scroll_transition_y();
  ::CMsgTransitionData* temp = scroll_transition_y_;
  scroll_transition_y_ = NULL;
  return temp;
}
inline void CMsgPanelPosition::set_allocated_scroll_transition_y(::CMsgTransitionData* scroll_transition_y) {
  delete scroll_transition_y_;
  scroll_transition_y_ = scroll_transition_y;
  if (scroll_transition_y) {
    set_has_scroll_transition_y();
  } else {
    clear_has_scroll_transition_y();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPanelPosition.scroll_transition_y)
}

// -------------------------------------------------------------------

// CMsgOpacity_AnimationFrameData

// optional double data = 1;
inline bool CMsgOpacity_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpacity_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpacity_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpacity_AnimationFrameData::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline double CMsgOpacity_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgOpacity.AnimationFrameData.data)
  return data_;
}
inline void CMsgOpacity_AnimationFrameData::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsgOpacity.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgOpacity

// optional double base = 1;
inline bool CMsgOpacity::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpacity::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpacity::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpacity::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline double CMsgOpacity::base() const {
  // @@protoc_insertion_point(field_get:CMsgOpacity.base)
  return base_;
}
inline void CMsgOpacity::set_base(double value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsgOpacity.base)
}

// optional double transition = 2;
inline bool CMsgOpacity::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgOpacity::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgOpacity::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgOpacity::clear_transition() {
  transition_ = 0;
  clear_has_transition();
}
inline double CMsgOpacity::transition() const {
  // @@protoc_insertion_point(field_get:CMsgOpacity.transition)
  return transition_;
}
inline void CMsgOpacity::set_transition(double value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsgOpacity.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgOpacity::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgOpacity::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgOpacity::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgOpacity::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgOpacity::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgOpacity.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgOpacity::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgOpacity.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgOpacity::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgOpacity::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgOpacity.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgOpacity::animations_size() const {
  return animations_.size();
}
inline void CMsgOpacity::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgOpacity::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgOpacity.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgOpacity::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgOpacity.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgOpacity::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgOpacity.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgOpacity::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgOpacity.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgOpacity::animations() const {
  // @@protoc_insertion_point(field_list:CMsgOpacity.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgRotate2D_AnimationFrameData

// optional double data = 1;
inline bool CMsgRotate2D_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRotate2D_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRotate2D_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRotate2D_AnimationFrameData::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline double CMsgRotate2D_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgRotate2D.AnimationFrameData.data)
  return data_;
}
inline void CMsgRotate2D_AnimationFrameData::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsgRotate2D.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgRotate2D

// optional double base = 1;
inline bool CMsgRotate2D::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRotate2D::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRotate2D::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRotate2D::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline double CMsgRotate2D::base() const {
  // @@protoc_insertion_point(field_get:CMsgRotate2D.base)
  return base_;
}
inline void CMsgRotate2D::set_base(double value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsgRotate2D.base)
}

// optional double transition = 2;
inline bool CMsgRotate2D::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRotate2D::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRotate2D::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRotate2D::clear_transition() {
  transition_ = 0;
  clear_has_transition();
}
inline double CMsgRotate2D::transition() const {
  // @@protoc_insertion_point(field_get:CMsgRotate2D.transition)
  return transition_;
}
inline void CMsgRotate2D::set_transition(double value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsgRotate2D.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgRotate2D::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRotate2D::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRotate2D::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRotate2D::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgRotate2D::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgRotate2D.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgRotate2D::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRotate2D.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgRotate2D::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgRotate2D::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRotate2D.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgRotate2D::animations_size() const {
  return animations_.size();
}
inline void CMsgRotate2D::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgRotate2D::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRotate2D.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgRotate2D::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgRotate2D.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgRotate2D::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgRotate2D.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgRotate2D::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRotate2D.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgRotate2D::animations() const {
  // @@protoc_insertion_point(field_list:CMsgRotate2D.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgOpacityMaskData

// optional uint32 opacity_mask_texture_id = 1;
inline bool CMsgOpacityMaskData::has_opacity_mask_texture_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpacityMaskData::set_has_opacity_mask_texture_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpacityMaskData::clear_has_opacity_mask_texture_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpacityMaskData::clear_opacity_mask_texture_id() {
  opacity_mask_texture_id_ = 0u;
  clear_has_opacity_mask_texture_id();
}
inline ::google::protobuf::uint32 CMsgOpacityMaskData::opacity_mask_texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgOpacityMaskData.opacity_mask_texture_id)
  return opacity_mask_texture_id_;
}
inline void CMsgOpacityMaskData::set_opacity_mask_texture_id(::google::protobuf::uint32 value) {
  set_has_opacity_mask_texture_id();
  opacity_mask_texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgOpacityMaskData.opacity_mask_texture_id)
}

// optional double opacity_mask_opacity = 2;
inline bool CMsgOpacityMaskData::has_opacity_mask_opacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgOpacityMaskData::set_has_opacity_mask_opacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgOpacityMaskData::clear_has_opacity_mask_opacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgOpacityMaskData::clear_opacity_mask_opacity() {
  opacity_mask_opacity_ = 0;
  clear_has_opacity_mask_opacity();
}
inline double CMsgOpacityMaskData::opacity_mask_opacity() const {
  // @@protoc_insertion_point(field_get:CMsgOpacityMaskData.opacity_mask_opacity)
  return opacity_mask_opacity_;
}
inline void CMsgOpacityMaskData::set_opacity_mask_opacity(double value) {
  set_has_opacity_mask_opacity();
  opacity_mask_opacity_ = value;
  // @@protoc_insertion_point(field_set:CMsgOpacityMaskData.opacity_mask_opacity)
}

// -------------------------------------------------------------------

// CMsgOpacityMask_AnimationFrameData

// optional .CMsgOpacityMaskData data = 1;
inline bool CMsgOpacityMask_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpacityMask_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpacityMask_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpacityMask_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgOpacityMaskData::Clear();
  clear_has_data();
}
inline const ::CMsgOpacityMaskData& CMsgOpacityMask_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgOpacityMask.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgOpacityMaskData* CMsgOpacityMask_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgOpacityMaskData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgOpacityMask.AnimationFrameData.data)
  return data_;
}
inline ::CMsgOpacityMaskData* CMsgOpacityMask_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgOpacityMaskData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgOpacityMask_AnimationFrameData::set_allocated_data(::CMsgOpacityMaskData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgOpacityMask.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgOpacityMask

// optional .CMsgOpacityMaskData base = 1;
inline bool CMsgOpacityMask::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpacityMask::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpacityMask::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpacityMask::clear_base() {
  if (base_ != NULL) base_->::CMsgOpacityMaskData::Clear();
  clear_has_base();
}
inline const ::CMsgOpacityMaskData& CMsgOpacityMask::base() const {
  // @@protoc_insertion_point(field_get:CMsgOpacityMask.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgOpacityMaskData* CMsgOpacityMask::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgOpacityMaskData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgOpacityMask.base)
  return base_;
}
inline ::CMsgOpacityMaskData* CMsgOpacityMask::release_base() {
  clear_has_base();
  ::CMsgOpacityMaskData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgOpacityMask::set_allocated_base(::CMsgOpacityMaskData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgOpacityMask.base)
}

// optional .CMsgOpacityMaskData transition = 2;
inline bool CMsgOpacityMask::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgOpacityMask::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgOpacityMask::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgOpacityMask::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgOpacityMaskData::Clear();
  clear_has_transition();
}
inline const ::CMsgOpacityMaskData& CMsgOpacityMask::transition() const {
  // @@protoc_insertion_point(field_get:CMsgOpacityMask.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgOpacityMaskData* CMsgOpacityMask::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgOpacityMaskData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgOpacityMask.transition)
  return transition_;
}
inline ::CMsgOpacityMaskData* CMsgOpacityMask::release_transition() {
  clear_has_transition();
  ::CMsgOpacityMaskData* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgOpacityMask::set_allocated_transition(::CMsgOpacityMaskData* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgOpacityMask.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgOpacityMask::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgOpacityMask::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgOpacityMask::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgOpacityMask::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgOpacityMask::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgOpacityMask.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgOpacityMask::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgOpacityMask.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgOpacityMask::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgOpacityMask::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgOpacityMask.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgOpacityMask::animations_size() const {
  return animations_.size();
}
inline void CMsgOpacityMask::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgOpacityMask::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgOpacityMask.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgOpacityMask::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgOpacityMask.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgOpacityMask::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgOpacityMask.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgOpacityMask::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgOpacityMask.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgOpacityMask::animations() const {
  // @@protoc_insertion_point(field_list:CMsgOpacityMask.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgHueShift_AnimationFrameData

// optional double data = 1;
inline bool CMsgHueShift_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHueShift_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHueShift_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHueShift_AnimationFrameData::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline double CMsgHueShift_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgHueShift.AnimationFrameData.data)
  return data_;
}
inline void CMsgHueShift_AnimationFrameData::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsgHueShift.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgHueShift

// optional double base = 1;
inline bool CMsgHueShift::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHueShift::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHueShift::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHueShift::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline double CMsgHueShift::base() const {
  // @@protoc_insertion_point(field_get:CMsgHueShift.base)
  return base_;
}
inline void CMsgHueShift::set_base(double value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsgHueShift.base)
}

// optional double transition = 2;
inline bool CMsgHueShift::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHueShift::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHueShift::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHueShift::clear_transition() {
  transition_ = 0;
  clear_has_transition();
}
inline double CMsgHueShift::transition() const {
  // @@protoc_insertion_point(field_get:CMsgHueShift.transition)
  return transition_;
}
inline void CMsgHueShift::set_transition(double value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsgHueShift.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgHueShift::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHueShift::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHueShift::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHueShift::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgHueShift::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgHueShift.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgHueShift::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgHueShift.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgHueShift::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgHueShift::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgHueShift.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgHueShift::animations_size() const {
  return animations_.size();
}
inline void CMsgHueShift::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgHueShift::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHueShift.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgHueShift::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHueShift.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgHueShift::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgHueShift.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgHueShift::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHueShift.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgHueShift::animations() const {
  // @@protoc_insertion_point(field_list:CMsgHueShift.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgSaturation_AnimationFrameData

// optional double data = 1;
inline bool CMsgSaturation_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSaturation_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSaturation_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSaturation_AnimationFrameData::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline double CMsgSaturation_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgSaturation.AnimationFrameData.data)
  return data_;
}
inline void CMsgSaturation_AnimationFrameData::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsgSaturation.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgSaturation

// optional double base = 1;
inline bool CMsgSaturation::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSaturation::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSaturation::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSaturation::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline double CMsgSaturation::base() const {
  // @@protoc_insertion_point(field_get:CMsgSaturation.base)
  return base_;
}
inline void CMsgSaturation::set_base(double value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsgSaturation.base)
}

// optional double transition = 2;
inline bool CMsgSaturation::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSaturation::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSaturation::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSaturation::clear_transition() {
  transition_ = 0;
  clear_has_transition();
}
inline double CMsgSaturation::transition() const {
  // @@protoc_insertion_point(field_get:CMsgSaturation.transition)
  return transition_;
}
inline void CMsgSaturation::set_transition(double value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsgSaturation.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgSaturation::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSaturation::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSaturation::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSaturation::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgSaturation::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgSaturation.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgSaturation::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSaturation.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgSaturation::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgSaturation::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSaturation.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgSaturation::animations_size() const {
  return animations_.size();
}
inline void CMsgSaturation::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgSaturation::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSaturation.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgSaturation::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSaturation.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgSaturation::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgSaturation.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgSaturation::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSaturation.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgSaturation::animations() const {
  // @@protoc_insertion_point(field_list:CMsgSaturation.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgBrightness_AnimationFrameData

// optional double data = 1;
inline bool CMsgBrightness_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrightness_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrightness_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrightness_AnimationFrameData::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline double CMsgBrightness_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgBrightness.AnimationFrameData.data)
  return data_;
}
inline void CMsgBrightness_AnimationFrameData::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsgBrightness.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgBrightness

// optional double base = 1;
inline bool CMsgBrightness::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrightness::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrightness::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrightness::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline double CMsgBrightness::base() const {
  // @@protoc_insertion_point(field_get:CMsgBrightness.base)
  return base_;
}
inline void CMsgBrightness::set_base(double value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsgBrightness.base)
}

// optional double transition = 2;
inline bool CMsgBrightness::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBrightness::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBrightness::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBrightness::clear_transition() {
  transition_ = 0;
  clear_has_transition();
}
inline double CMsgBrightness::transition() const {
  // @@protoc_insertion_point(field_get:CMsgBrightness.transition)
  return transition_;
}
inline void CMsgBrightness::set_transition(double value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsgBrightness.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgBrightness::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBrightness::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBrightness::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBrightness::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgBrightness::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgBrightness.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgBrightness::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBrightness.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgBrightness::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgBrightness::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBrightness.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgBrightness::animations_size() const {
  return animations_.size();
}
inline void CMsgBrightness::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgBrightness::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBrightness.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgBrightness::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBrightness.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgBrightness::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgBrightness.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgBrightness::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBrightness.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgBrightness::animations() const {
  // @@protoc_insertion_point(field_list:CMsgBrightness.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgContrast_AnimationFrameData

// optional double data = 1;
inline bool CMsgContrast_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgContrast_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgContrast_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgContrast_AnimationFrameData::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline double CMsgContrast_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgContrast.AnimationFrameData.data)
  return data_;
}
inline void CMsgContrast_AnimationFrameData::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsgContrast.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgContrast

// optional double base = 1;
inline bool CMsgContrast::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgContrast::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgContrast::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgContrast::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline double CMsgContrast::base() const {
  // @@protoc_insertion_point(field_get:CMsgContrast.base)
  return base_;
}
inline void CMsgContrast::set_base(double value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsgContrast.base)
}

// optional double transition = 2;
inline bool CMsgContrast::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgContrast::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgContrast::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgContrast::clear_transition() {
  transition_ = 0;
  clear_has_transition();
}
inline double CMsgContrast::transition() const {
  // @@protoc_insertion_point(field_get:CMsgContrast.transition)
  return transition_;
}
inline void CMsgContrast::set_transition(double value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsgContrast.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgContrast::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgContrast::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgContrast::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgContrast::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgContrast::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgContrast.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgContrast::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgContrast.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgContrast::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgContrast::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgContrast.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgContrast::animations_size() const {
  return animations_.size();
}
inline void CMsgContrast::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgContrast::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgContrast.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgContrast::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgContrast.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgContrast::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgContrast.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgContrast::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgContrast.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgContrast::animations() const {
  // @@protoc_insertion_point(field_list:CMsgContrast.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgGaussianValues

// optional double passes = 1;
inline bool CMsgGaussianValues::has_passes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGaussianValues::set_has_passes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGaussianValues::clear_has_passes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGaussianValues::clear_passes() {
  passes_ = 0;
  clear_has_passes();
}
inline double CMsgGaussianValues::passes() const {
  // @@protoc_insertion_point(field_get:CMsgGaussianValues.passes)
  return passes_;
}
inline void CMsgGaussianValues::set_passes(double value) {
  set_has_passes();
  passes_ = value;
  // @@protoc_insertion_point(field_set:CMsgGaussianValues.passes)
}

// optional double stddev_hor = 2;
inline bool CMsgGaussianValues::has_stddev_hor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGaussianValues::set_has_stddev_hor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGaussianValues::clear_has_stddev_hor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGaussianValues::clear_stddev_hor() {
  stddev_hor_ = 0;
  clear_has_stddev_hor();
}
inline double CMsgGaussianValues::stddev_hor() const {
  // @@protoc_insertion_point(field_get:CMsgGaussianValues.stddev_hor)
  return stddev_hor_;
}
inline void CMsgGaussianValues::set_stddev_hor(double value) {
  set_has_stddev_hor();
  stddev_hor_ = value;
  // @@protoc_insertion_point(field_set:CMsgGaussianValues.stddev_hor)
}

// optional double stddev_ver = 3;
inline bool CMsgGaussianValues::has_stddev_ver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGaussianValues::set_has_stddev_ver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGaussianValues::clear_has_stddev_ver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGaussianValues::clear_stddev_ver() {
  stddev_ver_ = 0;
  clear_has_stddev_ver();
}
inline double CMsgGaussianValues::stddev_ver() const {
  // @@protoc_insertion_point(field_get:CMsgGaussianValues.stddev_ver)
  return stddev_ver_;
}
inline void CMsgGaussianValues::set_stddev_ver(double value) {
  set_has_stddev_ver();
  stddev_ver_ = value;
  // @@protoc_insertion_point(field_set:CMsgGaussianValues.stddev_ver)
}

// -------------------------------------------------------------------

// CMsgGaussianBlur_AnimationFrameData

// optional .CMsgGaussianValues data = 1;
inline bool CMsgGaussianBlur_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGaussianBlur_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGaussianBlur_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGaussianBlur_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgGaussianValues::Clear();
  clear_has_data();
}
inline const ::CMsgGaussianValues& CMsgGaussianBlur_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgGaussianBlur.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgGaussianValues* CMsgGaussianBlur_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgGaussianValues;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGaussianBlur.AnimationFrameData.data)
  return data_;
}
inline ::CMsgGaussianValues* CMsgGaussianBlur_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgGaussianValues* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgGaussianBlur_AnimationFrameData::set_allocated_data(::CMsgGaussianValues* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGaussianBlur.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgGaussianBlur

// optional .CMsgGaussianValues base = 1;
inline bool CMsgGaussianBlur::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGaussianBlur::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGaussianBlur::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGaussianBlur::clear_base() {
  if (base_ != NULL) base_->::CMsgGaussianValues::Clear();
  clear_has_base();
}
inline const ::CMsgGaussianValues& CMsgGaussianBlur::base() const {
  // @@protoc_insertion_point(field_get:CMsgGaussianBlur.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgGaussianValues* CMsgGaussianBlur::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgGaussianValues;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGaussianBlur.base)
  return base_;
}
inline ::CMsgGaussianValues* CMsgGaussianBlur::release_base() {
  clear_has_base();
  ::CMsgGaussianValues* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgGaussianBlur::set_allocated_base(::CMsgGaussianValues* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGaussianBlur.base)
}

// optional .CMsgGaussianValues transition = 2;
inline bool CMsgGaussianBlur::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGaussianBlur::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGaussianBlur::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGaussianBlur::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgGaussianValues::Clear();
  clear_has_transition();
}
inline const ::CMsgGaussianValues& CMsgGaussianBlur::transition() const {
  // @@protoc_insertion_point(field_get:CMsgGaussianBlur.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgGaussianValues* CMsgGaussianBlur::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgGaussianValues;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGaussianBlur.transition)
  return transition_;
}
inline ::CMsgGaussianValues* CMsgGaussianBlur::release_transition() {
  clear_has_transition();
  ::CMsgGaussianValues* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgGaussianBlur::set_allocated_transition(::CMsgGaussianValues* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGaussianBlur.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsgGaussianBlur::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGaussianBlur::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGaussianBlur::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGaussianBlur::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgGaussianBlur::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgGaussianBlur.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgGaussianBlur::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGaussianBlur.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgGaussianBlur::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgGaussianBlur::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGaussianBlur.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgGaussianBlur::animations_size() const {
  return animations_.size();
}
inline void CMsgGaussianBlur::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgGaussianBlur::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGaussianBlur.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgGaussianBlur::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGaussianBlur.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgGaussianBlur::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgGaussianBlur.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgGaussianBlur::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGaussianBlur.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgGaussianBlur::animations() const {
  // @@protoc_insertion_point(field_list:CMsgGaussianBlur.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsg3DTransformPerspective_AnimationFrameData

// optional double data = 1;
inline bool CMsg3DTransformPerspective_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformPerspective_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformPerspective_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformPerspective_AnimationFrameData::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline double CMsg3DTransformPerspective_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspective.AnimationFrameData.data)
  return data_;
}
inline void CMsg3DTransformPerspective_AnimationFrameData::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CMsg3DTransformPerspective.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsg3DTransformPerspective

// optional double base = 1;
inline bool CMsg3DTransformPerspective::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformPerspective::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformPerspective::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformPerspective::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline double CMsg3DTransformPerspective::base() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspective.base)
  return base_;
}
inline void CMsg3DTransformPerspective::set_base(double value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:CMsg3DTransformPerspective.base)
}

// optional double transition = 2;
inline bool CMsg3DTransformPerspective::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg3DTransformPerspective::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg3DTransformPerspective::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg3DTransformPerspective::clear_transition() {
  transition_ = 0;
  clear_has_transition();
}
inline double CMsg3DTransformPerspective::transition() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspective.transition)
  return transition_;
}
inline void CMsg3DTransformPerspective::set_transition(double value) {
  set_has_transition();
  transition_ = value;
  // @@protoc_insertion_point(field_set:CMsg3DTransformPerspective.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsg3DTransformPerspective::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsg3DTransformPerspective::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsg3DTransformPerspective::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsg3DTransformPerspective::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsg3DTransformPerspective::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspective.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformPerspective::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformPerspective.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformPerspective::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsg3DTransformPerspective::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformPerspective.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsg3DTransformPerspective::animations_size() const {
  return animations_.size();
}
inline void CMsg3DTransformPerspective::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsg3DTransformPerspective::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspective.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsg3DTransformPerspective::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformPerspective.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsg3DTransformPerspective::add_animations() {
  // @@protoc_insertion_point(field_add:CMsg3DTransformPerspective.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsg3DTransformPerspective::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsg3DTransformPerspective.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsg3DTransformPerspective::animations() const {
  // @@protoc_insertion_point(field_list:CMsg3DTransformPerspective.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsg3DTransformPerspectiveOrigin_AnimationFrameData

// optional .CMsgPoint data = 1;
inline bool CMsg3DTransformPerspectiveOrigin_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformPerspectiveOrigin_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformPerspectiveOrigin_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformPerspectiveOrigin_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgPoint::Clear();
  clear_has_data();
}
inline const ::CMsgPoint& CMsg3DTransformPerspectiveOrigin_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspectiveOrigin.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgPoint* CMsg3DTransformPerspectiveOrigin_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformPerspectiveOrigin.AnimationFrameData.data)
  return data_;
}
inline ::CMsgPoint* CMsg3DTransformPerspectiveOrigin_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgPoint* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsg3DTransformPerspectiveOrigin_AnimationFrameData::set_allocated_data(::CMsgPoint* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformPerspectiveOrigin.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsg3DTransformPerspectiveOrigin

// optional .CMsgPoint base = 1;
inline bool CMsg3DTransformPerspectiveOrigin::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformPerspectiveOrigin::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformPerspectiveOrigin::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformPerspectiveOrigin::clear_base() {
  if (base_ != NULL) base_->::CMsgPoint::Clear();
  clear_has_base();
}
inline const ::CMsgPoint& CMsg3DTransformPerspectiveOrigin::base() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspectiveOrigin.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgPoint* CMsg3DTransformPerspectiveOrigin::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformPerspectiveOrigin.base)
  return base_;
}
inline ::CMsgPoint* CMsg3DTransformPerspectiveOrigin::release_base() {
  clear_has_base();
  ::CMsgPoint* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsg3DTransformPerspectiveOrigin::set_allocated_base(::CMsgPoint* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformPerspectiveOrigin.base)
}

// optional .CMsgPoint transition = 2;
inline bool CMsg3DTransformPerspectiveOrigin::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg3DTransformPerspectiveOrigin::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg3DTransformPerspectiveOrigin::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg3DTransformPerspectiveOrigin::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgPoint::Clear();
  clear_has_transition();
}
inline const ::CMsgPoint& CMsg3DTransformPerspectiveOrigin::transition() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspectiveOrigin.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgPoint* CMsg3DTransformPerspectiveOrigin::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformPerspectiveOrigin.transition)
  return transition_;
}
inline ::CMsgPoint* CMsg3DTransformPerspectiveOrigin::release_transition() {
  clear_has_transition();
  ::CMsgPoint* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsg3DTransformPerspectiveOrigin::set_allocated_transition(::CMsgPoint* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformPerspectiveOrigin.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsg3DTransformPerspectiveOrigin::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsg3DTransformPerspectiveOrigin::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsg3DTransformPerspectiveOrigin::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsg3DTransformPerspectiveOrigin::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsg3DTransformPerspectiveOrigin::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspectiveOrigin.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformPerspectiveOrigin::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformPerspectiveOrigin.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformPerspectiveOrigin::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsg3DTransformPerspectiveOrigin::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformPerspectiveOrigin.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsg3DTransformPerspectiveOrigin::animations_size() const {
  return animations_.size();
}
inline void CMsg3DTransformPerspectiveOrigin::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsg3DTransformPerspectiveOrigin::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformPerspectiveOrigin.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsg3DTransformPerspectiveOrigin::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformPerspectiveOrigin.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsg3DTransformPerspectiveOrigin::add_animations() {
  // @@protoc_insertion_point(field_add:CMsg3DTransformPerspectiveOrigin.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsg3DTransformPerspectiveOrigin::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsg3DTransformPerspectiveOrigin.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsg3DTransformPerspectiveOrigin::animations() const {
  // @@protoc_insertion_point(field_list:CMsg3DTransformPerspectiveOrigin.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgTransformOriginData

// optional double x = 1;
inline bool CMsgTransformOriginData::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTransformOriginData::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTransformOriginData::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTransformOriginData::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double CMsgTransformOriginData::x() const {
  // @@protoc_insertion_point(field_get:CMsgTransformOriginData.x)
  return x_;
}
inline void CMsgTransformOriginData::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransformOriginData.x)
}

// optional double y = 2;
inline bool CMsgTransformOriginData::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTransformOriginData::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTransformOriginData::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTransformOriginData::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double CMsgTransformOriginData::y() const {
  // @@protoc_insertion_point(field_get:CMsgTransformOriginData.y)
  return y_;
}
inline void CMsgTransformOriginData::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransformOriginData.y)
}

// optional bool x_is_percent = 3;
inline bool CMsgTransformOriginData::has_x_is_percent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTransformOriginData::set_has_x_is_percent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTransformOriginData::clear_has_x_is_percent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTransformOriginData::clear_x_is_percent() {
  x_is_percent_ = false;
  clear_has_x_is_percent();
}
inline bool CMsgTransformOriginData::x_is_percent() const {
  // @@protoc_insertion_point(field_get:CMsgTransformOriginData.x_is_percent)
  return x_is_percent_;
}
inline void CMsgTransformOriginData::set_x_is_percent(bool value) {
  set_has_x_is_percent();
  x_is_percent_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransformOriginData.x_is_percent)
}

// optional bool y_is_percent = 4;
inline bool CMsgTransformOriginData::has_y_is_percent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTransformOriginData::set_has_y_is_percent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTransformOriginData::clear_has_y_is_percent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTransformOriginData::clear_y_is_percent() {
  y_is_percent_ = false;
  clear_has_y_is_percent();
}
inline bool CMsgTransformOriginData::y_is_percent() const {
  // @@protoc_insertion_point(field_get:CMsgTransformOriginData.y_is_percent)
  return y_is_percent_;
}
inline void CMsgTransformOriginData::set_y_is_percent(bool value) {
  set_has_y_is_percent();
  y_is_percent_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransformOriginData.y_is_percent)
}

// optional bool is_parent_relative = 5;
inline bool CMsgTransformOriginData::has_is_parent_relative() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTransformOriginData::set_has_is_parent_relative() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTransformOriginData::clear_has_is_parent_relative() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTransformOriginData::clear_is_parent_relative() {
  is_parent_relative_ = false;
  clear_has_is_parent_relative();
}
inline bool CMsgTransformOriginData::is_parent_relative() const {
  // @@protoc_insertion_point(field_get:CMsgTransformOriginData.is_parent_relative)
  return is_parent_relative_;
}
inline void CMsgTransformOriginData::set_is_parent_relative(bool value) {
  set_has_is_parent_relative();
  is_parent_relative_ = value;
  // @@protoc_insertion_point(field_set:CMsgTransformOriginData.is_parent_relative)
}

// -------------------------------------------------------------------

// CMsg3DTransformOrigin_AnimationFrameData

// optional .CMsgTransformOriginData data = 1;
inline bool CMsg3DTransformOrigin_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformOrigin_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformOrigin_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformOrigin_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgTransformOriginData::Clear();
  clear_has_data();
}
inline const ::CMsgTransformOriginData& CMsg3DTransformOrigin_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformOrigin.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgTransformOriginData* CMsg3DTransformOrigin_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgTransformOriginData;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformOrigin.AnimationFrameData.data)
  return data_;
}
inline ::CMsgTransformOriginData* CMsg3DTransformOrigin_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgTransformOriginData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsg3DTransformOrigin_AnimationFrameData::set_allocated_data(::CMsgTransformOriginData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformOrigin.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsg3DTransformOrigin

// optional .CMsgTransformOriginData base = 1;
inline bool CMsg3DTransformOrigin::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformOrigin::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformOrigin::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformOrigin::clear_base() {
  if (base_ != NULL) base_->::CMsgTransformOriginData::Clear();
  clear_has_base();
}
inline const ::CMsgTransformOriginData& CMsg3DTransformOrigin::base() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformOrigin.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgTransformOriginData* CMsg3DTransformOrigin::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgTransformOriginData;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformOrigin.base)
  return base_;
}
inline ::CMsgTransformOriginData* CMsg3DTransformOrigin::release_base() {
  clear_has_base();
  ::CMsgTransformOriginData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsg3DTransformOrigin::set_allocated_base(::CMsgTransformOriginData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformOrigin.base)
}

// optional .CMsgTransformOriginData transition = 2;
inline bool CMsg3DTransformOrigin::has_transition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg3DTransformOrigin::set_has_transition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg3DTransformOrigin::clear_has_transition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg3DTransformOrigin::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgTransformOriginData::Clear();
  clear_has_transition();
}
inline const ::CMsgTransformOriginData& CMsg3DTransformOrigin::transition() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformOrigin.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgTransformOriginData* CMsg3DTransformOrigin::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgTransformOriginData;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformOrigin.transition)
  return transition_;
}
inline ::CMsgTransformOriginData* CMsg3DTransformOrigin::release_transition() {
  clear_has_transition();
  ::CMsgTransformOriginData* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsg3DTransformOrigin::set_allocated_transition(::CMsgTransformOriginData* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformOrigin.transition)
}

// optional .CMsgTransitionData transition_data = 3;
inline bool CMsg3DTransformOrigin::has_transition_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsg3DTransformOrigin::set_has_transition_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsg3DTransformOrigin::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsg3DTransformOrigin::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsg3DTransformOrigin::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformOrigin.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformOrigin::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformOrigin.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformOrigin::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsg3DTransformOrigin::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformOrigin.transition_data)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsg3DTransformOrigin::animations_size() const {
  return animations_.size();
}
inline void CMsg3DTransformOrigin::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsg3DTransformOrigin::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformOrigin.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsg3DTransformOrigin::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformOrigin.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsg3DTransformOrigin::add_animations() {
  // @@protoc_insertion_point(field_add:CMsg3DTransformOrigin.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsg3DTransformOrigin::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsg3DTransformOrigin.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsg3DTransformOrigin::animations() const {
  // @@protoc_insertion_point(field_list:CMsg3DTransformOrigin.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsg3DTransformMatrix_AnimationFrameData

// optional .CMsgMatrix4x4 data = 1;
inline bool CMsg3DTransformMatrix_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformMatrix_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformMatrix_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformMatrix_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgMatrix4x4::Clear();
  clear_has_data();
}
inline const ::CMsgMatrix4x4& CMsg3DTransformMatrix_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformMatrix.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgMatrix4x4* CMsg3DTransformMatrix_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgMatrix4x4;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformMatrix.AnimationFrameData.data)
  return data_;
}
inline ::CMsgMatrix4x4* CMsg3DTransformMatrix_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgMatrix4x4* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsg3DTransformMatrix_AnimationFrameData::set_allocated_data(::CMsgMatrix4x4* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformMatrix.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsg3DTransformMatrix

// optional .CMsgMatrix4x4 base = 1;
inline bool CMsg3DTransformMatrix::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg3DTransformMatrix::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg3DTransformMatrix::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg3DTransformMatrix::clear_base() {
  if (base_ != NULL) base_->::CMsgMatrix4x4::Clear();
  clear_has_base();
}
inline const ::CMsgMatrix4x4& CMsg3DTransformMatrix::base() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformMatrix.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgMatrix4x4* CMsg3DTransformMatrix::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgMatrix4x4;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformMatrix.base)
  return base_;
}
inline ::CMsgMatrix4x4* CMsg3DTransformMatrix::release_base() {
  clear_has_base();
  ::CMsgMatrix4x4* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsg3DTransformMatrix::set_allocated_base(::CMsgMatrix4x4* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformMatrix.base)
}

// optional .CMsgTransitionData transition_data = 2;
inline bool CMsg3DTransformMatrix::has_transition_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg3DTransformMatrix::set_has_transition_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg3DTransformMatrix::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg3DTransformMatrix::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsg3DTransformMatrix::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformMatrix.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformMatrix::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformMatrix.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsg3DTransformMatrix::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsg3DTransformMatrix::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformMatrix.transition_data)
}

// optional .CMsgMatrix4x4 transition = 3;
inline bool CMsg3DTransformMatrix::has_transition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsg3DTransformMatrix::set_has_transition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsg3DTransformMatrix::clear_has_transition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsg3DTransformMatrix::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgMatrix4x4::Clear();
  clear_has_transition();
}
inline const ::CMsgMatrix4x4& CMsg3DTransformMatrix::transition() const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformMatrix.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgMatrix4x4* CMsg3DTransformMatrix::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgMatrix4x4;
  }
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformMatrix.transition)
  return transition_;
}
inline ::CMsgMatrix4x4* CMsg3DTransformMatrix::release_transition() {
  clear_has_transition();
  ::CMsgMatrix4x4* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsg3DTransformMatrix::set_allocated_transition(::CMsgMatrix4x4* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsg3DTransformMatrix.transition)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsg3DTransformMatrix::animations_size() const {
  return animations_.size();
}
inline void CMsg3DTransformMatrix::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsg3DTransformMatrix::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsg3DTransformMatrix.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsg3DTransformMatrix::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsg3DTransformMatrix.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsg3DTransformMatrix::add_animations() {
  // @@protoc_insertion_point(field_add:CMsg3DTransformMatrix.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsg3DTransformMatrix::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsg3DTransformMatrix.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsg3DTransformMatrix::animations() const {
  // @@protoc_insertion_point(field_list:CMsg3DTransformMatrix.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgBorderRadius_AnimationFrameData

// optional .CRadiusData data = 1;
inline bool CMsgBorderRadius_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBorderRadius_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBorderRadius_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBorderRadius_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CRadiusData::Clear();
  clear_has_data();
}
inline const ::CRadiusData& CMsgBorderRadius_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgBorderRadius.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CRadiusData* CMsgBorderRadius_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CRadiusData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorderRadius.AnimationFrameData.data)
  return data_;
}
inline ::CRadiusData* CMsgBorderRadius_AnimationFrameData::release_data() {
  clear_has_data();
  ::CRadiusData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgBorderRadius_AnimationFrameData::set_allocated_data(::CRadiusData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorderRadius.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgBorderRadius

// optional .CRadiusData base = 1;
inline bool CMsgBorderRadius::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBorderRadius::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBorderRadius::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBorderRadius::clear_base() {
  if (base_ != NULL) base_->::CRadiusData::Clear();
  clear_has_base();
}
inline const ::CRadiusData& CMsgBorderRadius::base() const {
  // @@protoc_insertion_point(field_get:CMsgBorderRadius.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CRadiusData* CMsgBorderRadius::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CRadiusData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorderRadius.base)
  return base_;
}
inline ::CRadiusData* CMsgBorderRadius::release_base() {
  clear_has_base();
  ::CRadiusData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgBorderRadius::set_allocated_base(::CRadiusData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorderRadius.base)
}

// optional .CMsgTransitionData transition_data = 2;
inline bool CMsgBorderRadius::has_transition_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBorderRadius::set_has_transition_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBorderRadius::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBorderRadius::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgBorderRadius::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgBorderRadius.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgBorderRadius::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorderRadius.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgBorderRadius::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgBorderRadius::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorderRadius.transition_data)
}

// optional .CRadiusData transition = 3;
inline bool CMsgBorderRadius::has_transition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBorderRadius::set_has_transition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBorderRadius::clear_has_transition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBorderRadius::clear_transition() {
  if (transition_ != NULL) transition_->::CRadiusData::Clear();
  clear_has_transition();
}
inline const ::CRadiusData& CMsgBorderRadius::transition() const {
  // @@protoc_insertion_point(field_get:CMsgBorderRadius.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CRadiusData* CMsgBorderRadius::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CRadiusData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorderRadius.transition)
  return transition_;
}
inline ::CRadiusData* CMsgBorderRadius::release_transition() {
  clear_has_transition();
  ::CRadiusData* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgBorderRadius::set_allocated_transition(::CRadiusData* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorderRadius.transition)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgBorderRadius::animations_size() const {
  return animations_.size();
}
inline void CMsgBorderRadius::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgBorderRadius::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBorderRadius.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgBorderRadius::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBorderRadius.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgBorderRadius::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgBorderRadius.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgBorderRadius::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBorderRadius.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgBorderRadius::animations() const {
  // @@protoc_insertion_point(field_list:CMsgBorderRadius.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgBorder_AnimationFrameData

// optional .CBorderData data = 1;
inline bool CMsgBorder_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBorder_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBorder_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBorder_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CBorderData::Clear();
  clear_has_data();
}
inline const ::CBorderData& CMsgBorder_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgBorder.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CBorderData* CMsgBorder_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CBorderData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorder.AnimationFrameData.data)
  return data_;
}
inline ::CBorderData* CMsgBorder_AnimationFrameData::release_data() {
  clear_has_data();
  ::CBorderData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgBorder_AnimationFrameData::set_allocated_data(::CBorderData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorder.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgBorder

// optional .CBorderData base = 1;
inline bool CMsgBorder::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBorder::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBorder::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBorder::clear_base() {
  if (base_ != NULL) base_->::CBorderData::Clear();
  clear_has_base();
}
inline const ::CBorderData& CMsgBorder::base() const {
  // @@protoc_insertion_point(field_get:CMsgBorder.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CBorderData* CMsgBorder::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CBorderData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorder.base)
  return base_;
}
inline ::CBorderData* CMsgBorder::release_base() {
  clear_has_base();
  ::CBorderData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgBorder::set_allocated_base(::CBorderData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorder.base)
}

// optional .CMsgTransitionData transition_data = 2;
inline bool CMsgBorder::has_transition_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBorder::set_has_transition_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBorder::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBorder::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgBorder::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgBorder.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgBorder::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorder.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgBorder::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgBorder::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorder.transition_data)
}

// optional .CBorderData transition = 3;
inline bool CMsgBorder::has_transition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBorder::set_has_transition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBorder::clear_has_transition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBorder::clear_transition() {
  if (transition_ != NULL) transition_->::CBorderData::Clear();
  clear_has_transition();
}
inline const ::CBorderData& CMsgBorder::transition() const {
  // @@protoc_insertion_point(field_get:CMsgBorder.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CBorderData* CMsgBorder::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CBorderData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBorder.transition)
  return transition_;
}
inline ::CBorderData* CMsgBorder::release_transition() {
  clear_has_transition();
  ::CBorderData* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgBorder::set_allocated_transition(::CBorderData* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBorder.transition)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgBorder::animations_size() const {
  return animations_.size();
}
inline void CMsgBorder::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgBorder::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBorder.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgBorder::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBorder.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgBorder::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgBorder.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgBorder::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBorder.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgBorder::animations() const {
  // @@protoc_insertion_point(field_list:CMsgBorder.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgBoxShadow_AnimationFrameData

// optional .CBoxShadowData data = 1;
inline bool CMsgBoxShadow_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBoxShadow_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBoxShadow_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBoxShadow_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CBoxShadowData::Clear();
  clear_has_data();
}
inline const ::CBoxShadowData& CMsgBoxShadow_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgBoxShadow.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CBoxShadowData* CMsgBoxShadow_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CBoxShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBoxShadow.AnimationFrameData.data)
  return data_;
}
inline ::CBoxShadowData* CMsgBoxShadow_AnimationFrameData::release_data() {
  clear_has_data();
  ::CBoxShadowData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgBoxShadow_AnimationFrameData::set_allocated_data(::CBoxShadowData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBoxShadow.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgBoxShadow

// optional .CBoxShadowData base = 1;
inline bool CMsgBoxShadow::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBoxShadow::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBoxShadow::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBoxShadow::clear_base() {
  if (base_ != NULL) base_->::CBoxShadowData::Clear();
  clear_has_base();
}
inline const ::CBoxShadowData& CMsgBoxShadow::base() const {
  // @@protoc_insertion_point(field_get:CMsgBoxShadow.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CBoxShadowData* CMsgBoxShadow::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CBoxShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBoxShadow.base)
  return base_;
}
inline ::CBoxShadowData* CMsgBoxShadow::release_base() {
  clear_has_base();
  ::CBoxShadowData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgBoxShadow::set_allocated_base(::CBoxShadowData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBoxShadow.base)
}

// optional .CMsgTransitionData transition_data = 2;
inline bool CMsgBoxShadow::has_transition_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBoxShadow::set_has_transition_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBoxShadow::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBoxShadow::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgBoxShadow::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgBoxShadow.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgBoxShadow::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBoxShadow.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgBoxShadow::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgBoxShadow::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBoxShadow.transition_data)
}

// optional .CBoxShadowData transition = 3;
inline bool CMsgBoxShadow::has_transition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBoxShadow::set_has_transition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBoxShadow::clear_has_transition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBoxShadow::clear_transition() {
  if (transition_ != NULL) transition_->::CBoxShadowData::Clear();
  clear_has_transition();
}
inline const ::CBoxShadowData& CMsgBoxShadow::transition() const {
  // @@protoc_insertion_point(field_get:CMsgBoxShadow.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CBoxShadowData* CMsgBoxShadow::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CBoxShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBoxShadow.transition)
  return transition_;
}
inline ::CBoxShadowData* CMsgBoxShadow::release_transition() {
  clear_has_transition();
  ::CBoxShadowData* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgBoxShadow::set_allocated_transition(::CBoxShadowData* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBoxShadow.transition)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgBoxShadow::animations_size() const {
  return animations_.size();
}
inline void CMsgBoxShadow::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgBoxShadow::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBoxShadow.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgBoxShadow::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBoxShadow.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgBoxShadow::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgBoxShadow.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgBoxShadow::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBoxShadow.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgBoxShadow::animations() const {
  // @@protoc_insertion_point(field_list:CMsgBoxShadow.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgTextShadow_AnimationFrameData

// optional .CTextShadowData data = 1;
inline bool CMsgTextShadow_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTextShadow_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTextShadow_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTextShadow_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CTextShadowData::Clear();
  clear_has_data();
}
inline const ::CTextShadowData& CMsgTextShadow_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgTextShadow.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CTextShadowData* CMsgTextShadow_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CTextShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTextShadow.AnimationFrameData.data)
  return data_;
}
inline ::CTextShadowData* CMsgTextShadow_AnimationFrameData::release_data() {
  clear_has_data();
  ::CTextShadowData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgTextShadow_AnimationFrameData::set_allocated_data(::CTextShadowData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTextShadow.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgTextShadow

// optional .CTextShadowData base = 1;
inline bool CMsgTextShadow::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTextShadow::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTextShadow::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTextShadow::clear_base() {
  if (base_ != NULL) base_->::CTextShadowData::Clear();
  clear_has_base();
}
inline const ::CTextShadowData& CMsgTextShadow::base() const {
  // @@protoc_insertion_point(field_get:CMsgTextShadow.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CTextShadowData* CMsgTextShadow::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CTextShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTextShadow.base)
  return base_;
}
inline ::CTextShadowData* CMsgTextShadow::release_base() {
  clear_has_base();
  ::CTextShadowData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgTextShadow::set_allocated_base(::CTextShadowData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTextShadow.base)
}

// optional .CMsgTransitionData transition_data = 2;
inline bool CMsgTextShadow::has_transition_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTextShadow::set_has_transition_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTextShadow::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTextShadow::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgTextShadow::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgTextShadow.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgTextShadow::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTextShadow.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgTextShadow::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgTextShadow::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTextShadow.transition_data)
}

// optional .CTextShadowData transition = 3;
inline bool CMsgTextShadow::has_transition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTextShadow::set_has_transition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTextShadow::clear_has_transition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTextShadow::clear_transition() {
  if (transition_ != NULL) transition_->::CTextShadowData::Clear();
  clear_has_transition();
}
inline const ::CTextShadowData& CMsgTextShadow::transition() const {
  // @@protoc_insertion_point(field_get:CMsgTextShadow.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CTextShadowData* CMsgTextShadow::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CTextShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTextShadow.transition)
  return transition_;
}
inline ::CTextShadowData* CMsgTextShadow::release_transition() {
  clear_has_transition();
  ::CTextShadowData* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgTextShadow::set_allocated_transition(::CTextShadowData* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTextShadow.transition)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgTextShadow::animations_size() const {
  return animations_.size();
}
inline void CMsgTextShadow::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgTextShadow::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTextShadow.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgTextShadow::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTextShadow.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgTextShadow::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgTextShadow.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgTextShadow::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTextShadow.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgTextShadow::animations() const {
  // @@protoc_insertion_point(field_list:CMsgTextShadow.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgClip_AnimationFrameData

// optional .CMsgClipData data = 1;
inline bool CMsgClip_AnimationFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClip_AnimationFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClip_AnimationFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClip_AnimationFrameData::clear_data() {
  if (data_ != NULL) data_->::CMsgClipData::Clear();
  clear_has_data();
}
inline const ::CMsgClipData& CMsgClip_AnimationFrameData::data() const {
  // @@protoc_insertion_point(field_get:CMsgClip.AnimationFrameData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgClipData* CMsgClip_AnimationFrameData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgClipData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClip.AnimationFrameData.data)
  return data_;
}
inline ::CMsgClipData* CMsgClip_AnimationFrameData::release_data() {
  clear_has_data();
  ::CMsgClipData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CMsgClip_AnimationFrameData::set_allocated_data(::CMsgClipData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClip.AnimationFrameData.data)
}

// -------------------------------------------------------------------

// CMsgClip

// optional .CMsgClipData base = 1;
inline bool CMsgClip::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClip::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClip::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClip::clear_base() {
  if (base_ != NULL) base_->::CMsgClipData::Clear();
  clear_has_base();
}
inline const ::CMsgClipData& CMsgClip::base() const {
  // @@protoc_insertion_point(field_get:CMsgClip.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CMsgClipData* CMsgClip::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::CMsgClipData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClip.base)
  return base_;
}
inline ::CMsgClipData* CMsgClip::release_base() {
  clear_has_base();
  ::CMsgClipData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CMsgClip::set_allocated_base(::CMsgClipData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClip.base)
}

// optional .CMsgTransitionData transition_data = 2;
inline bool CMsgClip::has_transition_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClip::set_has_transition_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClip::clear_has_transition_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClip::clear_transition_data() {
  if (transition_data_ != NULL) transition_data_->::CMsgTransitionData::Clear();
  clear_has_transition_data();
}
inline const ::CMsgTransitionData& CMsgClip::transition_data() const {
  // @@protoc_insertion_point(field_get:CMsgClip.transition_data)
  return transition_data_ != NULL ? *transition_data_ : *default_instance_->transition_data_;
}
inline ::CMsgTransitionData* CMsgClip::mutable_transition_data() {
  set_has_transition_data();
  if (transition_data_ == NULL) {
    transition_data_ = new ::CMsgTransitionData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClip.transition_data)
  return transition_data_;
}
inline ::CMsgTransitionData* CMsgClip::release_transition_data() {
  clear_has_transition_data();
  ::CMsgTransitionData* temp = transition_data_;
  transition_data_ = NULL;
  return temp;
}
inline void CMsgClip::set_allocated_transition_data(::CMsgTransitionData* transition_data) {
  delete transition_data_;
  transition_data_ = transition_data;
  if (transition_data) {
    set_has_transition_data();
  } else {
    clear_has_transition_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClip.transition_data)
}

// optional .CMsgClipData transition = 3;
inline bool CMsgClip::has_transition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClip::set_has_transition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClip::clear_has_transition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClip::clear_transition() {
  if (transition_ != NULL) transition_->::CMsgClipData::Clear();
  clear_has_transition();
}
inline const ::CMsgClipData& CMsgClip::transition() const {
  // @@protoc_insertion_point(field_get:CMsgClip.transition)
  return transition_ != NULL ? *transition_ : *default_instance_->transition_;
}
inline ::CMsgClipData* CMsgClip::mutable_transition() {
  set_has_transition();
  if (transition_ == NULL) {
    transition_ = new ::CMsgClipData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClip.transition)
  return transition_;
}
inline ::CMsgClipData* CMsgClip::release_transition() {
  clear_has_transition();
  ::CMsgClipData* temp = transition_;
  transition_ = NULL;
  return temp;
}
inline void CMsgClip::set_allocated_transition(::CMsgClipData* transition) {
  delete transition_;
  transition_ = transition;
  if (transition) {
    set_has_transition();
  } else {
    clear_has_transition();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClip.transition)
}

// repeated .CMsgAnimationData animations = 4;
inline int CMsgClip::animations_size() const {
  return animations_.size();
}
inline void CMsgClip::clear_animations() {
  animations_.Clear();
}
inline const ::CMsgAnimationData& CMsgClip::animations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClip.animations)
  return animations_.Get(index);
}
inline ::CMsgAnimationData* CMsgClip::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClip.animations)
  return animations_.Mutable(index);
}
inline ::CMsgAnimationData* CMsgClip::add_animations() {
  // @@protoc_insertion_point(field_add:CMsgClip.animations)
  return animations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >*
CMsgClip::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClip.animations)
  return &animations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAnimationData >&
CMsgClip::animations() const {
  // @@protoc_insertion_point(field_list:CMsgClip.animations)
  return animations_;
}

// -------------------------------------------------------------------

// CMsgPushClipLayer

// optional .CMsgPoint top_left = 1;
inline bool CMsgPushClipLayer::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPushClipLayer::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPushClipLayer::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPushClipLayer::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgPushClipLayer::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgPushClipLayer.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgPushClipLayer::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushClipLayer.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgPushClipLayer::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgPushClipLayer::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushClipLayer.top_left)
}

// optional .CMsgPoint bottom_right = 2;
inline bool CMsgPushClipLayer::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPushClipLayer::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPushClipLayer::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPushClipLayer::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgPushClipLayer::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgPushClipLayer.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgPushClipLayer::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushClipLayer.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgPushClipLayer::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgPushClipLayer::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushClipLayer.bottom_right)
}

// optional .CRadiusData border_radius = 3;
inline bool CMsgPushClipLayer::has_border_radius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPushClipLayer::set_has_border_radius() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPushClipLayer::clear_has_border_radius() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPushClipLayer::clear_border_radius() {
  if (border_radius_ != NULL) border_radius_->::CRadiusData::Clear();
  clear_has_border_radius();
}
inline const ::CRadiusData& CMsgPushClipLayer::border_radius() const {
  // @@protoc_insertion_point(field_get:CMsgPushClipLayer.border_radius)
  return border_radius_ != NULL ? *border_radius_ : *default_instance_->border_radius_;
}
inline ::CRadiusData* CMsgPushClipLayer::mutable_border_radius() {
  set_has_border_radius();
  if (border_radius_ == NULL) {
    border_radius_ = new ::CRadiusData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushClipLayer.border_radius)
  return border_radius_;
}
inline ::CRadiusData* CMsgPushClipLayer::release_border_radius() {
  clear_has_border_radius();
  ::CRadiusData* temp = border_radius_;
  border_radius_ = NULL;
  return temp;
}
inline void CMsgPushClipLayer::set_allocated_border_radius(::CRadiusData* border_radius) {
  delete border_radius_;
  border_radius_ = border_radius;
  if (border_radius) {
    set_has_border_radius();
  } else {
    clear_has_border_radius();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushClipLayer.border_radius)
}

// -------------------------------------------------------------------

// CMsgPopClipLayer

// -------------------------------------------------------------------

// CMsgPushAAndTContext

// optional uint64 context_id = 1;
inline bool CMsgPushAAndTContext::has_context_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPushAAndTContext::set_has_context_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPushAAndTContext::clear_has_context_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPushAAndTContext::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
  clear_has_context_id();
}
inline ::google::protobuf::uint64 CMsgPushAAndTContext::context_id() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.context_id)
  return context_id_;
}
inline void CMsgPushAAndTContext::set_context_id(::google::protobuf::uint64 value) {
  set_has_context_id();
  context_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.context_id)
}

// optional double width = 3;
inline bool CMsgPushAAndTContext::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPushAAndTContext::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPushAAndTContext::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPushAAndTContext::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline double CMsgPushAAndTContext::width() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.width)
  return width_;
}
inline void CMsgPushAAndTContext::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.width)
}

// optional double height = 4;
inline bool CMsgPushAAndTContext::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPushAAndTContext::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPushAAndTContext::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPushAAndTContext::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline double CMsgPushAAndTContext::height() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.height)
  return height_;
}
inline void CMsgPushAAndTContext::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.height)
}

// optional bool chilren_have_3dtransforms = 5;
inline bool CMsgPushAAndTContext::has_chilren_have_3dtransforms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPushAAndTContext::set_has_chilren_have_3dtransforms() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPushAAndTContext::clear_has_chilren_have_3dtransforms() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPushAAndTContext::clear_chilren_have_3dtransforms() {
  chilren_have_3dtransforms_ = false;
  clear_has_chilren_have_3dtransforms();
}
inline bool CMsgPushAAndTContext::chilren_have_3dtransforms() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.chilren_have_3dtransforms)
  return chilren_have_3dtransforms_;
}
inline void CMsgPushAAndTContext::set_chilren_have_3dtransforms(bool value) {
  set_has_chilren_have_3dtransforms();
  chilren_have_3dtransforms_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.chilren_have_3dtransforms)
}

// optional float zindex = 6;
inline bool CMsgPushAAndTContext::has_zindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPushAAndTContext::set_has_zindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPushAAndTContext::clear_has_zindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPushAAndTContext::clear_zindex() {
  zindex_ = 0;
  clear_has_zindex();
}
inline float CMsgPushAAndTContext::zindex() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.zindex)
  return zindex_;
}
inline void CMsgPushAAndTContext::set_zindex(float value) {
  set_has_zindex();
  zindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.zindex)
}

// optional .CMsgPanelPosition panel_position = 7;
inline bool CMsgPushAAndTContext::has_panel_position() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPushAAndTContext::set_has_panel_position() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPushAAndTContext::clear_has_panel_position() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPushAAndTContext::clear_panel_position() {
  if (panel_position_ != NULL) panel_position_->::CMsgPanelPosition::Clear();
  clear_has_panel_position();
}
inline const ::CMsgPanelPosition& CMsgPushAAndTContext::panel_position() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.panel_position)
  return panel_position_ != NULL ? *panel_position_ : *default_instance_->panel_position_;
}
inline ::CMsgPanelPosition* CMsgPushAAndTContext::mutable_panel_position() {
  set_has_panel_position();
  if (panel_position_ == NULL) {
    panel_position_ = new ::CMsgPanelPosition;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.panel_position)
  return panel_position_;
}
inline ::CMsgPanelPosition* CMsgPushAAndTContext::release_panel_position() {
  clear_has_panel_position();
  ::CMsgPanelPosition* temp = panel_position_;
  panel_position_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_panel_position(::CMsgPanelPosition* panel_position) {
  delete panel_position_;
  panel_position_ = panel_position;
  if (panel_position) {
    set_has_panel_position();
  } else {
    clear_has_panel_position();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.panel_position)
}

// optional .CMsg3DTransformMatrix transform_matrix = 8;
inline bool CMsgPushAAndTContext::has_transform_matrix() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPushAAndTContext::set_has_transform_matrix() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPushAAndTContext::clear_has_transform_matrix() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPushAAndTContext::clear_transform_matrix() {
  if (transform_matrix_ != NULL) transform_matrix_->::CMsg3DTransformMatrix::Clear();
  clear_has_transform_matrix();
}
inline const ::CMsg3DTransformMatrix& CMsgPushAAndTContext::transform_matrix() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.transform_matrix)
  return transform_matrix_ != NULL ? *transform_matrix_ : *default_instance_->transform_matrix_;
}
inline ::CMsg3DTransformMatrix* CMsgPushAAndTContext::mutable_transform_matrix() {
  set_has_transform_matrix();
  if (transform_matrix_ == NULL) {
    transform_matrix_ = new ::CMsg3DTransformMatrix;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.transform_matrix)
  return transform_matrix_;
}
inline ::CMsg3DTransformMatrix* CMsgPushAAndTContext::release_transform_matrix() {
  clear_has_transform_matrix();
  ::CMsg3DTransformMatrix* temp = transform_matrix_;
  transform_matrix_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_transform_matrix(::CMsg3DTransformMatrix* transform_matrix) {
  delete transform_matrix_;
  transform_matrix_ = transform_matrix;
  if (transform_matrix) {
    set_has_transform_matrix();
  } else {
    clear_has_transform_matrix();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.transform_matrix)
}

// optional .CMsg3DTransformOrigin transform_origin = 9;
inline bool CMsgPushAAndTContext::has_transform_origin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPushAAndTContext::set_has_transform_origin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPushAAndTContext::clear_has_transform_origin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPushAAndTContext::clear_transform_origin() {
  if (transform_origin_ != NULL) transform_origin_->::CMsg3DTransformOrigin::Clear();
  clear_has_transform_origin();
}
inline const ::CMsg3DTransformOrigin& CMsgPushAAndTContext::transform_origin() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.transform_origin)
  return transform_origin_ != NULL ? *transform_origin_ : *default_instance_->transform_origin_;
}
inline ::CMsg3DTransformOrigin* CMsgPushAAndTContext::mutable_transform_origin() {
  set_has_transform_origin();
  if (transform_origin_ == NULL) {
    transform_origin_ = new ::CMsg3DTransformOrigin;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.transform_origin)
  return transform_origin_;
}
inline ::CMsg3DTransformOrigin* CMsgPushAAndTContext::release_transform_origin() {
  clear_has_transform_origin();
  ::CMsg3DTransformOrigin* temp = transform_origin_;
  transform_origin_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_transform_origin(::CMsg3DTransformOrigin* transform_origin) {
  delete transform_origin_;
  transform_origin_ = transform_origin;
  if (transform_origin) {
    set_has_transform_origin();
  } else {
    clear_has_transform_origin();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.transform_origin)
}

// optional .CMsg3DTransformPerspective transform_perspective = 10;
inline bool CMsgPushAAndTContext::has_transform_perspective() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgPushAAndTContext::set_has_transform_perspective() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgPushAAndTContext::clear_has_transform_perspective() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgPushAAndTContext::clear_transform_perspective() {
  if (transform_perspective_ != NULL) transform_perspective_->::CMsg3DTransformPerspective::Clear();
  clear_has_transform_perspective();
}
inline const ::CMsg3DTransformPerspective& CMsgPushAAndTContext::transform_perspective() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.transform_perspective)
  return transform_perspective_ != NULL ? *transform_perspective_ : *default_instance_->transform_perspective_;
}
inline ::CMsg3DTransformPerspective* CMsgPushAAndTContext::mutable_transform_perspective() {
  set_has_transform_perspective();
  if (transform_perspective_ == NULL) {
    transform_perspective_ = new ::CMsg3DTransformPerspective;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.transform_perspective)
  return transform_perspective_;
}
inline ::CMsg3DTransformPerspective* CMsgPushAAndTContext::release_transform_perspective() {
  clear_has_transform_perspective();
  ::CMsg3DTransformPerspective* temp = transform_perspective_;
  transform_perspective_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_transform_perspective(::CMsg3DTransformPerspective* transform_perspective) {
  delete transform_perspective_;
  transform_perspective_ = transform_perspective;
  if (transform_perspective) {
    set_has_transform_perspective();
  } else {
    clear_has_transform_perspective();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.transform_perspective)
}

// optional .CMsg3DTransformPerspectiveOrigin transform_perspective_origin = 11;
inline bool CMsgPushAAndTContext::has_transform_perspective_origin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgPushAAndTContext::set_has_transform_perspective_origin() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgPushAAndTContext::clear_has_transform_perspective_origin() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgPushAAndTContext::clear_transform_perspective_origin() {
  if (transform_perspective_origin_ != NULL) transform_perspective_origin_->::CMsg3DTransformPerspectiveOrigin::Clear();
  clear_has_transform_perspective_origin();
}
inline const ::CMsg3DTransformPerspectiveOrigin& CMsgPushAAndTContext::transform_perspective_origin() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.transform_perspective_origin)
  return transform_perspective_origin_ != NULL ? *transform_perspective_origin_ : *default_instance_->transform_perspective_origin_;
}
inline ::CMsg3DTransformPerspectiveOrigin* CMsgPushAAndTContext::mutable_transform_perspective_origin() {
  set_has_transform_perspective_origin();
  if (transform_perspective_origin_ == NULL) {
    transform_perspective_origin_ = new ::CMsg3DTransformPerspectiveOrigin;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.transform_perspective_origin)
  return transform_perspective_origin_;
}
inline ::CMsg3DTransformPerspectiveOrigin* CMsgPushAAndTContext::release_transform_perspective_origin() {
  clear_has_transform_perspective_origin();
  ::CMsg3DTransformPerspectiveOrigin* temp = transform_perspective_origin_;
  transform_perspective_origin_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_transform_perspective_origin(::CMsg3DTransformPerspectiveOrigin* transform_perspective_origin) {
  delete transform_perspective_origin_;
  transform_perspective_origin_ = transform_perspective_origin;
  if (transform_perspective_origin) {
    set_has_transform_perspective_origin();
  } else {
    clear_has_transform_perspective_origin();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.transform_perspective_origin)
}

// optional .CMsgOpacity opacity = 12;
inline bool CMsgPushAAndTContext::has_opacity() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgPushAAndTContext::set_has_opacity() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgPushAAndTContext::clear_has_opacity() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgPushAAndTContext::clear_opacity() {
  if (opacity_ != NULL) opacity_->::CMsgOpacity::Clear();
  clear_has_opacity();
}
inline const ::CMsgOpacity& CMsgPushAAndTContext::opacity() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.opacity)
  return opacity_ != NULL ? *opacity_ : *default_instance_->opacity_;
}
inline ::CMsgOpacity* CMsgPushAAndTContext::mutable_opacity() {
  set_has_opacity();
  if (opacity_ == NULL) {
    opacity_ = new ::CMsgOpacity;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.opacity)
  return opacity_;
}
inline ::CMsgOpacity* CMsgPushAAndTContext::release_opacity() {
  clear_has_opacity();
  ::CMsgOpacity* temp = opacity_;
  opacity_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_opacity(::CMsgOpacity* opacity) {
  delete opacity_;
  opacity_ = opacity;
  if (opacity) {
    set_has_opacity();
  } else {
    clear_has_opacity();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.opacity)
}

// optional .CMsgColor wash_color = 13;
inline bool CMsgPushAAndTContext::has_wash_color() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgPushAAndTContext::set_has_wash_color() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgPushAAndTContext::clear_has_wash_color() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgPushAAndTContext::clear_wash_color() {
  if (wash_color_ != NULL) wash_color_->::CMsgColor::Clear();
  clear_has_wash_color();
}
inline const ::CMsgColor& CMsgPushAAndTContext::wash_color() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.wash_color)
  return wash_color_ != NULL ? *wash_color_ : *default_instance_->wash_color_;
}
inline ::CMsgColor* CMsgPushAAndTContext::mutable_wash_color() {
  set_has_wash_color();
  if (wash_color_ == NULL) {
    wash_color_ = new ::CMsgColor;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.wash_color)
  return wash_color_;
}
inline ::CMsgColor* CMsgPushAAndTContext::release_wash_color() {
  clear_has_wash_color();
  ::CMsgColor* temp = wash_color_;
  wash_color_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_wash_color(::CMsgColor* wash_color) {
  delete wash_color_;
  wash_color_ = wash_color;
  if (wash_color) {
    set_has_wash_color();
  } else {
    clear_has_wash_color();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.wash_color)
}

// optional .CMsgHueShift hue_shift = 14;
inline bool CMsgPushAAndTContext::has_hue_shift() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_hue_shift() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgPushAAndTContext::clear_has_hue_shift() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgPushAAndTContext::clear_hue_shift() {
  if (hue_shift_ != NULL) hue_shift_->::CMsgHueShift::Clear();
  clear_has_hue_shift();
}
inline const ::CMsgHueShift& CMsgPushAAndTContext::hue_shift() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.hue_shift)
  return hue_shift_ != NULL ? *hue_shift_ : *default_instance_->hue_shift_;
}
inline ::CMsgHueShift* CMsgPushAAndTContext::mutable_hue_shift() {
  set_has_hue_shift();
  if (hue_shift_ == NULL) {
    hue_shift_ = new ::CMsgHueShift;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.hue_shift)
  return hue_shift_;
}
inline ::CMsgHueShift* CMsgPushAAndTContext::release_hue_shift() {
  clear_has_hue_shift();
  ::CMsgHueShift* temp = hue_shift_;
  hue_shift_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_hue_shift(::CMsgHueShift* hue_shift) {
  delete hue_shift_;
  hue_shift_ = hue_shift;
  if (hue_shift) {
    set_has_hue_shift();
  } else {
    clear_has_hue_shift();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.hue_shift)
}

// optional .CMsgSaturation saturation = 15;
inline bool CMsgPushAAndTContext::has_saturation() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_saturation() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgPushAAndTContext::clear_has_saturation() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgPushAAndTContext::clear_saturation() {
  if (saturation_ != NULL) saturation_->::CMsgSaturation::Clear();
  clear_has_saturation();
}
inline const ::CMsgSaturation& CMsgPushAAndTContext::saturation() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.saturation)
  return saturation_ != NULL ? *saturation_ : *default_instance_->saturation_;
}
inline ::CMsgSaturation* CMsgPushAAndTContext::mutable_saturation() {
  set_has_saturation();
  if (saturation_ == NULL) {
    saturation_ = new ::CMsgSaturation;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.saturation)
  return saturation_;
}
inline ::CMsgSaturation* CMsgPushAAndTContext::release_saturation() {
  clear_has_saturation();
  ::CMsgSaturation* temp = saturation_;
  saturation_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_saturation(::CMsgSaturation* saturation) {
  delete saturation_;
  saturation_ = saturation;
  if (saturation) {
    set_has_saturation();
  } else {
    clear_has_saturation();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.saturation)
}

// optional .CMsgBrightness brightness = 16;
inline bool CMsgPushAAndTContext::has_brightness() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_brightness() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgPushAAndTContext::clear_has_brightness() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgPushAAndTContext::clear_brightness() {
  if (brightness_ != NULL) brightness_->::CMsgBrightness::Clear();
  clear_has_brightness();
}
inline const ::CMsgBrightness& CMsgPushAAndTContext::brightness() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.brightness)
  return brightness_ != NULL ? *brightness_ : *default_instance_->brightness_;
}
inline ::CMsgBrightness* CMsgPushAAndTContext::mutable_brightness() {
  set_has_brightness();
  if (brightness_ == NULL) {
    brightness_ = new ::CMsgBrightness;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.brightness)
  return brightness_;
}
inline ::CMsgBrightness* CMsgPushAAndTContext::release_brightness() {
  clear_has_brightness();
  ::CMsgBrightness* temp = brightness_;
  brightness_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_brightness(::CMsgBrightness* brightness) {
  delete brightness_;
  brightness_ = brightness;
  if (brightness) {
    set_has_brightness();
  } else {
    clear_has_brightness();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.brightness)
}

// optional .CMsgContrast contrast = 17;
inline bool CMsgPushAAndTContext::has_contrast() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_contrast() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgPushAAndTContext::clear_has_contrast() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgPushAAndTContext::clear_contrast() {
  if (contrast_ != NULL) contrast_->::CMsgContrast::Clear();
  clear_has_contrast();
}
inline const ::CMsgContrast& CMsgPushAAndTContext::contrast() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.contrast)
  return contrast_ != NULL ? *contrast_ : *default_instance_->contrast_;
}
inline ::CMsgContrast* CMsgPushAAndTContext::mutable_contrast() {
  set_has_contrast();
  if (contrast_ == NULL) {
    contrast_ = new ::CMsgContrast;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.contrast)
  return contrast_;
}
inline ::CMsgContrast* CMsgPushAAndTContext::release_contrast() {
  clear_has_contrast();
  ::CMsgContrast* temp = contrast_;
  contrast_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_contrast(::CMsgContrast* contrast) {
  delete contrast_;
  contrast_ = contrast;
  if (contrast) {
    set_has_contrast();
  } else {
    clear_has_contrast();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.contrast)
}

// optional .CMsgOpacityMask opacity_mask = 18;
inline bool CMsgPushAAndTContext::has_opacity_mask() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_opacity_mask() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgPushAAndTContext::clear_has_opacity_mask() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgPushAAndTContext::clear_opacity_mask() {
  if (opacity_mask_ != NULL) opacity_mask_->::CMsgOpacityMask::Clear();
  clear_has_opacity_mask();
}
inline const ::CMsgOpacityMask& CMsgPushAAndTContext::opacity_mask() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.opacity_mask)
  return opacity_mask_ != NULL ? *opacity_mask_ : *default_instance_->opacity_mask_;
}
inline ::CMsgOpacityMask* CMsgPushAAndTContext::mutable_opacity_mask() {
  set_has_opacity_mask();
  if (opacity_mask_ == NULL) {
    opacity_mask_ = new ::CMsgOpacityMask;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.opacity_mask)
  return opacity_mask_;
}
inline ::CMsgOpacityMask* CMsgPushAAndTContext::release_opacity_mask() {
  clear_has_opacity_mask();
  ::CMsgOpacityMask* temp = opacity_mask_;
  opacity_mask_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_opacity_mask(::CMsgOpacityMask* opacity_mask) {
  delete opacity_mask_;
  opacity_mask_ = opacity_mask;
  if (opacity_mask) {
    set_has_opacity_mask();
  } else {
    clear_has_opacity_mask();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.opacity_mask)
}

// optional .CMsgBorderRadius border_radius = 19;
inline bool CMsgPushAAndTContext::has_border_radius() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_border_radius() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgPushAAndTContext::clear_has_border_radius() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgPushAAndTContext::clear_border_radius() {
  if (border_radius_ != NULL) border_radius_->::CMsgBorderRadius::Clear();
  clear_has_border_radius();
}
inline const ::CMsgBorderRadius& CMsgPushAAndTContext::border_radius() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.border_radius)
  return border_radius_ != NULL ? *border_radius_ : *default_instance_->border_radius_;
}
inline ::CMsgBorderRadius* CMsgPushAAndTContext::mutable_border_radius() {
  set_has_border_radius();
  if (border_radius_ == NULL) {
    border_radius_ = new ::CMsgBorderRadius;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.border_radius)
  return border_radius_;
}
inline ::CMsgBorderRadius* CMsgPushAAndTContext::release_border_radius() {
  clear_has_border_radius();
  ::CMsgBorderRadius* temp = border_radius_;
  border_radius_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_border_radius(::CMsgBorderRadius* border_radius) {
  delete border_radius_;
  border_radius_ = border_radius;
  if (border_radius) {
    set_has_border_radius();
  } else {
    clear_has_border_radius();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.border_radius)
}

// optional .CMsgGaussianBlur gaussian_blur = 20;
inline bool CMsgPushAAndTContext::has_gaussian_blur() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_gaussian_blur() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgPushAAndTContext::clear_has_gaussian_blur() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgPushAAndTContext::clear_gaussian_blur() {
  if (gaussian_blur_ != NULL) gaussian_blur_->::CMsgGaussianBlur::Clear();
  clear_has_gaussian_blur();
}
inline const ::CMsgGaussianBlur& CMsgPushAAndTContext::gaussian_blur() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.gaussian_blur)
  return gaussian_blur_ != NULL ? *gaussian_blur_ : *default_instance_->gaussian_blur_;
}
inline ::CMsgGaussianBlur* CMsgPushAAndTContext::mutable_gaussian_blur() {
  set_has_gaussian_blur();
  if (gaussian_blur_ == NULL) {
    gaussian_blur_ = new ::CMsgGaussianBlur;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.gaussian_blur)
  return gaussian_blur_;
}
inline ::CMsgGaussianBlur* CMsgPushAAndTContext::release_gaussian_blur() {
  clear_has_gaussian_blur();
  ::CMsgGaussianBlur* temp = gaussian_blur_;
  gaussian_blur_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_gaussian_blur(::CMsgGaussianBlur* gaussian_blur) {
  delete gaussian_blur_;
  gaussian_blur_ = gaussian_blur;
  if (gaussian_blur) {
    set_has_gaussian_blur();
  } else {
    clear_has_gaussian_blur();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.gaussian_blur)
}

// optional .CMsgBorder border = 21;
inline bool CMsgPushAAndTContext::has_border() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_border() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgPushAAndTContext::clear_has_border() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgPushAAndTContext::clear_border() {
  if (border_ != NULL) border_->::CMsgBorder::Clear();
  clear_has_border();
}
inline const ::CMsgBorder& CMsgPushAAndTContext::border() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.border)
  return border_ != NULL ? *border_ : *default_instance_->border_;
}
inline ::CMsgBorder* CMsgPushAAndTContext::mutable_border() {
  set_has_border();
  if (border_ == NULL) {
    border_ = new ::CMsgBorder;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.border)
  return border_;
}
inline ::CMsgBorder* CMsgPushAAndTContext::release_border() {
  clear_has_border();
  ::CMsgBorder* temp = border_;
  border_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_border(::CMsgBorder* border) {
  delete border_;
  border_ = border;
  if (border) {
    set_has_border();
  } else {
    clear_has_border();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.border)
}

// optional .CMsgBoxShadow box_shadow = 22;
inline bool CMsgPushAAndTContext::has_box_shadow() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_box_shadow() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgPushAAndTContext::clear_has_box_shadow() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgPushAAndTContext::clear_box_shadow() {
  if (box_shadow_ != NULL) box_shadow_->::CMsgBoxShadow::Clear();
  clear_has_box_shadow();
}
inline const ::CMsgBoxShadow& CMsgPushAAndTContext::box_shadow() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.box_shadow)
  return box_shadow_ != NULL ? *box_shadow_ : *default_instance_->box_shadow_;
}
inline ::CMsgBoxShadow* CMsgPushAAndTContext::mutable_box_shadow() {
  set_has_box_shadow();
  if (box_shadow_ == NULL) {
    box_shadow_ = new ::CMsgBoxShadow;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.box_shadow)
  return box_shadow_;
}
inline ::CMsgBoxShadow* CMsgPushAAndTContext::release_box_shadow() {
  clear_has_box_shadow();
  ::CMsgBoxShadow* temp = box_shadow_;
  box_shadow_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_box_shadow(::CMsgBoxShadow* box_shadow) {
  delete box_shadow_;
  box_shadow_ = box_shadow;
  if (box_shadow) {
    set_has_box_shadow();
  } else {
    clear_has_box_shadow();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.box_shadow)
}

// optional .CMsgPointWithTransition scale_2d_centered = 23;
inline bool CMsgPushAAndTContext::has_scale_2d_centered() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_scale_2d_centered() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgPushAAndTContext::clear_has_scale_2d_centered() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgPushAAndTContext::clear_scale_2d_centered() {
  if (scale_2d_centered_ != NULL) scale_2d_centered_->::CMsgPointWithTransition::Clear();
  clear_has_scale_2d_centered();
}
inline const ::CMsgPointWithTransition& CMsgPushAAndTContext::scale_2d_centered() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.scale_2d_centered)
  return scale_2d_centered_ != NULL ? *scale_2d_centered_ : *default_instance_->scale_2d_centered_;
}
inline ::CMsgPointWithTransition* CMsgPushAAndTContext::mutable_scale_2d_centered() {
  set_has_scale_2d_centered();
  if (scale_2d_centered_ == NULL) {
    scale_2d_centered_ = new ::CMsgPointWithTransition;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.scale_2d_centered)
  return scale_2d_centered_;
}
inline ::CMsgPointWithTransition* CMsgPushAAndTContext::release_scale_2d_centered() {
  clear_has_scale_2d_centered();
  ::CMsgPointWithTransition* temp = scale_2d_centered_;
  scale_2d_centered_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_scale_2d_centered(::CMsgPointWithTransition* scale_2d_centered) {
  delete scale_2d_centered_;
  scale_2d_centered_ = scale_2d_centered;
  if (scale_2d_centered) {
    set_has_scale_2d_centered();
  } else {
    clear_has_scale_2d_centered();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.scale_2d_centered)
}

// optional .CMsgRotate2D rotate_2d_centered = 24;
inline bool CMsgPushAAndTContext::has_rotate_2d_centered() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_rotate_2d_centered() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgPushAAndTContext::clear_has_rotate_2d_centered() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgPushAAndTContext::clear_rotate_2d_centered() {
  if (rotate_2d_centered_ != NULL) rotate_2d_centered_->::CMsgRotate2D::Clear();
  clear_has_rotate_2d_centered();
}
inline const ::CMsgRotate2D& CMsgPushAAndTContext::rotate_2d_centered() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.rotate_2d_centered)
  return rotate_2d_centered_ != NULL ? *rotate_2d_centered_ : *default_instance_->rotate_2d_centered_;
}
inline ::CMsgRotate2D* CMsgPushAAndTContext::mutable_rotate_2d_centered() {
  set_has_rotate_2d_centered();
  if (rotate_2d_centered_ == NULL) {
    rotate_2d_centered_ = new ::CMsgRotate2D;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.rotate_2d_centered)
  return rotate_2d_centered_;
}
inline ::CMsgRotate2D* CMsgPushAAndTContext::release_rotate_2d_centered() {
  clear_has_rotate_2d_centered();
  ::CMsgRotate2D* temp = rotate_2d_centered_;
  rotate_2d_centered_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_rotate_2d_centered(::CMsgRotate2D* rotate_2d_centered) {
  delete rotate_2d_centered_;
  rotate_2d_centered_ = rotate_2d_centered;
  if (rotate_2d_centered) {
    set_has_rotate_2d_centered();
  } else {
    clear_has_rotate_2d_centered();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.rotate_2d_centered)
}

// optional .CMsgTextShadow text_shadow = 25;
inline bool CMsgPushAAndTContext::has_text_shadow() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_text_shadow() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgPushAAndTContext::clear_has_text_shadow() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgPushAAndTContext::clear_text_shadow() {
  if (text_shadow_ != NULL) text_shadow_->::CMsgTextShadow::Clear();
  clear_has_text_shadow();
}
inline const ::CMsgTextShadow& CMsgPushAAndTContext::text_shadow() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.text_shadow)
  return text_shadow_ != NULL ? *text_shadow_ : *default_instance_->text_shadow_;
}
inline ::CMsgTextShadow* CMsgPushAAndTContext::mutable_text_shadow() {
  set_has_text_shadow();
  if (text_shadow_ == NULL) {
    text_shadow_ = new ::CMsgTextShadow;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.text_shadow)
  return text_shadow_;
}
inline ::CMsgTextShadow* CMsgPushAAndTContext::release_text_shadow() {
  clear_has_text_shadow();
  ::CMsgTextShadow* temp = text_shadow_;
  text_shadow_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_text_shadow(::CMsgTextShadow* text_shadow) {
  delete text_shadow_;
  text_shadow_ = text_shadow;
  if (text_shadow) {
    set_has_text_shadow();
  } else {
    clear_has_text_shadow();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.text_shadow)
}

// optional .CMsgClip clip = 26;
inline bool CMsgPushAAndTContext::has_clip() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_clip() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgPushAAndTContext::clear_has_clip() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgPushAAndTContext::clear_clip() {
  if (clip_ != NULL) clip_->::CMsgClip::Clear();
  clear_has_clip();
}
inline const ::CMsgClip& CMsgPushAAndTContext::clip() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.clip)
  return clip_ != NULL ? *clip_ : *default_instance_->clip_;
}
inline ::CMsgClip* CMsgPushAAndTContext::mutable_clip() {
  set_has_clip();
  if (clip_ == NULL) {
    clip_ = new ::CMsgClip;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPushAAndTContext.clip)
  return clip_;
}
inline ::CMsgClip* CMsgPushAAndTContext::release_clip() {
  clear_has_clip();
  ::CMsgClip* temp = clip_;
  clip_ = NULL;
  return temp;
}
inline void CMsgPushAAndTContext::set_allocated_clip(::CMsgClip* clip) {
  delete clip_;
  clip_ = clip;
  if (clip) {
    set_has_clip();
  } else {
    clear_has_clip();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPushAAndTContext.clip)
}

// optional bool suppress_clip_to_bounds = 27;
inline bool CMsgPushAAndTContext::has_suppress_clip_to_bounds() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_suppress_clip_to_bounds() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgPushAAndTContext::clear_has_suppress_clip_to_bounds() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgPushAAndTContext::clear_suppress_clip_to_bounds() {
  suppress_clip_to_bounds_ = false;
  clear_has_suppress_clip_to_bounds();
}
inline bool CMsgPushAAndTContext::suppress_clip_to_bounds() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.suppress_clip_to_bounds)
  return suppress_clip_to_bounds_;
}
inline void CMsgPushAAndTContext::set_suppress_clip_to_bounds(bool value) {
  set_has_suppress_clip_to_bounds();
  suppress_clip_to_bounds_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.suppress_clip_to_bounds)
}

// optional int32 needs_full_repaint = 28;
inline bool CMsgPushAAndTContext::has_needs_full_repaint() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_needs_full_repaint() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgPushAAndTContext::clear_has_needs_full_repaint() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgPushAAndTContext::clear_needs_full_repaint() {
  needs_full_repaint_ = 0;
  clear_has_needs_full_repaint();
}
inline ::google::protobuf::int32 CMsgPushAAndTContext::needs_full_repaint() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.needs_full_repaint)
  return needs_full_repaint_;
}
inline void CMsgPushAAndTContext::set_needs_full_repaint(::google::protobuf::int32 value) {
  set_has_needs_full_repaint();
  needs_full_repaint_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.needs_full_repaint)
}

// optional bool wants_hit_test = 29;
inline bool CMsgPushAAndTContext::has_wants_hit_test() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_wants_hit_test() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgPushAAndTContext::clear_has_wants_hit_test() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgPushAAndTContext::clear_wants_hit_test() {
  wants_hit_test_ = false;
  clear_has_wants_hit_test();
}
inline bool CMsgPushAAndTContext::wants_hit_test() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.wants_hit_test)
  return wants_hit_test_;
}
inline void CMsgPushAAndTContext::set_wants_hit_test(bool value) {
  set_has_wants_hit_test();
  wants_hit_test_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.wants_hit_test)
}

// optional uint32 mix_blend_mode = 30;
inline bool CMsgPushAAndTContext::has_mix_blend_mode() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_mix_blend_mode() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgPushAAndTContext::clear_has_mix_blend_mode() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgPushAAndTContext::clear_mix_blend_mode() {
  mix_blend_mode_ = 0u;
  clear_has_mix_blend_mode();
}
inline ::google::protobuf::uint32 CMsgPushAAndTContext::mix_blend_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.mix_blend_mode)
  return mix_blend_mode_;
}
inline void CMsgPushAAndTContext::set_mix_blend_mode(::google::protobuf::uint32 value) {
  set_has_mix_blend_mode();
  mix_blend_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.mix_blend_mode)
}

// optional bool opaque_background = 31;
inline bool CMsgPushAAndTContext::has_opaque_background() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgPushAAndTContext::set_has_opaque_background() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgPushAAndTContext::clear_has_opaque_background() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgPushAAndTContext::clear_opaque_background() {
  opaque_background_ = false;
  clear_has_opaque_background();
}
inline bool CMsgPushAAndTContext::opaque_background() const {
  // @@protoc_insertion_point(field_get:CMsgPushAAndTContext.opaque_background)
  return opaque_background_;
}
inline void CMsgPushAAndTContext::set_opaque_background(bool value) {
  set_has_opaque_background();
  opaque_background_ = value;
  // @@protoc_insertion_point(field_set:CMsgPushAAndTContext.opaque_background)
}

// -------------------------------------------------------------------

// CMsgPopAAndTContext

// optional uint64 context_id = 1;
inline bool CMsgPopAAndTContext::has_context_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPopAAndTContext::set_has_context_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPopAAndTContext::clear_has_context_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPopAAndTContext::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
  clear_has_context_id();
}
inline ::google::protobuf::uint64 CMsgPopAAndTContext::context_id() const {
  // @@protoc_insertion_point(field_get:CMsgPopAAndTContext.context_id)
  return context_id_;
}
inline void CMsgPopAAndTContext::set_context_id(::google::protobuf::uint64 value) {
  set_has_context_id();
  context_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPopAAndTContext.context_id)
}

// -------------------------------------------------------------------

// CMsgBeginPaintBackground

// -------------------------------------------------------------------

// CMsgEndPaintBackground

// -------------------------------------------------------------------

// CMsgBeginPaintLast

// -------------------------------------------------------------------

// CMsgEndPaintLast

// -------------------------------------------------------------------

// CMsgDrawFilledRect

// optional .CMsgPoint top_left = 1;
inline bool CMsgDrawFilledRect::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDrawFilledRect::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDrawFilledRect::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDrawFilledRect::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgDrawFilledRect::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawFilledRect.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgDrawFilledRect::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawFilledRect.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgDrawFilledRect::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgDrawFilledRect::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawFilledRect.top_left)
}

// optional .CMsgPoint bottom_right = 2;
inline bool CMsgDrawFilledRect::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDrawFilledRect::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDrawFilledRect::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDrawFilledRect::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawFilledRect::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawFilledRect.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgDrawFilledRect::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawFilledRect.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgDrawFilledRect::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawFilledRect::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawFilledRect.bottom_right)
}

// optional .CMsgFillBrushCollection fill_brush_collection = 3;
inline bool CMsgDrawFilledRect::has_fill_brush_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDrawFilledRect::set_has_fill_brush_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDrawFilledRect::clear_has_fill_brush_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDrawFilledRect::clear_fill_brush_collection() {
  if (fill_brush_collection_ != NULL) fill_brush_collection_->::CMsgFillBrushCollection::Clear();
  clear_has_fill_brush_collection();
}
inline const ::CMsgFillBrushCollection& CMsgDrawFilledRect::fill_brush_collection() const {
  // @@protoc_insertion_point(field_get:CMsgDrawFilledRect.fill_brush_collection)
  return fill_brush_collection_ != NULL ? *fill_brush_collection_ : *default_instance_->fill_brush_collection_;
}
inline ::CMsgFillBrushCollection* CMsgDrawFilledRect::mutable_fill_brush_collection() {
  set_has_fill_brush_collection();
  if (fill_brush_collection_ == NULL) {
    fill_brush_collection_ = new ::CMsgFillBrushCollection;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawFilledRect.fill_brush_collection)
  return fill_brush_collection_;
}
inline ::CMsgFillBrushCollection* CMsgDrawFilledRect::release_fill_brush_collection() {
  clear_has_fill_brush_collection();
  ::CMsgFillBrushCollection* temp = fill_brush_collection_;
  fill_brush_collection_ = NULL;
  return temp;
}
inline void CMsgDrawFilledRect::set_allocated_fill_brush_collection(::CMsgFillBrushCollection* fill_brush_collection) {
  delete fill_brush_collection_;
  fill_brush_collection_ = fill_brush_collection;
  if (fill_brush_collection) {
    set_has_fill_brush_collection();
  } else {
    clear_has_fill_brush_collection();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawFilledRect.fill_brush_collection)
}

// optional uint32 antialiasing = 4;
inline bool CMsgDrawFilledRect::has_antialiasing() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDrawFilledRect::set_has_antialiasing() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDrawFilledRect::clear_has_antialiasing() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDrawFilledRect::clear_antialiasing() {
  antialiasing_ = 0u;
  clear_has_antialiasing();
}
inline ::google::protobuf::uint32 CMsgDrawFilledRect::antialiasing() const {
  // @@protoc_insertion_point(field_get:CMsgDrawFilledRect.antialiasing)
  return antialiasing_;
}
inline void CMsgDrawFilledRect::set_antialiasing(::google::protobuf::uint32 value) {
  set_has_antialiasing();
  antialiasing_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawFilledRect.antialiasing)
}

// -------------------------------------------------------------------

// CMsgRenderFilledRect

// optional .CMsgPoint top_left = 1;
inline bool CMsgRenderFilledRect::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRenderFilledRect::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRenderFilledRect::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRenderFilledRect::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgRenderFilledRect::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgRenderFilledRect.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgRenderFilledRect::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderFilledRect.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgRenderFilledRect::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgRenderFilledRect::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderFilledRect.top_left)
}

// optional .CMsgPoint bottom_right = 2;
inline bool CMsgRenderFilledRect::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRenderFilledRect::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRenderFilledRect::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRenderFilledRect::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgRenderFilledRect::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgRenderFilledRect.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgRenderFilledRect::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderFilledRect.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgRenderFilledRect::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgRenderFilledRect::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderFilledRect.bottom_right)
}

// optional .CMsgRenderFillBrushCollection fill_brush_collection = 3;
inline bool CMsgRenderFilledRect::has_fill_brush_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRenderFilledRect::set_has_fill_brush_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRenderFilledRect::clear_has_fill_brush_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRenderFilledRect::clear_fill_brush_collection() {
  if (fill_brush_collection_ != NULL) fill_brush_collection_->::CMsgRenderFillBrushCollection::Clear();
  clear_has_fill_brush_collection();
}
inline const ::CMsgRenderFillBrushCollection& CMsgRenderFilledRect::fill_brush_collection() const {
  // @@protoc_insertion_point(field_get:CMsgRenderFilledRect.fill_brush_collection)
  return fill_brush_collection_ != NULL ? *fill_brush_collection_ : *default_instance_->fill_brush_collection_;
}
inline ::CMsgRenderFillBrushCollection* CMsgRenderFilledRect::mutable_fill_brush_collection() {
  set_has_fill_brush_collection();
  if (fill_brush_collection_ == NULL) {
    fill_brush_collection_ = new ::CMsgRenderFillBrushCollection;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderFilledRect.fill_brush_collection)
  return fill_brush_collection_;
}
inline ::CMsgRenderFillBrushCollection* CMsgRenderFilledRect::release_fill_brush_collection() {
  clear_has_fill_brush_collection();
  ::CMsgRenderFillBrushCollection* temp = fill_brush_collection_;
  fill_brush_collection_ = NULL;
  return temp;
}
inline void CMsgRenderFilledRect::set_allocated_fill_brush_collection(::CMsgRenderFillBrushCollection* fill_brush_collection) {
  delete fill_brush_collection_;
  fill_brush_collection_ = fill_brush_collection;
  if (fill_brush_collection) {
    set_has_fill_brush_collection();
  } else {
    clear_has_fill_brush_collection();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderFilledRect.fill_brush_collection)
}

// optional uint32 antialiasing = 4;
inline bool CMsgRenderFilledRect::has_antialiasing() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgRenderFilledRect::set_has_antialiasing() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgRenderFilledRect::clear_has_antialiasing() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgRenderFilledRect::clear_antialiasing() {
  antialiasing_ = 0u;
  clear_has_antialiasing();
}
inline ::google::protobuf::uint32 CMsgRenderFilledRect::antialiasing() const {
  // @@protoc_insertion_point(field_get:CMsgRenderFilledRect.antialiasing)
  return antialiasing_;
}
inline void CMsgRenderFilledRect::set_antialiasing(::google::protobuf::uint32 value) {
  set_has_antialiasing();
  antialiasing_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderFilledRect.antialiasing)
}

// -------------------------------------------------------------------

// CMsgDrawTexturedRect

// optional .CMsgPoint top_left = 1;
inline bool CMsgDrawTexturedRect::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDrawTexturedRect::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDrawTexturedRect::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDrawTexturedRect::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgDrawTexturedRect::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTexturedRect.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawTexturedRect.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgDrawTexturedRect::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTexturedRect.top_left)
}

// optional .CMsgPoint bottom_right = 2;
inline bool CMsgDrawTexturedRect::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDrawTexturedRect::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDrawTexturedRect::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDrawTexturedRect::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawTexturedRect::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTexturedRect.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawTexturedRect.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawTexturedRect::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTexturedRect.bottom_right)
}

// optional uint32 texture_id = 3;
inline bool CMsgDrawTexturedRect::has_texture_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDrawTexturedRect::set_has_texture_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDrawTexturedRect::clear_has_texture_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDrawTexturedRect::clear_texture_id() {
  texture_id_ = 0u;
  clear_has_texture_id();
}
inline ::google::protobuf::uint32 CMsgDrawTexturedRect::texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTexturedRect.texture_id)
  return texture_id_;
}
inline void CMsgDrawTexturedRect::set_texture_id(::google::protobuf::uint32 value) {
  set_has_texture_id();
  texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawTexturedRect.texture_id)
}

// optional .CMsgPoint texture_top_left = 4;
inline bool CMsgDrawTexturedRect::has_texture_top_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDrawTexturedRect::set_has_texture_top_left() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDrawTexturedRect::clear_has_texture_top_left() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDrawTexturedRect::clear_texture_top_left() {
  if (texture_top_left_ != NULL) texture_top_left_->::CMsgPoint::Clear();
  clear_has_texture_top_left();
}
inline const ::CMsgPoint& CMsgDrawTexturedRect::texture_top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTexturedRect.texture_top_left)
  return texture_top_left_ != NULL ? *texture_top_left_ : *default_instance_->texture_top_left_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::mutable_texture_top_left() {
  set_has_texture_top_left();
  if (texture_top_left_ == NULL) {
    texture_top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawTexturedRect.texture_top_left)
  return texture_top_left_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::release_texture_top_left() {
  clear_has_texture_top_left();
  ::CMsgPoint* temp = texture_top_left_;
  texture_top_left_ = NULL;
  return temp;
}
inline void CMsgDrawTexturedRect::set_allocated_texture_top_left(::CMsgPoint* texture_top_left) {
  delete texture_top_left_;
  texture_top_left_ = texture_top_left;
  if (texture_top_left) {
    set_has_texture_top_left();
  } else {
    clear_has_texture_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTexturedRect.texture_top_left)
}

// optional .CMsgPoint texture_bottom_right = 5;
inline bool CMsgDrawTexturedRect::has_texture_bottom_right() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDrawTexturedRect::set_has_texture_bottom_right() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDrawTexturedRect::clear_has_texture_bottom_right() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDrawTexturedRect::clear_texture_bottom_right() {
  if (texture_bottom_right_ != NULL) texture_bottom_right_->::CMsgPoint::Clear();
  clear_has_texture_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawTexturedRect::texture_bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTexturedRect.texture_bottom_right)
  return texture_bottom_right_ != NULL ? *texture_bottom_right_ : *default_instance_->texture_bottom_right_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::mutable_texture_bottom_right() {
  set_has_texture_bottom_right();
  if (texture_bottom_right_ == NULL) {
    texture_bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawTexturedRect.texture_bottom_right)
  return texture_bottom_right_;
}
inline ::CMsgPoint* CMsgDrawTexturedRect::release_texture_bottom_right() {
  clear_has_texture_bottom_right();
  ::CMsgPoint* temp = texture_bottom_right_;
  texture_bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawTexturedRect::set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right) {
  delete texture_bottom_right_;
  texture_bottom_right_ = texture_bottom_right;
  if (texture_bottom_right) {
    set_has_texture_bottom_right();
  } else {
    clear_has_texture_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTexturedRect.texture_bottom_right)
}

// optional int32 texture_serial = 6 [default = 0];
inline bool CMsgDrawTexturedRect::has_texture_serial() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDrawTexturedRect::set_has_texture_serial() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDrawTexturedRect::clear_has_texture_serial() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDrawTexturedRect::clear_texture_serial() {
  texture_serial_ = 0;
  clear_has_texture_serial();
}
inline ::google::protobuf::int32 CMsgDrawTexturedRect::texture_serial() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTexturedRect.texture_serial)
  return texture_serial_;
}
inline void CMsgDrawTexturedRect::set_texture_serial(::google::protobuf::int32 value) {
  set_has_texture_serial();
  texture_serial_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawTexturedRect.texture_serial)
}

// optional uint32 texture_sample_mode = 7 [default = 0];
inline bool CMsgDrawTexturedRect::has_texture_sample_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDrawTexturedRect::set_has_texture_sample_mode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDrawTexturedRect::clear_has_texture_sample_mode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDrawTexturedRect::clear_texture_sample_mode() {
  texture_sample_mode_ = 0u;
  clear_has_texture_sample_mode();
}
inline ::google::protobuf::uint32 CMsgDrawTexturedRect::texture_sample_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTexturedRect.texture_sample_mode)
  return texture_sample_mode_;
}
inline void CMsgDrawTexturedRect::set_texture_sample_mode(::google::protobuf::uint32 value) {
  set_has_texture_sample_mode();
  texture_sample_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawTexturedRect.texture_sample_mode)
}

// -------------------------------------------------------------------

// CMsgDrawDoubleBufferedRect

// optional .CMsgPoint top_left = 1;
inline bool CMsgDrawDoubleBufferedRect::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDrawDoubleBufferedRect::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDrawDoubleBufferedRect::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDrawDoubleBufferedRect::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgDrawDoubleBufferedRect::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawDoubleBufferedRect.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawDoubleBufferedRect.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgDrawDoubleBufferedRect::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawDoubleBufferedRect.top_left)
}

// optional .CMsgPoint bottom_right = 2;
inline bool CMsgDrawDoubleBufferedRect::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDrawDoubleBufferedRect::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDrawDoubleBufferedRect::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDrawDoubleBufferedRect::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawDoubleBufferedRect::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawDoubleBufferedRect.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawDoubleBufferedRect.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawDoubleBufferedRect::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawDoubleBufferedRect.bottom_right)
}

// optional uint32 texture_id = 3;
inline bool CMsgDrawDoubleBufferedRect::has_texture_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDrawDoubleBufferedRect::set_has_texture_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDrawDoubleBufferedRect::clear_has_texture_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDrawDoubleBufferedRect::clear_texture_id() {
  texture_id_ = 0u;
  clear_has_texture_id();
}
inline ::google::protobuf::uint32 CMsgDrawDoubleBufferedRect::texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgDrawDoubleBufferedRect.texture_id)
  return texture_id_;
}
inline void CMsgDrawDoubleBufferedRect::set_texture_id(::google::protobuf::uint32 value) {
  set_has_texture_id();
  texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawDoubleBufferedRect.texture_id)
}

// optional .CMsgPoint texture_top_left = 4;
inline bool CMsgDrawDoubleBufferedRect::has_texture_top_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDrawDoubleBufferedRect::set_has_texture_top_left() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDrawDoubleBufferedRect::clear_has_texture_top_left() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDrawDoubleBufferedRect::clear_texture_top_left() {
  if (texture_top_left_ != NULL) texture_top_left_->::CMsgPoint::Clear();
  clear_has_texture_top_left();
}
inline const ::CMsgPoint& CMsgDrawDoubleBufferedRect::texture_top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawDoubleBufferedRect.texture_top_left)
  return texture_top_left_ != NULL ? *texture_top_left_ : *default_instance_->texture_top_left_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::mutable_texture_top_left() {
  set_has_texture_top_left();
  if (texture_top_left_ == NULL) {
    texture_top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawDoubleBufferedRect.texture_top_left)
  return texture_top_left_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::release_texture_top_left() {
  clear_has_texture_top_left();
  ::CMsgPoint* temp = texture_top_left_;
  texture_top_left_ = NULL;
  return temp;
}
inline void CMsgDrawDoubleBufferedRect::set_allocated_texture_top_left(::CMsgPoint* texture_top_left) {
  delete texture_top_left_;
  texture_top_left_ = texture_top_left;
  if (texture_top_left) {
    set_has_texture_top_left();
  } else {
    clear_has_texture_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawDoubleBufferedRect.texture_top_left)
}

// optional .CMsgPoint texture_bottom_right = 5;
inline bool CMsgDrawDoubleBufferedRect::has_texture_bottom_right() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDrawDoubleBufferedRect::set_has_texture_bottom_right() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDrawDoubleBufferedRect::clear_has_texture_bottom_right() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDrawDoubleBufferedRect::clear_texture_bottom_right() {
  if (texture_bottom_right_ != NULL) texture_bottom_right_->::CMsgPoint::Clear();
  clear_has_texture_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawDoubleBufferedRect::texture_bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawDoubleBufferedRect.texture_bottom_right)
  return texture_bottom_right_ != NULL ? *texture_bottom_right_ : *default_instance_->texture_bottom_right_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::mutable_texture_bottom_right() {
  set_has_texture_bottom_right();
  if (texture_bottom_right_ == NULL) {
    texture_bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawDoubleBufferedRect.texture_bottom_right)
  return texture_bottom_right_;
}
inline ::CMsgPoint* CMsgDrawDoubleBufferedRect::release_texture_bottom_right() {
  clear_has_texture_bottom_right();
  ::CMsgPoint* temp = texture_bottom_right_;
  texture_bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawDoubleBufferedRect::set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right) {
  delete texture_bottom_right_;
  texture_bottom_right_ = texture_bottom_right;
  if (texture_bottom_right) {
    set_has_texture_bottom_right();
  } else {
    clear_has_texture_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawDoubleBufferedRect.texture_bottom_right)
}

// -------------------------------------------------------------------

// CMsgDrawYUV420DoubleBufferedRect

// optional .CMsgPoint top_left = 1;
inline bool CMsgDrawYUV420DoubleBufferedRect::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgDrawYUV420DoubleBufferedRect::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawYUV420DoubleBufferedRect.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawYUV420DoubleBufferedRect.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawYUV420DoubleBufferedRect.top_left)
}

// optional .CMsgPoint bottom_right = 2;
inline bool CMsgDrawYUV420DoubleBufferedRect::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawYUV420DoubleBufferedRect::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawYUV420DoubleBufferedRect.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawYUV420DoubleBufferedRect.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawYUV420DoubleBufferedRect.bottom_right)
}

// optional uint32 texture_id = 3;
inline bool CMsgDrawYUV420DoubleBufferedRect::has_texture_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_has_texture_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_has_texture_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_texture_id() {
  texture_id_ = 0u;
  clear_has_texture_id();
}
inline ::google::protobuf::uint32 CMsgDrawYUV420DoubleBufferedRect::texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgDrawYUV420DoubleBufferedRect.texture_id)
  return texture_id_;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_texture_id(::google::protobuf::uint32 value) {
  set_has_texture_id();
  texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawYUV420DoubleBufferedRect.texture_id)
}

// optional .CMsgPoint texture_top_left = 4;
inline bool CMsgDrawYUV420DoubleBufferedRect::has_texture_top_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_has_texture_top_left() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_has_texture_top_left() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_texture_top_left() {
  if (texture_top_left_ != NULL) texture_top_left_->::CMsgPoint::Clear();
  clear_has_texture_top_left();
}
inline const ::CMsgPoint& CMsgDrawYUV420DoubleBufferedRect::texture_top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawYUV420DoubleBufferedRect.texture_top_left)
  return texture_top_left_ != NULL ? *texture_top_left_ : *default_instance_->texture_top_left_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::mutable_texture_top_left() {
  set_has_texture_top_left();
  if (texture_top_left_ == NULL) {
    texture_top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawYUV420DoubleBufferedRect.texture_top_left)
  return texture_top_left_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::release_texture_top_left() {
  clear_has_texture_top_left();
  ::CMsgPoint* temp = texture_top_left_;
  texture_top_left_ = NULL;
  return temp;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_allocated_texture_top_left(::CMsgPoint* texture_top_left) {
  delete texture_top_left_;
  texture_top_left_ = texture_top_left;
  if (texture_top_left) {
    set_has_texture_top_left();
  } else {
    clear_has_texture_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawYUV420DoubleBufferedRect.texture_top_left)
}

// optional .CMsgPoint texture_bottom_right = 5;
inline bool CMsgDrawYUV420DoubleBufferedRect::has_texture_bottom_right() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_has_texture_bottom_right() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_has_texture_bottom_right() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDrawYUV420DoubleBufferedRect::clear_texture_bottom_right() {
  if (texture_bottom_right_ != NULL) texture_bottom_right_->::CMsgPoint::Clear();
  clear_has_texture_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawYUV420DoubleBufferedRect::texture_bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawYUV420DoubleBufferedRect.texture_bottom_right)
  return texture_bottom_right_ != NULL ? *texture_bottom_right_ : *default_instance_->texture_bottom_right_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::mutable_texture_bottom_right() {
  set_has_texture_bottom_right();
  if (texture_bottom_right_ == NULL) {
    texture_bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawYUV420DoubleBufferedRect.texture_bottom_right)
  return texture_bottom_right_;
}
inline ::CMsgPoint* CMsgDrawYUV420DoubleBufferedRect::release_texture_bottom_right() {
  clear_has_texture_bottom_right();
  ::CMsgPoint* temp = texture_bottom_right_;
  texture_bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawYUV420DoubleBufferedRect::set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right) {
  delete texture_bottom_right_;
  texture_bottom_right_ = texture_bottom_right;
  if (texture_bottom_right) {
    set_has_texture_bottom_right();
  } else {
    clear_has_texture_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawYUV420DoubleBufferedRect.texture_bottom_right)
}

// -------------------------------------------------------------------

// CMsgRenderTexturedRect

// optional .CMsgPoint top_left = 1;
inline bool CMsgRenderTexturedRect::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRenderTexturedRect::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRenderTexturedRect::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRenderTexturedRect::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgRenderTexturedRect::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTexturedRect.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTexturedRect.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgRenderTexturedRect::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTexturedRect.top_left)
}

// optional .CMsgPoint bottom_right = 2;
inline bool CMsgRenderTexturedRect::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRenderTexturedRect::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRenderTexturedRect::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRenderTexturedRect::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgRenderTexturedRect::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTexturedRect.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTexturedRect.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgRenderTexturedRect::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTexturedRect.bottom_right)
}

// optional uint32 texture_id = 3;
inline bool CMsgRenderTexturedRect::has_texture_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRenderTexturedRect::set_has_texture_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRenderTexturedRect::clear_has_texture_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRenderTexturedRect::clear_texture_id() {
  texture_id_ = 0u;
  clear_has_texture_id();
}
inline ::google::protobuf::uint32 CMsgRenderTexturedRect::texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTexturedRect.texture_id)
  return texture_id_;
}
inline void CMsgRenderTexturedRect::set_texture_id(::google::protobuf::uint32 value) {
  set_has_texture_id();
  texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTexturedRect.texture_id)
}

// optional .CMsgPoint texture_top_left = 4;
inline bool CMsgRenderTexturedRect::has_texture_top_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgRenderTexturedRect::set_has_texture_top_left() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgRenderTexturedRect::clear_has_texture_top_left() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgRenderTexturedRect::clear_texture_top_left() {
  if (texture_top_left_ != NULL) texture_top_left_->::CMsgPoint::Clear();
  clear_has_texture_top_left();
}
inline const ::CMsgPoint& CMsgRenderTexturedRect::texture_top_left() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTexturedRect.texture_top_left)
  return texture_top_left_ != NULL ? *texture_top_left_ : *default_instance_->texture_top_left_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::mutable_texture_top_left() {
  set_has_texture_top_left();
  if (texture_top_left_ == NULL) {
    texture_top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTexturedRect.texture_top_left)
  return texture_top_left_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::release_texture_top_left() {
  clear_has_texture_top_left();
  ::CMsgPoint* temp = texture_top_left_;
  texture_top_left_ = NULL;
  return temp;
}
inline void CMsgRenderTexturedRect::set_allocated_texture_top_left(::CMsgPoint* texture_top_left) {
  delete texture_top_left_;
  texture_top_left_ = texture_top_left;
  if (texture_top_left) {
    set_has_texture_top_left();
  } else {
    clear_has_texture_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTexturedRect.texture_top_left)
}

// optional .CMsgPoint texture_bottom_right = 5;
inline bool CMsgRenderTexturedRect::has_texture_bottom_right() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgRenderTexturedRect::set_has_texture_bottom_right() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgRenderTexturedRect::clear_has_texture_bottom_right() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgRenderTexturedRect::clear_texture_bottom_right() {
  if (texture_bottom_right_ != NULL) texture_bottom_right_->::CMsgPoint::Clear();
  clear_has_texture_bottom_right();
}
inline const ::CMsgPoint& CMsgRenderTexturedRect::texture_bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTexturedRect.texture_bottom_right)
  return texture_bottom_right_ != NULL ? *texture_bottom_right_ : *default_instance_->texture_bottom_right_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::mutable_texture_bottom_right() {
  set_has_texture_bottom_right();
  if (texture_bottom_right_ == NULL) {
    texture_bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTexturedRect.texture_bottom_right)
  return texture_bottom_right_;
}
inline ::CMsgPoint* CMsgRenderTexturedRect::release_texture_bottom_right() {
  clear_has_texture_bottom_right();
  ::CMsgPoint* temp = texture_bottom_right_;
  texture_bottom_right_ = NULL;
  return temp;
}
inline void CMsgRenderTexturedRect::set_allocated_texture_bottom_right(::CMsgPoint* texture_bottom_right) {
  delete texture_bottom_right_;
  texture_bottom_right_ = texture_bottom_right;
  if (texture_bottom_right) {
    set_has_texture_bottom_right();
  } else {
    clear_has_texture_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTexturedRect.texture_bottom_right)
}

// optional int32 texture_serial = 6 [default = 0];
inline bool CMsgRenderTexturedRect::has_texture_serial() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgRenderTexturedRect::set_has_texture_serial() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgRenderTexturedRect::clear_has_texture_serial() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgRenderTexturedRect::clear_texture_serial() {
  texture_serial_ = 0;
  clear_has_texture_serial();
}
inline ::google::protobuf::int32 CMsgRenderTexturedRect::texture_serial() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTexturedRect.texture_serial)
  return texture_serial_;
}
inline void CMsgRenderTexturedRect::set_texture_serial(::google::protobuf::int32 value) {
  set_has_texture_serial();
  texture_serial_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTexturedRect.texture_serial)
}

// optional uint32 texture_sample_mode = 7 [default = 0];
inline bool CMsgRenderTexturedRect::has_texture_sample_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgRenderTexturedRect::set_has_texture_sample_mode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgRenderTexturedRect::clear_has_texture_sample_mode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgRenderTexturedRect::clear_texture_sample_mode() {
  texture_sample_mode_ = 0u;
  clear_has_texture_sample_mode();
}
inline ::google::protobuf::uint32 CMsgRenderTexturedRect::texture_sample_mode() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTexturedRect.texture_sample_mode)
  return texture_sample_mode_;
}
inline void CMsgRenderTexturedRect::set_texture_sample_mode(::google::protobuf::uint32 value) {
  set_has_texture_sample_mode();
  texture_sample_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTexturedRect.texture_sample_mode)
}

// -------------------------------------------------------------------

// CMsgLockTexture

// optional uint32 texture_id = 1;
inline bool CMsgLockTexture::has_texture_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLockTexture::set_has_texture_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLockTexture::clear_has_texture_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLockTexture::clear_texture_id() {
  texture_id_ = 0u;
  clear_has_texture_id();
}
inline ::google::protobuf::uint32 CMsgLockTexture::texture_id() const {
  // @@protoc_insertion_point(field_get:CMsgLockTexture.texture_id)
  return texture_id_;
}
inline void CMsgLockTexture::set_texture_id(::google::protobuf::uint32 value) {
  set_has_texture_id();
  texture_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLockTexture.texture_id)
}

// optional int32 texture_serial = 2 [default = 0];
inline bool CMsgLockTexture::has_texture_serial() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLockTexture::set_has_texture_serial() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLockTexture::clear_has_texture_serial() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLockTexture::clear_texture_serial() {
  texture_serial_ = 0;
  clear_has_texture_serial();
}
inline ::google::protobuf::int32 CMsgLockTexture::texture_serial() const {
  // @@protoc_insertion_point(field_get:CMsgLockTexture.texture_serial)
  return texture_serial_;
}
inline void CMsgLockTexture::set_texture_serial(::google::protobuf::int32 value) {
  set_has_texture_serial();
  texture_serial_ = value;
  // @@protoc_insertion_point(field_set:CMsgLockTexture.texture_serial)
}

// -------------------------------------------------------------------

// CMsgTextInlineObject

// optional float width = 1;
inline bool CMsgTextInlineObject::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTextInlineObject::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTextInlineObject::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTextInlineObject::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline float CMsgTextInlineObject::width() const {
  // @@protoc_insertion_point(field_get:CMsgTextInlineObject.width)
  return width_;
}
inline void CMsgTextInlineObject::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextInlineObject.width)
}

// optional float height = 2;
inline bool CMsgTextInlineObject::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTextInlineObject::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTextInlineObject::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTextInlineObject::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float CMsgTextInlineObject::height() const {
  // @@protoc_insertion_point(field_get:CMsgTextInlineObject.height)
  return height_;
}
inline void CMsgTextInlineObject::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextInlineObject.height)
}

// -------------------------------------------------------------------

// CMsgTextFormat

// optional string font_name = 1;
inline bool CMsgTextFormat::has_font_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTextFormat::set_has_font_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTextFormat::clear_has_font_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTextFormat::clear_font_name() {
  font_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_font_name();
}
inline const ::std::string& CMsgTextFormat::font_name() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.font_name)
  return font_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTextFormat::set_font_name(const ::std::string& value) {
  set_has_font_name();
  font_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTextFormat.font_name)
}
inline void CMsgTextFormat::set_font_name(const char* value) {
  set_has_font_name();
  font_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTextFormat.font_name)
}
inline void CMsgTextFormat::set_font_name(const char* value, size_t size) {
  set_has_font_name();
  font_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTextFormat.font_name)
}
inline ::std::string* CMsgTextFormat::mutable_font_name() {
  set_has_font_name();
  // @@protoc_insertion_point(field_mutable:CMsgTextFormat.font_name)
  return font_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTextFormat::release_font_name() {
  clear_has_font_name();
  return font_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTextFormat::set_allocated_font_name(::std::string* font_name) {
  if (font_name != NULL) {
    set_has_font_name();
  } else {
    clear_has_font_name();
  }
  font_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), font_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTextFormat.font_name)
}

// optional double font_size = 2;
inline bool CMsgTextFormat::has_font_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTextFormat::set_has_font_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTextFormat::clear_has_font_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTextFormat::clear_font_size() {
  font_size_ = 0;
  clear_has_font_size();
}
inline double CMsgTextFormat::font_size() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.font_size)
  return font_size_;
}
inline void CMsgTextFormat::set_font_size(double value) {
  set_has_font_size();
  font_size_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextFormat.font_size)
}

// optional int32 font_weight = 3 [default = -1];
inline bool CMsgTextFormat::has_font_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTextFormat::set_has_font_weight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTextFormat::clear_has_font_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTextFormat::clear_font_weight() {
  font_weight_ = -1;
  clear_has_font_weight();
}
inline ::google::protobuf::int32 CMsgTextFormat::font_weight() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.font_weight)
  return font_weight_;
}
inline void CMsgTextFormat::set_font_weight(::google::protobuf::int32 value) {
  set_has_font_weight();
  font_weight_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextFormat.font_weight)
}

// optional int32 font_style = 4 [default = -1];
inline bool CMsgTextFormat::has_font_style() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTextFormat::set_has_font_style() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTextFormat::clear_has_font_style() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTextFormat::clear_font_style() {
  font_style_ = -1;
  clear_has_font_style();
}
inline ::google::protobuf::int32 CMsgTextFormat::font_style() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.font_style)
  return font_style_;
}
inline void CMsgTextFormat::set_font_style(::google::protobuf::int32 value) {
  set_has_font_style();
  font_style_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextFormat.font_style)
}

// optional bool underline = 5;
inline bool CMsgTextFormat::has_underline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTextFormat::set_has_underline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTextFormat::clear_has_underline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTextFormat::clear_underline() {
  underline_ = false;
  clear_has_underline();
}
inline bool CMsgTextFormat::underline() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.underline)
  return underline_;
}
inline void CMsgTextFormat::set_underline(bool value) {
  set_has_underline();
  underline_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextFormat.underline)
}

// optional bool strikethrough = 6;
inline bool CMsgTextFormat::has_strikethrough() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTextFormat::set_has_strikethrough() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTextFormat::clear_has_strikethrough() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTextFormat::clear_strikethrough() {
  strikethrough_ = false;
  clear_has_strikethrough();
}
inline bool CMsgTextFormat::strikethrough() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.strikethrough)
  return strikethrough_;
}
inline void CMsgTextFormat::set_strikethrough(bool value) {
  set_has_strikethrough();
  strikethrough_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextFormat.strikethrough)
}

// optional .CMsgFillBrushCollection fill_brush_collection = 7;
inline bool CMsgTextFormat::has_fill_brush_collection() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTextFormat::set_has_fill_brush_collection() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgTextFormat::clear_has_fill_brush_collection() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgTextFormat::clear_fill_brush_collection() {
  if (fill_brush_collection_ != NULL) fill_brush_collection_->::CMsgFillBrushCollection::Clear();
  clear_has_fill_brush_collection();
}
inline const ::CMsgFillBrushCollection& CMsgTextFormat::fill_brush_collection() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.fill_brush_collection)
  return fill_brush_collection_ != NULL ? *fill_brush_collection_ : *default_instance_->fill_brush_collection_;
}
inline ::CMsgFillBrushCollection* CMsgTextFormat::mutable_fill_brush_collection() {
  set_has_fill_brush_collection();
  if (fill_brush_collection_ == NULL) {
    fill_brush_collection_ = new ::CMsgFillBrushCollection;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTextFormat.fill_brush_collection)
  return fill_brush_collection_;
}
inline ::CMsgFillBrushCollection* CMsgTextFormat::release_fill_brush_collection() {
  clear_has_fill_brush_collection();
  ::CMsgFillBrushCollection* temp = fill_brush_collection_;
  fill_brush_collection_ = NULL;
  return temp;
}
inline void CMsgTextFormat::set_allocated_fill_brush_collection(::CMsgFillBrushCollection* fill_brush_collection) {
  delete fill_brush_collection_;
  fill_brush_collection_ = fill_brush_collection;
  if (fill_brush_collection) {
    set_has_fill_brush_collection();
  } else {
    clear_has_fill_brush_collection();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTextFormat.fill_brush_collection)
}

// optional int32 letter_spacing = 8 [default = 0];
inline bool CMsgTextFormat::has_letter_spacing() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgTextFormat::set_has_letter_spacing() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgTextFormat::clear_has_letter_spacing() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgTextFormat::clear_letter_spacing() {
  letter_spacing_ = 0;
  clear_has_letter_spacing();
}
inline ::google::protobuf::int32 CMsgTextFormat::letter_spacing() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.letter_spacing)
  return letter_spacing_;
}
inline void CMsgTextFormat::set_letter_spacing(::google::protobuf::int32 value) {
  set_has_letter_spacing();
  letter_spacing_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextFormat.letter_spacing)
}

// optional .CMsgTextInlineObject inline_object = 9;
inline bool CMsgTextFormat::has_inline_object() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgTextFormat::set_has_inline_object() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgTextFormat::clear_has_inline_object() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgTextFormat::clear_inline_object() {
  if (inline_object_ != NULL) inline_object_->::CMsgTextInlineObject::Clear();
  clear_has_inline_object();
}
inline const ::CMsgTextInlineObject& CMsgTextFormat::inline_object() const {
  // @@protoc_insertion_point(field_get:CMsgTextFormat.inline_object)
  return inline_object_ != NULL ? *inline_object_ : *default_instance_->inline_object_;
}
inline ::CMsgTextInlineObject* CMsgTextFormat::mutable_inline_object() {
  set_has_inline_object();
  if (inline_object_ == NULL) {
    inline_object_ = new ::CMsgTextInlineObject;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTextFormat.inline_object)
  return inline_object_;
}
inline ::CMsgTextInlineObject* CMsgTextFormat::release_inline_object() {
  clear_has_inline_object();
  ::CMsgTextInlineObject* temp = inline_object_;
  inline_object_ = NULL;
  return temp;
}
inline void CMsgTextFormat::set_allocated_inline_object(::CMsgTextInlineObject* inline_object) {
  delete inline_object_;
  inline_object_ = inline_object;
  if (inline_object) {
    set_has_inline_object();
  } else {
    clear_has_inline_object();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTextFormat.inline_object)
}

// -------------------------------------------------------------------

// CMsgTextRangeFormat

// optional uint32 start_index = 1;
inline bool CMsgTextRangeFormat::has_start_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTextRangeFormat::set_has_start_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTextRangeFormat::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTextRangeFormat::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
inline ::google::protobuf::uint32 CMsgTextRangeFormat::start_index() const {
  // @@protoc_insertion_point(field_get:CMsgTextRangeFormat.start_index)
  return start_index_;
}
inline void CMsgTextRangeFormat::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextRangeFormat.start_index)
}

// optional uint32 end_index = 2;
inline bool CMsgTextRangeFormat::has_end_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTextRangeFormat::set_has_end_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTextRangeFormat::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTextRangeFormat::clear_end_index() {
  end_index_ = 0u;
  clear_has_end_index();
}
inline ::google::protobuf::uint32 CMsgTextRangeFormat::end_index() const {
  // @@protoc_insertion_point(field_get:CMsgTextRangeFormat.end_index)
  return end_index_;
}
inline void CMsgTextRangeFormat::set_end_index(::google::protobuf::uint32 value) {
  set_has_end_index();
  end_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgTextRangeFormat.end_index)
}

// optional .CMsgTextFormat format = 3;
inline bool CMsgTextRangeFormat::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTextRangeFormat::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTextRangeFormat::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTextRangeFormat::clear_format() {
  if (format_ != NULL) format_->::CMsgTextFormat::Clear();
  clear_has_format();
}
inline const ::CMsgTextFormat& CMsgTextRangeFormat::format() const {
  // @@protoc_insertion_point(field_get:CMsgTextRangeFormat.format)
  return format_ != NULL ? *format_ : *default_instance_->format_;
}
inline ::CMsgTextFormat* CMsgTextRangeFormat::mutable_format() {
  set_has_format();
  if (format_ == NULL) {
    format_ = new ::CMsgTextFormat;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTextRangeFormat.format)
  return format_;
}
inline ::CMsgTextFormat* CMsgTextRangeFormat::release_format() {
  clear_has_format();
  ::CMsgTextFormat* temp = format_;
  format_ = NULL;
  return temp;
}
inline void CMsgTextRangeFormat::set_allocated_format(::CMsgTextFormat* format) {
  delete format_;
  format_ = format;
  if (format) {
    set_has_format();
  } else {
    clear_has_format();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTextRangeFormat.format)
}

// -------------------------------------------------------------------

// CMsgRenderTextFormat

// optional string font_name = 1;
inline bool CMsgRenderTextFormat::has_font_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRenderTextFormat::set_has_font_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRenderTextFormat::clear_has_font_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRenderTextFormat::clear_font_name() {
  font_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_font_name();
}
inline const ::std::string& CMsgRenderTextFormat::font_name() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.font_name)
  return font_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgRenderTextFormat::set_font_name(const ::std::string& value) {
  set_has_font_name();
  font_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgRenderTextFormat.font_name)
}
inline void CMsgRenderTextFormat::set_font_name(const char* value) {
  set_has_font_name();
  font_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgRenderTextFormat.font_name)
}
inline void CMsgRenderTextFormat::set_font_name(const char* value, size_t size) {
  set_has_font_name();
  font_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgRenderTextFormat.font_name)
}
inline ::std::string* CMsgRenderTextFormat::mutable_font_name() {
  set_has_font_name();
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextFormat.font_name)
  return font_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgRenderTextFormat::release_font_name() {
  clear_has_font_name();
  return font_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgRenderTextFormat::set_allocated_font_name(::std::string* font_name) {
  if (font_name != NULL) {
    set_has_font_name();
  } else {
    clear_has_font_name();
  }
  font_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), font_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextFormat.font_name)
}

// optional double font_size = 2;
inline bool CMsgRenderTextFormat::has_font_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRenderTextFormat::set_has_font_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRenderTextFormat::clear_has_font_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRenderTextFormat::clear_font_size() {
  font_size_ = 0;
  clear_has_font_size();
}
inline double CMsgRenderTextFormat::font_size() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.font_size)
  return font_size_;
}
inline void CMsgRenderTextFormat::set_font_size(double value) {
  set_has_font_size();
  font_size_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextFormat.font_size)
}

// optional int32 font_weight = 3 [default = -1];
inline bool CMsgRenderTextFormat::has_font_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRenderTextFormat::set_has_font_weight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRenderTextFormat::clear_has_font_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRenderTextFormat::clear_font_weight() {
  font_weight_ = -1;
  clear_has_font_weight();
}
inline ::google::protobuf::int32 CMsgRenderTextFormat::font_weight() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.font_weight)
  return font_weight_;
}
inline void CMsgRenderTextFormat::set_font_weight(::google::protobuf::int32 value) {
  set_has_font_weight();
  font_weight_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextFormat.font_weight)
}

// optional int32 font_style = 4 [default = -1];
inline bool CMsgRenderTextFormat::has_font_style() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgRenderTextFormat::set_has_font_style() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgRenderTextFormat::clear_has_font_style() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgRenderTextFormat::clear_font_style() {
  font_style_ = -1;
  clear_has_font_style();
}
inline ::google::protobuf::int32 CMsgRenderTextFormat::font_style() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.font_style)
  return font_style_;
}
inline void CMsgRenderTextFormat::set_font_style(::google::protobuf::int32 value) {
  set_has_font_style();
  font_style_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextFormat.font_style)
}

// optional bool underline = 5;
inline bool CMsgRenderTextFormat::has_underline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgRenderTextFormat::set_has_underline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgRenderTextFormat::clear_has_underline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgRenderTextFormat::clear_underline() {
  underline_ = false;
  clear_has_underline();
}
inline bool CMsgRenderTextFormat::underline() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.underline)
  return underline_;
}
inline void CMsgRenderTextFormat::set_underline(bool value) {
  set_has_underline();
  underline_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextFormat.underline)
}

// optional bool strikethrough = 6;
inline bool CMsgRenderTextFormat::has_strikethrough() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgRenderTextFormat::set_has_strikethrough() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgRenderTextFormat::clear_has_strikethrough() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgRenderTextFormat::clear_strikethrough() {
  strikethrough_ = false;
  clear_has_strikethrough();
}
inline bool CMsgRenderTextFormat::strikethrough() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.strikethrough)
  return strikethrough_;
}
inline void CMsgRenderTextFormat::set_strikethrough(bool value) {
  set_has_strikethrough();
  strikethrough_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextFormat.strikethrough)
}

// optional .CMsgRenderFillBrushCollection fill_brush_collection = 7;
inline bool CMsgRenderTextFormat::has_fill_brush_collection() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgRenderTextFormat::set_has_fill_brush_collection() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgRenderTextFormat::clear_has_fill_brush_collection() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgRenderTextFormat::clear_fill_brush_collection() {
  if (fill_brush_collection_ != NULL) fill_brush_collection_->::CMsgRenderFillBrushCollection::Clear();
  clear_has_fill_brush_collection();
}
inline const ::CMsgRenderFillBrushCollection& CMsgRenderTextFormat::fill_brush_collection() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.fill_brush_collection)
  return fill_brush_collection_ != NULL ? *fill_brush_collection_ : *default_instance_->fill_brush_collection_;
}
inline ::CMsgRenderFillBrushCollection* CMsgRenderTextFormat::mutable_fill_brush_collection() {
  set_has_fill_brush_collection();
  if (fill_brush_collection_ == NULL) {
    fill_brush_collection_ = new ::CMsgRenderFillBrushCollection;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextFormat.fill_brush_collection)
  return fill_brush_collection_;
}
inline ::CMsgRenderFillBrushCollection* CMsgRenderTextFormat::release_fill_brush_collection() {
  clear_has_fill_brush_collection();
  ::CMsgRenderFillBrushCollection* temp = fill_brush_collection_;
  fill_brush_collection_ = NULL;
  return temp;
}
inline void CMsgRenderTextFormat::set_allocated_fill_brush_collection(::CMsgRenderFillBrushCollection* fill_brush_collection) {
  delete fill_brush_collection_;
  fill_brush_collection_ = fill_brush_collection;
  if (fill_brush_collection) {
    set_has_fill_brush_collection();
  } else {
    clear_has_fill_brush_collection();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextFormat.fill_brush_collection)
}

// optional int32 letter_spacing = 8 [default = 0];
inline bool CMsgRenderTextFormat::has_letter_spacing() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgRenderTextFormat::set_has_letter_spacing() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgRenderTextFormat::clear_has_letter_spacing() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgRenderTextFormat::clear_letter_spacing() {
  letter_spacing_ = 0;
  clear_has_letter_spacing();
}
inline ::google::protobuf::int32 CMsgRenderTextFormat::letter_spacing() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.letter_spacing)
  return letter_spacing_;
}
inline void CMsgRenderTextFormat::set_letter_spacing(::google::protobuf::int32 value) {
  set_has_letter_spacing();
  letter_spacing_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextFormat.letter_spacing)
}

// optional .CMsgTextInlineObject inline_object = 9;
inline bool CMsgRenderTextFormat::has_inline_object() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgRenderTextFormat::set_has_inline_object() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgRenderTextFormat::clear_has_inline_object() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgRenderTextFormat::clear_inline_object() {
  if (inline_object_ != NULL) inline_object_->::CMsgTextInlineObject::Clear();
  clear_has_inline_object();
}
inline const ::CMsgTextInlineObject& CMsgRenderTextFormat::inline_object() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextFormat.inline_object)
  return inline_object_ != NULL ? *inline_object_ : *default_instance_->inline_object_;
}
inline ::CMsgTextInlineObject* CMsgRenderTextFormat::mutable_inline_object() {
  set_has_inline_object();
  if (inline_object_ == NULL) {
    inline_object_ = new ::CMsgTextInlineObject;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextFormat.inline_object)
  return inline_object_;
}
inline ::CMsgTextInlineObject* CMsgRenderTextFormat::release_inline_object() {
  clear_has_inline_object();
  ::CMsgTextInlineObject* temp = inline_object_;
  inline_object_ = NULL;
  return temp;
}
inline void CMsgRenderTextFormat::set_allocated_inline_object(::CMsgTextInlineObject* inline_object) {
  delete inline_object_;
  inline_object_ = inline_object;
  if (inline_object) {
    set_has_inline_object();
  } else {
    clear_has_inline_object();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextFormat.inline_object)
}

// -------------------------------------------------------------------

// CMsgRenderTextRangeFormat

// optional uint32 start_index = 1;
inline bool CMsgRenderTextRangeFormat::has_start_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRenderTextRangeFormat::set_has_start_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRenderTextRangeFormat::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRenderTextRangeFormat::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
inline ::google::protobuf::uint32 CMsgRenderTextRangeFormat::start_index() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRangeFormat.start_index)
  return start_index_;
}
inline void CMsgRenderTextRangeFormat::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextRangeFormat.start_index)
}

// optional uint32 end_index = 2;
inline bool CMsgRenderTextRangeFormat::has_end_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRenderTextRangeFormat::set_has_end_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRenderTextRangeFormat::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRenderTextRangeFormat::clear_end_index() {
  end_index_ = 0u;
  clear_has_end_index();
}
inline ::google::protobuf::uint32 CMsgRenderTextRangeFormat::end_index() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRangeFormat.end_index)
  return end_index_;
}
inline void CMsgRenderTextRangeFormat::set_end_index(::google::protobuf::uint32 value) {
  set_has_end_index();
  end_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextRangeFormat.end_index)
}

// optional .CMsgRenderTextFormat format = 3;
inline bool CMsgRenderTextRangeFormat::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRenderTextRangeFormat::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRenderTextRangeFormat::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRenderTextRangeFormat::clear_format() {
  if (format_ != NULL) format_->::CMsgRenderTextFormat::Clear();
  clear_has_format();
}
inline const ::CMsgRenderTextFormat& CMsgRenderTextRangeFormat::format() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRangeFormat.format)
  return format_ != NULL ? *format_ : *default_instance_->format_;
}
inline ::CMsgRenderTextFormat* CMsgRenderTextRangeFormat::mutable_format() {
  set_has_format();
  if (format_ == NULL) {
    format_ = new ::CMsgRenderTextFormat;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextRangeFormat.format)
  return format_;
}
inline ::CMsgRenderTextFormat* CMsgRenderTextRangeFormat::release_format() {
  clear_has_format();
  ::CMsgRenderTextFormat* temp = format_;
  format_ = NULL;
  return temp;
}
inline void CMsgRenderTextRangeFormat::set_allocated_format(::CMsgRenderTextFormat* format) {
  delete format_;
  format_ = format;
  if (format) {
    set_has_format();
  } else {
    clear_has_format();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextRangeFormat.format)
}

// -------------------------------------------------------------------

// CMsgDrawTextRegion

// optional bytes wtext = 2;
inline bool CMsgDrawTextRegion::has_wtext() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDrawTextRegion::set_has_wtext() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDrawTextRegion::clear_has_wtext() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDrawTextRegion::clear_wtext() {
  wtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wtext();
}
inline const ::std::string& CMsgDrawTextRegion::wtext() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.wtext)
  return wtext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDrawTextRegion::set_wtext(const ::std::string& value) {
  set_has_wtext();
  wtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDrawTextRegion.wtext)
}
inline void CMsgDrawTextRegion::set_wtext(const char* value) {
  set_has_wtext();
  wtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDrawTextRegion.wtext)
}
inline void CMsgDrawTextRegion::set_wtext(const void* value, size_t size) {
  set_has_wtext();
  wtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDrawTextRegion.wtext)
}
inline ::std::string* CMsgDrawTextRegion::mutable_wtext() {
  set_has_wtext();
  // @@protoc_insertion_point(field_mutable:CMsgDrawTextRegion.wtext)
  return wtext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDrawTextRegion::release_wtext() {
  clear_has_wtext();
  return wtext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDrawTextRegion::set_allocated_wtext(::std::string* wtext) {
  if (wtext != NULL) {
    set_has_wtext();
  } else {
    clear_has_wtext();
  }
  wtext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wtext);
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTextRegion.wtext)
}

// optional .CMsgTextFormat default_format = 3;
inline bool CMsgDrawTextRegion::has_default_format() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDrawTextRegion::set_has_default_format() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDrawTextRegion::clear_has_default_format() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDrawTextRegion::clear_default_format() {
  if (default_format_ != NULL) default_format_->::CMsgTextFormat::Clear();
  clear_has_default_format();
}
inline const ::CMsgTextFormat& CMsgDrawTextRegion::default_format() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.default_format)
  return default_format_ != NULL ? *default_format_ : *default_instance_->default_format_;
}
inline ::CMsgTextFormat* CMsgDrawTextRegion::mutable_default_format() {
  set_has_default_format();
  if (default_format_ == NULL) {
    default_format_ = new ::CMsgTextFormat;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawTextRegion.default_format)
  return default_format_;
}
inline ::CMsgTextFormat* CMsgDrawTextRegion::release_default_format() {
  clear_has_default_format();
  ::CMsgTextFormat* temp = default_format_;
  default_format_ = NULL;
  return temp;
}
inline void CMsgDrawTextRegion::set_allocated_default_format(::CMsgTextFormat* default_format) {
  delete default_format_;
  default_format_ = default_format;
  if (default_format) {
    set_has_default_format();
  } else {
    clear_has_default_format();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTextRegion.default_format)
}

// optional uint32 text_align = 4;
inline bool CMsgDrawTextRegion::has_text_align() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDrawTextRegion::set_has_text_align() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDrawTextRegion::clear_has_text_align() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDrawTextRegion::clear_text_align() {
  text_align_ = 0u;
  clear_has_text_align();
}
inline ::google::protobuf::uint32 CMsgDrawTextRegion::text_align() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.text_align)
  return text_align_;
}
inline void CMsgDrawTextRegion::set_text_align(::google::protobuf::uint32 value) {
  set_has_text_align();
  text_align_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawTextRegion.text_align)
}

// optional uint32 line_height = 5;
inline bool CMsgDrawTextRegion::has_line_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDrawTextRegion::set_has_line_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDrawTextRegion::clear_has_line_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDrawTextRegion::clear_line_height() {
  line_height_ = 0u;
  clear_has_line_height();
}
inline ::google::protobuf::uint32 CMsgDrawTextRegion::line_height() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.line_height)
  return line_height_;
}
inline void CMsgDrawTextRegion::set_line_height(::google::protobuf::uint32 value) {
  set_has_line_height();
  line_height_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawTextRegion.line_height)
}

// optional .CMsgPoint top_left = 6;
inline bool CMsgDrawTextRegion::has_top_left() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDrawTextRegion::set_has_top_left() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDrawTextRegion::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDrawTextRegion::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgDrawTextRegion::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgDrawTextRegion::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawTextRegion.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgDrawTextRegion::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgDrawTextRegion::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTextRegion.top_left)
}

// optional .CMsgPoint bottom_right = 7;
inline bool CMsgDrawTextRegion::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDrawTextRegion::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDrawTextRegion::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDrawTextRegion::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgDrawTextRegion::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgDrawTextRegion::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDrawTextRegion.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgDrawTextRegion::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgDrawTextRegion::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDrawTextRegion.bottom_right)
}

// optional bool wrapping = 8;
inline bool CMsgDrawTextRegion::has_wrapping() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDrawTextRegion::set_has_wrapping() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDrawTextRegion::clear_has_wrapping() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDrawTextRegion::clear_wrapping() {
  wrapping_ = false;
  clear_has_wrapping();
}
inline bool CMsgDrawTextRegion::wrapping() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.wrapping)
  return wrapping_;
}
inline void CMsgDrawTextRegion::set_wrapping(bool value) {
  set_has_wrapping();
  wrapping_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawTextRegion.wrapping)
}

// optional bool ellipsis = 9;
inline bool CMsgDrawTextRegion::has_ellipsis() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDrawTextRegion::set_has_ellipsis() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDrawTextRegion::clear_has_ellipsis() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDrawTextRegion::clear_ellipsis() {
  ellipsis_ = false;
  clear_has_ellipsis();
}
inline bool CMsgDrawTextRegion::ellipsis() const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.ellipsis)
  return ellipsis_;
}
inline void CMsgDrawTextRegion::set_ellipsis(bool value) {
  set_has_ellipsis();
  ellipsis_ = value;
  // @@protoc_insertion_point(field_set:CMsgDrawTextRegion.ellipsis)
}

// repeated .CMsgTextRangeFormat range_formats = 10;
inline int CMsgDrawTextRegion::range_formats_size() const {
  return range_formats_.size();
}
inline void CMsgDrawTextRegion::clear_range_formats() {
  range_formats_.Clear();
}
inline const ::CMsgTextRangeFormat& CMsgDrawTextRegion::range_formats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDrawTextRegion.range_formats)
  return range_formats_.Get(index);
}
inline ::CMsgTextRangeFormat* CMsgDrawTextRegion::mutable_range_formats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDrawTextRegion.range_formats)
  return range_formats_.Mutable(index);
}
inline ::CMsgTextRangeFormat* CMsgDrawTextRegion::add_range_formats() {
  // @@protoc_insertion_point(field_add:CMsgDrawTextRegion.range_formats)
  return range_formats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTextRangeFormat >*
CMsgDrawTextRegion::mutable_range_formats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDrawTextRegion.range_formats)
  return &range_formats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTextRangeFormat >&
CMsgDrawTextRegion::range_formats() const {
  // @@protoc_insertion_point(field_list:CMsgDrawTextRegion.range_formats)
  return range_formats_;
}

// -------------------------------------------------------------------

// CMsgRenderTextRegion

// optional bytes wtext = 2;
inline bool CMsgRenderTextRegion::has_wtext() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRenderTextRegion::set_has_wtext() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRenderTextRegion::clear_has_wtext() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRenderTextRegion::clear_wtext() {
  wtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wtext();
}
inline const ::std::string& CMsgRenderTextRegion::wtext() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.wtext)
  return wtext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgRenderTextRegion::set_wtext(const ::std::string& value) {
  set_has_wtext();
  wtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgRenderTextRegion.wtext)
}
inline void CMsgRenderTextRegion::set_wtext(const char* value) {
  set_has_wtext();
  wtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgRenderTextRegion.wtext)
}
inline void CMsgRenderTextRegion::set_wtext(const void* value, size_t size) {
  set_has_wtext();
  wtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgRenderTextRegion.wtext)
}
inline ::std::string* CMsgRenderTextRegion::mutable_wtext() {
  set_has_wtext();
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextRegion.wtext)
  return wtext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgRenderTextRegion::release_wtext() {
  clear_has_wtext();
  return wtext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgRenderTextRegion::set_allocated_wtext(::std::string* wtext) {
  if (wtext != NULL) {
    set_has_wtext();
  } else {
    clear_has_wtext();
  }
  wtext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wtext);
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextRegion.wtext)
}

// optional .CMsgRenderTextFormat default_format = 3;
inline bool CMsgRenderTextRegion::has_default_format() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRenderTextRegion::set_has_default_format() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRenderTextRegion::clear_has_default_format() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRenderTextRegion::clear_default_format() {
  if (default_format_ != NULL) default_format_->::CMsgRenderTextFormat::Clear();
  clear_has_default_format();
}
inline const ::CMsgRenderTextFormat& CMsgRenderTextRegion::default_format() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.default_format)
  return default_format_ != NULL ? *default_format_ : *default_instance_->default_format_;
}
inline ::CMsgRenderTextFormat* CMsgRenderTextRegion::mutable_default_format() {
  set_has_default_format();
  if (default_format_ == NULL) {
    default_format_ = new ::CMsgRenderTextFormat;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextRegion.default_format)
  return default_format_;
}
inline ::CMsgRenderTextFormat* CMsgRenderTextRegion::release_default_format() {
  clear_has_default_format();
  ::CMsgRenderTextFormat* temp = default_format_;
  default_format_ = NULL;
  return temp;
}
inline void CMsgRenderTextRegion::set_allocated_default_format(::CMsgRenderTextFormat* default_format) {
  delete default_format_;
  default_format_ = default_format;
  if (default_format) {
    set_has_default_format();
  } else {
    clear_has_default_format();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextRegion.default_format)
}

// optional uint32 text_align = 4;
inline bool CMsgRenderTextRegion::has_text_align() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRenderTextRegion::set_has_text_align() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRenderTextRegion::clear_has_text_align() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRenderTextRegion::clear_text_align() {
  text_align_ = 0u;
  clear_has_text_align();
}
inline ::google::protobuf::uint32 CMsgRenderTextRegion::text_align() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.text_align)
  return text_align_;
}
inline void CMsgRenderTextRegion::set_text_align(::google::protobuf::uint32 value) {
  set_has_text_align();
  text_align_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextRegion.text_align)
}

// optional uint32 line_height = 5;
inline bool CMsgRenderTextRegion::has_line_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgRenderTextRegion::set_has_line_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgRenderTextRegion::clear_has_line_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgRenderTextRegion::clear_line_height() {
  line_height_ = 0u;
  clear_has_line_height();
}
inline ::google::protobuf::uint32 CMsgRenderTextRegion::line_height() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.line_height)
  return line_height_;
}
inline void CMsgRenderTextRegion::set_line_height(::google::protobuf::uint32 value) {
  set_has_line_height();
  line_height_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextRegion.line_height)
}

// optional .CMsgPoint top_left = 6;
inline bool CMsgRenderTextRegion::has_top_left() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgRenderTextRegion::set_has_top_left() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgRenderTextRegion::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgRenderTextRegion::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgRenderTextRegion::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgRenderTextRegion::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextRegion.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgRenderTextRegion::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgRenderTextRegion::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextRegion.top_left)
}

// optional .CMsgPoint bottom_right = 7;
inline bool CMsgRenderTextRegion::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgRenderTextRegion::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgRenderTextRegion::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgRenderTextRegion::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgRenderTextRegion::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgRenderTextRegion::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextRegion.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgRenderTextRegion::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgRenderTextRegion::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextRegion.bottom_right)
}

// optional bool wrapping = 8;
inline bool CMsgRenderTextRegion::has_wrapping() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgRenderTextRegion::set_has_wrapping() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgRenderTextRegion::clear_has_wrapping() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgRenderTextRegion::clear_wrapping() {
  wrapping_ = false;
  clear_has_wrapping();
}
inline bool CMsgRenderTextRegion::wrapping() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.wrapping)
  return wrapping_;
}
inline void CMsgRenderTextRegion::set_wrapping(bool value) {
  set_has_wrapping();
  wrapping_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextRegion.wrapping)
}

// optional bool ellipsis = 9;
inline bool CMsgRenderTextRegion::has_ellipsis() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgRenderTextRegion::set_has_ellipsis() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgRenderTextRegion::clear_has_ellipsis() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgRenderTextRegion::clear_ellipsis() {
  ellipsis_ = false;
  clear_has_ellipsis();
}
inline bool CMsgRenderTextRegion::ellipsis() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.ellipsis)
  return ellipsis_;
}
inline void CMsgRenderTextRegion::set_ellipsis(bool value) {
  set_has_ellipsis();
  ellipsis_ = value;
  // @@protoc_insertion_point(field_set:CMsgRenderTextRegion.ellipsis)
}

// repeated .CMsgRenderTextRangeFormat range_formats = 10;
inline int CMsgRenderTextRegion::range_formats_size() const {
  return range_formats_.size();
}
inline void CMsgRenderTextRegion::clear_range_formats() {
  range_formats_.Clear();
}
inline const ::CMsgRenderTextRangeFormat& CMsgRenderTextRegion::range_formats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.range_formats)
  return range_formats_.Get(index);
}
inline ::CMsgRenderTextRangeFormat* CMsgRenderTextRegion::mutable_range_formats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextRegion.range_formats)
  return range_formats_.Mutable(index);
}
inline ::CMsgRenderTextRangeFormat* CMsgRenderTextRegion::add_range_formats() {
  // @@protoc_insertion_point(field_add:CMsgRenderTextRegion.range_formats)
  return range_formats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgRenderTextRangeFormat >*
CMsgRenderTextRegion::mutable_range_formats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRenderTextRegion.range_formats)
  return &range_formats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgRenderTextRangeFormat >&
CMsgRenderTextRegion::range_formats() const {
  // @@protoc_insertion_point(field_list:CMsgRenderTextRegion.range_formats)
  return range_formats_;
}

// optional .CTextShadowData text_shadow = 11;
inline bool CMsgRenderTextRegion::has_text_shadow() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgRenderTextRegion::set_has_text_shadow() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgRenderTextRegion::clear_has_text_shadow() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgRenderTextRegion::clear_text_shadow() {
  if (text_shadow_ != NULL) text_shadow_->::CTextShadowData::Clear();
  clear_has_text_shadow();
}
inline const ::CTextShadowData& CMsgRenderTextRegion::text_shadow() const {
  // @@protoc_insertion_point(field_get:CMsgRenderTextRegion.text_shadow)
  return text_shadow_ != NULL ? *text_shadow_ : *default_instance_->text_shadow_;
}
inline ::CTextShadowData* CMsgRenderTextRegion::mutable_text_shadow() {
  set_has_text_shadow();
  if (text_shadow_ == NULL) {
    text_shadow_ = new ::CTextShadowData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRenderTextRegion.text_shadow)
  return text_shadow_;
}
inline ::CTextShadowData* CMsgRenderTextRegion::release_text_shadow() {
  clear_has_text_shadow();
  ::CTextShadowData* temp = text_shadow_;
  text_shadow_ = NULL;
  return temp;
}
inline void CMsgRenderTextRegion::set_allocated_text_shadow(::CTextShadowData* text_shadow) {
  delete text_shadow_;
  text_shadow_ = text_shadow;
  if (text_shadow) {
    set_has_text_shadow();
  } else {
    clear_has_text_shadow();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRenderTextRegion.text_shadow)
}

// -------------------------------------------------------------------

// CMsgRequestRenderCallback

// optional bytes callback_obj = 1;
inline bool CMsgRequestRenderCallback::has_callback_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestRenderCallback::set_has_callback_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestRenderCallback::clear_has_callback_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestRenderCallback::clear_callback_obj() {
  callback_obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_callback_obj();
}
inline const ::std::string& CMsgRequestRenderCallback::callback_obj() const {
  // @@protoc_insertion_point(field_get:CMsgRequestRenderCallback.callback_obj)
  return callback_obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgRequestRenderCallback::set_callback_obj(const ::std::string& value) {
  set_has_callback_obj();
  callback_obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgRequestRenderCallback.callback_obj)
}
inline void CMsgRequestRenderCallback::set_callback_obj(const char* value) {
  set_has_callback_obj();
  callback_obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgRequestRenderCallback.callback_obj)
}
inline void CMsgRequestRenderCallback::set_callback_obj(const void* value, size_t size) {
  set_has_callback_obj();
  callback_obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgRequestRenderCallback.callback_obj)
}
inline ::std::string* CMsgRequestRenderCallback::mutable_callback_obj() {
  set_has_callback_obj();
  // @@protoc_insertion_point(field_mutable:CMsgRequestRenderCallback.callback_obj)
  return callback_obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgRequestRenderCallback::release_callback_obj() {
  clear_has_callback_obj();
  return callback_obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgRequestRenderCallback::set_allocated_callback_obj(::std::string* callback_obj) {
  if (callback_obj != NULL) {
    set_has_callback_obj();
  } else {
    clear_has_callback_obj();
  }
  callback_obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callback_obj);
  // @@protoc_insertion_point(field_set_allocated:CMsgRequestRenderCallback.callback_obj)
}

// optional .CMsgPoint top_left = 2;
inline bool CMsgRequestRenderCallback::has_top_left() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestRenderCallback::set_has_top_left() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestRenderCallback::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestRenderCallback::clear_top_left() {
  if (top_left_ != NULL) top_left_->::CMsgPoint::Clear();
  clear_has_top_left();
}
inline const ::CMsgPoint& CMsgRequestRenderCallback::top_left() const {
  // @@protoc_insertion_point(field_get:CMsgRequestRenderCallback.top_left)
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    top_left_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRequestRenderCallback.top_left)
  return top_left_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::release_top_left() {
  clear_has_top_left();
  ::CMsgPoint* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline void CMsgRequestRenderCallback::set_allocated_top_left(::CMsgPoint* top_left) {
  delete top_left_;
  top_left_ = top_left;
  if (top_left) {
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRequestRenderCallback.top_left)
}

// optional .CMsgPoint bottom_right = 3;
inline bool CMsgRequestRenderCallback::has_bottom_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRequestRenderCallback::set_has_bottom_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRequestRenderCallback::clear_has_bottom_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRequestRenderCallback::clear_bottom_right() {
  if (bottom_right_ != NULL) bottom_right_->::CMsgPoint::Clear();
  clear_has_bottom_right();
}
inline const ::CMsgPoint& CMsgRequestRenderCallback::bottom_right() const {
  // @@protoc_insertion_point(field_get:CMsgRequestRenderCallback.bottom_right)
  return bottom_right_ != NULL ? *bottom_right_ : *default_instance_->bottom_right_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::mutable_bottom_right() {
  set_has_bottom_right();
  if (bottom_right_ == NULL) {
    bottom_right_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRequestRenderCallback.bottom_right)
  return bottom_right_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::release_bottom_right() {
  clear_has_bottom_right();
  ::CMsgPoint* temp = bottom_right_;
  bottom_right_ = NULL;
  return temp;
}
inline void CMsgRequestRenderCallback::set_allocated_bottom_right(::CMsgPoint* bottom_right) {
  delete bottom_right_;
  bottom_right_ = bottom_right;
  if (bottom_right) {
    set_has_bottom_right();
  } else {
    clear_has_bottom_right();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRequestRenderCallback.bottom_right)
}

// optional .CMsgPoint top_left_padding = 4;
inline bool CMsgRequestRenderCallback::has_top_left_padding() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgRequestRenderCallback::set_has_top_left_padding() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgRequestRenderCallback::clear_has_top_left_padding() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgRequestRenderCallback::clear_top_left_padding() {
  if (top_left_padding_ != NULL) top_left_padding_->::CMsgPoint::Clear();
  clear_has_top_left_padding();
}
inline const ::CMsgPoint& CMsgRequestRenderCallback::top_left_padding() const {
  // @@protoc_insertion_point(field_get:CMsgRequestRenderCallback.top_left_padding)
  return top_left_padding_ != NULL ? *top_left_padding_ : *default_instance_->top_left_padding_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::mutable_top_left_padding() {
  set_has_top_left_padding();
  if (top_left_padding_ == NULL) {
    top_left_padding_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRequestRenderCallback.top_left_padding)
  return top_left_padding_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::release_top_left_padding() {
  clear_has_top_left_padding();
  ::CMsgPoint* temp = top_left_padding_;
  top_left_padding_ = NULL;
  return temp;
}
inline void CMsgRequestRenderCallback::set_allocated_top_left_padding(::CMsgPoint* top_left_padding) {
  delete top_left_padding_;
  top_left_padding_ = top_left_padding;
  if (top_left_padding) {
    set_has_top_left_padding();
  } else {
    clear_has_top_left_padding();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRequestRenderCallback.top_left_padding)
}

// optional .CMsgPoint bottom_right_padding = 5;
inline bool CMsgRequestRenderCallback::has_bottom_right_padding() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgRequestRenderCallback::set_has_bottom_right_padding() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgRequestRenderCallback::clear_has_bottom_right_padding() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgRequestRenderCallback::clear_bottom_right_padding() {
  if (bottom_right_padding_ != NULL) bottom_right_padding_->::CMsgPoint::Clear();
  clear_has_bottom_right_padding();
}
inline const ::CMsgPoint& CMsgRequestRenderCallback::bottom_right_padding() const {
  // @@protoc_insertion_point(field_get:CMsgRequestRenderCallback.bottom_right_padding)
  return bottom_right_padding_ != NULL ? *bottom_right_padding_ : *default_instance_->bottom_right_padding_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::mutable_bottom_right_padding() {
  set_has_bottom_right_padding();
  if (bottom_right_padding_ == NULL) {
    bottom_right_padding_ = new ::CMsgPoint;
  }
  // @@protoc_insertion_point(field_mutable:CMsgRequestRenderCallback.bottom_right_padding)
  return bottom_right_padding_;
}
inline ::CMsgPoint* CMsgRequestRenderCallback::release_bottom_right_padding() {
  clear_has_bottom_right_padding();
  ::CMsgPoint* temp = bottom_right_padding_;
  bottom_right_padding_ = NULL;
  return temp;
}
inline void CMsgRequestRenderCallback::set_allocated_bottom_right_padding(::CMsgPoint* bottom_right_padding) {
  delete bottom_right_padding_;
  bottom_right_padding_ = bottom_right_padding;
  if (bottom_right_padding) {
    set_has_bottom_right_padding();
  } else {
    clear_has_bottom_right_padding();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgRequestRenderCallback.bottom_right_padding)
}

// optional bool needs_redraw_every_frame = 6;
inline bool CMsgRequestRenderCallback::has_needs_redraw_every_frame() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgRequestRenderCallback::set_has_needs_redraw_every_frame() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgRequestRenderCallback::clear_has_needs_redraw_every_frame() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgRequestRenderCallback::clear_needs_redraw_every_frame() {
  needs_redraw_every_frame_ = false;
  clear_has_needs_redraw_every_frame();
}
inline bool CMsgRequestRenderCallback::needs_redraw_every_frame() const {
  // @@protoc_insertion_point(field_get:CMsgRequestRenderCallback.needs_redraw_every_frame)
  return needs_redraw_every_frame_;
}
inline void CMsgRequestRenderCallback::set_needs_redraw_every_frame(bool value) {
  set_has_needs_redraw_every_frame();
  needs_redraw_every_frame_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestRenderCallback.needs_redraw_every_frame)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rendermessages_2eproto__INCLUDED
