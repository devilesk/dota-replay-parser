// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steamdatagram_messages.proto

#ifndef PROTOBUF_steamdatagram_5fmessages_2eproto__INCLUDED
#define PROTOBUF_steamdatagram_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

class CMsgSteamDatagramRouterPingReply;
class CMsgSteamDatagramGameserverPing;
class CMsgSteamDatagramGameServerAuthTicket;
class CMsgSteamDatagramGameServerAuthTicket_ExtraField;
class CMsgSteamDatagramGameserverSessionRequest;
class CMsgSteamDatagramGameserverSessionEstablished;
class CMsgSteamDatagramNoSession;
class CMsgSteamDatagramDiagnostic;
class CMsgSteamDatagramDataCenterState;
class CMsgSteamDatagramDataCenterState_Server;
class CMsgSteamDatagramDataCenterState_DataCenter;
class CMsgSteamDatagramLinkInstantaneousStats;
class CMsgSteamDatagramLinkLifetimeStats;
class CMsgSteamDatagramConnectionQuality;
class CMsgSteamDatagramConnectionStatsClientToRouter;
class CMsgSteamDatagramConnectionStatsRouterToClient;
class CMsgSteamDatagramConnectionStatsRouterToServer;
class CMsgSteamDatagramClientPingSampleRequest;
class CMsgSteamDatagramClientPingSampleReply;
class CMsgSteamDatagramClientPingSampleReply_RoutingCluster;
class CMsgSteamDatagramClientSwitchedPrimary;
class CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;

enum ESteamDatagramMsgID {
  k_ESteamDatagramMsg_RouterPingRequest = 1,
  k_ESteamDatagramMsg_RouterPingReply = 2,
  k_ESteamDatagramMsg_GameserverPingRequest = 3,
  k_ESteamDatagramMsg_GameserverPingReply = 4,
  k_ESteamDatagramMsg_GameserverSessionRequest = 5,
  k_ESteamDatagramMsg_GameserverSessionEstablished = 6,
  k_ESteamDatagramMsg_NoSession = 7,
  k_ESteamDatagramMsg_Diagnostic = 8,
  k_ESteamDatagramMsg_DataClientToRouter = 9,
  k_ESteamDatagramMsg_DataRouterToServer = 10,
  k_ESteamDatagramMsg_DataServerToRouter = 11,
  k_ESteamDatagramMsg_DataRouterToClient = 12,
  k_ESteamDatagramMsg_Stats = 13,
  k_ESteamDatagramMsg_ClientPingSampleRequest = 14,
  k_ESteamDatagramMsg_ClientPingSampleReply = 15,
  k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary = 16
};
bool ESteamDatagramMsgID_IsValid(int value);
const ESteamDatagramMsgID ESteamDatagramMsgID_MIN = k_ESteamDatagramMsg_RouterPingRequest;
const ESteamDatagramMsgID ESteamDatagramMsgID_MAX = k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary;
const int ESteamDatagramMsgID_ARRAYSIZE = ESteamDatagramMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESteamDatagramMsgID_descriptor();
inline const ::std::string& ESteamDatagramMsgID_Name(ESteamDatagramMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESteamDatagramMsgID_descriptor(), value);
}
inline bool ESteamDatagramMsgID_Parse(
    const ::std::string& name, ESteamDatagramMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamDatagramMsgID>(
    ESteamDatagramMsgID_descriptor(), name, value);
}
// ===================================================================

class CMsgSteamDatagramRouterPingReply : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramRouterPingReply();
  virtual ~CMsgSteamDatagramRouterPingReply();

  CMsgSteamDatagramRouterPingReply(const CMsgSteamDatagramRouterPingReply& from);

  inline CMsgSteamDatagramRouterPingReply& operator=(const CMsgSteamDatagramRouterPingReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramRouterPingReply& default_instance();

  void Swap(CMsgSteamDatagramRouterPingReply* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramRouterPingReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramRouterPingReply& from);
  void MergeFrom(const CMsgSteamDatagramRouterPingReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 client_timestamp = 1;
  inline bool has_client_timestamp() const;
  inline void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 1;
  inline ::google::protobuf::uint32 client_timestamp() const;
  inline void set_client_timestamp(::google::protobuf::uint32 value);

  // repeated fixed32 latency_datacenter_ids = 2 [packed = true];
  inline int latency_datacenter_ids_size() const;
  inline void clear_latency_datacenter_ids();
  static const int kLatencyDatacenterIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 latency_datacenter_ids(int index) const;
  inline void set_latency_datacenter_ids(int index, ::google::protobuf::uint32 value);
  inline void add_latency_datacenter_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      latency_datacenter_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_latency_datacenter_ids();

  // repeated uint32 latency_ping_ms = 3 [packed = true];
  inline int latency_ping_ms_size() const;
  inline void clear_latency_ping_ms();
  static const int kLatencyPingMsFieldNumber = 3;
  inline ::google::protobuf::uint32 latency_ping_ms(int index) const;
  inline void set_latency_ping_ms(int index, ::google::protobuf::uint32 value);
  inline void add_latency_ping_ms(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      latency_ping_ms() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_latency_ping_ms();

  // optional fixed32 your_public_ip = 4;
  inline bool has_your_public_ip() const;
  inline void clear_your_public_ip();
  static const int kYourPublicIpFieldNumber = 4;
  inline ::google::protobuf::uint32 your_public_ip() const;
  inline void set_your_public_ip(::google::protobuf::uint32 value);

  // optional fixed32 server_time = 5;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 server_time() const;
  inline void set_server_time(::google::protobuf::uint32 value);

  // optional fixed64 challenge = 6;
  inline bool has_challenge() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 6;
  inline ::google::protobuf::uint64 challenge() const;
  inline void set_challenge(::google::protobuf::uint64 value);

  // optional uint32 seconds_until_shutdown = 7;
  inline bool has_seconds_until_shutdown() const;
  inline void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 7;
  inline ::google::protobuf::uint32 seconds_until_shutdown() const;
  inline void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 8;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 8;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRouterPingReply)
 private:
  inline void set_has_client_timestamp();
  inline void clear_has_client_timestamp();
  inline void set_has_your_public_ip();
  inline void clear_has_your_public_ip();
  inline void set_has_server_time();
  inline void clear_has_server_time();
  inline void set_has_challenge();
  inline void clear_has_challenge();
  inline void set_has_seconds_until_shutdown();
  inline void clear_has_seconds_until_shutdown();
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latency_datacenter_ids_;
  mutable int _latency_datacenter_ids_cached_byte_size_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 your_public_ip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latency_ping_ms_;
  mutable int _latency_ping_ms_cached_byte_size_;
  ::google::protobuf::uint64 challenge_;
  ::google::protobuf::uint32 server_time_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  ::google::protobuf::uint32 client_cookie_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramRouterPingReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverPing : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramGameserverPing();
  virtual ~CMsgSteamDatagramGameserverPing();

  CMsgSteamDatagramGameserverPing(const CMsgSteamDatagramGameserverPing& from);

  inline CMsgSteamDatagramGameserverPing& operator=(const CMsgSteamDatagramGameserverPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameserverPing& default_instance();

  void Swap(CMsgSteamDatagramGameserverPing* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramGameserverPing& from);
  void MergeFrom(const CMsgSteamDatagramGameserverPing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 client_session = 1;
  inline bool has_client_session() const;
  inline void clear_client_session();
  static const int kClientSessionFieldNumber = 1;
  inline ::google::protobuf::uint32 client_session() const;
  inline void set_client_session(::google::protobuf::uint32 value);

  // optional fixed64 client_steam_id = 2;
  inline bool has_client_steam_id() const;
  inline void clear_client_steam_id();
  static const int kClientSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 client_steam_id() const;
  inline void set_client_steam_id(::google::protobuf::uint64 value);

  // optional fixed32 client_timestamp = 3;
  inline bool has_client_timestamp() const;
  inline void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 client_timestamp() const;
  inline void set_client_timestamp(::google::protobuf::uint32 value);

  // optional fixed32 router_timestamp = 4;
  inline bool has_router_timestamp() const;
  inline void clear_router_timestamp();
  static const int kRouterTimestampFieldNumber = 4;
  inline ::google::protobuf::uint32 router_timestamp() const;
  inline void set_router_timestamp(::google::protobuf::uint32 value);

  // optional uint32 router_gameserver_latency = 5;
  inline bool has_router_gameserver_latency() const;
  inline void clear_router_gameserver_latency();
  static const int kRouterGameserverLatencyFieldNumber = 5;
  inline ::google::protobuf::uint32 router_gameserver_latency() const;
  inline void set_router_gameserver_latency(::google::protobuf::uint32 value);

  // optional uint32 seq_number_router = 6;
  inline bool has_seq_number_router() const;
  inline void clear_seq_number_router();
  static const int kSeqNumberRouterFieldNumber = 6;
  inline ::google::protobuf::uint32 seq_number_router() const;
  inline void set_seq_number_router(::google::protobuf::uint32 value);

  // optional uint32 seq_number_e2e = 7;
  inline bool has_seq_number_e2e() const;
  inline void clear_seq_number_e2e();
  static const int kSeqNumberE2EFieldNumber = 7;
  inline ::google::protobuf::uint32 seq_number_e2e() const;
  inline void set_seq_number_e2e(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverPing)
 private:
  inline void set_has_client_session();
  inline void clear_has_client_session();
  inline void set_has_client_steam_id();
  inline void clear_has_client_steam_id();
  inline void set_has_client_timestamp();
  inline void clear_has_client_timestamp();
  inline void set_has_router_timestamp();
  inline void clear_has_router_timestamp();
  inline void set_has_router_gameserver_latency();
  inline void clear_has_router_gameserver_latency();
  inline void set_has_seq_number_router();
  inline void clear_has_seq_number_router();
  inline void set_has_seq_number_e2e();
  inline void clear_has_seq_number_e2e();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 client_steam_id_;
  ::google::protobuf::uint32 client_session_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 router_timestamp_;
  ::google::protobuf::uint32 router_gameserver_latency_;
  ::google::protobuf::uint32 seq_number_router_;
  ::google::protobuf::uint32 seq_number_e2e_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramGameserverPing* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameServerAuthTicket_ExtraField : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramGameServerAuthTicket_ExtraField();
  virtual ~CMsgSteamDatagramGameServerAuthTicket_ExtraField();

  CMsgSteamDatagramGameServerAuthTicket_ExtraField(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from);

  inline CMsgSteamDatagramGameServerAuthTicket_ExtraField& operator=(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameServerAuthTicket_ExtraField& default_instance();

  void Swap(CMsgSteamDatagramGameServerAuthTicket_ExtraField* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameServerAuthTicket_ExtraField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from);
  void MergeFrom(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string string_value = 2;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 2;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const char* value, size_t size);
  inline ::std::string* mutable_string_value();
  inline ::std::string* release_string_value();
  inline void set_allocated_string_value(::std::string* string_value);

  // optional sint32 int32_value = 3;
  inline bool has_int32_value() const;
  inline void clear_int32_value();
  static const int kInt32ValueFieldNumber = 3;
  inline ::google::protobuf::int32 int32_value() const;
  inline void set_int32_value(::google::protobuf::int32 value);

  // optional fixed32 fixed32_value = 4;
  inline bool has_fixed32_value() const;
  inline void clear_fixed32_value();
  static const int kFixed32ValueFieldNumber = 4;
  inline ::google::protobuf::uint32 fixed32_value() const;
  inline void set_fixed32_value(::google::protobuf::uint32 value);

  // optional fixed64 fixed64_value = 5;
  inline bool has_fixed64_value() const;
  inline void clear_fixed64_value();
  static const int kFixed64ValueFieldNumber = 5;
  inline ::google::protobuf::uint64 fixed64_value() const;
  inline void set_fixed64_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameServerAuthTicket.ExtraField)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_string_value();
  inline void clear_has_string_value();
  inline void set_has_int32_value();
  inline void clear_has_int32_value();
  inline void set_has_fixed32_value();
  inline void clear_has_fixed32_value();
  inline void set_has_fixed64_value();
  inline void clear_has_fixed64_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* string_value_;
  ::google::protobuf::int32 int32_value_;
  ::google::protobuf::uint32 fixed32_value_;
  ::google::protobuf::uint64 fixed64_value_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramGameServerAuthTicket_ExtraField* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameServerAuthTicket : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramGameServerAuthTicket();
  virtual ~CMsgSteamDatagramGameServerAuthTicket();

  CMsgSteamDatagramGameServerAuthTicket(const CMsgSteamDatagramGameServerAuthTicket& from);

  inline CMsgSteamDatagramGameServerAuthTicket& operator=(const CMsgSteamDatagramGameServerAuthTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameServerAuthTicket& default_instance();

  void Swap(CMsgSteamDatagramGameServerAuthTicket* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameServerAuthTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramGameServerAuthTicket& from);
  void MergeFrom(const CMsgSteamDatagramGameServerAuthTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramGameServerAuthTicket_ExtraField ExtraField;

  // accessors -------------------------------------------------------

  // optional fixed32 time_expiry = 1;
  inline bool has_time_expiry() const;
  inline void clear_time_expiry();
  static const int kTimeExpiryFieldNumber = 1;
  inline ::google::protobuf::uint32 time_expiry() const;
  inline void set_time_expiry(::google::protobuf::uint32 value);

  // optional fixed64 authorized_steam_id = 2;
  inline bool has_authorized_steam_id() const;
  inline void clear_authorized_steam_id();
  static const int kAuthorizedSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 authorized_steam_id() const;
  inline void set_authorized_steam_id(::google::protobuf::uint64 value);

  // optional fixed32 authorized_public_ip = 3;
  inline bool has_authorized_public_ip() const;
  inline void clear_authorized_public_ip();
  static const int kAuthorizedPublicIpFieldNumber = 3;
  inline ::google::protobuf::uint32 authorized_public_ip() const;
  inline void set_authorized_public_ip(::google::protobuf::uint32 value);

  // optional fixed64 gameserver_steam_id = 4;
  inline bool has_gameserver_steam_id() const;
  inline void clear_gameserver_steam_id();
  static const int kGameserverSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 gameserver_steam_id() const;
  inline void set_gameserver_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 gameserver_net_id = 5;
  inline bool has_gameserver_net_id() const;
  inline void clear_gameserver_net_id();
  static const int kGameserverNetIdFieldNumber = 5;
  inline ::google::protobuf::uint64 gameserver_net_id() const;
  inline void set_gameserver_net_id(::google::protobuf::uint64 value);

  // optional bytes signature = 6;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 6;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const void* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // optional uint32 app_id = 7;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 7;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // repeated .CMsgSteamDatagramGameServerAuthTicket.ExtraField extra_fields = 8;
  inline int extra_fields_size() const;
  inline void clear_extra_fields();
  static const int kExtraFieldsFieldNumber = 8;
  inline const ::CMsgSteamDatagramGameServerAuthTicket_ExtraField& extra_fields(int index) const;
  inline ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* mutable_extra_fields(int index);
  inline ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* add_extra_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >&
      extra_fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >*
      mutable_extra_fields();

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameServerAuthTicket)
 private:
  inline void set_has_time_expiry();
  inline void clear_has_time_expiry();
  inline void set_has_authorized_steam_id();
  inline void clear_has_authorized_steam_id();
  inline void set_has_authorized_public_ip();
  inline void clear_has_authorized_public_ip();
  inline void set_has_gameserver_steam_id();
  inline void clear_has_gameserver_steam_id();
  inline void set_has_gameserver_net_id();
  inline void clear_has_gameserver_net_id();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_app_id();
  inline void clear_has_app_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 authorized_steam_id_;
  ::google::protobuf::uint32 time_expiry_;
  ::google::protobuf::uint32 authorized_public_ip_;
  ::google::protobuf::uint64 gameserver_steam_id_;
  ::google::protobuf::uint64 gameserver_net_id_;
  ::std::string* signature_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField > extra_fields_;
  ::google::protobuf::uint32 app_id_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramGameServerAuthTicket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverSessionRequest : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramGameserverSessionRequest();
  virtual ~CMsgSteamDatagramGameserverSessionRequest();

  CMsgSteamDatagramGameserverSessionRequest(const CMsgSteamDatagramGameserverSessionRequest& from);

  inline CMsgSteamDatagramGameserverSessionRequest& operator=(const CMsgSteamDatagramGameserverSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameserverSessionRequest& default_instance();

  void Swap(CMsgSteamDatagramGameserverSessionRequest* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverSessionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramGameserverSessionRequest& from);
  void MergeFrom(const CMsgSteamDatagramGameserverSessionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramGameServerAuthTicket ticket = 1;
  inline bool has_ticket() const;
  inline void clear_ticket();
  static const int kTicketFieldNumber = 1;
  inline const ::CMsgSteamDatagramGameServerAuthTicket& ticket() const;
  inline ::CMsgSteamDatagramGameServerAuthTicket* mutable_ticket();
  inline ::CMsgSteamDatagramGameServerAuthTicket* release_ticket();
  inline void set_allocated_ticket(::CMsgSteamDatagramGameServerAuthTicket* ticket);

  // optional fixed32 challenge_time = 3;
  inline bool has_challenge_time() const;
  inline void clear_challenge_time();
  static const int kChallengeTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 challenge_time() const;
  inline void set_challenge_time(::google::protobuf::uint32 value);

  // optional fixed64 challenge = 4;
  inline bool has_challenge() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 4;
  inline ::google::protobuf::uint64 challenge() const;
  inline void set_challenge(::google::protobuf::uint64 value);

  // optional fixed32 client_cookie = 5;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 5;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverSessionRequest)
 private:
  inline void set_has_ticket();
  inline void clear_has_ticket();
  inline void set_has_challenge_time();
  inline void clear_has_challenge_time();
  inline void set_has_challenge();
  inline void clear_has_challenge();
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgSteamDatagramGameServerAuthTicket* ticket_;
  ::google::protobuf::uint64 challenge_;
  ::google::protobuf::uint32 challenge_time_;
  ::google::protobuf::uint32 client_cookie_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramGameserverSessionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverSessionEstablished : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramGameserverSessionEstablished();
  virtual ~CMsgSteamDatagramGameserverSessionEstablished();

  CMsgSteamDatagramGameserverSessionEstablished(const CMsgSteamDatagramGameserverSessionEstablished& from);

  inline CMsgSteamDatagramGameserverSessionEstablished& operator=(const CMsgSteamDatagramGameserverSessionEstablished& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameserverSessionEstablished& default_instance();

  void Swap(CMsgSteamDatagramGameserverSessionEstablished* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverSessionEstablished* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramGameserverSessionEstablished& from);
  void MergeFrom(const CMsgSteamDatagramGameserverSessionEstablished& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 client_cookie = 1;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // optional fixed64 gameserver_steam_id = 3;
  inline bool has_gameserver_steam_id() const;
  inline void clear_gameserver_steam_id();
  static const int kGameserverSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 gameserver_steam_id() const;
  inline void set_gameserver_steam_id(::google::protobuf::uint64 value);

  // optional uint32 seconds_until_shutdown = 4;
  inline bool has_seconds_until_shutdown() const;
  inline void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 4;
  inline ::google::protobuf::uint32 seconds_until_shutdown() const;
  inline void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverSessionEstablished)
 private:
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();
  inline void set_has_gameserver_steam_id();
  inline void clear_has_gameserver_steam_id();
  inline void set_has_seconds_until_shutdown();
  inline void clear_has_seconds_until_shutdown();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gameserver_steam_id_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramGameserverSessionEstablished* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramNoSession : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramNoSession();
  virtual ~CMsgSteamDatagramNoSession();

  CMsgSteamDatagramNoSession(const CMsgSteamDatagramNoSession& from);

  inline CMsgSteamDatagramNoSession& operator=(const CMsgSteamDatagramNoSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramNoSession& default_instance();

  void Swap(CMsgSteamDatagramNoSession* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramNoSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramNoSession& from);
  void MergeFrom(const CMsgSteamDatagramNoSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 client_cookie = 7;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 7;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // optional fixed32 your_public_ip = 2;
  inline bool has_your_public_ip() const;
  inline void clear_your_public_ip();
  static const int kYourPublicIpFieldNumber = 2;
  inline ::google::protobuf::uint32 your_public_ip() const;
  inline void set_your_public_ip(::google::protobuf::uint32 value);

  // optional fixed32 server_time = 3;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 server_time() const;
  inline void set_server_time(::google::protobuf::uint32 value);

  // optional fixed64 challenge = 4;
  inline bool has_challenge() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 4;
  inline ::google::protobuf::uint64 challenge() const;
  inline void set_challenge(::google::protobuf::uint64 value);

  // optional uint32 seconds_until_shutdown = 5;
  inline bool has_seconds_until_shutdown() const;
  inline void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 5;
  inline ::google::protobuf::uint32 seconds_until_shutdown() const;
  inline void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramNoSession)
 private:
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();
  inline void set_has_your_public_ip();
  inline void clear_has_your_public_ip();
  inline void set_has_server_time();
  inline void clear_has_server_time();
  inline void set_has_challenge();
  inline void clear_has_challenge();
  inline void set_has_seconds_until_shutdown();
  inline void clear_has_seconds_until_shutdown();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 your_public_ip_;
  ::google::protobuf::uint64 challenge_;
  ::google::protobuf::uint32 server_time_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramNoSession* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDiagnostic : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramDiagnostic();
  virtual ~CMsgSteamDatagramDiagnostic();

  CMsgSteamDatagramDiagnostic(const CMsgSteamDatagramDiagnostic& from);

  inline CMsgSteamDatagramDiagnostic& operator=(const CMsgSteamDatagramDiagnostic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDiagnostic& default_instance();

  void Swap(CMsgSteamDatagramDiagnostic* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramDiagnostic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramDiagnostic& from);
  void MergeFrom(const CMsgSteamDatagramDiagnostic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 severity = 1;
  inline bool has_severity() const;
  inline void clear_severity();
  static const int kSeverityFieldNumber = 1;
  inline ::google::protobuf::uint32 severity() const;
  inline void set_severity(::google::protobuf::uint32 value);

  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDiagnostic)
 private:
  inline void set_has_severity();
  inline void clear_has_severity();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  ::google::protobuf::uint32 severity_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramDiagnostic* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDataCenterState_Server : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramDataCenterState_Server();
  virtual ~CMsgSteamDatagramDataCenterState_Server();

  CMsgSteamDatagramDataCenterState_Server(const CMsgSteamDatagramDataCenterState_Server& from);

  inline CMsgSteamDatagramDataCenterState_Server& operator=(const CMsgSteamDatagramDataCenterState_Server& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDataCenterState_Server& default_instance();

  void Swap(CMsgSteamDatagramDataCenterState_Server* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramDataCenterState_Server* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramDataCenterState_Server& from);
  void MergeFrom(const CMsgSteamDatagramDataCenterState_Server& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // optional uint32 ping_ms = 2;
  inline bool has_ping_ms() const;
  inline void clear_ping_ms();
  static const int kPingMsFieldNumber = 2;
  inline ::google::protobuf::uint32 ping_ms() const;
  inline void set_ping_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDataCenterState.Server)
 private:
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_ping_ms();
  inline void clear_has_ping_ms();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* address_;
  ::google::protobuf::uint32 ping_ms_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramDataCenterState_Server* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDataCenterState_DataCenter : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramDataCenterState_DataCenter();
  virtual ~CMsgSteamDatagramDataCenterState_DataCenter();

  CMsgSteamDatagramDataCenterState_DataCenter(const CMsgSteamDatagramDataCenterState_DataCenter& from);

  inline CMsgSteamDatagramDataCenterState_DataCenter& operator=(const CMsgSteamDatagramDataCenterState_DataCenter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDataCenterState_DataCenter& default_instance();

  void Swap(CMsgSteamDatagramDataCenterState_DataCenter* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramDataCenterState_DataCenter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramDataCenterState_DataCenter& from);
  void MergeFrom(const CMsgSteamDatagramDataCenterState_DataCenter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // repeated .CMsgSteamDatagramDataCenterState.Server server_sample = 2;
  inline int server_sample_size() const;
  inline void clear_server_sample();
  static const int kServerSampleFieldNumber = 2;
  inline const ::CMsgSteamDatagramDataCenterState_Server& server_sample(int index) const;
  inline ::CMsgSteamDatagramDataCenterState_Server* mutable_server_sample(int index);
  inline ::CMsgSteamDatagramDataCenterState_Server* add_server_sample();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >&
      server_sample() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >*
      mutable_server_sample();

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDataCenterState.DataCenter)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* code_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server > server_sample_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramDataCenterState_DataCenter* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDataCenterState : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramDataCenterState();
  virtual ~CMsgSteamDatagramDataCenterState();

  CMsgSteamDatagramDataCenterState(const CMsgSteamDatagramDataCenterState& from);

  inline CMsgSteamDatagramDataCenterState& operator=(const CMsgSteamDatagramDataCenterState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDataCenterState& default_instance();

  void Swap(CMsgSteamDatagramDataCenterState* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramDataCenterState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramDataCenterState& from);
  void MergeFrom(const CMsgSteamDatagramDataCenterState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramDataCenterState_Server Server;
  typedef CMsgSteamDatagramDataCenterState_DataCenter DataCenter;

  // accessors -------------------------------------------------------

  // repeated .CMsgSteamDatagramDataCenterState.DataCenter data_centers = 1;
  inline int data_centers_size() const;
  inline void clear_data_centers();
  static const int kDataCentersFieldNumber = 1;
  inline const ::CMsgSteamDatagramDataCenterState_DataCenter& data_centers(int index) const;
  inline ::CMsgSteamDatagramDataCenterState_DataCenter* mutable_data_centers(int index);
  inline ::CMsgSteamDatagramDataCenterState_DataCenter* add_data_centers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >&
      data_centers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >*
      mutable_data_centers();

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDataCenterState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter > data_centers_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramDataCenterState* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramLinkInstantaneousStats : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramLinkInstantaneousStats();
  virtual ~CMsgSteamDatagramLinkInstantaneousStats();

  CMsgSteamDatagramLinkInstantaneousStats(const CMsgSteamDatagramLinkInstantaneousStats& from);

  inline CMsgSteamDatagramLinkInstantaneousStats& operator=(const CMsgSteamDatagramLinkInstantaneousStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramLinkInstantaneousStats& default_instance();

  void Swap(CMsgSteamDatagramLinkInstantaneousStats* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramLinkInstantaneousStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramLinkInstantaneousStats& from);
  void MergeFrom(const CMsgSteamDatagramLinkInstantaneousStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 out_packets_per_sec_x10 = 1;
  inline bool has_out_packets_per_sec_x10() const;
  inline void clear_out_packets_per_sec_x10();
  static const int kOutPacketsPerSecX10FieldNumber = 1;
  inline ::google::protobuf::uint32 out_packets_per_sec_x10() const;
  inline void set_out_packets_per_sec_x10(::google::protobuf::uint32 value);

  // optional uint32 out_bytes_per_sec = 2;
  inline bool has_out_bytes_per_sec() const;
  inline void clear_out_bytes_per_sec();
  static const int kOutBytesPerSecFieldNumber = 2;
  inline ::google::protobuf::uint32 out_bytes_per_sec() const;
  inline void set_out_bytes_per_sec(::google::protobuf::uint32 value);

  // optional uint32 in_packets_per_sec_x10 = 3;
  inline bool has_in_packets_per_sec_x10() const;
  inline void clear_in_packets_per_sec_x10();
  static const int kInPacketsPerSecX10FieldNumber = 3;
  inline ::google::protobuf::uint32 in_packets_per_sec_x10() const;
  inline void set_in_packets_per_sec_x10(::google::protobuf::uint32 value);

  // optional uint32 in_bytes_per_sec = 4;
  inline bool has_in_bytes_per_sec() const;
  inline void clear_in_bytes_per_sec();
  static const int kInBytesPerSecFieldNumber = 4;
  inline ::google::protobuf::uint32 in_bytes_per_sec() const;
  inline void set_in_bytes_per_sec(::google::protobuf::uint32 value);

  // optional uint32 ping_ms = 5;
  inline bool has_ping_ms() const;
  inline void clear_ping_ms();
  static const int kPingMsFieldNumber = 5;
  inline ::google::protobuf::uint32 ping_ms() const;
  inline void set_ping_ms(::google::protobuf::uint32 value);

  // optional uint32 packets_dropped_pct = 6;
  inline bool has_packets_dropped_pct() const;
  inline void clear_packets_dropped_pct();
  static const int kPacketsDroppedPctFieldNumber = 6;
  inline ::google::protobuf::uint32 packets_dropped_pct() const;
  inline void set_packets_dropped_pct(::google::protobuf::uint32 value);

  // optional uint32 packets_weird_sequence_pct = 7;
  inline bool has_packets_weird_sequence_pct() const;
  inline void clear_packets_weird_sequence_pct();
  static const int kPacketsWeirdSequencePctFieldNumber = 7;
  inline ::google::protobuf::uint32 packets_weird_sequence_pct() const;
  inline void set_packets_weird_sequence_pct(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramLinkInstantaneousStats)
 private:
  inline void set_has_out_packets_per_sec_x10();
  inline void clear_has_out_packets_per_sec_x10();
  inline void set_has_out_bytes_per_sec();
  inline void clear_has_out_bytes_per_sec();
  inline void set_has_in_packets_per_sec_x10();
  inline void clear_has_in_packets_per_sec_x10();
  inline void set_has_in_bytes_per_sec();
  inline void clear_has_in_bytes_per_sec();
  inline void set_has_ping_ms();
  inline void clear_has_ping_ms();
  inline void set_has_packets_dropped_pct();
  inline void clear_has_packets_dropped_pct();
  inline void set_has_packets_weird_sequence_pct();
  inline void clear_has_packets_weird_sequence_pct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 out_packets_per_sec_x10_;
  ::google::protobuf::uint32 out_bytes_per_sec_;
  ::google::protobuf::uint32 in_packets_per_sec_x10_;
  ::google::protobuf::uint32 in_bytes_per_sec_;
  ::google::protobuf::uint32 ping_ms_;
  ::google::protobuf::uint32 packets_dropped_pct_;
  ::google::protobuf::uint32 packets_weird_sequence_pct_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramLinkInstantaneousStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramLinkLifetimeStats : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramLinkLifetimeStats();
  virtual ~CMsgSteamDatagramLinkLifetimeStats();

  CMsgSteamDatagramLinkLifetimeStats(const CMsgSteamDatagramLinkLifetimeStats& from);

  inline CMsgSteamDatagramLinkLifetimeStats& operator=(const CMsgSteamDatagramLinkLifetimeStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramLinkLifetimeStats& default_instance();

  void Swap(CMsgSteamDatagramLinkLifetimeStats* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramLinkLifetimeStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramLinkLifetimeStats& from);
  void MergeFrom(const CMsgSteamDatagramLinkLifetimeStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 packets_sent = 3;
  inline bool has_packets_sent() const;
  inline void clear_packets_sent();
  static const int kPacketsSentFieldNumber = 3;
  inline ::google::protobuf::uint64 packets_sent() const;
  inline void set_packets_sent(::google::protobuf::uint64 value);

  // optional uint64 kb_sent = 4;
  inline bool has_kb_sent() const;
  inline void clear_kb_sent();
  static const int kKbSentFieldNumber = 4;
  inline ::google::protobuf::uint64 kb_sent() const;
  inline void set_kb_sent(::google::protobuf::uint64 value);

  // optional uint64 packets_recv = 5;
  inline bool has_packets_recv() const;
  inline void clear_packets_recv();
  static const int kPacketsRecvFieldNumber = 5;
  inline ::google::protobuf::uint64 packets_recv() const;
  inline void set_packets_recv(::google::protobuf::uint64 value);

  // optional uint64 kb_recv = 6;
  inline bool has_kb_recv() const;
  inline void clear_kb_recv();
  static const int kKbRecvFieldNumber = 6;
  inline ::google::protobuf::uint64 kb_recv() const;
  inline void set_kb_recv(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_sequenced = 7;
  inline bool has_packets_recv_sequenced() const;
  inline void clear_packets_recv_sequenced();
  static const int kPacketsRecvSequencedFieldNumber = 7;
  inline ::google::protobuf::uint64 packets_recv_sequenced() const;
  inline void set_packets_recv_sequenced(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_dropped = 8;
  inline bool has_packets_recv_dropped() const;
  inline void clear_packets_recv_dropped();
  static const int kPacketsRecvDroppedFieldNumber = 8;
  inline ::google::protobuf::uint64 packets_recv_dropped() const;
  inline void set_packets_recv_dropped(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_out_of_order = 9;
  inline bool has_packets_recv_out_of_order() const;
  inline void clear_packets_recv_out_of_order();
  static const int kPacketsRecvOutOfOrderFieldNumber = 9;
  inline ::google::protobuf::uint64 packets_recv_out_of_order() const;
  inline void set_packets_recv_out_of_order(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_duplicate = 10;
  inline bool has_packets_recv_duplicate() const;
  inline void clear_packets_recv_duplicate();
  static const int kPacketsRecvDuplicateFieldNumber = 10;
  inline ::google::protobuf::uint64 packets_recv_duplicate() const;
  inline void set_packets_recv_duplicate(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_lurch = 11;
  inline bool has_packets_recv_lurch() const;
  inline void clear_packets_recv_lurch();
  static const int kPacketsRecvLurchFieldNumber = 11;
  inline ::google::protobuf::uint64 packets_recv_lurch() const;
  inline void set_packets_recv_lurch(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramLinkLifetimeStats)
 private:
  inline void set_has_packets_sent();
  inline void clear_has_packets_sent();
  inline void set_has_kb_sent();
  inline void clear_has_kb_sent();
  inline void set_has_packets_recv();
  inline void clear_has_packets_recv();
  inline void set_has_kb_recv();
  inline void clear_has_kb_recv();
  inline void set_has_packets_recv_sequenced();
  inline void clear_has_packets_recv_sequenced();
  inline void set_has_packets_recv_dropped();
  inline void clear_has_packets_recv_dropped();
  inline void set_has_packets_recv_out_of_order();
  inline void clear_has_packets_recv_out_of_order();
  inline void set_has_packets_recv_duplicate();
  inline void clear_has_packets_recv_duplicate();
  inline void set_has_packets_recv_lurch();
  inline void clear_has_packets_recv_lurch();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 packets_sent_;
  ::google::protobuf::uint64 kb_sent_;
  ::google::protobuf::uint64 packets_recv_;
  ::google::protobuf::uint64 kb_recv_;
  ::google::protobuf::uint64 packets_recv_sequenced_;
  ::google::protobuf::uint64 packets_recv_dropped_;
  ::google::protobuf::uint64 packets_recv_out_of_order_;
  ::google::protobuf::uint64 packets_recv_duplicate_;
  ::google::protobuf::uint64 packets_recv_lurch_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramLinkLifetimeStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionQuality : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramConnectionQuality();
  virtual ~CMsgSteamDatagramConnectionQuality();

  CMsgSteamDatagramConnectionQuality(const CMsgSteamDatagramConnectionQuality& from);

  inline CMsgSteamDatagramConnectionQuality& operator=(const CMsgSteamDatagramConnectionQuality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionQuality& default_instance();

  void Swap(CMsgSteamDatagramConnectionQuality* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionQuality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramConnectionQuality& from);
  void MergeFrom(const CMsgSteamDatagramConnectionQuality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramLinkInstantaneousStats instantaneous = 1;
  inline bool has_instantaneous() const;
  inline void clear_instantaneous();
  static const int kInstantaneousFieldNumber = 1;
  inline const ::CMsgSteamDatagramLinkInstantaneousStats& instantaneous() const;
  inline ::CMsgSteamDatagramLinkInstantaneousStats* mutable_instantaneous();
  inline ::CMsgSteamDatagramLinkInstantaneousStats* release_instantaneous();
  inline void set_allocated_instantaneous(::CMsgSteamDatagramLinkInstantaneousStats* instantaneous);

  // optional .CMsgSteamDatagramLinkLifetimeStats lifetime = 2;
  inline bool has_lifetime() const;
  inline void clear_lifetime();
  static const int kLifetimeFieldNumber = 2;
  inline const ::CMsgSteamDatagramLinkLifetimeStats& lifetime() const;
  inline ::CMsgSteamDatagramLinkLifetimeStats* mutable_lifetime();
  inline ::CMsgSteamDatagramLinkLifetimeStats* release_lifetime();
  inline void set_allocated_lifetime(::CMsgSteamDatagramLinkLifetimeStats* lifetime);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionQuality)
 private:
  inline void set_has_instantaneous();
  inline void clear_has_instantaneous();
  inline void set_has_lifetime();
  inline void clear_has_lifetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgSteamDatagramLinkInstantaneousStats* instantaneous_;
  ::CMsgSteamDatagramLinkLifetimeStats* lifetime_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramConnectionQuality* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsClientToRouter : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramConnectionStatsClientToRouter();
  virtual ~CMsgSteamDatagramConnectionStatsClientToRouter();

  CMsgSteamDatagramConnectionStatsClientToRouter(const CMsgSteamDatagramConnectionStatsClientToRouter& from);

  inline CMsgSteamDatagramConnectionStatsClientToRouter& operator=(const CMsgSteamDatagramConnectionStatsClientToRouter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionStatsClientToRouter& default_instance();

  void Swap(CMsgSteamDatagramConnectionStatsClientToRouter* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsClientToRouter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramConnectionStatsClientToRouter& from);
  void MergeFrom(const CMsgSteamDatagramConnectionStatsClientToRouter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramConnectionQuality c2r = 1;
  inline bool has_c2r() const;
  inline void clear_c2r();
  static const int kC2RFieldNumber = 1;
  inline const ::CMsgSteamDatagramConnectionQuality& c2r() const;
  inline ::CMsgSteamDatagramConnectionQuality* mutable_c2r();
  inline ::CMsgSteamDatagramConnectionQuality* release_c2r();
  inline void set_allocated_c2r(::CMsgSteamDatagramConnectionQuality* c2r);

  // optional .CMsgSteamDatagramConnectionQuality c2s = 2;
  inline bool has_c2s() const;
  inline void clear_c2s();
  static const int kC2SFieldNumber = 2;
  inline const ::CMsgSteamDatagramConnectionQuality& c2s() const;
  inline ::CMsgSteamDatagramConnectionQuality* mutable_c2s();
  inline ::CMsgSteamDatagramConnectionQuality* release_c2s();
  inline void set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s);

  // optional fixed32 client_timestamp = 3;
  inline bool has_client_timestamp() const;
  inline void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 client_timestamp() const;
  inline void set_client_timestamp(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 8;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 8;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // optional uint32 seq_num_c2r = 9;
  inline bool has_seq_num_c2r() const;
  inline void clear_seq_num_c2r();
  static const int kSeqNumC2RFieldNumber = 9;
  inline ::google::protobuf::uint32 seq_num_c2r() const;
  inline void set_seq_num_c2r(::google::protobuf::uint32 value);

  // optional uint32 seq_num_c2s = 10;
  inline bool has_seq_num_c2s() const;
  inline void clear_seq_num_c2s();
  static const int kSeqNumC2SFieldNumber = 10;
  inline ::google::protobuf::uint32 seq_num_c2s() const;
  inline void set_seq_num_c2s(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsClientToRouter)
 private:
  inline void set_has_c2r();
  inline void clear_has_c2r();
  inline void set_has_c2s();
  inline void clear_has_c2s();
  inline void set_has_client_timestamp();
  inline void clear_has_client_timestamp();
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();
  inline void set_has_seq_num_c2r();
  inline void clear_has_seq_num_c2r();
  inline void set_has_seq_num_c2s();
  inline void clear_has_seq_num_c2s();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgSteamDatagramConnectionQuality* c2r_;
  ::CMsgSteamDatagramConnectionQuality* c2s_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 seq_num_c2r_;
  ::google::protobuf::uint32 seq_num_c2s_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramConnectionStatsClientToRouter* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsRouterToClient : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramConnectionStatsRouterToClient();
  virtual ~CMsgSteamDatagramConnectionStatsRouterToClient();

  CMsgSteamDatagramConnectionStatsRouterToClient(const CMsgSteamDatagramConnectionStatsRouterToClient& from);

  inline CMsgSteamDatagramConnectionStatsRouterToClient& operator=(const CMsgSteamDatagramConnectionStatsRouterToClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionStatsRouterToClient& default_instance();

  void Swap(CMsgSteamDatagramConnectionStatsRouterToClient* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsRouterToClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramConnectionStatsRouterToClient& from);
  void MergeFrom(const CMsgSteamDatagramConnectionStatsRouterToClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramConnectionQuality r2c = 1;
  inline bool has_r2c() const;
  inline void clear_r2c();
  static const int kR2CFieldNumber = 1;
  inline const ::CMsgSteamDatagramConnectionQuality& r2c() const;
  inline ::CMsgSteamDatagramConnectionQuality* mutable_r2c();
  inline ::CMsgSteamDatagramConnectionQuality* release_r2c();
  inline void set_allocated_r2c(::CMsgSteamDatagramConnectionQuality* r2c);

  // optional .CMsgSteamDatagramConnectionQuality s2c = 2;
  inline bool has_s2c() const;
  inline void clear_s2c();
  static const int kS2CFieldNumber = 2;
  inline const ::CMsgSteamDatagramConnectionQuality& s2c() const;
  inline ::CMsgSteamDatagramConnectionQuality* mutable_s2c();
  inline ::CMsgSteamDatagramConnectionQuality* release_s2c();
  inline void set_allocated_s2c(::CMsgSteamDatagramConnectionQuality* s2c);

  // optional fixed32 client_timestamp_from_router = 3;
  inline bool has_client_timestamp_from_router() const;
  inline void clear_client_timestamp_from_router();
  static const int kClientTimestampFromRouterFieldNumber = 3;
  inline ::google::protobuf::uint32 client_timestamp_from_router() const;
  inline void set_client_timestamp_from_router(::google::protobuf::uint32 value);

  // optional fixed32 client_timestamp_from_server = 4;
  inline bool has_client_timestamp_from_server() const;
  inline void clear_client_timestamp_from_server();
  static const int kClientTimestampFromServerFieldNumber = 4;
  inline ::google::protobuf::uint32 client_timestamp_from_server() const;
  inline void set_client_timestamp_from_server(::google::protobuf::uint32 value);

  // optional uint32 router_gameserver_latency = 5;
  inline bool has_router_gameserver_latency() const;
  inline void clear_router_gameserver_latency();
  static const int kRouterGameserverLatencyFieldNumber = 5;
  inline ::google::protobuf::uint32 router_gameserver_latency() const;
  inline void set_router_gameserver_latency(::google::protobuf::uint32 value);

  // optional uint32 seconds_until_shutdown = 6;
  inline bool has_seconds_until_shutdown() const;
  inline void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 6;
  inline ::google::protobuf::uint32 seconds_until_shutdown() const;
  inline void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 7;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 7;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // optional uint32 seq_num_r2c = 8;
  inline bool has_seq_num_r2c() const;
  inline void clear_seq_num_r2c();
  static const int kSeqNumR2CFieldNumber = 8;
  inline ::google::protobuf::uint32 seq_num_r2c() const;
  inline void set_seq_num_r2c(::google::protobuf::uint32 value);

  // optional uint32 seq_num_s2c = 9;
  inline bool has_seq_num_s2c() const;
  inline void clear_seq_num_s2c();
  static const int kSeqNumS2CFieldNumber = 9;
  inline ::google::protobuf::uint32 seq_num_s2c() const;
  inline void set_seq_num_s2c(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsRouterToClient)
 private:
  inline void set_has_r2c();
  inline void clear_has_r2c();
  inline void set_has_s2c();
  inline void clear_has_s2c();
  inline void set_has_client_timestamp_from_router();
  inline void clear_has_client_timestamp_from_router();
  inline void set_has_client_timestamp_from_server();
  inline void clear_has_client_timestamp_from_server();
  inline void set_has_router_gameserver_latency();
  inline void clear_has_router_gameserver_latency();
  inline void set_has_seconds_until_shutdown();
  inline void clear_has_seconds_until_shutdown();
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();
  inline void set_has_seq_num_r2c();
  inline void clear_has_seq_num_r2c();
  inline void set_has_seq_num_s2c();
  inline void clear_has_seq_num_s2c();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgSteamDatagramConnectionQuality* r2c_;
  ::CMsgSteamDatagramConnectionQuality* s2c_;
  ::google::protobuf::uint32 client_timestamp_from_router_;
  ::google::protobuf::uint32 client_timestamp_from_server_;
  ::google::protobuf::uint32 router_gameserver_latency_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 seq_num_r2c_;
  ::google::protobuf::uint32 seq_num_s2c_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramConnectionStatsRouterToClient* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsRouterToServer : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramConnectionStatsRouterToServer();
  virtual ~CMsgSteamDatagramConnectionStatsRouterToServer();

  CMsgSteamDatagramConnectionStatsRouterToServer(const CMsgSteamDatagramConnectionStatsRouterToServer& from);

  inline CMsgSteamDatagramConnectionStatsRouterToServer& operator=(const CMsgSteamDatagramConnectionStatsRouterToServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionStatsRouterToServer& default_instance();

  void Swap(CMsgSteamDatagramConnectionStatsRouterToServer* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsRouterToServer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramConnectionStatsRouterToServer& from);
  void MergeFrom(const CMsgSteamDatagramConnectionStatsRouterToServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramConnectionQuality c2s = 2;
  inline bool has_c2s() const;
  inline void clear_c2s();
  static const int kC2SFieldNumber = 2;
  inline const ::CMsgSteamDatagramConnectionQuality& c2s() const;
  inline ::CMsgSteamDatagramConnectionQuality* mutable_c2s();
  inline ::CMsgSteamDatagramConnectionQuality* release_c2s();
  inline void set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s);

  // optional fixed32 client_timestamp = 3;
  inline bool has_client_timestamp() const;
  inline void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 client_timestamp() const;
  inline void set_client_timestamp(::google::protobuf::uint32 value);

  // optional fixed32 router_timestamp = 4;
  inline bool has_router_timestamp() const;
  inline void clear_router_timestamp();
  static const int kRouterTimestampFieldNumber = 4;
  inline ::google::protobuf::uint32 router_timestamp() const;
  inline void set_router_timestamp(::google::protobuf::uint32 value);

  // optional uint32 seq_num_c2s = 6;
  inline bool has_seq_num_c2s() const;
  inline void clear_seq_num_c2s();
  static const int kSeqNumC2SFieldNumber = 6;
  inline ::google::protobuf::uint32 seq_num_c2s() const;
  inline void set_seq_num_c2s(::google::protobuf::uint32 value);

  // optional fixed64 client_steam_id = 7;
  inline bool has_client_steam_id() const;
  inline void clear_client_steam_id();
  static const int kClientSteamIdFieldNumber = 7;
  inline ::google::protobuf::uint64 client_steam_id() const;
  inline void set_client_steam_id(::google::protobuf::uint64 value);

  // optional uint32 client_session_id = 8;
  inline bool has_client_session_id() const;
  inline void clear_client_session_id();
  static const int kClientSessionIdFieldNumber = 8;
  inline ::google::protobuf::uint32 client_session_id() const;
  inline void set_client_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsRouterToServer)
 private:
  inline void set_has_c2s();
  inline void clear_has_c2s();
  inline void set_has_client_timestamp();
  inline void clear_has_client_timestamp();
  inline void set_has_router_timestamp();
  inline void clear_has_router_timestamp();
  inline void set_has_seq_num_c2s();
  inline void clear_has_seq_num_c2s();
  inline void set_has_client_steam_id();
  inline void clear_has_client_steam_id();
  inline void set_has_client_session_id();
  inline void clear_has_client_session_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgSteamDatagramConnectionQuality* c2s_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 router_timestamp_;
  ::google::protobuf::uint64 client_steam_id_;
  ::google::protobuf::uint32 seq_num_c2s_;
  ::google::protobuf::uint32 client_session_id_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramConnectionStatsRouterToServer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleRequest : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramClientPingSampleRequest();
  virtual ~CMsgSteamDatagramClientPingSampleRequest();

  CMsgSteamDatagramClientPingSampleRequest(const CMsgSteamDatagramClientPingSampleRequest& from);

  inline CMsgSteamDatagramClientPingSampleRequest& operator=(const CMsgSteamDatagramClientPingSampleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientPingSampleRequest& default_instance();

  void Swap(CMsgSteamDatagramClientPingSampleRequest* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramClientPingSampleRequest& from);
  void MergeFrom(const CMsgSteamDatagramClientPingSampleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 client_cookie = 1;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleRequest)
 private:
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_cookie_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramClientPingSampleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply_RoutingCluster : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramClientPingSampleReply_RoutingCluster();
  virtual ~CMsgSteamDatagramClientPingSampleReply_RoutingCluster();

  CMsgSteamDatagramClientPingSampleReply_RoutingCluster(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from);

  inline CMsgSteamDatagramClientPingSampleReply_RoutingCluster& operator=(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& default_instance();

  void Swap(CMsgSteamDatagramClientPingSampleReply_RoutingCluster* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleReply_RoutingCluster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from);
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 front_ping_ms = 2;
  inline bool has_front_ping_ms() const;
  inline void clear_front_ping_ms();
  static const int kFrontPingMsFieldNumber = 2;
  inline ::google::protobuf::uint32 front_ping_ms() const;
  inline void set_front_ping_ms(::google::protobuf::uint32 value);

  // optional uint32 e2e_ping_ms = 3;
  inline bool has_e2e_ping_ms() const;
  inline void clear_e2e_ping_ms();
  static const int kE2EPingMsFieldNumber = 3;
  inline ::google::protobuf::uint32 e2e_ping_ms() const;
  inline void set_e2e_ping_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply.RoutingCluster)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_front_ping_ms();
  inline void clear_has_front_ping_ms();
  inline void set_has_e2e_ping_ms();
  inline void clear_has_e2e_ping_ms();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 front_ping_ms_;
  ::google::protobuf::uint32 e2e_ping_ms_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramClientPingSampleReply_RoutingCluster* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramClientPingSampleReply();
  virtual ~CMsgSteamDatagramClientPingSampleReply();

  CMsgSteamDatagramClientPingSampleReply(const CMsgSteamDatagramClientPingSampleReply& from);

  inline CMsgSteamDatagramClientPingSampleReply& operator=(const CMsgSteamDatagramClientPingSampleReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientPingSampleReply& default_instance();

  void Swap(CMsgSteamDatagramClientPingSampleReply* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply& from);
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramClientPingSampleReply_RoutingCluster RoutingCluster;

  // accessors -------------------------------------------------------

  // optional fixed32 client_cookie = 1;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // repeated .CMsgSteamDatagramClientPingSampleReply.RoutingCluster routing_clusters = 2;
  inline int routing_clusters_size() const;
  inline void clear_routing_clusters();
  static const int kRoutingClustersFieldNumber = 2;
  inline const ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster& routing_clusters(int index) const;
  inline ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* mutable_routing_clusters(int index);
  inline ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* add_routing_clusters();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >&
      routing_clusters() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >*
      mutable_routing_clusters();

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply)
 private:
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster > routing_clusters_;
  ::google::protobuf::uint32 client_cookie_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramClientPingSampleReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientSwitchedPrimary_RouterQuality : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality();
  virtual ~CMsgSteamDatagramClientSwitchedPrimary_RouterQuality();

  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);

  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& operator=(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& default_instance();

  void Swap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);
  void MergeFrom(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 front_ping = 2;
  inline bool has_front_ping() const;
  inline void clear_front_ping();
  static const int kFrontPingFieldNumber = 2;
  inline ::google::protobuf::uint32 front_ping() const;
  inline void set_front_ping(::google::protobuf::uint32 value);

  // optional uint32 back_ping = 3;
  inline bool has_back_ping() const;
  inline void clear_back_ping();
  static const int kBackPingFieldNumber = 3;
  inline ::google::protobuf::uint32 back_ping() const;
  inline void set_back_ping(::google::protobuf::uint32 value);

  // optional uint32 seconds_until_down = 4;
  inline bool has_seconds_until_down() const;
  inline void clear_seconds_until_down();
  static const int kSecondsUntilDownFieldNumber = 4;
  inline ::google::protobuf::uint32 seconds_until_down() const;
  inline void set_seconds_until_down(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_front_ping();
  inline void clear_has_front_ping();
  inline void set_has_back_ping();
  inline void clear_has_back_ping();
  inline void set_has_seconds_until_down();
  inline void clear_has_seconds_until_down();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 front_ping_;
  ::google::protobuf::uint32 back_ping_;
  ::google::protobuf::uint32 seconds_until_down_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientSwitchedPrimary : public ::google::protobuf::Message {
 public:
  CMsgSteamDatagramClientSwitchedPrimary();
  virtual ~CMsgSteamDatagramClientSwitchedPrimary();

  CMsgSteamDatagramClientSwitchedPrimary(const CMsgSteamDatagramClientSwitchedPrimary& from);

  inline CMsgSteamDatagramClientSwitchedPrimary& operator=(const CMsgSteamDatagramClientSwitchedPrimary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientSwitchedPrimary& default_instance();

  void Swap(CMsgSteamDatagramClientSwitchedPrimary* other);

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientSwitchedPrimary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSteamDatagramClientSwitchedPrimary& from);
  void MergeFrom(const CMsgSteamDatagramClientSwitchedPrimary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramClientSwitchedPrimary_RouterQuality RouterQuality;

  // accessors -------------------------------------------------------

  // optional fixed32 client_cookie = 1;
  inline bool has_client_cookie() const;
  inline void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  inline ::google::protobuf::uint32 client_cookie() const;
  inline void set_client_cookie(::google::protobuf::uint32 value);

  // optional fixed32 from_ip = 2;
  inline bool has_from_ip() const;
  inline void clear_from_ip();
  static const int kFromIpFieldNumber = 2;
  inline ::google::protobuf::uint32 from_ip() const;
  inline void set_from_ip(::google::protobuf::uint32 value);

  // optional uint32 from_port = 3;
  inline bool has_from_port() const;
  inline void clear_from_port();
  static const int kFromPortFieldNumber = 3;
  inline ::google::protobuf::uint32 from_port() const;
  inline void set_from_port(::google::protobuf::uint32 value);

  // optional fixed32 from_router_cluster = 4;
  inline bool has_from_router_cluster() const;
  inline void clear_from_router_cluster();
  static const int kFromRouterClusterFieldNumber = 4;
  inline ::google::protobuf::uint32 from_router_cluster() const;
  inline void set_from_router_cluster(::google::protobuf::uint32 value);

  // optional uint32 from_active_time = 5;
  inline bool has_from_active_time() const;
  inline void clear_from_active_time();
  static const int kFromActiveTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 from_active_time() const;
  inline void set_from_active_time(::google::protobuf::uint32 value);

  // optional uint32 from_active_packets_recv = 6;
  inline bool has_from_active_packets_recv() const;
  inline void clear_from_active_packets_recv();
  static const int kFromActivePacketsRecvFieldNumber = 6;
  inline ::google::protobuf::uint32 from_active_packets_recv() const;
  inline void set_from_active_packets_recv(::google::protobuf::uint32 value);

  // optional string from_dropped_reason = 7;
  inline bool has_from_dropped_reason() const;
  inline void clear_from_dropped_reason();
  static const int kFromDroppedReasonFieldNumber = 7;
  inline const ::std::string& from_dropped_reason() const;
  inline void set_from_dropped_reason(const ::std::string& value);
  inline void set_from_dropped_reason(const char* value);
  inline void set_from_dropped_reason(const char* value, size_t size);
  inline ::std::string* mutable_from_dropped_reason();
  inline ::std::string* release_from_dropped_reason();
  inline void set_allocated_from_dropped_reason(::std::string* from_dropped_reason);

  // optional uint32 gap_ms = 8;
  inline bool has_gap_ms() const;
  inline void clear_gap_ms();
  static const int kGapMsFieldNumber = 8;
  inline ::google::protobuf::uint32 gap_ms() const;
  inline void set_gap_ms(::google::protobuf::uint32 value);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_now = 9;
  inline bool has_from_quality_now() const;
  inline void clear_from_quality_now();
  static const int kFromQualityNowFieldNumber = 9;
  inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from_quality_now() const;
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_from_quality_now();
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_from_quality_now();
  inline void set_allocated_from_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_now);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_now = 10;
  inline bool has_to_quality_now() const;
  inline void clear_to_quality_now();
  static const int kToQualityNowFieldNumber = 10;
  inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& to_quality_now() const;
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_to_quality_now();
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_to_quality_now();
  inline void set_allocated_to_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_now);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_then = 11;
  inline bool has_from_quality_then() const;
  inline void clear_from_quality_then();
  static const int kFromQualityThenFieldNumber = 11;
  inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from_quality_then() const;
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_from_quality_then();
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_from_quality_then();
  inline void set_allocated_from_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_then);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_then = 12;
  inline bool has_to_quality_then() const;
  inline void clear_to_quality_then();
  static const int kToQualityThenFieldNumber = 12;
  inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& to_quality_then() const;
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_to_quality_then();
  inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_to_quality_then();
  inline void set_allocated_to_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_then);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientSwitchedPrimary)
 private:
  inline void set_has_client_cookie();
  inline void clear_has_client_cookie();
  inline void set_has_from_ip();
  inline void clear_has_from_ip();
  inline void set_has_from_port();
  inline void clear_has_from_port();
  inline void set_has_from_router_cluster();
  inline void clear_has_from_router_cluster();
  inline void set_has_from_active_time();
  inline void clear_has_from_active_time();
  inline void set_has_from_active_packets_recv();
  inline void clear_has_from_active_packets_recv();
  inline void set_has_from_dropped_reason();
  inline void clear_has_from_dropped_reason();
  inline void set_has_gap_ms();
  inline void clear_has_gap_ms();
  inline void set_has_from_quality_now();
  inline void clear_has_from_quality_now();
  inline void set_has_to_quality_now();
  inline void clear_has_to_quality_now();
  inline void set_has_from_quality_then();
  inline void clear_has_from_quality_then();
  inline void set_has_to_quality_then();
  inline void clear_has_to_quality_then();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 from_ip_;
  ::google::protobuf::uint32 from_port_;
  ::google::protobuf::uint32 from_router_cluster_;
  ::google::protobuf::uint32 from_active_time_;
  ::google::protobuf::uint32 from_active_packets_recv_;
  ::std::string* from_dropped_reason_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_now_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_now_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_then_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_then_;
  ::google::protobuf::uint32 gap_ms_;
  friend void  protobuf_AddDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_AssignDesc_steamdatagram_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_steamdatagram_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSteamDatagramClientSwitchedPrimary* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgSteamDatagramRouterPingReply

// optional fixed32 client_timestamp = 1;
inline bool CMsgSteamDatagramRouterPingReply::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramRouterPingReply::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.client_timestamp)
}

// repeated fixed32 latency_datacenter_ids = 2 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::latency_datacenter_ids_size() const {
  return latency_datacenter_ids_.size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_datacenter_ids() {
  latency_datacenter_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::latency_datacenter_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return latency_datacenter_ids_.Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_datacenter_ids(int index, ::google::protobuf::uint32 value) {
  latency_datacenter_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_datacenter_ids(::google::protobuf::uint32 value) {
  latency_datacenter_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSteamDatagramRouterPingReply::latency_datacenter_ids() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return latency_datacenter_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSteamDatagramRouterPingReply::mutable_latency_datacenter_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return &latency_datacenter_ids_;
}

// repeated uint32 latency_ping_ms = 3 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::latency_ping_ms_size() const {
  return latency_ping_ms_.size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_ping_ms() {
  latency_ping_ms_.Clear();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::latency_ping_ms(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return latency_ping_ms_.Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_ping_ms(int index, ::google::protobuf::uint32 value) {
  latency_ping_ms_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_ping_ms(::google::protobuf::uint32 value) {
  latency_ping_ms_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSteamDatagramRouterPingReply::latency_ping_ms() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return latency_ping_ms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSteamDatagramRouterPingReply::mutable_latency_ping_ms() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return &latency_ping_ms_;
}

// optional fixed32 your_public_ip = 4;
inline bool CMsgSteamDatagramRouterPingReply::has_your_public_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_your_public_ip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_your_public_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_your_public_ip() {
  your_public_ip_ = 0u;
  clear_has_your_public_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::your_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.your_public_ip)
  return your_public_ip_;
}
inline void CMsgSteamDatagramRouterPingReply::set_your_public_ip(::google::protobuf::uint32 value) {
  set_has_your_public_ip();
  your_public_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.your_public_ip)
}

// optional fixed32 server_time = 5;
inline bool CMsgSteamDatagramRouterPingReply::has_server_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_server_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_server_time() {
  server_time_ = 0u;
  clear_has_server_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::server_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.server_time)
  return server_time_;
}
inline void CMsgSteamDatagramRouterPingReply::set_server_time(::google::protobuf::uint32 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.server_time)
}

// optional fixed64 challenge = 6;
inline bool CMsgSteamDatagramRouterPingReply::has_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_challenge() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_challenge() {
  challenge_ = GOOGLE_ULONGLONG(0);
  clear_has_challenge();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramRouterPingReply::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.challenge)
  return challenge_;
}
inline void CMsgSteamDatagramRouterPingReply::set_challenge(::google::protobuf::uint64 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.challenge)
}

// optional uint32 seconds_until_shutdown = 7;
inline bool CMsgSteamDatagramRouterPingReply::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramRouterPingReply::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.seconds_until_shutdown)
}

// optional fixed32 client_cookie = 8;
inline bool CMsgSteamDatagramRouterPingReply::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramRouterPingReply::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.client_cookie)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverPing

// optional uint32 client_session = 1;
inline bool CMsgSteamDatagramGameserverPing::has_client_session() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_client_session() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_client_session() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameserverPing::clear_client_session() {
  client_session_ = 0u;
  clear_has_client_session();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::client_session() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.client_session)
  return client_session_;
}
inline void CMsgSteamDatagramGameserverPing::set_client_session(::google::protobuf::uint32 value) {
  set_has_client_session();
  client_session_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.client_session)
}

// optional fixed64 client_steam_id = 2;
inline bool CMsgSteamDatagramGameserverPing::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_client_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_client_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameserverPing::clear_client_steam_id() {
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameserverPing::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.client_steam_id)
  return client_steam_id_;
}
inline void CMsgSteamDatagramGameserverPing::set_client_steam_id(::google::protobuf::uint64 value) {
  set_has_client_steam_id();
  client_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.client_steam_id)
}

// optional fixed32 client_timestamp = 3;
inline bool CMsgSteamDatagramGameserverPing::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameserverPing::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramGameserverPing::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.client_timestamp)
}

// optional fixed32 router_timestamp = 4;
inline bool CMsgSteamDatagramGameserverPing::has_router_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_router_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_router_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameserverPing::clear_router_timestamp() {
  router_timestamp_ = 0u;
  clear_has_router_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::router_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.router_timestamp)
  return router_timestamp_;
}
inline void CMsgSteamDatagramGameserverPing::set_router_timestamp(::google::protobuf::uint32 value) {
  set_has_router_timestamp();
  router_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.router_timestamp)
}

// optional uint32 router_gameserver_latency = 5;
inline bool CMsgSteamDatagramGameserverPing::has_router_gameserver_latency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_router_gameserver_latency() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_router_gameserver_latency() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramGameserverPing::clear_router_gameserver_latency() {
  router_gameserver_latency_ = 0u;
  clear_has_router_gameserver_latency();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::router_gameserver_latency() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.router_gameserver_latency)
  return router_gameserver_latency_;
}
inline void CMsgSteamDatagramGameserverPing::set_router_gameserver_latency(::google::protobuf::uint32 value) {
  set_has_router_gameserver_latency();
  router_gameserver_latency_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.router_gameserver_latency)
}

// optional uint32 seq_number_router = 6;
inline bool CMsgSteamDatagramGameserverPing::has_seq_number_router() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_seq_number_router() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_seq_number_router() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramGameserverPing::clear_seq_number_router() {
  seq_number_router_ = 0u;
  clear_has_seq_number_router();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::seq_number_router() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.seq_number_router)
  return seq_number_router_;
}
inline void CMsgSteamDatagramGameserverPing::set_seq_number_router(::google::protobuf::uint32 value) {
  set_has_seq_number_router();
  seq_number_router_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.seq_number_router)
}

// optional uint32 seq_number_e2e = 7;
inline bool CMsgSteamDatagramGameserverPing::has_seq_number_e2e() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_seq_number_e2e() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_seq_number_e2e() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramGameserverPing::clear_seq_number_e2e() {
  seq_number_e2e_ = 0u;
  clear_has_seq_number_e2e();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::seq_number_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.seq_number_e2e)
  return seq_number_e2e_;
}
inline void CMsgSteamDatagramGameserverPing::set_seq_number_e2e(::google::protobuf::uint32 value) {
  set_has_seq_number_e2e();
  seq_number_e2e_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.seq_number_e2e)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameServerAuthTicket_ExtraField

// optional string name = 1;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgSteamDatagramGameServerAuthTicket_ExtraField::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
  return *name_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
  return name_;
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}

// optional string string_value = 2;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_string_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_string_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_string_value() {
  if (string_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_->clear();
  }
  clear_has_string_value();
}
inline const ::std::string& CMsgSteamDatagramGameServerAuthTicket_ExtraField::string_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
  return *string_value_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_string_value(const ::std::string& value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_string_value(const char* value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::mutable_string_value() {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
  return string_value_;
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::release_string_value() {
  clear_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = string_value_;
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_allocated_string_value(::std::string* string_value) {
  if (string_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_value_;
  }
  if (string_value) {
    set_has_string_value();
    string_value_ = string_value;
  } else {
    clear_has_string_value();
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}

// optional sint32 int32_value = 3;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_int32_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_int32_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_int32_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_int32_value() {
  int32_value_ = 0;
  clear_has_int32_value();
}
inline ::google::protobuf::int32 CMsgSteamDatagramGameServerAuthTicket_ExtraField::int32_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.int32_value)
  return int32_value_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_int32_value(::google::protobuf::int32 value) {
  set_has_int32_value();
  int32_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.int32_value)
}

// optional fixed32 fixed32_value = 4;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_fixed32_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_fixed32_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_fixed32_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_fixed32_value() {
  fixed32_value_ = 0u;
  clear_has_fixed32_value();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket_ExtraField::fixed32_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed32_value)
  return fixed32_value_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_fixed32_value(::google::protobuf::uint32 value) {
  set_has_fixed32_value();
  fixed32_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed32_value)
}

// optional fixed64 fixed64_value = 5;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_fixed64_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_fixed64_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_fixed64_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_fixed64_value() {
  fixed64_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fixed64_value();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket_ExtraField::fixed64_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed64_value)
  return fixed64_value_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_fixed64_value(::google::protobuf::uint64 value) {
  set_has_fixed64_value();
  fixed64_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed64_value)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameServerAuthTicket

// optional fixed32 time_expiry = 1;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_time_expiry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_time_expiry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_time_expiry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_time_expiry() {
  time_expiry_ = 0u;
  clear_has_time_expiry();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket::time_expiry() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.time_expiry)
  return time_expiry_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_time_expiry(::google::protobuf::uint32 value) {
  set_has_time_expiry();
  time_expiry_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.time_expiry)
}

// optional fixed64 authorized_steam_id = 2;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_authorized_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_authorized_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_authorized_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_authorized_steam_id() {
  authorized_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_authorized_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket::authorized_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.authorized_steam_id)
  return authorized_steam_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_authorized_steam_id(::google::protobuf::uint64 value) {
  set_has_authorized_steam_id();
  authorized_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.authorized_steam_id)
}

// optional fixed32 authorized_public_ip = 3;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_authorized_public_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_authorized_public_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_authorized_public_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_authorized_public_ip() {
  authorized_public_ip_ = 0u;
  clear_has_authorized_public_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket::authorized_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.authorized_public_ip)
  return authorized_public_ip_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_authorized_public_ip(::google::protobuf::uint32 value) {
  set_has_authorized_public_ip();
  authorized_public_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.authorized_public_ip)
}

// optional fixed64 gameserver_steam_id = 4;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_gameserver_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_gameserver_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_gameserver_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_gameserver_steam_id() {
  gameserver_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_gameserver_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket::gameserver_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.gameserver_steam_id)
  return gameserver_steam_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_gameserver_steam_id(::google::protobuf::uint64 value) {
  set_has_gameserver_steam_id();
  gameserver_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.gameserver_steam_id)
}

// optional fixed64 gameserver_net_id = 5;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_gameserver_net_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_gameserver_net_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_gameserver_net_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_gameserver_net_id() {
  gameserver_net_id_ = GOOGLE_ULONGLONG(0);
  clear_has_gameserver_net_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket::gameserver_net_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.gameserver_net_id)
  return gameserver_net_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_gameserver_net_id(::google::protobuf::uint64 value) {
  set_has_gameserver_net_id();
  gameserver_net_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.gameserver_net_id)
}

// optional bytes signature = 6;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_signature() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_signature() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_signature() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_signature() {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& CMsgSteamDatagramGameServerAuthTicket::signature() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.signature)
  return *signature_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.signature)
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramGameServerAuthTicket.signature)
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_signature(const void* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramGameServerAuthTicket.signature)
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.signature)
  return signature_;
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameServerAuthTicket.signature)
}

// optional uint32 app_id = 7;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_app_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_app_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.app_id)
  return app_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.app_id)
}

// repeated .CMsgSteamDatagramGameServerAuthTicket.ExtraField extra_fields = 8;
inline int CMsgSteamDatagramGameServerAuthTicket::extra_fields_size() const {
  return extra_fields_.size();
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_extra_fields() {
  extra_fields_.Clear();
}
inline const ::CMsgSteamDatagramGameServerAuthTicket_ExtraField& CMsgSteamDatagramGameServerAuthTicket::extra_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_.Get(index);
}
inline ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* CMsgSteamDatagramGameServerAuthTicket::mutable_extra_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_.Mutable(index);
}
inline ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* CMsgSteamDatagramGameServerAuthTicket::add_extra_fields() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >&
CMsgSteamDatagramGameServerAuthTicket::extra_fields() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >*
CMsgSteamDatagramGameServerAuthTicket::mutable_extra_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return &extra_fields_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverSessionRequest

// optional .CMsgSteamDatagramGameServerAuthTicket ticket = 1;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_ticket() {
  if (ticket_ != NULL) ticket_->::CMsgSteamDatagramGameServerAuthTicket::Clear();
  clear_has_ticket();
}
inline const ::CMsgSteamDatagramGameServerAuthTicket& CMsgSteamDatagramGameserverSessionRequest::ticket() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.ticket)
  return ticket_ != NULL ? *ticket_ : *default_instance_->ticket_;
}
inline ::CMsgSteamDatagramGameServerAuthTicket* CMsgSteamDatagramGameserverSessionRequest::mutable_ticket() {
  set_has_ticket();
  if (ticket_ == NULL) ticket_ = new ::CMsgSteamDatagramGameServerAuthTicket;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionRequest.ticket)
  return ticket_;
}
inline ::CMsgSteamDatagramGameServerAuthTicket* CMsgSteamDatagramGameserverSessionRequest::release_ticket() {
  clear_has_ticket();
  ::CMsgSteamDatagramGameServerAuthTicket* temp = ticket_;
  ticket_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_allocated_ticket(::CMsgSteamDatagramGameServerAuthTicket* ticket) {
  delete ticket_;
  ticket_ = ticket;
  if (ticket) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionRequest.ticket)
}

// optional fixed32 challenge_time = 3;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_challenge_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_challenge_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_challenge_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_challenge_time() {
  challenge_time_ = 0u;
  clear_has_challenge_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionRequest::challenge_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.challenge_time)
  return challenge_time_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_challenge_time(::google::protobuf::uint32 value) {
  set_has_challenge_time();
  challenge_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.challenge_time)
}

// optional fixed64 challenge = 4;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_challenge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_challenge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_challenge() {
  challenge_ = GOOGLE_ULONGLONG(0);
  clear_has_challenge();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameserverSessionRequest::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.challenge)
  return challenge_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_challenge(::google::protobuf::uint64 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.challenge)
}

// optional fixed32 client_cookie = 5;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionRequest::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.client_cookie)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverSessionEstablished

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionEstablished::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.client_cookie)
}

// optional fixed64 gameserver_steam_id = 3;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_gameserver_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_has_gameserver_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_has_gameserver_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_gameserver_steam_id() {
  gameserver_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_gameserver_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameserverSessionEstablished::gameserver_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.gameserver_steam_id)
  return gameserver_steam_id_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_gameserver_steam_id(::google::protobuf::uint64 value) {
  set_has_gameserver_steam_id();
  gameserver_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.gameserver_steam_id)
}

// optional uint32 seconds_until_shutdown = 4;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionEstablished::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.seconds_until_shutdown)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramNoSession

// optional fixed32 client_cookie = 7;
inline bool CMsgSteamDatagramNoSession::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramNoSession::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramNoSession::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramNoSession::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.client_cookie)
}

// optional fixed32 your_public_ip = 2;
inline bool CMsgSteamDatagramNoSession::has_your_public_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_your_public_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramNoSession::clear_has_your_public_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramNoSession::clear_your_public_ip() {
  your_public_ip_ = 0u;
  clear_has_your_public_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::your_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.your_public_ip)
  return your_public_ip_;
}
inline void CMsgSteamDatagramNoSession::set_your_public_ip(::google::protobuf::uint32 value) {
  set_has_your_public_ip();
  your_public_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.your_public_ip)
}

// optional fixed32 server_time = 3;
inline bool CMsgSteamDatagramNoSession::has_server_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_server_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramNoSession::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramNoSession::clear_server_time() {
  server_time_ = 0u;
  clear_has_server_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::server_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.server_time)
  return server_time_;
}
inline void CMsgSteamDatagramNoSession::set_server_time(::google::protobuf::uint32 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.server_time)
}

// optional fixed64 challenge = 4;
inline bool CMsgSteamDatagramNoSession::has_challenge() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_challenge() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramNoSession::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramNoSession::clear_challenge() {
  challenge_ = GOOGLE_ULONGLONG(0);
  clear_has_challenge();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramNoSession::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.challenge)
  return challenge_;
}
inline void CMsgSteamDatagramNoSession::set_challenge(::google::protobuf::uint64 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.challenge)
}

// optional uint32 seconds_until_shutdown = 5;
inline bool CMsgSteamDatagramNoSession::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramNoSession::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramNoSession::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramNoSession::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.seconds_until_shutdown)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDiagnostic

// optional uint32 severity = 1;
inline bool CMsgSteamDatagramDiagnostic::has_severity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramDiagnostic::set_has_severity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramDiagnostic::clear_has_severity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramDiagnostic::clear_severity() {
  severity_ = 0u;
  clear_has_severity();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramDiagnostic::severity() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDiagnostic.severity)
  return severity_;
}
inline void CMsgSteamDatagramDiagnostic::set_severity(::google::protobuf::uint32 value) {
  set_has_severity();
  severity_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDiagnostic.severity)
}

// optional string text = 2;
inline bool CMsgSteamDatagramDiagnostic::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramDiagnostic::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramDiagnostic::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramDiagnostic::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CMsgSteamDatagramDiagnostic::text() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDiagnostic.text)
  return *text_;
}
inline void CMsgSteamDatagramDiagnostic::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDiagnostic.text)
}
inline void CMsgSteamDatagramDiagnostic::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramDiagnostic.text)
}
inline void CMsgSteamDatagramDiagnostic::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramDiagnostic.text)
}
inline ::std::string* CMsgSteamDatagramDiagnostic::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDiagnostic.text)
  return text_;
}
inline ::std::string* CMsgSteamDatagramDiagnostic::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSteamDatagramDiagnostic::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramDiagnostic.text)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDataCenterState_Server

// optional string address = 1;
inline bool CMsgSteamDatagramDataCenterState_Server::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramDataCenterState_Server::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_address() {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& CMsgSteamDatagramDataCenterState_Server::address() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.Server.address)
  return *address_;
}
inline void CMsgSteamDatagramDataCenterState_Server::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDataCenterState.Server.address)
}
inline void CMsgSteamDatagramDataCenterState_Server::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramDataCenterState.Server.address)
}
inline void CMsgSteamDatagramDataCenterState_Server::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramDataCenterState.Server.address)
}
inline ::std::string* CMsgSteamDatagramDataCenterState_Server::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.Server.address)
  return address_;
}
inline ::std::string* CMsgSteamDatagramDataCenterState_Server::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSteamDatagramDataCenterState_Server::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramDataCenterState.Server.address)
}

// optional uint32 ping_ms = 2;
inline bool CMsgSteamDatagramDataCenterState_Server::has_ping_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramDataCenterState_Server::set_has_ping_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_has_ping_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_ping_ms() {
  ping_ms_ = 0u;
  clear_has_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramDataCenterState_Server::ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.Server.ping_ms)
  return ping_ms_;
}
inline void CMsgSteamDatagramDataCenterState_Server::set_ping_ms(::google::protobuf::uint32 value) {
  set_has_ping_ms();
  ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDataCenterState.Server.ping_ms)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDataCenterState_DataCenter

// optional string code = 1;
inline bool CMsgSteamDatagramDataCenterState_DataCenter::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& CMsgSteamDatagramDataCenterState_DataCenter::code() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.DataCenter.code)
  return *code_;
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDataCenterState.DataCenter.code)
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramDataCenterState.DataCenter.code)
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramDataCenterState.DataCenter.code)
}
inline ::std::string* CMsgSteamDatagramDataCenterState_DataCenter::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.DataCenter.code)
  return code_;
}
inline ::std::string* CMsgSteamDatagramDataCenterState_DataCenter::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramDataCenterState.DataCenter.code)
}

// repeated .CMsgSteamDatagramDataCenterState.Server server_sample = 2;
inline int CMsgSteamDatagramDataCenterState_DataCenter::server_sample_size() const {
  return server_sample_.size();
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::clear_server_sample() {
  server_sample_.Clear();
}
inline const ::CMsgSteamDatagramDataCenterState_Server& CMsgSteamDatagramDataCenterState_DataCenter::server_sample(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_.Get(index);
}
inline ::CMsgSteamDatagramDataCenterState_Server* CMsgSteamDatagramDataCenterState_DataCenter::mutable_server_sample(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_.Mutable(index);
}
inline ::CMsgSteamDatagramDataCenterState_Server* CMsgSteamDatagramDataCenterState_DataCenter::add_server_sample() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >&
CMsgSteamDatagramDataCenterState_DataCenter::server_sample() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >*
CMsgSteamDatagramDataCenterState_DataCenter::mutable_server_sample() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return &server_sample_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDataCenterState

// repeated .CMsgSteamDatagramDataCenterState.DataCenter data_centers = 1;
inline int CMsgSteamDatagramDataCenterState::data_centers_size() const {
  return data_centers_.size();
}
inline void CMsgSteamDatagramDataCenterState::clear_data_centers() {
  data_centers_.Clear();
}
inline const ::CMsgSteamDatagramDataCenterState_DataCenter& CMsgSteamDatagramDataCenterState::data_centers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_.Get(index);
}
inline ::CMsgSteamDatagramDataCenterState_DataCenter* CMsgSteamDatagramDataCenterState::mutable_data_centers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_.Mutable(index);
}
inline ::CMsgSteamDatagramDataCenterState_DataCenter* CMsgSteamDatagramDataCenterState::add_data_centers() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >&
CMsgSteamDatagramDataCenterState::data_centers() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >*
CMsgSteamDatagramDataCenterState::mutable_data_centers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramDataCenterState.data_centers)
  return &data_centers_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramLinkInstantaneousStats

// optional uint32 out_packets_per_sec_x10 = 1;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_out_packets_per_sec_x10() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_out_packets_per_sec_x10() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_out_packets_per_sec_x10() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_out_packets_per_sec_x10() {
  out_packets_per_sec_x10_ = 0u;
  clear_has_out_packets_per_sec_x10();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::out_packets_per_sec_x10() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.out_packets_per_sec_x10)
  return out_packets_per_sec_x10_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_out_packets_per_sec_x10(::google::protobuf::uint32 value) {
  set_has_out_packets_per_sec_x10();
  out_packets_per_sec_x10_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.out_packets_per_sec_x10)
}

// optional uint32 out_bytes_per_sec = 2;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_out_bytes_per_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_out_bytes_per_sec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_out_bytes_per_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_out_bytes_per_sec() {
  out_bytes_per_sec_ = 0u;
  clear_has_out_bytes_per_sec();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::out_bytes_per_sec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.out_bytes_per_sec)
  return out_bytes_per_sec_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_out_bytes_per_sec(::google::protobuf::uint32 value) {
  set_has_out_bytes_per_sec();
  out_bytes_per_sec_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.out_bytes_per_sec)
}

// optional uint32 in_packets_per_sec_x10 = 3;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_in_packets_per_sec_x10() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_in_packets_per_sec_x10() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_in_packets_per_sec_x10() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_in_packets_per_sec_x10() {
  in_packets_per_sec_x10_ = 0u;
  clear_has_in_packets_per_sec_x10();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::in_packets_per_sec_x10() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.in_packets_per_sec_x10)
  return in_packets_per_sec_x10_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_in_packets_per_sec_x10(::google::protobuf::uint32 value) {
  set_has_in_packets_per_sec_x10();
  in_packets_per_sec_x10_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.in_packets_per_sec_x10)
}

// optional uint32 in_bytes_per_sec = 4;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_in_bytes_per_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_in_bytes_per_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_in_bytes_per_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_in_bytes_per_sec() {
  in_bytes_per_sec_ = 0u;
  clear_has_in_bytes_per_sec();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::in_bytes_per_sec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.in_bytes_per_sec)
  return in_bytes_per_sec_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_in_bytes_per_sec(::google::protobuf::uint32 value) {
  set_has_in_bytes_per_sec();
  in_bytes_per_sec_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.in_bytes_per_sec)
}

// optional uint32 ping_ms = 5;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_ping_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_ping_ms() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_ping_ms() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_ping_ms() {
  ping_ms_ = 0u;
  clear_has_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.ping_ms)
  return ping_ms_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_ping_ms(::google::protobuf::uint32 value) {
  set_has_ping_ms();
  ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.ping_ms)
}

// optional uint32 packets_dropped_pct = 6;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_packets_dropped_pct() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_packets_dropped_pct() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_packets_dropped_pct() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_packets_dropped_pct() {
  packets_dropped_pct_ = 0u;
  clear_has_packets_dropped_pct();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::packets_dropped_pct() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.packets_dropped_pct)
  return packets_dropped_pct_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_packets_dropped_pct(::google::protobuf::uint32 value) {
  set_has_packets_dropped_pct();
  packets_dropped_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.packets_dropped_pct)
}

// optional uint32 packets_weird_sequence_pct = 7;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_packets_weird_sequence_pct() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_packets_weird_sequence_pct() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_packets_weird_sequence_pct() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_packets_weird_sequence_pct() {
  packets_weird_sequence_pct_ = 0u;
  clear_has_packets_weird_sequence_pct();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::packets_weird_sequence_pct() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.packets_weird_sequence_pct)
  return packets_weird_sequence_pct_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_packets_weird_sequence_pct(::google::protobuf::uint32 value) {
  set_has_packets_weird_sequence_pct();
  packets_weird_sequence_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.packets_weird_sequence_pct)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramLinkLifetimeStats

// optional uint64 packets_sent = 3;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_sent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_sent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_sent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_sent() {
  packets_sent_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_sent();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_sent() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_sent)
  return packets_sent_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_sent(::google::protobuf::uint64 value) {
  set_has_packets_sent();
  packets_sent_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_sent)
}

// optional uint64 kb_sent = 4;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_kb_sent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_kb_sent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_kb_sent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_kb_sent() {
  kb_sent_ = GOOGLE_ULONGLONG(0);
  clear_has_kb_sent();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::kb_sent() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.kb_sent)
  return kb_sent_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_kb_sent(::google::protobuf::uint64 value) {
  set_has_kb_sent();
  kb_sent_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.kb_sent)
}

// optional uint64 packets_recv = 5;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv() {
  packets_recv_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv)
  return packets_recv_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv(::google::protobuf::uint64 value) {
  set_has_packets_recv();
  packets_recv_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv)
}

// optional uint64 kb_recv = 6;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_kb_recv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_kb_recv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_kb_recv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_kb_recv() {
  kb_recv_ = GOOGLE_ULONGLONG(0);
  clear_has_kb_recv();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::kb_recv() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.kb_recv)
  return kb_recv_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_kb_recv(::google::protobuf::uint64 value) {
  set_has_kb_recv();
  kb_recv_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.kb_recv)
}

// optional uint64 packets_recv_sequenced = 7;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_sequenced() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_sequenced() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_sequenced() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_sequenced() {
  packets_recv_sequenced_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_sequenced();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_sequenced() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_sequenced)
  return packets_recv_sequenced_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_sequenced(::google::protobuf::uint64 value) {
  set_has_packets_recv_sequenced();
  packets_recv_sequenced_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_sequenced)
}

// optional uint64 packets_recv_dropped = 8;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_dropped() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_dropped() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_dropped() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_dropped() {
  packets_recv_dropped_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_dropped();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_dropped() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_dropped)
  return packets_recv_dropped_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_dropped(::google::protobuf::uint64 value) {
  set_has_packets_recv_dropped();
  packets_recv_dropped_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_dropped)
}

// optional uint64 packets_recv_out_of_order = 9;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_out_of_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_out_of_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_out_of_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_out_of_order() {
  packets_recv_out_of_order_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_out_of_order();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_out_of_order() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_out_of_order)
  return packets_recv_out_of_order_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_out_of_order(::google::protobuf::uint64 value) {
  set_has_packets_recv_out_of_order();
  packets_recv_out_of_order_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_out_of_order)
}

// optional uint64 packets_recv_duplicate = 10;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_duplicate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_duplicate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_duplicate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_duplicate() {
  packets_recv_duplicate_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_duplicate();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_duplicate() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_duplicate)
  return packets_recv_duplicate_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_duplicate(::google::protobuf::uint64 value) {
  set_has_packets_recv_duplicate();
  packets_recv_duplicate_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_duplicate)
}

// optional uint64 packets_recv_lurch = 11;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_lurch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_lurch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_lurch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_lurch() {
  packets_recv_lurch_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_lurch();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_lurch() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_lurch)
  return packets_recv_lurch_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_lurch(::google::protobuf::uint64 value) {
  set_has_packets_recv_lurch();
  packets_recv_lurch_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_lurch)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionQuality

// optional .CMsgSteamDatagramLinkInstantaneousStats instantaneous = 1;
inline bool CMsgSteamDatagramConnectionQuality::has_instantaneous() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionQuality::set_has_instantaneous() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_has_instantaneous() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_instantaneous() {
  if (instantaneous_ != NULL) instantaneous_->::CMsgSteamDatagramLinkInstantaneousStats::Clear();
  clear_has_instantaneous();
}
inline const ::CMsgSteamDatagramLinkInstantaneousStats& CMsgSteamDatagramConnectionQuality::instantaneous() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionQuality.instantaneous)
  return instantaneous_ != NULL ? *instantaneous_ : *default_instance_->instantaneous_;
}
inline ::CMsgSteamDatagramLinkInstantaneousStats* CMsgSteamDatagramConnectionQuality::mutable_instantaneous() {
  set_has_instantaneous();
  if (instantaneous_ == NULL) instantaneous_ = new ::CMsgSteamDatagramLinkInstantaneousStats;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionQuality.instantaneous)
  return instantaneous_;
}
inline ::CMsgSteamDatagramLinkInstantaneousStats* CMsgSteamDatagramConnectionQuality::release_instantaneous() {
  clear_has_instantaneous();
  ::CMsgSteamDatagramLinkInstantaneousStats* temp = instantaneous_;
  instantaneous_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramConnectionQuality::set_allocated_instantaneous(::CMsgSteamDatagramLinkInstantaneousStats* instantaneous) {
  delete instantaneous_;
  instantaneous_ = instantaneous;
  if (instantaneous) {
    set_has_instantaneous();
  } else {
    clear_has_instantaneous();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionQuality.instantaneous)
}

// optional .CMsgSteamDatagramLinkLifetimeStats lifetime = 2;
inline bool CMsgSteamDatagramConnectionQuality::has_lifetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionQuality::set_has_lifetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_has_lifetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_lifetime() {
  if (lifetime_ != NULL) lifetime_->::CMsgSteamDatagramLinkLifetimeStats::Clear();
  clear_has_lifetime();
}
inline const ::CMsgSteamDatagramLinkLifetimeStats& CMsgSteamDatagramConnectionQuality::lifetime() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionQuality.lifetime)
  return lifetime_ != NULL ? *lifetime_ : *default_instance_->lifetime_;
}
inline ::CMsgSteamDatagramLinkLifetimeStats* CMsgSteamDatagramConnectionQuality::mutable_lifetime() {
  set_has_lifetime();
  if (lifetime_ == NULL) lifetime_ = new ::CMsgSteamDatagramLinkLifetimeStats;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionQuality.lifetime)
  return lifetime_;
}
inline ::CMsgSteamDatagramLinkLifetimeStats* CMsgSteamDatagramConnectionQuality::release_lifetime() {
  clear_has_lifetime();
  ::CMsgSteamDatagramLinkLifetimeStats* temp = lifetime_;
  lifetime_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramConnectionQuality::set_allocated_lifetime(::CMsgSteamDatagramLinkLifetimeStats* lifetime) {
  delete lifetime_;
  lifetime_ = lifetime;
  if (lifetime) {
    set_has_lifetime();
  } else {
    clear_has_lifetime();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionQuality.lifetime)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsClientToRouter

// optional .CMsgSteamDatagramConnectionQuality c2r = 1;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_c2r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_c2r() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_c2r() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_c2r() {
  if (c2r_ != NULL) c2r_->::CMsgSteamDatagramConnectionQuality::Clear();
  clear_has_c2r();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::c2r() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.c2r)
  return c2r_ != NULL ? *c2r_ : *default_instance_->c2r_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::mutable_c2r() {
  set_has_c2r();
  if (c2r_ == NULL) c2r_ = new ::CMsgSteamDatagramConnectionQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsClientToRouter.c2r)
  return c2r_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::release_c2r() {
  clear_has_c2r();
  ::CMsgSteamDatagramConnectionQuality* temp = c2r_;
  c2r_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_allocated_c2r(::CMsgSteamDatagramConnectionQuality* c2r) {
  delete c2r_;
  c2r_ = c2r;
  if (c2r) {
    set_has_c2r();
  } else {
    clear_has_c2r();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.c2r)
}

// optional .CMsgSteamDatagramConnectionQuality c2s = 2;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_c2s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_c2s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_c2s() {
  if (c2s_ != NULL) c2s_->::CMsgSteamDatagramConnectionQuality::Clear();
  clear_has_c2s();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::c2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.c2s)
  return c2s_ != NULL ? *c2s_ : *default_instance_->c2s_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) c2s_ = new ::CMsgSteamDatagramConnectionQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsClientToRouter.c2s)
  return c2s_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::release_c2s() {
  clear_has_c2s();
  ::CMsgSteamDatagramConnectionQuality* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s) {
  delete c2s_;
  c2s_ = c2s;
  if (c2s) {
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.c2s)
}

// optional fixed32 client_timestamp = 3;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.client_timestamp)
}

// optional fixed32 client_cookie = 8;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.client_cookie)
}

// optional uint32 seq_num_c2r = 9;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_seq_num_c2r() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_seq_num_c2r() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_seq_num_c2r() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_seq_num_c2r() {
  seq_num_c2r_ = 0u;
  clear_has_seq_num_c2r();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::seq_num_c2r() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2r)
  return seq_num_c2r_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_seq_num_c2r(::google::protobuf::uint32 value) {
  set_has_seq_num_c2r();
  seq_num_c2r_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2r)
}

// optional uint32 seq_num_c2s = 10;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_seq_num_c2s() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_seq_num_c2s() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_seq_num_c2s() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_seq_num_c2s() {
  seq_num_c2s_ = 0u;
  clear_has_seq_num_c2s();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::seq_num_c2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2s)
  return seq_num_c2s_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_seq_num_c2s(::google::protobuf::uint32 value) {
  set_has_seq_num_c2s();
  seq_num_c2s_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2s)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsRouterToClient

// optional .CMsgSteamDatagramConnectionQuality r2c = 1;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_r2c() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_r2c() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_r2c() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_r2c() {
  if (r2c_ != NULL) r2c_->::CMsgSteamDatagramConnectionQuality::Clear();
  clear_has_r2c();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::r2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.r2c)
  return r2c_ != NULL ? *r2c_ : *default_instance_->r2c_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::mutable_r2c() {
  set_has_r2c();
  if (r2c_ == NULL) r2c_ = new ::CMsgSteamDatagramConnectionQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToClient.r2c)
  return r2c_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::release_r2c() {
  clear_has_r2c();
  ::CMsgSteamDatagramConnectionQuality* temp = r2c_;
  r2c_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_allocated_r2c(::CMsgSteamDatagramConnectionQuality* r2c) {
  delete r2c_;
  r2c_ = r2c;
  if (r2c) {
    set_has_r2c();
  } else {
    clear_has_r2c();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.r2c)
}

// optional .CMsgSteamDatagramConnectionQuality s2c = 2;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_s2c() {
  if (s2c_ != NULL) s2c_->::CMsgSteamDatagramConnectionQuality::Clear();
  clear_has_s2c();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::s2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.s2c)
  return s2c_ != NULL ? *s2c_ : *default_instance_->s2c_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) s2c_ = new ::CMsgSteamDatagramConnectionQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToClient.s2c)
  return s2c_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::release_s2c() {
  clear_has_s2c();
  ::CMsgSteamDatagramConnectionQuality* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_allocated_s2c(::CMsgSteamDatagramConnectionQuality* s2c) {
  delete s2c_;
  s2c_ = s2c;
  if (s2c) {
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.s2c)
}

// optional fixed32 client_timestamp_from_router = 3;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_client_timestamp_from_router() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_client_timestamp_from_router() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_client_timestamp_from_router() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_client_timestamp_from_router() {
  client_timestamp_from_router_ = 0u;
  clear_has_client_timestamp_from_router();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::client_timestamp_from_router() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_router)
  return client_timestamp_from_router_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_client_timestamp_from_router(::google::protobuf::uint32 value) {
  set_has_client_timestamp_from_router();
  client_timestamp_from_router_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_router)
}

// optional fixed32 client_timestamp_from_server = 4;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_client_timestamp_from_server() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_client_timestamp_from_server() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_client_timestamp_from_server() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_client_timestamp_from_server() {
  client_timestamp_from_server_ = 0u;
  clear_has_client_timestamp_from_server();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::client_timestamp_from_server() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_server)
  return client_timestamp_from_server_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_client_timestamp_from_server(::google::protobuf::uint32 value) {
  set_has_client_timestamp_from_server();
  client_timestamp_from_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_server)
}

// optional uint32 router_gameserver_latency = 5;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_router_gameserver_latency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_router_gameserver_latency() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_router_gameserver_latency() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_router_gameserver_latency() {
  router_gameserver_latency_ = 0u;
  clear_has_router_gameserver_latency();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::router_gameserver_latency() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.router_gameserver_latency)
  return router_gameserver_latency_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_router_gameserver_latency(::google::protobuf::uint32 value) {
  set_has_router_gameserver_latency();
  router_gameserver_latency_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.router_gameserver_latency)
}

// optional uint32 seconds_until_shutdown = 6;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seconds_until_shutdown)
}

// optional fixed32 client_cookie = 7;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.client_cookie)
}

// optional uint32 seq_num_r2c = 8;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seq_num_r2c() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_seq_num_r2c() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_seq_num_r2c() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seq_num_r2c() {
  seq_num_r2c_ = 0u;
  clear_has_seq_num_r2c();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::seq_num_r2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_r2c)
  return seq_num_r2c_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seq_num_r2c(::google::protobuf::uint32 value) {
  set_has_seq_num_r2c();
  seq_num_r2c_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_r2c)
}

// optional uint32 seq_num_s2c = 9;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seq_num_s2c() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_seq_num_s2c() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_seq_num_s2c() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seq_num_s2c() {
  seq_num_s2c_ = 0u;
  clear_has_seq_num_s2c();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::seq_num_s2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_s2c)
  return seq_num_s2c_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seq_num_s2c(::google::protobuf::uint32 value) {
  set_has_seq_num_s2c();
  seq_num_s2c_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_s2c)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsRouterToServer

// optional .CMsgSteamDatagramConnectionQuality c2s = 2;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_c2s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_c2s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_c2s() {
  if (c2s_ != NULL) c2s_->::CMsgSteamDatagramConnectionQuality::Clear();
  clear_has_c2s();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToServer::c2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.c2s)
  return c2s_ != NULL ? *c2s_ : *default_instance_->c2s_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToServer::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) c2s_ = new ::CMsgSteamDatagramConnectionQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToServer.c2s)
  return c2s_;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToServer::release_c2s() {
  clear_has_c2s();
  ::CMsgSteamDatagramConnectionQuality* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s) {
  delete c2s_;
  c2s_ = c2s;
  if (c2s) {
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.c2s)
}

// optional fixed32 client_timestamp = 3;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_timestamp)
}

// optional fixed32 router_timestamp = 4;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_router_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_router_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_router_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_router_timestamp() {
  router_timestamp_ = 0u;
  clear_has_router_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::router_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.router_timestamp)
  return router_timestamp_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_router_timestamp(::google::protobuf::uint32 value) {
  set_has_router_timestamp();
  router_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.router_timestamp)
}

// optional uint32 seq_num_c2s = 6;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_seq_num_c2s() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_seq_num_c2s() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_seq_num_c2s() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_seq_num_c2s() {
  seq_num_c2s_ = 0u;
  clear_has_seq_num_c2s();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::seq_num_c2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_c2s)
  return seq_num_c2s_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_seq_num_c2s(::google::protobuf::uint32 value) {
  set_has_seq_num_c2s();
  seq_num_c2s_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_c2s)
}

// optional fixed64 client_steam_id = 7;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_client_steam_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_client_steam_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_steam_id() {
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramConnectionStatsRouterToServer::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_steam_id)
  return client_steam_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_steam_id(::google::protobuf::uint64 value) {
  set_has_client_steam_id();
  client_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_steam_id)
}

// optional uint32 client_session_id = 8;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_session_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_client_session_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_client_session_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_session_id() {
  client_session_id_ = 0u;
  clear_has_client_session_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::client_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_session_id)
  return client_session_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_session_id(::google::protobuf::uint32 value) {
  set_has_client_session_id();
  client_session_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_session_id)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleRequest

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramClientPingSampleRequest::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleRequest::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleRequest::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleRequest::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleRequest::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleRequest.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramClientPingSampleRequest::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleRequest.client_cookie)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply_RoutingCluster

// optional fixed32 id = 1;
inline bool CMsgSteamDatagramClientPingSampleReply_RoutingCluster::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_RoutingCluster::id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.id)
  return id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.id)
}

// optional uint32 front_ping_ms = 2;
inline bool CMsgSteamDatagramClientPingSampleReply_RoutingCluster::has_front_ping_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_has_front_ping_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_has_front_ping_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_front_ping_ms() {
  front_ping_ms_ = 0u;
  clear_has_front_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_RoutingCluster::front_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.front_ping_ms)
  return front_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_front_ping_ms(::google::protobuf::uint32 value) {
  set_has_front_ping_ms();
  front_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.front_ping_ms)
}

// optional uint32 e2e_ping_ms = 3;
inline bool CMsgSteamDatagramClientPingSampleReply_RoutingCluster::has_e2e_ping_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_has_e2e_ping_ms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_has_e2e_ping_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_e2e_ping_ms() {
  e2e_ping_ms_ = 0u;
  clear_has_e2e_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_RoutingCluster::e2e_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.e2e_ping_ms)
  return e2e_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_e2e_ping_ms(::google::protobuf::uint32 value) {
  set_has_e2e_ping_ms();
  e2e_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.e2e_ping_ms)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramClientPingSampleReply::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramClientPingSampleReply::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.client_cookie)
}

// repeated .CMsgSteamDatagramClientPingSampleReply.RoutingCluster routing_clusters = 2;
inline int CMsgSteamDatagramClientPingSampleReply::routing_clusters_size() const {
  return routing_clusters_.size();
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_routing_clusters() {
  routing_clusters_.Clear();
}
inline const ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster& CMsgSteamDatagramClientPingSampleReply::routing_clusters(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_.Get(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* CMsgSteamDatagramClientPingSampleReply::mutable_routing_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_.Mutable(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* CMsgSteamDatagramClientPingSampleReply::add_routing_clusters() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >&
CMsgSteamDatagramClientPingSampleReply::routing_clusters() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >*
CMsgSteamDatagramClientPingSampleReply::mutable_routing_clusters() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return &routing_clusters_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientSwitchedPrimary_RouterQuality

// optional uint32 score = 1;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.score)
  return score_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.score)
}

// optional uint32 front_ping = 2;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_front_ping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_front_ping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_front_ping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_front_ping() {
  front_ping_ = 0u;
  clear_has_front_ping();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::front_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.front_ping)
  return front_ping_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_front_ping(::google::protobuf::uint32 value) {
  set_has_front_ping();
  front_ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.front_ping)
}

// optional uint32 back_ping = 3;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_back_ping() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_back_ping() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_back_ping() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_back_ping() {
  back_ping_ = 0u;
  clear_has_back_ping();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::back_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.back_ping)
  return back_ping_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_back_ping(::google::protobuf::uint32 value) {
  set_has_back_ping();
  back_ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.back_ping)
}

// optional uint32 seconds_until_down = 4;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_seconds_until_down() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_seconds_until_down() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_seconds_until_down() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_seconds_until_down() {
  seconds_until_down_ = 0u;
  clear_has_seconds_until_down();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::seconds_until_down() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.seconds_until_down)
  return seconds_until_down_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_seconds_until_down(::google::protobuf::uint32 value) {
  set_has_seconds_until_down();
  seconds_until_down_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.seconds_until_down)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientSwitchedPrimary

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.client_cookie)
}

// optional fixed32 from_ip = 2;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_ip() {
  from_ip_ = 0u;
  clear_has_from_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_ip)
  return from_ip_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_ip(::google::protobuf::uint32 value) {
  set_has_from_ip();
  from_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_ip)
}

// optional uint32 from_port = 3;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_port() {
  from_port_ = 0u;
  clear_has_from_port();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_port)
  return from_port_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_port(::google::protobuf::uint32 value) {
  set_has_from_port();
  from_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_port)
}

// optional fixed32 from_router_cluster = 4;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_router_cluster() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_router_cluster() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_router_cluster() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_router_cluster() {
  from_router_cluster_ = 0u;
  clear_has_from_router_cluster();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_router_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_router_cluster)
  return from_router_cluster_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_router_cluster(::google::protobuf::uint32 value) {
  set_has_from_router_cluster();
  from_router_cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_router_cluster)
}

// optional uint32 from_active_time = 5;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_active_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_active_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_active_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_active_time() {
  from_active_time_ = 0u;
  clear_has_from_active_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_active_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_active_time)
  return from_active_time_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_active_time(::google::protobuf::uint32 value) {
  set_has_from_active_time();
  from_active_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_active_time)
}

// optional uint32 from_active_packets_recv = 6;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_active_packets_recv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_active_packets_recv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_active_packets_recv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_active_packets_recv() {
  from_active_packets_recv_ = 0u;
  clear_has_from_active_packets_recv();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_active_packets_recv() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_active_packets_recv)
  return from_active_packets_recv_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_active_packets_recv(::google::protobuf::uint32 value) {
  set_has_from_active_packets_recv();
  from_active_packets_recv_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_active_packets_recv)
}

// optional string from_dropped_reason = 7;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_dropped_reason() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_dropped_reason() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_dropped_reason() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_dropped_reason() {
  if (from_dropped_reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    from_dropped_reason_->clear();
  }
  clear_has_from_dropped_reason();
}
inline const ::std::string& CMsgSteamDatagramClientSwitchedPrimary::from_dropped_reason() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  return *from_dropped_reason_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(const ::std::string& value) {
  set_has_from_dropped_reason();
  if (from_dropped_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    from_dropped_reason_ = new ::std::string;
  }
  from_dropped_reason_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(const char* value) {
  set_has_from_dropped_reason();
  if (from_dropped_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    from_dropped_reason_ = new ::std::string;
  }
  from_dropped_reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(const char* value, size_t size) {
  set_has_from_dropped_reason();
  if (from_dropped_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    from_dropped_reason_ = new ::std::string;
  }
  from_dropped_reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
inline ::std::string* CMsgSteamDatagramClientSwitchedPrimary::mutable_from_dropped_reason() {
  set_has_from_dropped_reason();
  if (from_dropped_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    from_dropped_reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  return from_dropped_reason_;
}
inline ::std::string* CMsgSteamDatagramClientSwitchedPrimary::release_from_dropped_reason() {
  clear_has_from_dropped_reason();
  if (from_dropped_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = from_dropped_reason_;
    from_dropped_reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_dropped_reason(::std::string* from_dropped_reason) {
  if (from_dropped_reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete from_dropped_reason_;
  }
  if (from_dropped_reason) {
    set_has_from_dropped_reason();
    from_dropped_reason_ = from_dropped_reason;
  } else {
    clear_has_from_dropped_reason();
    from_dropped_reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}

// optional uint32 gap_ms = 8;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_gap_ms() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_gap_ms() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_gap_ms() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_gap_ms() {
  gap_ms_ = 0u;
  clear_has_gap_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::gap_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.gap_ms)
  return gap_ms_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_gap_ms(::google::protobuf::uint32 value) {
  set_has_gap_ms();
  gap_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.gap_ms)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_now = 9;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_quality_now() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_quality_now() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_quality_now() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_quality_now() {
  if (from_quality_now_ != NULL) from_quality_now_->::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::Clear();
  clear_has_from_quality_now();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::from_quality_now() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
  return from_quality_now_ != NULL ? *from_quality_now_ : *default_instance_->from_quality_now_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_from_quality_now() {
  set_has_from_quality_now();
  if (from_quality_now_ == NULL) from_quality_now_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
  return from_quality_now_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_from_quality_now() {
  clear_has_from_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = from_quality_now_;
  from_quality_now_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_now) {
  delete from_quality_now_;
  from_quality_now_ = from_quality_now;
  if (from_quality_now) {
    set_has_from_quality_now();
  } else {
    clear_has_from_quality_now();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_now = 10;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_to_quality_now() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_to_quality_now() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_to_quality_now() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_to_quality_now() {
  if (to_quality_now_ != NULL) to_quality_now_->::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::Clear();
  clear_has_to_quality_now();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::to_quality_now() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
  return to_quality_now_ != NULL ? *to_quality_now_ : *default_instance_->to_quality_now_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_to_quality_now() {
  set_has_to_quality_now();
  if (to_quality_now_ == NULL) to_quality_now_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
  return to_quality_now_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_to_quality_now() {
  clear_has_to_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = to_quality_now_;
  to_quality_now_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_to_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_now) {
  delete to_quality_now_;
  to_quality_now_ = to_quality_now;
  if (to_quality_now) {
    set_has_to_quality_now();
  } else {
    clear_has_to_quality_now();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_then = 11;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_quality_then() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_quality_then() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_quality_then() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_quality_then() {
  if (from_quality_then_ != NULL) from_quality_then_->::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::Clear();
  clear_has_from_quality_then();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::from_quality_then() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
  return from_quality_then_ != NULL ? *from_quality_then_ : *default_instance_->from_quality_then_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_from_quality_then() {
  set_has_from_quality_then();
  if (from_quality_then_ == NULL) from_quality_then_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
  return from_quality_then_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_from_quality_then() {
  clear_has_from_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = from_quality_then_;
  from_quality_then_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_then) {
  delete from_quality_then_;
  from_quality_then_ = from_quality_then;
  if (from_quality_then) {
    set_has_from_quality_then();
  } else {
    clear_has_from_quality_then();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_then = 12;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_to_quality_then() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_to_quality_then() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_to_quality_then() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_to_quality_then() {
  if (to_quality_then_ != NULL) to_quality_then_->::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::Clear();
  clear_has_to_quality_then();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::to_quality_then() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
  return to_quality_then_ != NULL ? *to_quality_then_ : *default_instance_->to_quality_then_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_to_quality_then() {
  set_has_to_quality_then();
  if (to_quality_then_ == NULL) to_quality_then_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
  return to_quality_then_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_to_quality_then() {
  clear_has_to_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = to_quality_then_;
  to_quality_then_ = NULL;
  return temp;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_to_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_then) {
  delete to_quality_then_;
  to_quality_then_ = to_quality_then;
  if (to_quality_then) {
    set_has_to_quality_then();
  } else {
    clear_has_to_quality_then();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ESteamDatagramMsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESteamDatagramMsgID>() {
  return ::ESteamDatagramMsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steamdatagram_5fmessages_2eproto__INCLUDED
