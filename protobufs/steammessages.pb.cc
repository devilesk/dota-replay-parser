// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "steammessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgProtoBufHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgProtoBufHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgWebAPIKey_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgWebAPIKey_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgHttpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgHttpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgHttpRequest_RequestHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgHttpRequest_RequestHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgHttpRequest_QueryParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgHttpRequest_QueryParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgWebAPIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgWebAPIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgHttpResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgHttpResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgHttpResponse_ResponseHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgHttpResponse_ResponseHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMFindAccounts_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMFindAccounts_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMFindAccountsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMFindAccountsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgNotifyWatchdog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgNotifyWatchdog_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGetLicenses_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGetLicenses_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgPackageLicense_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgPackageLicense_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGetLicensesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGetLicensesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGetUserGameStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGetUserGameStatsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse_Stats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGetUserGameStatsResponse_Stats_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetCommandList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetCommandList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetCommandListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetCommandListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedGet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedGet_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedGetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedGetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedGetResponse_ValueTag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedGetResponse_ValueTag_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedSet_KeyPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedSet_KeyPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedDelete_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedDelete_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgMemCachedStatsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgMemCachedStatsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgSQLStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgSQLStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgSQLStatsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgSQLStatsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMAddFreeLicense_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMAddFreeLicense_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMAddFreeLicenseResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMAddFreeLicenseResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgGetIPLocation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgGetIPLocation_reflection_ = NULL;
const ::google::protobuf::Descriptor* CIPLocationInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CIPLocationInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgGetIPLocationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgGetIPLocationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgGetIPASN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgGetIPASN_reflection_ = NULL;
const ::google::protobuf::Descriptor* CIPASNInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CIPASNInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgGetIPASNResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgGetIPASNResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgSystemStatsSchema_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgSystemStatsSchema_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgGetSystemStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgGetSystemStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCMsgGetSystemStatsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCMsgGetSystemStatsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMSendEmail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMSendEmail_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMSendEmail_ReplacementToken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMSendEmail_ReplacementToken_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMSendEmail_PersonaNameReplacementToken_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMSendEmailResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMSendEmailResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetEmailTemplate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetEmailTemplate_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetEmailTemplateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetEmailTemplateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGrantGuestPasses2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGrantGuestPasses2_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAMGrantGuestPasses2Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAMGrantGuestPasses2Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCSystemMsg_GetAccountDetails_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCSystemMsg_GetAccountDetails_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCSystemMsg_GetAccountDetails_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCSystemMsg_GetAccountDetails_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetPersonaNames_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetPersonaNames_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames_Response_PersonaName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetPersonaNames_Response_PersonaName_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCCheckFriendship_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCCheckFriendship_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCCheckFriendship_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCCheckFriendship_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetAppFriendsList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetAppFriendsList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetAppFriendsList_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetAppFriendsList_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetDirectory_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory_SubGC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetDirectory_SubGC_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetDirectory_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgWebAPIJobRequestForwardResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgWebAPIJobRequestForwardResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCSystemMsg_GetPurchaseTrust_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCSystemMsg_GetPurchaseTrust_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCSystemMsg_GetPurchaseTrust_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCSystemMsg_GetPurchaseTrust_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCHAccountVacStatusChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCHAccountVacStatusChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetPartnerAccountLink_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetPartnerAccountLink_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCGetPartnerAccountLink_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGetPartnerAccountLink_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRoutingInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRoutingInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGCRoutingInfo_RoutingMethod_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetWebAPIRouting_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting_Entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetWebAPIRouting_Entry_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetClientMsgRouting_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting_Entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetClientMsgRouting_Entry_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetWebAPIRouting_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgMasterSetClientMsgRouting_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgSetOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgSetOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCMsgSetOptions_MessageRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCMsgSetOptions_MessageRange_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_Option_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_GCSQLVersion_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCHUpdateSession_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCHUpdateSession_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCHUpdateSession_ExtraField_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCHUpdateSession_ExtraField_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgNotificationOfSuspiciousActivity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgNotificationOfSuspiciousActivity_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDPPartnerMicroTxns_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxns_PartnerMicroTxn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDPPartnerMicroTxns_PartnerMicroTxn_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxns_PartnerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDPPartnerMicroTxns_PartnerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxnsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDPPartnerMicroTxnsResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GCProtoBufMsgSrc_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_steammessages_2eproto() {
  protobuf_AddDesc_steammessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "steammessages.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgProtoBufHeader_descriptor_ = file->message_type(0);
  static const int CMsgProtoBufHeader_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, client_steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, client_session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, source_app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, job_id_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, job_id_target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, target_job_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, error_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, gc_msg_src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, gc_dir_index_source_),
  };
  CMsgProtoBufHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgProtoBufHeader_descriptor_,
      CMsgProtoBufHeader::default_instance_,
      CMsgProtoBufHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgProtoBufHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProtoBufHeader, _internal_metadata_),
      -1);
  CMsgWebAPIKey_descriptor_ = file->message_type(1);
  static const int CMsgWebAPIKey_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIKey, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIKey, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIKey, publisher_group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIKey, key_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIKey, domain_),
  };
  CMsgWebAPIKey_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgWebAPIKey_descriptor_,
      CMsgWebAPIKey::default_instance_,
      CMsgWebAPIKey_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIKey, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgWebAPIKey),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIKey, _internal_metadata_),
      -1);
  CMsgHttpRequest_descriptor_ = file->message_type(2);
  static const int CMsgHttpRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, request_method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, get_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, post_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, absolute_timeout_),
  };
  CMsgHttpRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgHttpRequest_descriptor_,
      CMsgHttpRequest::default_instance_,
      CMsgHttpRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgHttpRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest, _internal_metadata_),
      -1);
  CMsgHttpRequest_RequestHeader_descriptor_ = CMsgHttpRequest_descriptor_->nested_type(0);
  static const int CMsgHttpRequest_RequestHeader_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, value_),
  };
  CMsgHttpRequest_RequestHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgHttpRequest_RequestHeader_descriptor_,
      CMsgHttpRequest_RequestHeader::default_instance_,
      CMsgHttpRequest_RequestHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgHttpRequest_RequestHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _internal_metadata_),
      -1);
  CMsgHttpRequest_QueryParam_descriptor_ = CMsgHttpRequest_descriptor_->nested_type(1);
  static const int CMsgHttpRequest_QueryParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_QueryParam, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_QueryParam, value_),
  };
  CMsgHttpRequest_QueryParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgHttpRequest_QueryParam_descriptor_,
      CMsgHttpRequest_QueryParam::default_instance_,
      CMsgHttpRequest_QueryParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgHttpRequest_QueryParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _internal_metadata_),
      -1);
  CMsgWebAPIRequest_descriptor_ = file->message_type(3);
  static const int CMsgWebAPIRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, unused_job_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, interface_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, method_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, api_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, routing_app_id_),
  };
  CMsgWebAPIRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgWebAPIRequest_descriptor_,
      CMsgWebAPIRequest::default_instance_,
      CMsgWebAPIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgWebAPIRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgWebAPIRequest, _internal_metadata_),
      -1);
  CMsgHttpResponse_descriptor_ = file->message_type(4);
  static const int CMsgHttpResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse, status_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse, body_),
  };
  CMsgHttpResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgHttpResponse_descriptor_,
      CMsgHttpResponse::default_instance_,
      CMsgHttpResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgHttpResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse, _internal_metadata_),
      -1);
  CMsgHttpResponse_ResponseHeader_descriptor_ = CMsgHttpResponse_descriptor_->nested_type(0);
  static const int CMsgHttpResponse_ResponseHeader_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, value_),
  };
  CMsgHttpResponse_ResponseHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgHttpResponse_ResponseHeader_descriptor_,
      CMsgHttpResponse_ResponseHeader::default_instance_,
      CMsgHttpResponse_ResponseHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgHttpResponse_ResponseHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _internal_metadata_),
      -1);
  CMsgAMFindAccounts_descriptor_ = file->message_type(5);
  static const int CMsgAMFindAccounts_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMFindAccounts, search_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMFindAccounts, search_string_),
  };
  CMsgAMFindAccounts_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMFindAccounts_descriptor_,
      CMsgAMFindAccounts::default_instance_,
      CMsgAMFindAccounts_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMFindAccounts, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMFindAccounts),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMFindAccounts, _internal_metadata_),
      -1);
  CMsgAMFindAccountsResponse_descriptor_ = file->message_type(6);
  static const int CMsgAMFindAccountsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMFindAccountsResponse, steam_id_),
  };
  CMsgAMFindAccountsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMFindAccountsResponse_descriptor_,
      CMsgAMFindAccountsResponse::default_instance_,
      CMsgAMFindAccountsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMFindAccountsResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMFindAccountsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMFindAccountsResponse, _internal_metadata_),
      -1);
  CMsgNotifyWatchdog_descriptor_ = file->message_type(7);
  static const int CMsgNotifyWatchdog_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, alert_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, alert_destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, critical_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, text_),
  };
  CMsgNotifyWatchdog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgNotifyWatchdog_descriptor_,
      CMsgNotifyWatchdog::default_instance_,
      CMsgNotifyWatchdog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgNotifyWatchdog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotifyWatchdog, _internal_metadata_),
      -1);
  CMsgAMGetLicenses_descriptor_ = file->message_type(8);
  static const int CMsgAMGetLicenses_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetLicenses, steamid_),
  };
  CMsgAMGetLicenses_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGetLicenses_descriptor_,
      CMsgAMGetLicenses::default_instance_,
      CMsgAMGetLicenses_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetLicenses, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGetLicenses),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetLicenses, _internal_metadata_),
      -1);
  CMsgPackageLicense_descriptor_ = file->message_type(9);
  static const int CMsgPackageLicense_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPackageLicense, package_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPackageLicense, time_created_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPackageLicense, owner_id_),
  };
  CMsgPackageLicense_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgPackageLicense_descriptor_,
      CMsgPackageLicense::default_instance_,
      CMsgPackageLicense_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPackageLicense, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgPackageLicense),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPackageLicense, _internal_metadata_),
      -1);
  CMsgAMGetLicensesResponse_descriptor_ = file->message_type(10);
  static const int CMsgAMGetLicensesResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetLicensesResponse, license_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetLicensesResponse, result_),
  };
  CMsgAMGetLicensesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGetLicensesResponse_descriptor_,
      CMsgAMGetLicensesResponse::default_instance_,
      CMsgAMGetLicensesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetLicensesResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGetLicensesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetLicensesResponse, _internal_metadata_),
      -1);
  CMsgAMGetUserGameStats_descriptor_ = file->message_type(11);
  static const int CMsgAMGetUserGameStats_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStats, steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStats, game_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStats, stats_),
  };
  CMsgAMGetUserGameStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGetUserGameStats_descriptor_,
      CMsgAMGetUserGameStats::default_instance_,
      CMsgAMGetUserGameStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGetUserGameStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStats, _internal_metadata_),
      -1);
  CMsgAMGetUserGameStatsResponse_descriptor_ = file->message_type(12);
  static const int CMsgAMGetUserGameStatsResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, game_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, achievement_blocks_),
  };
  CMsgAMGetUserGameStatsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGetUserGameStatsResponse_descriptor_,
      CMsgAMGetUserGameStatsResponse::default_instance_,
      CMsgAMGetUserGameStatsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGetUserGameStatsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _internal_metadata_),
      -1);
  CMsgAMGetUserGameStatsResponse_Stats_descriptor_ = CMsgAMGetUserGameStatsResponse_descriptor_->nested_type(0);
  static const int CMsgAMGetUserGameStatsResponse_Stats_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, stat_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, stat_value_),
  };
  CMsgAMGetUserGameStatsResponse_Stats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGetUserGameStatsResponse_Stats_descriptor_,
      CMsgAMGetUserGameStatsResponse_Stats::default_instance_,
      CMsgAMGetUserGameStatsResponse_Stats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGetUserGameStatsResponse_Stats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _internal_metadata_),
      -1);
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_ = CMsgAMGetUserGameStatsResponse_descriptor_->nested_type(1);
  static const int CMsgAMGetUserGameStatsResponse_Achievement_Blocks_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, achievement_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, achievement_bit_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, unlock_time_),
  };
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_,
      CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance_,
      CMsgAMGetUserGameStatsResponse_Achievement_Blocks_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGetUserGameStatsResponse_Achievement_Blocks),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _internal_metadata_),
      -1);
  CMsgGCGetCommandList_descriptor_ = file->message_type(13);
  static const int CMsgGCGetCommandList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetCommandList, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetCommandList, command_prefix_),
  };
  CMsgGCGetCommandList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetCommandList_descriptor_,
      CMsgGCGetCommandList::default_instance_,
      CMsgGCGetCommandList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetCommandList, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetCommandList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetCommandList, _internal_metadata_),
      -1);
  CMsgGCGetCommandListResponse_descriptor_ = file->message_type(14);
  static const int CMsgGCGetCommandListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetCommandListResponse, command_name_),
  };
  CMsgGCGetCommandListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetCommandListResponse_descriptor_,
      CMsgGCGetCommandListResponse::default_instance_,
      CMsgGCGetCommandListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetCommandListResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetCommandListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetCommandListResponse, _internal_metadata_),
      -1);
  CGCMsgMemCachedGet_descriptor_ = file->message_type(15);
  static const int CGCMsgMemCachedGet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGet, keys_),
  };
  CGCMsgMemCachedGet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedGet_descriptor_,
      CGCMsgMemCachedGet::default_instance_,
      CGCMsgMemCachedGet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGet, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedGet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGet, _internal_metadata_),
      -1);
  CGCMsgMemCachedGetResponse_descriptor_ = file->message_type(16);
  static const int CGCMsgMemCachedGetResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGetResponse, values_),
  };
  CGCMsgMemCachedGetResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedGetResponse_descriptor_,
      CGCMsgMemCachedGetResponse::default_instance_,
      CGCMsgMemCachedGetResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGetResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedGetResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGetResponse, _internal_metadata_),
      -1);
  CGCMsgMemCachedGetResponse_ValueTag_descriptor_ = CGCMsgMemCachedGetResponse_descriptor_->nested_type(0);
  static const int CGCMsgMemCachedGetResponse_ValueTag_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, found_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, value_),
  };
  CGCMsgMemCachedGetResponse_ValueTag_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedGetResponse_ValueTag_descriptor_,
      CGCMsgMemCachedGetResponse_ValueTag::default_instance_,
      CGCMsgMemCachedGetResponse_ValueTag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedGetResponse_ValueTag),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _internal_metadata_),
      -1);
  CGCMsgMemCachedSet_descriptor_ = file->message_type(17);
  static const int CGCMsgMemCachedSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedSet, keys_),
  };
  CGCMsgMemCachedSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedSet_descriptor_,
      CGCMsgMemCachedSet::default_instance_,
      CGCMsgMemCachedSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedSet, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedSet, _internal_metadata_),
      -1);
  CGCMsgMemCachedSet_KeyPair_descriptor_ = CGCMsgMemCachedSet_descriptor_->nested_type(0);
  static const int CGCMsgMemCachedSet_KeyPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, value_),
  };
  CGCMsgMemCachedSet_KeyPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedSet_KeyPair_descriptor_,
      CGCMsgMemCachedSet_KeyPair::default_instance_,
      CGCMsgMemCachedSet_KeyPair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedSet_KeyPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _internal_metadata_),
      -1);
  CGCMsgMemCachedDelete_descriptor_ = file->message_type(18);
  static const int CGCMsgMemCachedDelete_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedDelete, keys_),
  };
  CGCMsgMemCachedDelete_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedDelete_descriptor_,
      CGCMsgMemCachedDelete::default_instance_,
      CGCMsgMemCachedDelete_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedDelete, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedDelete),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedDelete, _internal_metadata_),
      -1);
  CGCMsgMemCachedStats_descriptor_ = file->message_type(19);
  static const int CGCMsgMemCachedStats_offsets_[1] = {
  };
  CGCMsgMemCachedStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedStats_descriptor_,
      CGCMsgMemCachedStats::default_instance_,
      CGCMsgMemCachedStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStats, _internal_metadata_),
      -1);
  CGCMsgMemCachedStatsResponse_descriptor_ = file->message_type(20);
  static const int CGCMsgMemCachedStatsResponse_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, curr_connections_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, cmd_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, cmd_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, cmd_flush_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, get_hits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, get_misses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, delete_hits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, delete_misses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, bytes_read_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, bytes_written_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, limit_maxbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, curr_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, evictions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, bytes_),
  };
  CGCMsgMemCachedStatsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgMemCachedStatsResponse_descriptor_,
      CGCMsgMemCachedStatsResponse::default_instance_,
      CGCMsgMemCachedStatsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgMemCachedStatsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _internal_metadata_),
      -1);
  CGCMsgSQLStats_descriptor_ = file->message_type(21);
  static const int CGCMsgSQLStats_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStats, schema_catalog_),
  };
  CGCMsgSQLStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgSQLStats_descriptor_,
      CGCMsgSQLStats::default_instance_,
      CGCMsgSQLStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgSQLStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStats, _internal_metadata_),
      -1);
  CGCMsgSQLStatsResponse_descriptor_ = file->message_type(22);
  static const int CGCMsgSQLStatsResponse_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, threads_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, threads_connected_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, threads_active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, operations_submitted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, prepared_statements_executed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, non_prepared_statements_executed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, deadlock_retries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, operations_timed_out_in_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, errors_),
  };
  CGCMsgSQLStatsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgSQLStatsResponse_descriptor_,
      CGCMsgSQLStatsResponse::default_instance_,
      CGCMsgSQLStatsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgSQLStatsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSQLStatsResponse, _internal_metadata_),
      -1);
  CMsgAMAddFreeLicense_descriptor_ = file->message_type(23);
  static const int CMsgAMAddFreeLicense_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicense, steamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicense, ip_public_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicense, packageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicense, store_country_code_),
  };
  CMsgAMAddFreeLicense_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMAddFreeLicense_descriptor_,
      CMsgAMAddFreeLicense::default_instance_,
      CMsgAMAddFreeLicense_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicense, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMAddFreeLicense),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicense, _internal_metadata_),
      -1);
  CMsgAMAddFreeLicenseResponse_descriptor_ = file->message_type(24);
  static const int CMsgAMAddFreeLicenseResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, purchase_result_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, transid_),
  };
  CMsgAMAddFreeLicenseResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMAddFreeLicenseResponse_descriptor_,
      CMsgAMAddFreeLicenseResponse::default_instance_,
      CMsgAMAddFreeLicenseResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMAddFreeLicenseResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _internal_metadata_),
      -1);
  CGCMsgGetIPLocation_descriptor_ = file->message_type(25);
  static const int CGCMsgGetIPLocation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPLocation, ips_),
  };
  CGCMsgGetIPLocation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgGetIPLocation_descriptor_,
      CGCMsgGetIPLocation::default_instance_,
      CGCMsgGetIPLocation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPLocation, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgGetIPLocation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPLocation, _internal_metadata_),
      -1);
  CIPLocationInfo_descriptor_ = file->message_type(26);
  static const int CIPLocationInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, city_),
  };
  CIPLocationInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CIPLocationInfo_descriptor_,
      CIPLocationInfo::default_instance_,
      CIPLocationInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CIPLocationInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPLocationInfo, _internal_metadata_),
      -1);
  CGCMsgGetIPLocationResponse_descriptor_ = file->message_type(27);
  static const int CGCMsgGetIPLocationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPLocationResponse, infos_),
  };
  CGCMsgGetIPLocationResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgGetIPLocationResponse_descriptor_,
      CGCMsgGetIPLocationResponse::default_instance_,
      CGCMsgGetIPLocationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPLocationResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgGetIPLocationResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPLocationResponse, _internal_metadata_),
      -1);
  CGCMsgGetIPASN_descriptor_ = file->message_type(28);
  static const int CGCMsgGetIPASN_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPASN, ips_),
  };
  CGCMsgGetIPASN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgGetIPASN_descriptor_,
      CGCMsgGetIPASN::default_instance_,
      CGCMsgGetIPASN_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPASN, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgGetIPASN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPASN, _internal_metadata_),
      -1);
  CIPASNInfo_descriptor_ = file->message_type(29);
  static const int CIPASNInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPASNInfo, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPASNInfo, asn_),
  };
  CIPASNInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CIPASNInfo_descriptor_,
      CIPASNInfo::default_instance_,
      CIPASNInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPASNInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CIPASNInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CIPASNInfo, _internal_metadata_),
      -1);
  CGCMsgGetIPASNResponse_descriptor_ = file->message_type(30);
  static const int CGCMsgGetIPASNResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPASNResponse, infos_),
  };
  CGCMsgGetIPASNResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgGetIPASNResponse_descriptor_,
      CGCMsgGetIPASNResponse::default_instance_,
      CGCMsgGetIPASNResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPASNResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgGetIPASNResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetIPASNResponse, _internal_metadata_),
      -1);
  CGCMsgSystemStatsSchema_descriptor_ = file->message_type(31);
  static const int CGCMsgSystemStatsSchema_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSystemStatsSchema, gc_app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSystemStatsSchema, schema_kv_),
  };
  CGCMsgSystemStatsSchema_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgSystemStatsSchema_descriptor_,
      CGCMsgSystemStatsSchema::default_instance_,
      CGCMsgSystemStatsSchema_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSystemStatsSchema, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgSystemStatsSchema),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgSystemStatsSchema, _internal_metadata_),
      -1);
  CGCMsgGetSystemStats_descriptor_ = file->message_type(32);
  static const int CGCMsgGetSystemStats_offsets_[1] = {
  };
  CGCMsgGetSystemStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgGetSystemStats_descriptor_,
      CGCMsgGetSystemStats::default_instance_,
      CGCMsgGetSystemStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgGetSystemStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStats, _internal_metadata_),
      -1);
  CGCMsgGetSystemStatsResponse_descriptor_ = file->message_type(33);
  static const int CGCMsgGetSystemStatsResponse_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, gc_app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, stats_kv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, active_jobs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, yielding_jobs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, user_sessions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, game_server_sessions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, socaches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, socaches_to_unload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, socaches_loading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, writeback_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, steamid_locks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, logon_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, logon_jobs_),
  };
  CGCMsgGetSystemStatsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCMsgGetSystemStatsResponse_descriptor_,
      CGCMsgGetSystemStatsResponse::default_instance_,
      CGCMsgGetSystemStatsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCMsgGetSystemStatsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _internal_metadata_),
      -1);
  CMsgAMSendEmail_descriptor_ = file->message_type(34);
  static const int CMsgAMSendEmail_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, steamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, email_msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, email_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, persona_name_tokens_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, source_gc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, tokens_),
  };
  CMsgAMSendEmail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMSendEmail_descriptor_,
      CMsgAMSendEmail::default_instance_,
      CMsgAMSendEmail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMSendEmail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail, _internal_metadata_),
      -1);
  CMsgAMSendEmail_ReplacementToken_descriptor_ = CMsgAMSendEmail_descriptor_->nested_type(0);
  static const int CMsgAMSendEmail_ReplacementToken_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, token_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, token_value_),
  };
  CMsgAMSendEmail_ReplacementToken_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMSendEmail_ReplacementToken_descriptor_,
      CMsgAMSendEmail_ReplacementToken::default_instance_,
      CMsgAMSendEmail_ReplacementToken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMSendEmail_ReplacementToken),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _internal_metadata_),
      -1);
  CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_ = CMsgAMSendEmail_descriptor_->nested_type(1);
  static const int CMsgAMSendEmail_PersonaNameReplacementToken_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, steamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, token_name_),
  };
  CMsgAMSendEmail_PersonaNameReplacementToken_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_,
      CMsgAMSendEmail_PersonaNameReplacementToken::default_instance_,
      CMsgAMSendEmail_PersonaNameReplacementToken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMSendEmail_PersonaNameReplacementToken),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _internal_metadata_),
      -1);
  CMsgAMSendEmailResponse_descriptor_ = file->message_type(35);
  static const int CMsgAMSendEmailResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmailResponse, eresult_),
  };
  CMsgAMSendEmailResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMSendEmailResponse_descriptor_,
      CMsgAMSendEmailResponse::default_instance_,
      CMsgAMSendEmailResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmailResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMSendEmailResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMSendEmailResponse, _internal_metadata_),
      -1);
  CMsgGCGetEmailTemplate_descriptor_ = file->message_type(36);
  static const int CMsgGCGetEmailTemplate_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplate, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplate, email_msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplate, email_lang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplate, email_format_),
  };
  CMsgGCGetEmailTemplate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetEmailTemplate_descriptor_,
      CMsgGCGetEmailTemplate::default_instance_,
      CMsgGCGetEmailTemplate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplate, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetEmailTemplate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplate, _internal_metadata_),
      -1);
  CMsgGCGetEmailTemplateResponse_descriptor_ = file->message_type(37);
  static const int CMsgGCGetEmailTemplateResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, template_exists_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, template__),
  };
  CMsgGCGetEmailTemplateResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetEmailTemplateResponse_descriptor_,
      CMsgGCGetEmailTemplateResponse::default_instance_,
      CMsgGCGetEmailTemplateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetEmailTemplateResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _internal_metadata_),
      -1);
  CMsgAMGrantGuestPasses2_descriptor_ = file->message_type(38);
  static const int CMsgAMGrantGuestPasses2_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2, steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2, package_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2, passes_to_grant_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2, days_to_expiration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2, action_),
  };
  CMsgAMGrantGuestPasses2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGrantGuestPasses2_descriptor_,
      CMsgAMGrantGuestPasses2::default_instance_,
      CMsgAMGrantGuestPasses2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGrantGuestPasses2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _internal_metadata_),
      -1);
  CMsgAMGrantGuestPasses2Response_descriptor_ = file->message_type(39);
  static const int CMsgAMGrantGuestPasses2Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, passes_granted_),
  };
  CMsgAMGrantGuestPasses2Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgAMGrantGuestPasses2Response_descriptor_,
      CMsgAMGrantGuestPasses2Response::default_instance_,
      CMsgAMGrantGuestPasses2Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgAMGrantGuestPasses2Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _internal_metadata_),
      -1);
  CGCSystemMsg_GetAccountDetails_descriptor_ = file->message_type(40);
  static const int CGCSystemMsg_GetAccountDetails_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, steamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, appid_),
  };
  CGCSystemMsg_GetAccountDetails_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCSystemMsg_GetAccountDetails_descriptor_,
      CGCSystemMsg_GetAccountDetails::default_instance_,
      CGCSystemMsg_GetAccountDetails_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCSystemMsg_GetAccountDetails),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _internal_metadata_),
      -1);
  CGCSystemMsg_GetAccountDetails_Response_descriptor_ = file->message_type(41);
  static const int CGCSystemMsg_GetAccountDetails_Response_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, eresult_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, persona_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_profile_created_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_profile_public_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_inventory_public_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_vac_banned_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_cyber_cafe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_school_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_limited_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_subscribed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, package_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_free_trial_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, free_trial_expiration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_low_violence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_account_locked_down_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_community_banned_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, is_trade_banned_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, trade_ban_expiration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, suspension_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, steam_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, friend_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, account_creation_time_),
  };
  CGCSystemMsg_GetAccountDetails_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCSystemMsg_GetAccountDetails_Response_descriptor_,
      CGCSystemMsg_GetAccountDetails_Response::default_instance_,
      CGCSystemMsg_GetAccountDetails_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCSystemMsg_GetAccountDetails_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _internal_metadata_),
      -1);
  CMsgGCGetPersonaNames_descriptor_ = file->message_type(42);
  static const int CMsgGCGetPersonaNames_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames, steamids_),
  };
  CMsgGCGetPersonaNames_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetPersonaNames_descriptor_,
      CMsgGCGetPersonaNames::default_instance_,
      CMsgGCGetPersonaNames_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetPersonaNames),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames, _internal_metadata_),
      -1);
  CMsgGCGetPersonaNames_Response_descriptor_ = file->message_type(43);
  static const int CMsgGCGetPersonaNames_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, succeeded_lookups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, failed_lookup_steamids_),
  };
  CMsgGCGetPersonaNames_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetPersonaNames_Response_descriptor_,
      CMsgGCGetPersonaNames_Response::default_instance_,
      CMsgGCGetPersonaNames_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetPersonaNames_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, _internal_metadata_),
      -1);
  CMsgGCGetPersonaNames_Response_PersonaName_descriptor_ = CMsgGCGetPersonaNames_Response_descriptor_->nested_type(0);
  static const int CMsgGCGetPersonaNames_Response_PersonaName_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, steamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, persona_name_),
  };
  CMsgGCGetPersonaNames_Response_PersonaName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetPersonaNames_Response_PersonaName_descriptor_,
      CMsgGCGetPersonaNames_Response_PersonaName::default_instance_,
      CMsgGCGetPersonaNames_Response_PersonaName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetPersonaNames_Response_PersonaName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _internal_metadata_),
      -1);
  CMsgGCCheckFriendship_descriptor_ = file->message_type(44);
  static const int CMsgGCCheckFriendship_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship, steamid_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship, steamid_right_),
  };
  CMsgGCCheckFriendship_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCCheckFriendship_descriptor_,
      CMsgGCCheckFriendship::default_instance_,
      CMsgGCCheckFriendship_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCCheckFriendship),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship, _internal_metadata_),
      -1);
  CMsgGCCheckFriendship_Response_descriptor_ = file->message_type(45);
  static const int CMsgGCCheckFriendship_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship_Response, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship_Response, found_friendship_),
  };
  CMsgGCCheckFriendship_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCCheckFriendship_Response_descriptor_,
      CMsgGCCheckFriendship_Response::default_instance_,
      CMsgGCCheckFriendship_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCCheckFriendship_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _internal_metadata_),
      -1);
  CMsgGCGetAppFriendsList_descriptor_ = file->message_type(46);
  static const int CMsgGCGetAppFriendsList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetAppFriendsList, steamid_),
  };
  CMsgGCGetAppFriendsList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetAppFriendsList_descriptor_,
      CMsgGCGetAppFriendsList::default_instance_,
      CMsgGCGetAppFriendsList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetAppFriendsList, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetAppFriendsList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetAppFriendsList, _internal_metadata_),
      -1);
  CMsgGCGetAppFriendsList_Response_descriptor_ = file->message_type(47);
  static const int CMsgGCGetAppFriendsList_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetAppFriendsList_Response, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetAppFriendsList_Response, steamids_),
  };
  CMsgGCGetAppFriendsList_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetAppFriendsList_Response_descriptor_,
      CMsgGCGetAppFriendsList_Response::default_instance_,
      CMsgGCGetAppFriendsList_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetAppFriendsList_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetAppFriendsList_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetAppFriendsList_Response, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetDirectory_descriptor_ = file->message_type(48);
  static const int CMsgGCMsgMasterSetDirectory_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, master_dir_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, dir_),
  };
  CMsgGCMsgMasterSetDirectory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetDirectory_descriptor_,
      CMsgGCMsgMasterSetDirectory::default_instance_,
      CMsgGCMsgMasterSetDirectory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetDirectory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetDirectory_SubGC_descriptor_ = CMsgGCMsgMasterSetDirectory_descriptor_->nested_type(0);
  static const int CMsgGCMsgMasterSetDirectory_SubGC_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, dir_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, box_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, command_line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, gc_binary_),
  };
  CMsgGCMsgMasterSetDirectory_SubGC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetDirectory_SubGC_descriptor_,
      CMsgGCMsgMasterSetDirectory_SubGC::default_instance_,
      CMsgGCMsgMasterSetDirectory_SubGC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetDirectory_SubGC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetDirectory_Response_descriptor_ = file->message_type(49);
  static const int CMsgGCMsgMasterSetDirectory_Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, eresult_),
  };
  CMsgGCMsgMasterSetDirectory_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetDirectory_Response_descriptor_,
      CMsgGCMsgMasterSetDirectory_Response::default_instance_,
      CMsgGCMsgMasterSetDirectory_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetDirectory_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _internal_metadata_),
      -1);
  CMsgGCMsgWebAPIJobRequestForwardResponse_descriptor_ = file->message_type(50);
  static const int CMsgGCMsgWebAPIJobRequestForwardResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgWebAPIJobRequestForwardResponse, dir_index_),
  };
  CMsgGCMsgWebAPIJobRequestForwardResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgWebAPIJobRequestForwardResponse_descriptor_,
      CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance_,
      CMsgGCMsgWebAPIJobRequestForwardResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgWebAPIJobRequestForwardResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgWebAPIJobRequestForwardResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgWebAPIJobRequestForwardResponse, _internal_metadata_),
      -1);
  CGCSystemMsg_GetPurchaseTrust_Request_descriptor_ = file->message_type(51);
  static const int CGCSystemMsg_GetPurchaseTrust_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Request, steamid_),
  };
  CGCSystemMsg_GetPurchaseTrust_Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCSystemMsg_GetPurchaseTrust_Request_descriptor_,
      CGCSystemMsg_GetPurchaseTrust_Request::default_instance_,
      CGCSystemMsg_GetPurchaseTrust_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Request, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCSystemMsg_GetPurchaseTrust_Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Request, _internal_metadata_),
      -1);
  CGCSystemMsg_GetPurchaseTrust_Response_descriptor_ = file->message_type(52);
  static const int CGCSystemMsg_GetPurchaseTrust_Response_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, has_prior_purchase_history_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, has_no_recent_password_resets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, is_wallet_cash_trusted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, time_all_trusted_),
  };
  CGCSystemMsg_GetPurchaseTrust_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCSystemMsg_GetPurchaseTrust_Response_descriptor_,
      CGCSystemMsg_GetPurchaseTrust_Response::default_instance_,
      CGCSystemMsg_GetPurchaseTrust_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCSystemMsg_GetPurchaseTrust_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _internal_metadata_),
      -1);
  CMsgGCHAccountVacStatusChange_descriptor_ = file->message_type(53);
  static const int CMsgGCHAccountVacStatusChange_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, rtime_vacban_starts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, is_banned_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, is_banned_future_),
  };
  CMsgGCHAccountVacStatusChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCHAccountVacStatusChange_descriptor_,
      CMsgGCHAccountVacStatusChange::default_instance_,
      CMsgGCHAccountVacStatusChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCHAccountVacStatusChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _internal_metadata_),
      -1);
  CMsgGCGetPartnerAccountLink_descriptor_ = file->message_type(54);
  static const int CMsgGCGetPartnerAccountLink_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPartnerAccountLink, steamid_),
  };
  CMsgGCGetPartnerAccountLink_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetPartnerAccountLink_descriptor_,
      CMsgGCGetPartnerAccountLink::default_instance_,
      CMsgGCGetPartnerAccountLink_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPartnerAccountLink, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetPartnerAccountLink),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPartnerAccountLink, _internal_metadata_),
      -1);
  CMsgGCGetPartnerAccountLink_Response_descriptor_ = file->message_type(55);
  static const int CMsgGCGetPartnerAccountLink_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, pwid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, nexonid_),
  };
  CMsgGCGetPartnerAccountLink_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCGetPartnerAccountLink_Response_descriptor_,
      CMsgGCGetPartnerAccountLink_Response::default_instance_,
      CMsgGCGetPartnerAccountLink_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCGetPartnerAccountLink_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _internal_metadata_),
      -1);
  CMsgGCRoutingInfo_descriptor_ = file->message_type(56);
  static const int CMsgGCRoutingInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRoutingInfo, dir_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRoutingInfo, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRoutingInfo, fallback_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRoutingInfo, protobuf_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRoutingInfo, webapi_param_),
  };
  CMsgGCRoutingInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCRoutingInfo_descriptor_,
      CMsgGCRoutingInfo::default_instance_,
      CMsgGCRoutingInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRoutingInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCRoutingInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRoutingInfo, _internal_metadata_),
      -1);
  CMsgGCRoutingInfo_RoutingMethod_descriptor_ = CMsgGCRoutingInfo_descriptor_->enum_type(0);
  CMsgGCMsgMasterSetWebAPIRouting_descriptor_ = file->message_type(57);
  static const int CMsgGCMsgMasterSetWebAPIRouting_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting, entries_),
  };
  CMsgGCMsgMasterSetWebAPIRouting_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetWebAPIRouting_descriptor_,
      CMsgGCMsgMasterSetWebAPIRouting::default_instance_,
      CMsgGCMsgMasterSetWebAPIRouting_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetWebAPIRouting),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetWebAPIRouting_Entry_descriptor_ = CMsgGCMsgMasterSetWebAPIRouting_descriptor_->nested_type(0);
  static const int CMsgGCMsgMasterSetWebAPIRouting_Entry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, interface_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, method_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, routing_),
  };
  CMsgGCMsgMasterSetWebAPIRouting_Entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetWebAPIRouting_Entry_descriptor_,
      CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance_,
      CMsgGCMsgMasterSetWebAPIRouting_Entry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetWebAPIRouting_Entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetClientMsgRouting_descriptor_ = file->message_type(58);
  static const int CMsgGCMsgMasterSetClientMsgRouting_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting, entries_),
  };
  CMsgGCMsgMasterSetClientMsgRouting_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetClientMsgRouting_descriptor_,
      CMsgGCMsgMasterSetClientMsgRouting::default_instance_,
      CMsgGCMsgMasterSetClientMsgRouting_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetClientMsgRouting),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetClientMsgRouting_Entry_descriptor_ = CMsgGCMsgMasterSetClientMsgRouting_descriptor_->nested_type(0);
  static const int CMsgGCMsgMasterSetClientMsgRouting_Entry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, routing_),
  };
  CMsgGCMsgMasterSetClientMsgRouting_Entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetClientMsgRouting_Entry_descriptor_,
      CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance_,
      CMsgGCMsgMasterSetClientMsgRouting_Entry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetClientMsgRouting_Entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetWebAPIRouting_Response_descriptor_ = file->message_type(59);
  static const int CMsgGCMsgMasterSetWebAPIRouting_Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Response, eresult_),
  };
  CMsgGCMsgMasterSetWebAPIRouting_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetWebAPIRouting_Response_descriptor_,
      CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance_,
      CMsgGCMsgMasterSetWebAPIRouting_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetWebAPIRouting_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Response, _internal_metadata_),
      -1);
  CMsgGCMsgMasterSetClientMsgRouting_Response_descriptor_ = file->message_type(60);
  static const int CMsgGCMsgMasterSetClientMsgRouting_Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Response, eresult_),
  };
  CMsgGCMsgMasterSetClientMsgRouting_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgMasterSetClientMsgRouting_Response_descriptor_,
      CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance_,
      CMsgGCMsgMasterSetClientMsgRouting_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgMasterSetClientMsgRouting_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Response, _internal_metadata_),
      -1);
  CMsgGCMsgSetOptions_descriptor_ = file->message_type(61);
  static const int CMsgGCMsgSetOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions, options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions, client_msg_ranges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions, gcsql_version_),
  };
  CMsgGCMsgSetOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgSetOptions_descriptor_,
      CMsgGCMsgSetOptions::default_instance_,
      CMsgGCMsgSetOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgSetOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions, _internal_metadata_),
      -1);
  CMsgGCMsgSetOptions_MessageRange_descriptor_ = CMsgGCMsgSetOptions_descriptor_->nested_type(0);
  static const int CMsgGCMsgSetOptions_MessageRange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, high_),
  };
  CMsgGCMsgSetOptions_MessageRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCMsgSetOptions_MessageRange_descriptor_,
      CMsgGCMsgSetOptions_MessageRange::default_instance_,
      CMsgGCMsgSetOptions_MessageRange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCMsgSetOptions_MessageRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _internal_metadata_),
      -1);
  CMsgGCMsgSetOptions_Option_descriptor_ = CMsgGCMsgSetOptions_descriptor_->enum_type(0);
  CMsgGCMsgSetOptions_GCSQLVersion_descriptor_ = CMsgGCMsgSetOptions_descriptor_->enum_type(1);
  CMsgGCHUpdateSession_descriptor_ = file->message_type(62);
  static const int CMsgGCHUpdateSession_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, server_steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, server_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, server_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, os_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, client_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, extra_fields_),
  };
  CMsgGCHUpdateSession_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCHUpdateSession_descriptor_,
      CMsgGCHUpdateSession::default_instance_,
      CMsgGCHUpdateSession_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCHUpdateSession),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession, _internal_metadata_),
      -1);
  CMsgGCHUpdateSession_ExtraField_descriptor_ = CMsgGCHUpdateSession_descriptor_->nested_type(0);
  static const int CMsgGCHUpdateSession_ExtraField_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, value_),
  };
  CMsgGCHUpdateSession_ExtraField_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgGCHUpdateSession_ExtraField_descriptor_,
      CMsgGCHUpdateSession_ExtraField::default_instance_,
      CMsgGCHUpdateSession_ExtraField_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgGCHUpdateSession_ExtraField),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _internal_metadata_),
      -1);
  CMsgNotificationOfSuspiciousActivity_descriptor_ = file->message_type(63);
  static const int CMsgNotificationOfSuspiciousActivity_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, steamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, multiple_instances_),
  };
  CMsgNotificationOfSuspiciousActivity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgNotificationOfSuspiciousActivity_descriptor_,
      CMsgNotificationOfSuspiciousActivity::default_instance_,
      CMsgNotificationOfSuspiciousActivity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgNotificationOfSuspiciousActivity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _internal_metadata_),
      -1);
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_descriptor_ = CMsgNotificationOfSuspiciousActivity_descriptor_->nested_type(0);
  static const int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, app_instance_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, other_steamids_),
  };
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_descriptor_,
      CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance_,
      CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _internal_metadata_),
      -1);
  CMsgDPPartnerMicroTxns_descriptor_ = file->message_type(64);
  static const int CMsgDPPartnerMicroTxns_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns, gc_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns, partner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns, transactions_),
  };
  CMsgDPPartnerMicroTxns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgDPPartnerMicroTxns_descriptor_,
      CMsgDPPartnerMicroTxns::default_instance_,
      CMsgDPPartnerMicroTxns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgDPPartnerMicroTxns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _internal_metadata_),
      -1);
  CMsgDPPartnerMicroTxns_PartnerMicroTxn_descriptor_ = CMsgDPPartnerMicroTxns_descriptor_->nested_type(0);
  static const int CMsgDPPartnerMicroTxns_PartnerMicroTxn_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, init_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, last_update_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, txn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, line_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, def_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, tax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, price_usd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, tax_usd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, purchase_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, steam_txn_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, country_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, region_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, ref_trans_id_),
  };
  CMsgDPPartnerMicroTxns_PartnerMicroTxn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgDPPartnerMicroTxns_PartnerMicroTxn_descriptor_,
      CMsgDPPartnerMicroTxns_PartnerMicroTxn::default_instance_,
      CMsgDPPartnerMicroTxns_PartnerMicroTxn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgDPPartnerMicroTxns_PartnerMicroTxn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _internal_metadata_),
      -1);
  CMsgDPPartnerMicroTxns_PartnerInfo_descriptor_ = CMsgDPPartnerMicroTxns_descriptor_->nested_type(1);
  static const int CMsgDPPartnerMicroTxns_PartnerInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, partner_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, currency_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, currency_name_),
  };
  CMsgDPPartnerMicroTxns_PartnerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgDPPartnerMicroTxns_PartnerInfo_descriptor_,
      CMsgDPPartnerMicroTxns_PartnerInfo::default_instance_,
      CMsgDPPartnerMicroTxns_PartnerInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgDPPartnerMicroTxns_PartnerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _internal_metadata_),
      -1);
  CMsgDPPartnerMicroTxnsResponse_descriptor_ = file->message_type(65);
  static const int CMsgDPPartnerMicroTxnsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, eerrorcode_),
  };
  CMsgDPPartnerMicroTxnsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMsgDPPartnerMicroTxnsResponse_descriptor_,
      CMsgDPPartnerMicroTxnsResponse::default_instance_,
      CMsgDPPartnerMicroTxnsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(CMsgDPPartnerMicroTxnsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _internal_metadata_),
      -1);
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor_ = CMsgDPPartnerMicroTxnsResponse_descriptor_->enum_type(0);
  GCProtoBufMsgSrc_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_steammessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgProtoBufHeader_descriptor_, &CMsgProtoBufHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgWebAPIKey_descriptor_, &CMsgWebAPIKey::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgHttpRequest_descriptor_, &CMsgHttpRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgHttpRequest_RequestHeader_descriptor_, &CMsgHttpRequest_RequestHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgHttpRequest_QueryParam_descriptor_, &CMsgHttpRequest_QueryParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgWebAPIRequest_descriptor_, &CMsgWebAPIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgHttpResponse_descriptor_, &CMsgHttpResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgHttpResponse_ResponseHeader_descriptor_, &CMsgHttpResponse_ResponseHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMFindAccounts_descriptor_, &CMsgAMFindAccounts::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMFindAccountsResponse_descriptor_, &CMsgAMFindAccountsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgNotifyWatchdog_descriptor_, &CMsgNotifyWatchdog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGetLicenses_descriptor_, &CMsgAMGetLicenses::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgPackageLicense_descriptor_, &CMsgPackageLicense::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGetLicensesResponse_descriptor_, &CMsgAMGetLicensesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGetUserGameStats_descriptor_, &CMsgAMGetUserGameStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGetUserGameStatsResponse_descriptor_, &CMsgAMGetUserGameStatsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGetUserGameStatsResponse_Stats_descriptor_, &CMsgAMGetUserGameStatsResponse_Stats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_, &CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetCommandList_descriptor_, &CMsgGCGetCommandList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetCommandListResponse_descriptor_, &CMsgGCGetCommandListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedGet_descriptor_, &CGCMsgMemCachedGet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedGetResponse_descriptor_, &CGCMsgMemCachedGetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedGetResponse_ValueTag_descriptor_, &CGCMsgMemCachedGetResponse_ValueTag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedSet_descriptor_, &CGCMsgMemCachedSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedSet_KeyPair_descriptor_, &CGCMsgMemCachedSet_KeyPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedDelete_descriptor_, &CGCMsgMemCachedDelete::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedStats_descriptor_, &CGCMsgMemCachedStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgMemCachedStatsResponse_descriptor_, &CGCMsgMemCachedStatsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgSQLStats_descriptor_, &CGCMsgSQLStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgSQLStatsResponse_descriptor_, &CGCMsgSQLStatsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMAddFreeLicense_descriptor_, &CMsgAMAddFreeLicense::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMAddFreeLicenseResponse_descriptor_, &CMsgAMAddFreeLicenseResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgGetIPLocation_descriptor_, &CGCMsgGetIPLocation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CIPLocationInfo_descriptor_, &CIPLocationInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgGetIPLocationResponse_descriptor_, &CGCMsgGetIPLocationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgGetIPASN_descriptor_, &CGCMsgGetIPASN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CIPASNInfo_descriptor_, &CIPASNInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgGetIPASNResponse_descriptor_, &CGCMsgGetIPASNResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgSystemStatsSchema_descriptor_, &CGCMsgSystemStatsSchema::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgGetSystemStats_descriptor_, &CGCMsgGetSystemStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCMsgGetSystemStatsResponse_descriptor_, &CGCMsgGetSystemStatsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMSendEmail_descriptor_, &CMsgAMSendEmail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMSendEmail_ReplacementToken_descriptor_, &CMsgAMSendEmail_ReplacementToken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_, &CMsgAMSendEmail_PersonaNameReplacementToken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMSendEmailResponse_descriptor_, &CMsgAMSendEmailResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetEmailTemplate_descriptor_, &CMsgGCGetEmailTemplate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetEmailTemplateResponse_descriptor_, &CMsgGCGetEmailTemplateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGrantGuestPasses2_descriptor_, &CMsgAMGrantGuestPasses2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgAMGrantGuestPasses2Response_descriptor_, &CMsgAMGrantGuestPasses2Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCSystemMsg_GetAccountDetails_descriptor_, &CGCSystemMsg_GetAccountDetails::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCSystemMsg_GetAccountDetails_Response_descriptor_, &CGCSystemMsg_GetAccountDetails_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetPersonaNames_descriptor_, &CMsgGCGetPersonaNames::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetPersonaNames_Response_descriptor_, &CMsgGCGetPersonaNames_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetPersonaNames_Response_PersonaName_descriptor_, &CMsgGCGetPersonaNames_Response_PersonaName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCCheckFriendship_descriptor_, &CMsgGCCheckFriendship::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCCheckFriendship_Response_descriptor_, &CMsgGCCheckFriendship_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetAppFriendsList_descriptor_, &CMsgGCGetAppFriendsList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetAppFriendsList_Response_descriptor_, &CMsgGCGetAppFriendsList_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetDirectory_descriptor_, &CMsgGCMsgMasterSetDirectory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetDirectory_SubGC_descriptor_, &CMsgGCMsgMasterSetDirectory_SubGC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetDirectory_Response_descriptor_, &CMsgGCMsgMasterSetDirectory_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgWebAPIJobRequestForwardResponse_descriptor_, &CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCSystemMsg_GetPurchaseTrust_Request_descriptor_, &CGCSystemMsg_GetPurchaseTrust_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCSystemMsg_GetPurchaseTrust_Response_descriptor_, &CGCSystemMsg_GetPurchaseTrust_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCHAccountVacStatusChange_descriptor_, &CMsgGCHAccountVacStatusChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetPartnerAccountLink_descriptor_, &CMsgGCGetPartnerAccountLink::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCGetPartnerAccountLink_Response_descriptor_, &CMsgGCGetPartnerAccountLink_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCRoutingInfo_descriptor_, &CMsgGCRoutingInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetWebAPIRouting_descriptor_, &CMsgGCMsgMasterSetWebAPIRouting::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetWebAPIRouting_Entry_descriptor_, &CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetClientMsgRouting_descriptor_, &CMsgGCMsgMasterSetClientMsgRouting::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetClientMsgRouting_Entry_descriptor_, &CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetWebAPIRouting_Response_descriptor_, &CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgMasterSetClientMsgRouting_Response_descriptor_, &CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgSetOptions_descriptor_, &CMsgGCMsgSetOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCMsgSetOptions_MessageRange_descriptor_, &CMsgGCMsgSetOptions_MessageRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCHUpdateSession_descriptor_, &CMsgGCHUpdateSession::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgGCHUpdateSession_ExtraField_descriptor_, &CMsgGCHUpdateSession_ExtraField::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgNotificationOfSuspiciousActivity_descriptor_, &CMsgNotificationOfSuspiciousActivity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_descriptor_, &CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgDPPartnerMicroTxns_descriptor_, &CMsgDPPartnerMicroTxns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgDPPartnerMicroTxns_PartnerMicroTxn_descriptor_, &CMsgDPPartnerMicroTxns_PartnerMicroTxn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgDPPartnerMicroTxns_PartnerInfo_descriptor_, &CMsgDPPartnerMicroTxns_PartnerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMsgDPPartnerMicroTxnsResponse_descriptor_, &CMsgDPPartnerMicroTxnsResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_steammessages_2eproto() {
  delete CMsgProtoBufHeader::default_instance_;
  delete CMsgProtoBufHeader_reflection_;
  delete CMsgWebAPIKey::default_instance_;
  delete CMsgWebAPIKey_reflection_;
  delete CMsgHttpRequest::default_instance_;
  delete CMsgHttpRequest_reflection_;
  delete CMsgHttpRequest_RequestHeader::default_instance_;
  delete CMsgHttpRequest_RequestHeader_reflection_;
  delete CMsgHttpRequest_QueryParam::default_instance_;
  delete CMsgHttpRequest_QueryParam_reflection_;
  delete CMsgWebAPIRequest::default_instance_;
  delete CMsgWebAPIRequest_reflection_;
  delete CMsgHttpResponse::default_instance_;
  delete CMsgHttpResponse_reflection_;
  delete CMsgHttpResponse_ResponseHeader::default_instance_;
  delete CMsgHttpResponse_ResponseHeader_reflection_;
  delete CMsgAMFindAccounts::default_instance_;
  delete CMsgAMFindAccounts_reflection_;
  delete CMsgAMFindAccountsResponse::default_instance_;
  delete CMsgAMFindAccountsResponse_reflection_;
  delete CMsgNotifyWatchdog::default_instance_;
  delete CMsgNotifyWatchdog_reflection_;
  delete CMsgAMGetLicenses::default_instance_;
  delete CMsgAMGetLicenses_reflection_;
  delete CMsgPackageLicense::default_instance_;
  delete CMsgPackageLicense_reflection_;
  delete CMsgAMGetLicensesResponse::default_instance_;
  delete CMsgAMGetLicensesResponse_reflection_;
  delete CMsgAMGetUserGameStats::default_instance_;
  delete CMsgAMGetUserGameStats_reflection_;
  delete CMsgAMGetUserGameStatsResponse::default_instance_;
  delete CMsgAMGetUserGameStatsResponse_reflection_;
  delete CMsgAMGetUserGameStatsResponse_Stats::default_instance_;
  delete CMsgAMGetUserGameStatsResponse_Stats_reflection_;
  delete CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance_;
  delete CMsgAMGetUserGameStatsResponse_Achievement_Blocks_reflection_;
  delete CMsgGCGetCommandList::default_instance_;
  delete CMsgGCGetCommandList_reflection_;
  delete CMsgGCGetCommandListResponse::default_instance_;
  delete CMsgGCGetCommandListResponse_reflection_;
  delete CGCMsgMemCachedGet::default_instance_;
  delete CGCMsgMemCachedGet_reflection_;
  delete CGCMsgMemCachedGetResponse::default_instance_;
  delete CGCMsgMemCachedGetResponse_reflection_;
  delete CGCMsgMemCachedGetResponse_ValueTag::default_instance_;
  delete CGCMsgMemCachedGetResponse_ValueTag_reflection_;
  delete CGCMsgMemCachedSet::default_instance_;
  delete CGCMsgMemCachedSet_reflection_;
  delete CGCMsgMemCachedSet_KeyPair::default_instance_;
  delete CGCMsgMemCachedSet_KeyPair_reflection_;
  delete CGCMsgMemCachedDelete::default_instance_;
  delete CGCMsgMemCachedDelete_reflection_;
  delete CGCMsgMemCachedStats::default_instance_;
  delete CGCMsgMemCachedStats_reflection_;
  delete CGCMsgMemCachedStatsResponse::default_instance_;
  delete CGCMsgMemCachedStatsResponse_reflection_;
  delete CGCMsgSQLStats::default_instance_;
  delete CGCMsgSQLStats_reflection_;
  delete CGCMsgSQLStatsResponse::default_instance_;
  delete CGCMsgSQLStatsResponse_reflection_;
  delete CMsgAMAddFreeLicense::default_instance_;
  delete CMsgAMAddFreeLicense_reflection_;
  delete CMsgAMAddFreeLicenseResponse::default_instance_;
  delete CMsgAMAddFreeLicenseResponse_reflection_;
  delete CGCMsgGetIPLocation::default_instance_;
  delete CGCMsgGetIPLocation_reflection_;
  delete CIPLocationInfo::default_instance_;
  delete CIPLocationInfo_reflection_;
  delete CGCMsgGetIPLocationResponse::default_instance_;
  delete CGCMsgGetIPLocationResponse_reflection_;
  delete CGCMsgGetIPASN::default_instance_;
  delete CGCMsgGetIPASN_reflection_;
  delete CIPASNInfo::default_instance_;
  delete CIPASNInfo_reflection_;
  delete CGCMsgGetIPASNResponse::default_instance_;
  delete CGCMsgGetIPASNResponse_reflection_;
  delete CGCMsgSystemStatsSchema::default_instance_;
  delete CGCMsgSystemStatsSchema_reflection_;
  delete CGCMsgGetSystemStats::default_instance_;
  delete CGCMsgGetSystemStats_reflection_;
  delete CGCMsgGetSystemStatsResponse::default_instance_;
  delete CGCMsgGetSystemStatsResponse_reflection_;
  delete CMsgAMSendEmail::default_instance_;
  delete CMsgAMSendEmail_reflection_;
  delete CMsgAMSendEmail_ReplacementToken::default_instance_;
  delete CMsgAMSendEmail_ReplacementToken_reflection_;
  delete CMsgAMSendEmail_PersonaNameReplacementToken::default_instance_;
  delete CMsgAMSendEmail_PersonaNameReplacementToken_reflection_;
  delete CMsgAMSendEmailResponse::default_instance_;
  delete CMsgAMSendEmailResponse_reflection_;
  delete CMsgGCGetEmailTemplate::default_instance_;
  delete CMsgGCGetEmailTemplate_reflection_;
  delete CMsgGCGetEmailTemplateResponse::default_instance_;
  delete CMsgGCGetEmailTemplateResponse_reflection_;
  delete CMsgAMGrantGuestPasses2::default_instance_;
  delete CMsgAMGrantGuestPasses2_reflection_;
  delete CMsgAMGrantGuestPasses2Response::default_instance_;
  delete CMsgAMGrantGuestPasses2Response_reflection_;
  delete CGCSystemMsg_GetAccountDetails::default_instance_;
  delete CGCSystemMsg_GetAccountDetails_reflection_;
  delete CGCSystemMsg_GetAccountDetails_Response::default_instance_;
  delete CGCSystemMsg_GetAccountDetails_Response_reflection_;
  delete CMsgGCGetPersonaNames::default_instance_;
  delete CMsgGCGetPersonaNames_reflection_;
  delete CMsgGCGetPersonaNames_Response::default_instance_;
  delete CMsgGCGetPersonaNames_Response_reflection_;
  delete CMsgGCGetPersonaNames_Response_PersonaName::default_instance_;
  delete CMsgGCGetPersonaNames_Response_PersonaName_reflection_;
  delete CMsgGCCheckFriendship::default_instance_;
  delete CMsgGCCheckFriendship_reflection_;
  delete CMsgGCCheckFriendship_Response::default_instance_;
  delete CMsgGCCheckFriendship_Response_reflection_;
  delete CMsgGCGetAppFriendsList::default_instance_;
  delete CMsgGCGetAppFriendsList_reflection_;
  delete CMsgGCGetAppFriendsList_Response::default_instance_;
  delete CMsgGCGetAppFriendsList_Response_reflection_;
  delete CMsgGCMsgMasterSetDirectory::default_instance_;
  delete CMsgGCMsgMasterSetDirectory_reflection_;
  delete CMsgGCMsgMasterSetDirectory_SubGC::default_instance_;
  delete CMsgGCMsgMasterSetDirectory_SubGC_reflection_;
  delete CMsgGCMsgMasterSetDirectory_Response::default_instance_;
  delete CMsgGCMsgMasterSetDirectory_Response_reflection_;
  delete CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance_;
  delete CMsgGCMsgWebAPIJobRequestForwardResponse_reflection_;
  delete CGCSystemMsg_GetPurchaseTrust_Request::default_instance_;
  delete CGCSystemMsg_GetPurchaseTrust_Request_reflection_;
  delete CGCSystemMsg_GetPurchaseTrust_Response::default_instance_;
  delete CGCSystemMsg_GetPurchaseTrust_Response_reflection_;
  delete CMsgGCHAccountVacStatusChange::default_instance_;
  delete CMsgGCHAccountVacStatusChange_reflection_;
  delete CMsgGCGetPartnerAccountLink::default_instance_;
  delete CMsgGCGetPartnerAccountLink_reflection_;
  delete CMsgGCGetPartnerAccountLink_Response::default_instance_;
  delete CMsgGCGetPartnerAccountLink_Response_reflection_;
  delete CMsgGCRoutingInfo::default_instance_;
  delete CMsgGCRoutingInfo_reflection_;
  delete CMsgGCMsgMasterSetWebAPIRouting::default_instance_;
  delete CMsgGCMsgMasterSetWebAPIRouting_reflection_;
  delete CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance_;
  delete CMsgGCMsgMasterSetWebAPIRouting_Entry_reflection_;
  delete CMsgGCMsgMasterSetClientMsgRouting::default_instance_;
  delete CMsgGCMsgMasterSetClientMsgRouting_reflection_;
  delete CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance_;
  delete CMsgGCMsgMasterSetClientMsgRouting_Entry_reflection_;
  delete CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance_;
  delete CMsgGCMsgMasterSetWebAPIRouting_Response_reflection_;
  delete CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance_;
  delete CMsgGCMsgMasterSetClientMsgRouting_Response_reflection_;
  delete CMsgGCMsgSetOptions::default_instance_;
  delete CMsgGCMsgSetOptions_reflection_;
  delete CMsgGCMsgSetOptions_MessageRange::default_instance_;
  delete CMsgGCMsgSetOptions_MessageRange_reflection_;
  delete CMsgGCHUpdateSession::default_instance_;
  delete CMsgGCHUpdateSession_reflection_;
  delete CMsgGCHUpdateSession_ExtraField::default_instance_;
  delete CMsgGCHUpdateSession_ExtraField_reflection_;
  delete CMsgNotificationOfSuspiciousActivity::default_instance_;
  delete CMsgNotificationOfSuspiciousActivity_reflection_;
  delete CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance_;
  delete CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_reflection_;
  delete CMsgDPPartnerMicroTxns::default_instance_;
  delete CMsgDPPartnerMicroTxns_reflection_;
  delete CMsgDPPartnerMicroTxns_PartnerMicroTxn::default_instance_;
  delete CMsgDPPartnerMicroTxns_PartnerMicroTxn_reflection_;
  delete CMsgDPPartnerMicroTxns_PartnerInfo::default_instance_;
  delete CMsgDPPartnerMicroTxns_PartnerInfo_reflection_;
  delete CMsgDPPartnerMicroTxnsResponse::default_instance_;
  delete CMsgDPPartnerMicroTxnsResponse_reflection_;
}

void protobuf_AddDesc_steammessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023steammessages.proto\032 google/protobuf/d"
    "escriptor.proto\"\355\002\n\022CMsgProtoBufHeader\022\027"
    "\n\017client_steam_id\030\001 \001(\006\022\031\n\021client_sessio"
    "n_id\030\002 \001(\005\022\025\n\rsource_app_id\030\003 \001(\r\022+\n\rjob"
    "_id_source\030\n \001(\006:\02418446744073709551615\022+"
    "\n\rjob_id_target\030\013 \001(\006:\02418446744073709551"
    "615\022\027\n\017target_job_name\030\014 \001(\t\022\022\n\007eresult\030"
    "\r \001(\005:\0012\022\025\n\rerror_message\030\016 \001(\t\022D\n\ngc_ms"
    "g_src\030\310\001 \001(\0162\021.GCProtoBufMsgSrc:\034GCProto"
    "BufMsgSrc_Unspecified\022\034\n\023gc_dir_index_so"
    "urce\030\311\001 \001(\r:\n\200\246\035\200\002\210\246\035\200\010\"z\n\rCMsgWebAPIKey"
    "\022\023\n\006status\030\001 \001(\r:\003255\022\025\n\naccount_id\030\002 \001("
    "\r:\0010\022\035\n\022publisher_group_id\030\003 \001(\r:\0010\022\016\n\006k"
    "ey_id\030\004 \001(\r\022\016\n\006domain\030\005 \001(\t\"\335\002\n\017CMsgHttp"
    "Request\022\026\n\016request_method\030\001 \001(\r\022\020\n\010hostn"
    "ame\030\002 \001(\t\022\013\n\003url\030\003 \001(\t\022/\n\007headers\030\004 \003(\0132"
    "\036.CMsgHttpRequest.RequestHeader\022/\n\nget_p"
    "arams\030\005 \003(\0132\033.CMsgHttpRequest.QueryParam"
    "\0220\n\013post_params\030\006 \003(\0132\033.CMsgHttpRequest."
    "QueryParam\022\014\n\004body\030\007 \001(\014\022\030\n\020absolute_tim"
    "eout\030\010 \001(\r\032,\n\rRequestHeader\022\014\n\004name\030\001 \001("
    "\t\022\r\n\005value\030\002 \001(\t\032)\n\nQueryParam\022\014\n\004name\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\014\"\306\001\n\021CMsgWebAPIReques"
    "t\022\027\n\017UNUSED_job_name\030\001 \001(\t\022\026\n\016interface_"
    "name\030\002 \001(\t\022\023\n\013method_name\030\003 \001(\t\022\017\n\007versi"
    "on\030\004 \001(\r\022\037\n\007api_key\030\005 \001(\0132\016.CMsgWebAPIKe"
    "y\022!\n\007request\030\006 \001(\0132\020.CMsgHttpRequest\022\026\n\016"
    "routing_app_id\030\007 \001(\r\"\227\001\n\020CMsgHttpRespons"
    "e\022\023\n\013status_code\030\001 \001(\r\0221\n\007headers\030\002 \003(\0132"
    " .CMsgHttpResponse.ResponseHeader\022\014\n\004bod"
    "y\030\003 \001(\014\032-\n\016ResponseHeader\022\014\n\004name\030\001 \001(\t\022"
    "\r\n\005value\030\002 \001(\t\"@\n\022CMsgAMFindAccounts\022\023\n\013"
    "search_type\030\001 \001(\r\022\025\n\rsearch_string\030\002 \001(\t"
    "\".\n\032CMsgAMFindAccountsResponse\022\020\n\010steam_"
    "id\030\001 \003(\006\"\220\001\n\022CMsgNotifyWatchdog\022\016\n\006sourc"
    "e\030\001 \001(\r\022\022\n\nalert_type\030\002 \001(\r\022\031\n\021alert_des"
    "tination\030\003 \001(\r\022\020\n\010critical\030\004 \001(\010\022\014\n\004time"
    "\030\005 \001(\r\022\r\n\005appid\030\006 \001(\r\022\014\n\004text\030\007 \001(\t\"$\n\021C"
    "MsgAMGetLicenses\022\017\n\007steamid\030\001 \001(\006\"P\n\022CMs"
    "gPackageLicense\022\022\n\npackage_id\030\001 \001(\r\022\024\n\014t"
    "ime_created\030\002 \001(\r\022\020\n\010owner_id\030\003 \001(\r\"Q\n\031C"
    "MsgAMGetLicensesResponse\022$\n\007license\030\001 \003("
    "\0132\023.CMsgPackageLicense\022\016\n\006result\030\002 \001(\r\"J"
    "\n\026CMsgAMGetUserGameStats\022\020\n\010steam_id\030\001 \001"
    "(\006\022\017\n\007game_id\030\002 \001(\006\022\r\n\005stats\030\003 \003(\r\"\352\002\n\036C"
    "MsgAMGetUserGameStatsResponse\022\020\n\010steam_i"
    "d\030\001 \001(\006\022\017\n\007game_id\030\002 \001(\006\022\022\n\007eresult\030\003 \001("
    "\005:\0012\0224\n\005stats\030\004 \003(\0132%.CMsgAMGetUserGameS"
    "tatsResponse.Stats\022N\n\022achievement_blocks"
    "\030\005 \003(\01322.CMsgAMGetUserGameStatsResponse."
    "Achievement_Blocks\032,\n\005Stats\022\017\n\007stat_id\030\001"
    " \001(\r\022\022\n\nstat_value\030\002 \001(\r\032]\n\022Achievement_"
    "Blocks\022\026\n\016achievement_id\030\001 \001(\r\022\032\n\022achiev"
    "ement_bit_id\030\002 \001(\r\022\023\n\013unlock_time\030\003 \001(\007\""
    ">\n\024CMsgGCGetCommandList\022\016\n\006app_id\030\001 \001(\r\022"
    "\026\n\016command_prefix\030\002 \001(\t\"4\n\034CMsgGCGetComm"
    "andListResponse\022\024\n\014command_name\030\001 \003(\t\"\"\n"
    "\022CGCMsgMemCachedGet\022\014\n\004keys\030\001 \003(\t\"|\n\032CGC"
    "MsgMemCachedGetResponse\0224\n\006values\030\001 \003(\0132"
    "$.CGCMsgMemCachedGetResponse.ValueTag\032(\n"
    "\010ValueTag\022\r\n\005found\030\001 \001(\010\022\r\n\005value\030\002 \001(\014\""
    "g\n\022CGCMsgMemCachedSet\022)\n\004keys\030\001 \003(\0132\033.CG"
    "CMsgMemCachedSet.KeyPair\032&\n\007KeyPair\022\014\n\004n"
    "ame\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\"%\n\025CGCMsgMemCac"
    "hedDelete\022\014\n\004keys\030\001 \003(\t\"\026\n\024CGCMsgMemCach"
    "edStats\"\270\002\n\034CGCMsgMemCachedStatsResponse"
    "\022\030\n\020curr_connections\030\001 \001(\004\022\017\n\007cmd_get\030\002 "
    "\001(\004\022\017\n\007cmd_set\030\003 \001(\004\022\021\n\tcmd_flush\030\004 \001(\004\022"
    "\020\n\010get_hits\030\005 \001(\004\022\022\n\nget_misses\030\006 \001(\004\022\023\n"
    "\013delete_hits\030\007 \001(\004\022\025\n\rdelete_misses\030\010 \001("
    "\004\022\022\n\nbytes_read\030\t \001(\004\022\025\n\rbytes_written\030\n"
    " \001(\004\022\026\n\016limit_maxbytes\030\013 \001(\004\022\022\n\ncurr_ite"
    "ms\030\014 \001(\004\022\021\n\tevictions\030\r \001(\004\022\r\n\005bytes\030\016 \001"
    "(\004\"(\n\016CGCMsgSQLStats\022\026\n\016schema_catalog\030\001"
    " \001(\r\"\233\002\n\026CGCMsgSQLStatsResponse\022\017\n\007threa"
    "ds\030\001 \001(\r\022\031\n\021threads_connected\030\002 \001(\r\022\026\n\016t"
    "hreads_active\030\003 \001(\r\022\034\n\024operations_submit"
    "ted\030\004 \001(\r\022$\n\034prepared_statements_execute"
    "d\030\005 \001(\r\022(\n non_prepared_statements_execu"
    "ted\030\006 \001(\r\022\030\n\020deadlock_retries\030\007 \001(\r\022%\n\035o"
    "perations_timed_out_in_queue\030\010 \001(\r\022\016\n\006er"
    "rors\030\t \001(\r\"i\n\024CMsgAMAddFreeLicense\022\017\n\007st"
    "eamid\030\001 \001(\006\022\021\n\tip_public\030\002 \001(\r\022\021\n\tpackag"
    "eid\030\003 \001(\r\022\032\n\022store_country_code\030\004 \001(\t\"c\n"
    "\034CMsgAMAddFreeLicenseResponse\022\022\n\007eresult"
    "\030\001 \001(\005:\0012\022\036\n\026purchase_result_detail\030\002 \001("
    "\005\022\017\n\007transid\030\003 \001(\006\"\"\n\023CGCMsgGetIPLocatio"
    "n\022\013\n\003ips\030\001 \003(\007\"p\n\017CIPLocationInfo\022\n\n\002ip\030"
    "\001 \001(\r\022\020\n\010latitude\030\002 \001(\002\022\021\n\tlongitude\030\003 \001"
    "(\002\022\017\n\007country\030\004 \001(\t\022\r\n\005state\030\005 \001(\t\022\014\n\004ci"
    "ty\030\006 \001(\t\">\n\033CGCMsgGetIPLocationResponse\022"
    "\037\n\005infos\030\001 \003(\0132\020.CIPLocationInfo\"\035\n\016CGCM"
    "sgGetIPASN\022\013\n\003ips\030\001 \003(\007\"%\n\nCIPASNInfo\022\n\n"
    "\002ip\030\001 \001(\007\022\013\n\003asn\030\002 \001(\r\"4\n\026CGCMsgGetIPASN"
    "Response\022\032\n\005infos\030\001 \003(\0132\013.CIPASNInfo\"\?\n\027"
    "CGCMsgSystemStatsSchema\022\021\n\tgc_app_id\030\001 \001"
    "(\r\022\021\n\tschema_kv\030\002 \001(\014\"\026\n\024CGCMsgGetSystem"
    "Stats\"\305\002\n\034CGCMsgGetSystemStatsResponse\022\021"
    "\n\tgc_app_id\030\001 \001(\r\022\020\n\010stats_kv\030\002 \001(\014\022\023\n\013a"
    "ctive_jobs\030\003 \001(\r\022\025\n\ryielding_jobs\030\004 \001(\r\022"
    "\025\n\ruser_sessions\030\005 \001(\r\022\034\n\024game_server_se"
    "ssions\030\006 \001(\r\022\020\n\010socaches\030\007 \001(\r\022\032\n\022socach"
    "es_to_unload\030\010 \001(\r\022\030\n\020socaches_loading\030\t"
    " \001(\r\022\027\n\017writeback_queue\030\n \001(\r\022\025\n\rsteamid"
    "_locks\030\013 \001(\r\022\023\n\013logon_queue\030\014 \001(\r\022\022\n\nlog"
    "on_jobs\030\r \001(\r\"\342\002\n\017CMsgAMSendEmail\022\017\n\007ste"
    "amid\030\001 \001(\006\022\026\n\016email_msg_type\030\002 \001(\r\022\024\n\014em"
    "ail_format\030\003 \001(\r\022I\n\023persona_name_tokens\030"
    "\005 \003(\0132,.CMsgAMSendEmail.PersonaNameRepla"
    "cementToken\022\021\n\tsource_gc\030\006 \001(\r\0221\n\006tokens"
    "\030\007 \003(\0132!.CMsgAMSendEmail.ReplacementToke"
    "n\032;\n\020ReplacementToken\022\022\n\ntoken_name\030\001 \001("
    "\t\022\023\n\013token_value\030\002 \001(\t\032B\n\033PersonaNameRep"
    "lacementToken\022\017\n\007steamid\030\001 \001(\006\022\022\n\ntoken_"
    "name\030\002 \001(\t\"-\n\027CMsgAMSendEmailResponse\022\022\n"
    "\007eresult\030\001 \001(\r:\0012\"j\n\026CMsgGCGetEmailTempl"
    "ate\022\016\n\006app_id\030\001 \001(\r\022\026\n\016email_msg_type\030\002 "
    "\001(\r\022\022\n\nemail_lang\030\003 \001(\005\022\024\n\014email_format\030"
    "\004 \001(\005\"_\n\036CMsgGCGetEmailTemplateResponse\022"
    "\022\n\007eresult\030\001 \001(\r:\0012\022\027\n\017template_exists\030\002"
    " \001(\010\022\020\n\010template\030\003 \001(\t\"\204\001\n\027CMsgAMGrantGu"
    "estPasses2\022\020\n\010steam_id\030\001 \001(\006\022\022\n\npackage_"
    "id\030\002 \001(\r\022\027\n\017passes_to_grant\030\003 \001(\005\022\032\n\022day"
    "s_to_expiration\030\004 \001(\005\022\016\n\006action\030\005 \001(\005\"P\n"
    "\037CMsgAMGrantGuestPasses2Response\022\022\n\007eres"
    "ult\030\001 \001(\005:\0012\022\031\n\016passes_granted\030\002 \001(\005:\0010\""
    "L\n\036CGCSystemMsg_GetAccountDetails\022\017\n\007ste"
    "amid\030\001 \001(\006\022\r\n\005appid\030\002 \001(\r:\n\200\246\035\200\001\210\246\035\200\004\"\260\005"
    "\n\'CGCSystemMsg_GetAccountDetails_Respons"
    "e\022\035\n\022eresult_deprecated\030\001 \001(\r:\0012\022\024\n\014acco"
    "unt_name\030\002 \001(\t\022\024\n\014persona_name\030\003 \001(\t\022\032\n\022"
    "is_profile_created\030\032 \001(\010\022\031\n\021is_profile_p"
    "ublic\030\004 \001(\010\022\033\n\023is_inventory_public\030\005 \001(\010"
    "\022\025\n\ris_vac_banned\030\007 \001(\010\022\025\n\ris_cyber_cafe"
    "\030\010 \001(\010\022\031\n\021is_school_account\030\t \001(\010\022\022\n\nis_"
    "limited\030\n \001(\010\022\025\n\ris_subscribed\030\013 \001(\010\022\017\n\007"
    "package\030\014 \001(\r\022\035\n\025is_free_trial_account\030\r"
    " \001(\010\022\035\n\025free_trial_expiration\030\016 \001(\r\022\027\n\017i"
    "s_low_violence\030\017 \001(\010\022\036\n\026is_account_locke"
    "d_down\030\020 \001(\010\022\033\n\023is_community_banned\030\021 \001("
    "\010\022\027\n\017is_trade_banned\030\022 \001(\010\022\034\n\024trade_ban_"
    "expiration\030\023 \001(\r\022\021\n\taccountid\030\024 \001(\r\022\033\n\023s"
    "uspension_end_time\030\025 \001(\r\022\020\n\010currency\030\026 \001"
    "(\t\022\023\n\013steam_level\030\027 \001(\r\022\024\n\014friend_count\030"
    "\030 \001(\r\022\035\n\025account_creation_time\030\031 \001(\r:\n\200\246"
    "\035\200\001\210\246\035\200\004\")\n\025CMsgGCGetPersonaNames\022\020\n\010ste"
    "amids\030\001 \003(\006\"\276\001\n\036CMsgGCGetPersonaNames_Re"
    "sponse\022F\n\021succeeded_lookups\030\001 \003(\0132+.CMsg"
    "GCGetPersonaNames_Response.PersonaName\022\036"
    "\n\026failed_lookup_steamids\030\002 \003(\006\0324\n\013Person"
    "aName\022\017\n\007steamid\030\001 \001(\006\022\024\n\014persona_name\030\002"
    " \001(\t\"D\n\025CMsgGCCheckFriendship\022\024\n\014steamid"
    "_left\030\001 \001(\006\022\025\n\rsteamid_right\030\002 \001(\006\"K\n\036CM"
    "sgGCCheckFriendship_Response\022\017\n\007success\030"
    "\001 \001(\010\022\030\n\020found_friendship\030\002 \001(\010\"*\n\027CMsgG"
    "CGetAppFriendsList\022\017\n\007steamid\030\001 \001(\006\"E\n C"
    "MsgGCGetAppFriendsList_Response\022\017\n\007succe"
    "ss\030\001 \001(\010\022\020\n\010steamids\030\002 \003(\006\"\310\001\n\033CMsgGCMsg"
    "MasterSetDirectory\022\030\n\020master_dir_index\030\001"
    " \001(\r\022/\n\003dir\030\002 \003(\0132\".CMsgGCMsgMasterSetDi"
    "rectory.SubGC\032^\n\005SubGC\022\021\n\tdir_index\030\001 \001("
    "\r\022\014\n\004name\030\002 \001(\t\022\013\n\003box\030\003 \001(\t\022\024\n\014command_"
    "line\030\004 \001(\t\022\021\n\tgc_binary\030\005 \001(\t\":\n$CMsgGCM"
    "sgMasterSetDirectory_Response\022\022\n\007eresult"
    "\030\001 \001(\005:\0012\"=\n(CMsgGCMsgWebAPIJobRequestFo"
    "rwardResponse\022\021\n\tdir_index\030\001 \001(\r\"8\n%CGCS"
    "ystemMsg_GetPurchaseTrust_Request\022\017\n\007ste"
    "amid\030\001 \001(\006\"\255\001\n&CGCSystemMsg_GetPurchaseT"
    "rust_Response\022\"\n\032has_prior_purchase_hist"
    "ory\030\001 \001(\010\022%\n\035has_no_recent_password_rese"
    "ts\030\002 \001(\010\022\036\n\026is_wallet_cash_trusted\030\003 \001(\010"
    "\022\030\n\020time_all_trusted\030\004 \001(\r\"\217\001\n\035CMsgGCHAc"
    "countVacStatusChange\022\020\n\010steam_id\030\001 \001(\006\022\016"
    "\n\006app_id\030\002 \001(\r\022\033\n\023rtime_vacban_starts\030\003 "
    "\001(\r\022\025\n\ris_banned_now\030\004 \001(\010\022\030\n\020is_banned_"
    "future\030\005 \001(\010\".\n\033CMsgGCGetPartnerAccountL"
    "ink\022\017\n\007steamid\030\001 \001(\006\"E\n$CMsgGCGetPartner"
    "AccountLink_Response\022\014\n\004pwid\030\001 \001(\r\022\017\n\007ne"
    "xonid\030\002 \001(\r\"\275\002\n\021CMsgGCRoutingInfo\022\021\n\tdir"
    "_index\030\001 \003(\r\0228\n\006method\030\002 \001(\0162 .CMsgGCRou"
    "tingInfo.RoutingMethod:\006RANDOM\022;\n\010fallba"
    "ck\030\003 \001(\0162 .CMsgGCRoutingInfo.RoutingMeth"
    "od:\007DISCARD\022\026\n\016protobuf_field\030\004 \001(\r\022\024\n\014w"
    "ebapi_param\030\005 \001(\t\"p\n\rRoutingMethod\022\n\n\006RA"
    "NDOM\020\000\022\013\n\007DISCARD\020\001\022\022\n\016CLIENT_STEAMID\020\002\022"
    "\031\n\025PROTOBUF_FIELD_UINT64\020\003\022\027\n\023WEBAPI_PAR"
    "AM_UINT64\020\004\"\265\001\n\037CMsgGCMsgMasterSetWebAPI"
    "Routing\0227\n\007entries\030\001 \003(\0132&.CMsgGCMsgMast"
    "erSetWebAPIRouting.Entry\032Y\n\005Entry\022\026\n\016int"
    "erface_name\030\001 \001(\t\022\023\n\013method_name\030\002 \001(\t\022#"
    "\n\007routing\030\003 \001(\0132\022.CMsgGCRoutingInfo\"\240\001\n\""
    "CMsgGCMsgMasterSetClientMsgRouting\022:\n\007en"
    "tries\030\001 \003(\0132).CMsgGCMsgMasterSetClientMs"
    "gRouting.Entry\032>\n\005Entry\022\020\n\010msg_type\030\001 \001("
    "\r\022#\n\007routing\030\002 \001(\0132\022.CMsgGCRoutingInfo\">"
    "\n(CMsgGCMsgMasterSetWebAPIRouting_Respon"
    "se\022\022\n\007eresult\030\001 \001(\005:\0012\"A\n+CMsgGCMsgMaste"
    "rSetClientMsgRouting_Response\022\022\n\007eresult"
    "\030\001 \001(\005:\0012\"\266\003\n\023CMsgGCMsgSetOptions\022,\n\007opt"
    "ions\030\001 \003(\0162\033.CMsgGCMsgSetOptions.Option\022"
    "<\n\021client_msg_ranges\030\002 \003(\0132!.CMsgGCMsgSe"
    "tOptions.MessageRange\022P\n\rgcsql_version\030\003"
    " \001(\0162!.CMsgGCMsgSetOptions.GCSQLVersion:"
    "\026GCSQL_VERSION_BASELINE\032)\n\014MessageRange\022"
    "\013\n\003low\030\001 \002(\r\022\014\n\004high\030\002 \002(\r\"n\n\006Option\022\030\n\024"
    "NOTIFY_USER_SESSIONS\020\000\022\032\n\026NOTIFY_SERVER_"
    "SESSIONS\020\001\022\027\n\023NOTIFY_ACHIEVEMENTS\020\002\022\025\n\021N"
    "OTIFY_VAC_ACTION\020\003\"F\n\014GCSQLVersion\022\032\n\026GC"
    "SQL_VERSION_BASELINE\020\001\022\032\n\026GCSQL_VERSION_"
    "BOOLTYPE\020\002\"\224\002\n\024CMsgGCHUpdateSession\022\020\n\010s"
    "team_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\016\n\006online\030"
    "\003 \001(\010\022\027\n\017server_steam_id\030\004 \001(\006\022\023\n\013server"
    "_addr\030\005 \001(\r\022\023\n\013server_port\030\006 \001(\r\022\017\n\007os_t"
    "ype\030\007 \001(\r\022\023\n\013client_addr\030\010 \001(\r\0226\n\014extra_"
    "fields\030\t \003(\0132 .CMsgGCHUpdateSession.Extr"
    "aField\032)\n\nExtraField\022\014\n\004name\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t\"\354\001\n$CMsgNotificationOfSuspicio"
    "usActivity\022\017\n\007steamid\030\001 \001(\006\022\r\n\005appid\030\002 \001"
    "(\r\022W\n\022multiple_instances\030\003 \001(\0132;.CMsgNot"
    "ificationOfSuspiciousActivity.MultipleGa"
    "meInstances\032K\n\025MultipleGameInstances\022\032\n\022"
    "app_instance_count\030\001 \001(\r\022\026\n\016other_steami"
    "ds\030\002 \003(\006\"\362\004\n\026CMsgDPPartnerMicroTxns\022\r\n\005a"
    "ppid\030\001 \001(\r\022\017\n\007gc_name\030\002 \001(\t\0224\n\007partner\030\003"
    " \001(\0132#.CMsgDPPartnerMicroTxns.PartnerInf"
    "o\022=\n\014transactions\030\004 \003(\0132\'.CMsgDPPartnerM"
    "icroTxns.PartnerMicroTxn\032\333\002\n\017PartnerMicr"
    "oTxn\022\021\n\tinit_time\030\001 \001(\r\022\030\n\020last_update_t"
    "ime\030\002 \001(\r\022\016\n\006txn_id\030\003 \001(\004\022\022\n\naccount_id\030"
    "\004 \001(\r\022\021\n\tline_item\030\005 \001(\r\022\017\n\007item_id\030\006 \001("
    "\004\022\021\n\tdef_index\030\007 \001(\r\022\r\n\005price\030\010 \001(\r\022\013\n\003t"
    "ax\030\t \001(\r\022\021\n\tprice_usd\030\n \001(\r\022\017\n\007tax_usd\030\013"
    " \001(\r\022\025\n\rpurchase_type\030\014 \001(\r\022\026\n\016steam_txn"
    "_type\030\r \001(\r\022\024\n\014country_code\030\016 \001(\t\022\023\n\013reg"
    "ion_code\030\017 \001(\t\022\020\n\010quantity\030\020 \001(\005\022\024\n\014ref_"
    "trans_id\030\021 \001(\004\032e\n\013PartnerInfo\022\022\n\npartner"
    "_id\030\001 \001(\r\022\024\n\014partner_name\030\002 \001(\t\022\025\n\rcurre"
    "ncy_code\030\003 \001(\t\022\025\n\rcurrency_name\030\004 \001(\t\"\376\002"
    "\n\036CMsgDPPartnerMicroTxnsResponse\022\022\n\007eres"
    "ult\030\001 \001(\r:\0012\022J\n\neerrorcode\030\002 \001(\0162*.CMsgD"
    "PPartnerMicroTxnsResponse.EErrorCode:\nk_"
    "MsgValid\"\373\001\n\nEErrorCode\022\016\n\nk_MsgValid\020\000\022"
    "\025\n\021k_MsgInvalidAppID\020\001\022\033\n\027k_MsgInvalidPa"
    "rtnerInfo\020\002\022\027\n\023k_MsgNoTransactions\020\003\022\023\n\017"
    "k_MsgSQLFailure\020\004\022\037\n\033k_MsgPartnerInfoDis"
    "crepancy\020\005\022 \n\034k_MsgTransactionInsertFail"
    "ed\020\007\022\027\n\023k_MsgAlreadyRunning\020\010\022\037\n\033k_MsgIn"
    "validTransactionData\020\t*\266\001\n\020GCProtoBufMsg"
    "Src\022 \n\034GCProtoBufMsgSrc_Unspecified\020\000\022\037\n"
    "\033GCProtoBufMsgSrc_FromSystem\020\001\022 \n\034GCProt"
    "oBufMsgSrc_FromSteamID\020\002\022\033\n\027GCProtoBufMs"
    "gSrc_FromGC\020\003\022 \n\034GCProtoBufMsgSrc_ReplyS"
    "ystem\020\004:9\n\tkey_field\022\035.google.protobuf.F"
    "ieldOptions\030\340\324\003 \001(\010:\005false:A\n\022msgpool_so"
    "ft_limit\022\037.google.protobuf.MessageOption"
    "s\030\340\324\003 \001(\005:\00232:B\n\022msgpool_hard_limit\022\037.go"
    "ogle.protobuf.MessageOptions\030\341\324\003 \001(\005:\00338"
    "4B\005H\001\200\001\000", 10288);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages.proto", &protobuf_RegisterTypes);
  CMsgProtoBufHeader::default_instance_ = new CMsgProtoBufHeader();
  CMsgWebAPIKey::default_instance_ = new CMsgWebAPIKey();
  CMsgHttpRequest::default_instance_ = new CMsgHttpRequest();
  CMsgHttpRequest_RequestHeader::default_instance_ = new CMsgHttpRequest_RequestHeader();
  CMsgHttpRequest_QueryParam::default_instance_ = new CMsgHttpRequest_QueryParam();
  CMsgWebAPIRequest::default_instance_ = new CMsgWebAPIRequest();
  CMsgHttpResponse::default_instance_ = new CMsgHttpResponse();
  CMsgHttpResponse_ResponseHeader::default_instance_ = new CMsgHttpResponse_ResponseHeader();
  CMsgAMFindAccounts::default_instance_ = new CMsgAMFindAccounts();
  CMsgAMFindAccountsResponse::default_instance_ = new CMsgAMFindAccountsResponse();
  CMsgNotifyWatchdog::default_instance_ = new CMsgNotifyWatchdog();
  CMsgAMGetLicenses::default_instance_ = new CMsgAMGetLicenses();
  CMsgPackageLicense::default_instance_ = new CMsgPackageLicense();
  CMsgAMGetLicensesResponse::default_instance_ = new CMsgAMGetLicensesResponse();
  CMsgAMGetUserGameStats::default_instance_ = new CMsgAMGetUserGameStats();
  CMsgAMGetUserGameStatsResponse::default_instance_ = new CMsgAMGetUserGameStatsResponse();
  CMsgAMGetUserGameStatsResponse_Stats::default_instance_ = new CMsgAMGetUserGameStatsResponse_Stats();
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance_ = new CMsgAMGetUserGameStatsResponse_Achievement_Blocks();
  CMsgGCGetCommandList::default_instance_ = new CMsgGCGetCommandList();
  CMsgGCGetCommandListResponse::default_instance_ = new CMsgGCGetCommandListResponse();
  CGCMsgMemCachedGet::default_instance_ = new CGCMsgMemCachedGet();
  CGCMsgMemCachedGetResponse::default_instance_ = new CGCMsgMemCachedGetResponse();
  CGCMsgMemCachedGetResponse_ValueTag::default_instance_ = new CGCMsgMemCachedGetResponse_ValueTag();
  CGCMsgMemCachedSet::default_instance_ = new CGCMsgMemCachedSet();
  CGCMsgMemCachedSet_KeyPair::default_instance_ = new CGCMsgMemCachedSet_KeyPair();
  CGCMsgMemCachedDelete::default_instance_ = new CGCMsgMemCachedDelete();
  CGCMsgMemCachedStats::default_instance_ = new CGCMsgMemCachedStats();
  CGCMsgMemCachedStatsResponse::default_instance_ = new CGCMsgMemCachedStatsResponse();
  CGCMsgSQLStats::default_instance_ = new CGCMsgSQLStats();
  CGCMsgSQLStatsResponse::default_instance_ = new CGCMsgSQLStatsResponse();
  CMsgAMAddFreeLicense::default_instance_ = new CMsgAMAddFreeLicense();
  CMsgAMAddFreeLicenseResponse::default_instance_ = new CMsgAMAddFreeLicenseResponse();
  CGCMsgGetIPLocation::default_instance_ = new CGCMsgGetIPLocation();
  CIPLocationInfo::default_instance_ = new CIPLocationInfo();
  CGCMsgGetIPLocationResponse::default_instance_ = new CGCMsgGetIPLocationResponse();
  CGCMsgGetIPASN::default_instance_ = new CGCMsgGetIPASN();
  CIPASNInfo::default_instance_ = new CIPASNInfo();
  CGCMsgGetIPASNResponse::default_instance_ = new CGCMsgGetIPASNResponse();
  CGCMsgSystemStatsSchema::default_instance_ = new CGCMsgSystemStatsSchema();
  CGCMsgGetSystemStats::default_instance_ = new CGCMsgGetSystemStats();
  CGCMsgGetSystemStatsResponse::default_instance_ = new CGCMsgGetSystemStatsResponse();
  CMsgAMSendEmail::default_instance_ = new CMsgAMSendEmail();
  CMsgAMSendEmail_ReplacementToken::default_instance_ = new CMsgAMSendEmail_ReplacementToken();
  CMsgAMSendEmail_PersonaNameReplacementToken::default_instance_ = new CMsgAMSendEmail_PersonaNameReplacementToken();
  CMsgAMSendEmailResponse::default_instance_ = new CMsgAMSendEmailResponse();
  CMsgGCGetEmailTemplate::default_instance_ = new CMsgGCGetEmailTemplate();
  CMsgGCGetEmailTemplateResponse::default_instance_ = new CMsgGCGetEmailTemplateResponse();
  CMsgAMGrantGuestPasses2::default_instance_ = new CMsgAMGrantGuestPasses2();
  CMsgAMGrantGuestPasses2Response::default_instance_ = new CMsgAMGrantGuestPasses2Response();
  CGCSystemMsg_GetAccountDetails::default_instance_ = new CGCSystemMsg_GetAccountDetails();
  CGCSystemMsg_GetAccountDetails_Response::default_instance_ = new CGCSystemMsg_GetAccountDetails_Response();
  CMsgGCGetPersonaNames::default_instance_ = new CMsgGCGetPersonaNames();
  CMsgGCGetPersonaNames_Response::default_instance_ = new CMsgGCGetPersonaNames_Response();
  CMsgGCGetPersonaNames_Response_PersonaName::default_instance_ = new CMsgGCGetPersonaNames_Response_PersonaName();
  CMsgGCCheckFriendship::default_instance_ = new CMsgGCCheckFriendship();
  CMsgGCCheckFriendship_Response::default_instance_ = new CMsgGCCheckFriendship_Response();
  CMsgGCGetAppFriendsList::default_instance_ = new CMsgGCGetAppFriendsList();
  CMsgGCGetAppFriendsList_Response::default_instance_ = new CMsgGCGetAppFriendsList_Response();
  CMsgGCMsgMasterSetDirectory::default_instance_ = new CMsgGCMsgMasterSetDirectory();
  CMsgGCMsgMasterSetDirectory_SubGC::default_instance_ = new CMsgGCMsgMasterSetDirectory_SubGC();
  CMsgGCMsgMasterSetDirectory_Response::default_instance_ = new CMsgGCMsgMasterSetDirectory_Response();
  CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance_ = new CMsgGCMsgWebAPIJobRequestForwardResponse();
  CGCSystemMsg_GetPurchaseTrust_Request::default_instance_ = new CGCSystemMsg_GetPurchaseTrust_Request();
  CGCSystemMsg_GetPurchaseTrust_Response::default_instance_ = new CGCSystemMsg_GetPurchaseTrust_Response();
  CMsgGCHAccountVacStatusChange::default_instance_ = new CMsgGCHAccountVacStatusChange();
  CMsgGCGetPartnerAccountLink::default_instance_ = new CMsgGCGetPartnerAccountLink();
  CMsgGCGetPartnerAccountLink_Response::default_instance_ = new CMsgGCGetPartnerAccountLink_Response();
  CMsgGCRoutingInfo::default_instance_ = new CMsgGCRoutingInfo();
  CMsgGCMsgMasterSetWebAPIRouting::default_instance_ = new CMsgGCMsgMasterSetWebAPIRouting();
  CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance_ = new CMsgGCMsgMasterSetWebAPIRouting_Entry();
  CMsgGCMsgMasterSetClientMsgRouting::default_instance_ = new CMsgGCMsgMasterSetClientMsgRouting();
  CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance_ = new CMsgGCMsgMasterSetClientMsgRouting_Entry();
  CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance_ = new CMsgGCMsgMasterSetWebAPIRouting_Response();
  CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance_ = new CMsgGCMsgMasterSetClientMsgRouting_Response();
  CMsgGCMsgSetOptions::default_instance_ = new CMsgGCMsgSetOptions();
  CMsgGCMsgSetOptions_MessageRange::default_instance_ = new CMsgGCMsgSetOptions_MessageRange();
  CMsgGCHUpdateSession::default_instance_ = new CMsgGCHUpdateSession();
  CMsgGCHUpdateSession_ExtraField::default_instance_ = new CMsgGCHUpdateSession_ExtraField();
  CMsgNotificationOfSuspiciousActivity::default_instance_ = new CMsgNotificationOfSuspiciousActivity();
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance_ = new CMsgNotificationOfSuspiciousActivity_MultipleGameInstances();
  CMsgDPPartnerMicroTxns::default_instance_ = new CMsgDPPartnerMicroTxns();
  CMsgDPPartnerMicroTxns_PartnerMicroTxn::default_instance_ = new CMsgDPPartnerMicroTxns_PartnerMicroTxn();
  CMsgDPPartnerMicroTxns_PartnerInfo::default_instance_ = new CMsgDPPartnerMicroTxns_PartnerInfo();
  CMsgDPPartnerMicroTxnsResponse::default_instance_ = new CMsgDPPartnerMicroTxnsResponse();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::FieldOptions::default_instance(),
    60000, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MessageOptions::default_instance(),
    60000, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MessageOptions::default_instance(),
    60001, 5, false, false);
  CMsgProtoBufHeader::default_instance_->InitAsDefaultInstance();
  CMsgWebAPIKey::default_instance_->InitAsDefaultInstance();
  CMsgHttpRequest::default_instance_->InitAsDefaultInstance();
  CMsgHttpRequest_RequestHeader::default_instance_->InitAsDefaultInstance();
  CMsgHttpRequest_QueryParam::default_instance_->InitAsDefaultInstance();
  CMsgWebAPIRequest::default_instance_->InitAsDefaultInstance();
  CMsgHttpResponse::default_instance_->InitAsDefaultInstance();
  CMsgHttpResponse_ResponseHeader::default_instance_->InitAsDefaultInstance();
  CMsgAMFindAccounts::default_instance_->InitAsDefaultInstance();
  CMsgAMFindAccountsResponse::default_instance_->InitAsDefaultInstance();
  CMsgNotifyWatchdog::default_instance_->InitAsDefaultInstance();
  CMsgAMGetLicenses::default_instance_->InitAsDefaultInstance();
  CMsgPackageLicense::default_instance_->InitAsDefaultInstance();
  CMsgAMGetLicensesResponse::default_instance_->InitAsDefaultInstance();
  CMsgAMGetUserGameStats::default_instance_->InitAsDefaultInstance();
  CMsgAMGetUserGameStatsResponse::default_instance_->InitAsDefaultInstance();
  CMsgAMGetUserGameStatsResponse_Stats::default_instance_->InitAsDefaultInstance();
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance_->InitAsDefaultInstance();
  CMsgGCGetCommandList::default_instance_->InitAsDefaultInstance();
  CMsgGCGetCommandListResponse::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedGet::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedGetResponse::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedGetResponse_ValueTag::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedSet::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedSet_KeyPair::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedDelete::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedStats::default_instance_->InitAsDefaultInstance();
  CGCMsgMemCachedStatsResponse::default_instance_->InitAsDefaultInstance();
  CGCMsgSQLStats::default_instance_->InitAsDefaultInstance();
  CGCMsgSQLStatsResponse::default_instance_->InitAsDefaultInstance();
  CMsgAMAddFreeLicense::default_instance_->InitAsDefaultInstance();
  CMsgAMAddFreeLicenseResponse::default_instance_->InitAsDefaultInstance();
  CGCMsgGetIPLocation::default_instance_->InitAsDefaultInstance();
  CIPLocationInfo::default_instance_->InitAsDefaultInstance();
  CGCMsgGetIPLocationResponse::default_instance_->InitAsDefaultInstance();
  CGCMsgGetIPASN::default_instance_->InitAsDefaultInstance();
  CIPASNInfo::default_instance_->InitAsDefaultInstance();
  CGCMsgGetIPASNResponse::default_instance_->InitAsDefaultInstance();
  CGCMsgSystemStatsSchema::default_instance_->InitAsDefaultInstance();
  CGCMsgGetSystemStats::default_instance_->InitAsDefaultInstance();
  CGCMsgGetSystemStatsResponse::default_instance_->InitAsDefaultInstance();
  CMsgAMSendEmail::default_instance_->InitAsDefaultInstance();
  CMsgAMSendEmail_ReplacementToken::default_instance_->InitAsDefaultInstance();
  CMsgAMSendEmail_PersonaNameReplacementToken::default_instance_->InitAsDefaultInstance();
  CMsgAMSendEmailResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCGetEmailTemplate::default_instance_->InitAsDefaultInstance();
  CMsgGCGetEmailTemplateResponse::default_instance_->InitAsDefaultInstance();
  CMsgAMGrantGuestPasses2::default_instance_->InitAsDefaultInstance();
  CMsgAMGrantGuestPasses2Response::default_instance_->InitAsDefaultInstance();
  CGCSystemMsg_GetAccountDetails::default_instance_->InitAsDefaultInstance();
  CGCSystemMsg_GetAccountDetails_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCGetPersonaNames::default_instance_->InitAsDefaultInstance();
  CMsgGCGetPersonaNames_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCGetPersonaNames_Response_PersonaName::default_instance_->InitAsDefaultInstance();
  CMsgGCCheckFriendship::default_instance_->InitAsDefaultInstance();
  CMsgGCCheckFriendship_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCGetAppFriendsList::default_instance_->InitAsDefaultInstance();
  CMsgGCGetAppFriendsList_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetDirectory::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetDirectory_SubGC::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetDirectory_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance_->InitAsDefaultInstance();
  CGCSystemMsg_GetPurchaseTrust_Request::default_instance_->InitAsDefaultInstance();
  CGCSystemMsg_GetPurchaseTrust_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCHAccountVacStatusChange::default_instance_->InitAsDefaultInstance();
  CMsgGCGetPartnerAccountLink::default_instance_->InitAsDefaultInstance();
  CMsgGCGetPartnerAccountLink_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCRoutingInfo::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetWebAPIRouting::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetClientMsgRouting::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgSetOptions::default_instance_->InitAsDefaultInstance();
  CMsgGCMsgSetOptions_MessageRange::default_instance_->InitAsDefaultInstance();
  CMsgGCHUpdateSession::default_instance_->InitAsDefaultInstance();
  CMsgGCHUpdateSession_ExtraField::default_instance_->InitAsDefaultInstance();
  CMsgNotificationOfSuspiciousActivity::default_instance_->InitAsDefaultInstance();
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance_->InitAsDefaultInstance();
  CMsgDPPartnerMicroTxns::default_instance_->InitAsDefaultInstance();
  CMsgDPPartnerMicroTxns_PartnerMicroTxn::default_instance_->InitAsDefaultInstance();
  CMsgDPPartnerMicroTxns_PartnerInfo::default_instance_->InitAsDefaultInstance();
  CMsgDPPartnerMicroTxnsResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_steammessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_steammessages_2eproto {
  StaticDescriptorInitializer_steammessages_2eproto() {
    protobuf_AddDesc_steammessages_2eproto();
  }
} static_descriptor_initializer_steammessages_2eproto_;
const ::google::protobuf::EnumDescriptor* GCProtoBufMsgSrc_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCProtoBufMsgSrc_descriptor_;
}
bool GCProtoBufMsgSrc_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CMsgProtoBufHeader::kClientSteamIdFieldNumber;
const int CMsgProtoBufHeader::kClientSessionIdFieldNumber;
const int CMsgProtoBufHeader::kSourceAppIdFieldNumber;
const int CMsgProtoBufHeader::kJobIdSourceFieldNumber;
const int CMsgProtoBufHeader::kJobIdTargetFieldNumber;
const int CMsgProtoBufHeader::kTargetJobNameFieldNumber;
const int CMsgProtoBufHeader::kEresultFieldNumber;
const int CMsgProtoBufHeader::kErrorMessageFieldNumber;
const int CMsgProtoBufHeader::kGcMsgSrcFieldNumber;
const int CMsgProtoBufHeader::kGcDirIndexSourceFieldNumber;
#endif  // !_MSC_VER

CMsgProtoBufHeader::CMsgProtoBufHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgProtoBufHeader)
}

void CMsgProtoBufHeader::InitAsDefaultInstance() {
}

CMsgProtoBufHeader::CMsgProtoBufHeader(const CMsgProtoBufHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgProtoBufHeader)
}

void CMsgProtoBufHeader::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  client_session_id_ = 0;
  source_app_id_ = 0u;
  job_id_source_ = GOOGLE_ULONGLONG(18446744073709551615);
  job_id_target_ = GOOGLE_ULONGLONG(18446744073709551615);
  target_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2;
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gc_msg_src_ = 0;
  gc_dir_index_source_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgProtoBufHeader::~CMsgProtoBufHeader() {
  // @@protoc_insertion_point(destructor:CMsgProtoBufHeader)
  SharedDtor();
}

void CMsgProtoBufHeader::SharedDtor() {
  target_job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgProtoBufHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgProtoBufHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgProtoBufHeader_descriptor_;
}

const CMsgProtoBufHeader& CMsgProtoBufHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgProtoBufHeader* CMsgProtoBufHeader::default_instance_ = NULL;

CMsgProtoBufHeader* CMsgProtoBufHeader::New(::google::protobuf::Arena* arena) const {
  CMsgProtoBufHeader* n = new CMsgProtoBufHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgProtoBufHeader::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgProtoBufHeader*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(client_steam_id_, source_app_id_);
    job_id_source_ = GOOGLE_ULONGLONG(18446744073709551615);
    job_id_target_ = GOOGLE_ULONGLONG(18446744073709551615);
    if (has_target_job_name()) {
      target_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    eresult_ = 2;
    if (has_error_message()) {
      error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(gc_msg_src_, gc_dir_index_source_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgProtoBufHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgProtoBufHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 client_steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &client_steam_id_)));
          set_has_client_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_client_session_id;
        break;
      }

      // optional int32 client_session_id = 2;
      case 2: {
        if (tag == 16) {
         parse_client_session_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_session_id_)));
          set_has_client_session_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_source_app_id;
        break;
      }

      // optional uint32 source_app_id = 3;
      case 3: {
        if (tag == 24) {
         parse_source_app_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_app_id_)));
          set_has_source_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_job_id_source;
        break;
      }

      // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
      case 10: {
        if (tag == 81) {
         parse_job_id_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_source_)));
          set_has_job_id_source();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_job_id_target;
        break;
      }

      // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
      case 11: {
        if (tag == 89) {
         parse_job_id_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_target_)));
          set_has_job_id_target();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_target_job_name;
        break;
      }

      // optional string target_job_name = 12;
      case 12: {
        if (tag == 98) {
         parse_target_job_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_job_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target_job_name().data(), this->target_job_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgProtoBufHeader.target_job_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_eresult;
        break;
      }

      // optional int32 eresult = 13 [default = 2];
      case 13: {
        if (tag == 104) {
         parse_eresult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_error_message;
        break;
      }

      // optional string error_message = 14;
      case 14: {
        if (tag == 114) {
         parse_error_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), this->error_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgProtoBufHeader.error_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1600)) goto parse_gc_msg_src;
        break;
      }

      // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
      case 200: {
        if (tag == 1600) {
         parse_gc_msg_src:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GCProtoBufMsgSrc_IsValid(value)) {
            set_gc_msg_src(static_cast< ::GCProtoBufMsgSrc >(value));
          } else {
            mutable_unknown_fields()->AddVarint(200, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1608)) goto parse_gc_dir_index_source;
        break;
      }

      // optional uint32 gc_dir_index_source = 201;
      case 201: {
        if (tag == 1608) {
         parse_gc_dir_index_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_dir_index_source_)));
          set_has_gc_dir_index_source();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgProtoBufHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgProtoBufHeader)
  return false;
#undef DO_
}

void CMsgProtoBufHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgProtoBufHeader)
  // optional fixed64 client_steam_id = 1;
  if (has_client_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->client_steam_id(), output);
  }

  // optional int32 client_session_id = 2;
  if (has_client_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->client_session_id(), output);
  }

  // optional uint32 source_app_id = 3;
  if (has_source_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->source_app_id(), output);
  }

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  if (has_job_id_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->job_id_source(), output);
  }

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  if (has_job_id_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(11, this->job_id_target(), output);
  }

  // optional string target_job_name = 12;
  if (has_target_job_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_job_name().data(), this->target_job_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.target_job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->target_job_name(), output);
  }

  // optional int32 eresult = 13 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->eresult(), output);
  }

  // optional string error_message = 14;
  if (has_error_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->error_message(), output);
  }

  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  if (has_gc_msg_src()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      200, this->gc_msg_src(), output);
  }

  // optional uint32 gc_dir_index_source = 201;
  if (has_gc_dir_index_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(201, this->gc_dir_index_source(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgProtoBufHeader)
}

::google::protobuf::uint8* CMsgProtoBufHeader::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgProtoBufHeader)
  // optional fixed64 client_steam_id = 1;
  if (has_client_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->client_steam_id(), target);
  }

  // optional int32 client_session_id = 2;
  if (has_client_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->client_session_id(), target);
  }

  // optional uint32 source_app_id = 3;
  if (has_source_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->source_app_id(), target);
  }

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  if (has_job_id_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->job_id_source(), target);
  }

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  if (has_job_id_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(11, this->job_id_target(), target);
  }

  // optional string target_job_name = 12;
  if (has_target_job_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_job_name().data(), this->target_job_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.target_job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->target_job_name(), target);
  }

  // optional int32 eresult = 13 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->eresult(), target);
  }

  // optional string error_message = 14;
  if (has_error_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->error_message(), target);
  }

  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  if (has_gc_msg_src()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      200, this->gc_msg_src(), target);
  }

  // optional uint32 gc_dir_index_source = 201;
  if (has_gc_dir_index_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(201, this->gc_dir_index_source(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgProtoBufHeader)
  return target;
}

int CMsgProtoBufHeader::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional fixed64 client_steam_id = 1;
    if (has_client_steam_id()) {
      total_size += 1 + 8;
    }

    // optional int32 client_session_id = 2;
    if (has_client_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client_session_id());
    }

    // optional uint32 source_app_id = 3;
    if (has_source_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_app_id());
    }

    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    if (has_job_id_source()) {
      total_size += 1 + 8;
    }

    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    if (has_job_id_target()) {
      total_size += 1 + 8;
    }

    // optional string target_job_name = 12;
    if (has_target_job_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target_job_name());
    }

    // optional int32 eresult = 13 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional string error_message = 14;
    if (has_error_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_message());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    if (has_gc_msg_src()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gc_msg_src());
    }

    // optional uint32 gc_dir_index_source = 201;
    if (has_gc_dir_index_source()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_dir_index_source());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgProtoBufHeader::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgProtoBufHeader* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgProtoBufHeader>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgProtoBufHeader::MergeFrom(const CMsgProtoBufHeader& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_client_steam_id()) {
      set_client_steam_id(from.client_steam_id());
    }
    if (from.has_client_session_id()) {
      set_client_session_id(from.client_session_id());
    }
    if (from.has_source_app_id()) {
      set_source_app_id(from.source_app_id());
    }
    if (from.has_job_id_source()) {
      set_job_id_source(from.job_id_source());
    }
    if (from.has_job_id_target()) {
      set_job_id_target(from.job_id_target());
    }
    if (from.has_target_job_name()) {
      set_has_target_job_name();
      target_job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_job_name_);
    }
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
    if (from.has_error_message()) {
      set_has_error_message();
      error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_gc_msg_src()) {
      set_gc_msg_src(from.gc_msg_src());
    }
    if (from.has_gc_dir_index_source()) {
      set_gc_dir_index_source(from.gc_dir_index_source());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgProtoBufHeader::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProtoBufHeader::CopyFrom(const CMsgProtoBufHeader& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProtoBufHeader::IsInitialized() const {

  return true;
}

void CMsgProtoBufHeader::Swap(CMsgProtoBufHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgProtoBufHeader::InternalSwap(CMsgProtoBufHeader* other) {
  std::swap(client_steam_id_, other->client_steam_id_);
  std::swap(client_session_id_, other->client_session_id_);
  std::swap(source_app_id_, other->source_app_id_);
  std::swap(job_id_source_, other->job_id_source_);
  std::swap(job_id_target_, other->job_id_target_);
  target_job_name_.Swap(&other->target_job_name_);
  std::swap(eresult_, other->eresult_);
  error_message_.Swap(&other->error_message_);
  std::swap(gc_msg_src_, other->gc_msg_src_);
  std::swap(gc_dir_index_source_, other->gc_dir_index_source_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgProtoBufHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgProtoBufHeader_descriptor_;
  metadata.reflection = CMsgProtoBufHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgProtoBufHeader

// optional fixed64 client_steam_id = 1;
bool CMsgProtoBufHeader::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgProtoBufHeader::set_has_client_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgProtoBufHeader::clear_has_client_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgProtoBufHeader::clear_client_steam_id() {
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_steam_id();
}
 ::google::protobuf::uint64 CMsgProtoBufHeader::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.client_steam_id)
  return client_steam_id_;
}
 void CMsgProtoBufHeader::set_client_steam_id(::google::protobuf::uint64 value) {
  set_has_client_steam_id();
  client_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.client_steam_id)
}

// optional int32 client_session_id = 2;
bool CMsgProtoBufHeader::has_client_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgProtoBufHeader::set_has_client_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgProtoBufHeader::clear_has_client_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgProtoBufHeader::clear_client_session_id() {
  client_session_id_ = 0;
  clear_has_client_session_id();
}
 ::google::protobuf::int32 CMsgProtoBufHeader::client_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.client_session_id)
  return client_session_id_;
}
 void CMsgProtoBufHeader::set_client_session_id(::google::protobuf::int32 value) {
  set_has_client_session_id();
  client_session_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.client_session_id)
}

// optional uint32 source_app_id = 3;
bool CMsgProtoBufHeader::has_source_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgProtoBufHeader::set_has_source_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgProtoBufHeader::clear_has_source_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgProtoBufHeader::clear_source_app_id() {
  source_app_id_ = 0u;
  clear_has_source_app_id();
}
 ::google::protobuf::uint32 CMsgProtoBufHeader::source_app_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.source_app_id)
  return source_app_id_;
}
 void CMsgProtoBufHeader::set_source_app_id(::google::protobuf::uint32 value) {
  set_has_source_app_id();
  source_app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.source_app_id)
}

// optional fixed64 job_id_source = 10 [default = 18446744073709551615];
bool CMsgProtoBufHeader::has_job_id_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgProtoBufHeader::set_has_job_id_source() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgProtoBufHeader::clear_has_job_id_source() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgProtoBufHeader::clear_job_id_source() {
  job_id_source_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_job_id_source();
}
 ::google::protobuf::uint64 CMsgProtoBufHeader::job_id_source() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.job_id_source)
  return job_id_source_;
}
 void CMsgProtoBufHeader::set_job_id_source(::google::protobuf::uint64 value) {
  set_has_job_id_source();
  job_id_source_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.job_id_source)
}

// optional fixed64 job_id_target = 11 [default = 18446744073709551615];
bool CMsgProtoBufHeader::has_job_id_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgProtoBufHeader::set_has_job_id_target() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgProtoBufHeader::clear_has_job_id_target() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgProtoBufHeader::clear_job_id_target() {
  job_id_target_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_job_id_target();
}
 ::google::protobuf::uint64 CMsgProtoBufHeader::job_id_target() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.job_id_target)
  return job_id_target_;
}
 void CMsgProtoBufHeader::set_job_id_target(::google::protobuf::uint64 value) {
  set_has_job_id_target();
  job_id_target_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.job_id_target)
}

// optional string target_job_name = 12;
bool CMsgProtoBufHeader::has_target_job_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgProtoBufHeader::set_has_target_job_name() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgProtoBufHeader::clear_has_target_job_name() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgProtoBufHeader::clear_target_job_name() {
  target_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_job_name();
}
 const ::std::string& CMsgProtoBufHeader::target_job_name() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.target_job_name)
  return target_job_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgProtoBufHeader::set_target_job_name(const ::std::string& value) {
  set_has_target_job_name();
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.target_job_name)
}
 void CMsgProtoBufHeader::set_target_job_name(const char* value) {
  set_has_target_job_name();
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgProtoBufHeader.target_job_name)
}
 void CMsgProtoBufHeader::set_target_job_name(const char* value, size_t size) {
  set_has_target_job_name();
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgProtoBufHeader.target_job_name)
}
 ::std::string* CMsgProtoBufHeader::mutable_target_job_name() {
  set_has_target_job_name();
  // @@protoc_insertion_point(field_mutable:CMsgProtoBufHeader.target_job_name)
  return target_job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgProtoBufHeader::release_target_job_name() {
  clear_has_target_job_name();
  return target_job_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgProtoBufHeader::set_allocated_target_job_name(::std::string* target_job_name) {
  if (target_job_name != NULL) {
    set_has_target_job_name();
  } else {
    clear_has_target_job_name();
  }
  target_job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_job_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgProtoBufHeader.target_job_name)
}

// optional int32 eresult = 13 [default = 2];
bool CMsgProtoBufHeader::has_eresult() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgProtoBufHeader::set_has_eresult() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgProtoBufHeader::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgProtoBufHeader::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
 ::google::protobuf::int32 CMsgProtoBufHeader::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.eresult)
  return eresult_;
}
 void CMsgProtoBufHeader::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.eresult)
}

// optional string error_message = 14;
bool CMsgProtoBufHeader::has_error_message() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgProtoBufHeader::set_has_error_message() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgProtoBufHeader::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgProtoBufHeader::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_message();
}
 const ::std::string& CMsgProtoBufHeader::error_message() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.error_message)
  return error_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgProtoBufHeader::set_error_message(const ::std::string& value) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.error_message)
}
 void CMsgProtoBufHeader::set_error_message(const char* value) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgProtoBufHeader.error_message)
}
 void CMsgProtoBufHeader::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgProtoBufHeader.error_message)
}
 ::std::string* CMsgProtoBufHeader::mutable_error_message() {
  set_has_error_message();
  // @@protoc_insertion_point(field_mutable:CMsgProtoBufHeader.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgProtoBufHeader::release_error_message() {
  clear_has_error_message();
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgProtoBufHeader::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    set_has_error_message();
  } else {
    clear_has_error_message();
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:CMsgProtoBufHeader.error_message)
}

// optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
bool CMsgProtoBufHeader::has_gc_msg_src() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgProtoBufHeader::set_has_gc_msg_src() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgProtoBufHeader::clear_has_gc_msg_src() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgProtoBufHeader::clear_gc_msg_src() {
  gc_msg_src_ = 0;
  clear_has_gc_msg_src();
}
 ::GCProtoBufMsgSrc CMsgProtoBufHeader::gc_msg_src() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.gc_msg_src)
  return static_cast< ::GCProtoBufMsgSrc >(gc_msg_src_);
}
 void CMsgProtoBufHeader::set_gc_msg_src(::GCProtoBufMsgSrc value) {
  assert(::GCProtoBufMsgSrc_IsValid(value));
  set_has_gc_msg_src();
  gc_msg_src_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.gc_msg_src)
}

// optional uint32 gc_dir_index_source = 201;
bool CMsgProtoBufHeader::has_gc_dir_index_source() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgProtoBufHeader::set_has_gc_dir_index_source() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgProtoBufHeader::clear_has_gc_dir_index_source() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgProtoBufHeader::clear_gc_dir_index_source() {
  gc_dir_index_source_ = 0u;
  clear_has_gc_dir_index_source();
}
 ::google::protobuf::uint32 CMsgProtoBufHeader::gc_dir_index_source() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.gc_dir_index_source)
  return gc_dir_index_source_;
}
 void CMsgProtoBufHeader::set_gc_dir_index_source(::google::protobuf::uint32 value) {
  set_has_gc_dir_index_source();
  gc_dir_index_source_ = value;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.gc_dir_index_source)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgWebAPIKey::kStatusFieldNumber;
const int CMsgWebAPIKey::kAccountIdFieldNumber;
const int CMsgWebAPIKey::kPublisherGroupIdFieldNumber;
const int CMsgWebAPIKey::kKeyIdFieldNumber;
const int CMsgWebAPIKey::kDomainFieldNumber;
#endif  // !_MSC_VER

CMsgWebAPIKey::CMsgWebAPIKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgWebAPIKey)
}

void CMsgWebAPIKey::InitAsDefaultInstance() {
}

CMsgWebAPIKey::CMsgWebAPIKey(const CMsgWebAPIKey& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgWebAPIKey)
}

void CMsgWebAPIKey::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 255u;
  account_id_ = 0u;
  publisher_group_id_ = 0u;
  key_id_ = 0u;
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgWebAPIKey::~CMsgWebAPIKey() {
  // @@protoc_insertion_point(destructor:CMsgWebAPIKey)
  SharedDtor();
}

void CMsgWebAPIKey::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgWebAPIKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgWebAPIKey::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgWebAPIKey_descriptor_;
}

const CMsgWebAPIKey& CMsgWebAPIKey::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgWebAPIKey* CMsgWebAPIKey::default_instance_ = NULL;

CMsgWebAPIKey* CMsgWebAPIKey::New(::google::protobuf::Arena* arena) const {
  CMsgWebAPIKey* n = new CMsgWebAPIKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgWebAPIKey::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgWebAPIKey*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(account_id_, key_id_);
    status_ = 255u;
    if (has_domain()) {
      domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgWebAPIKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgWebAPIKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status = 1 [default = 255];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_account_id;
        break;
      }

      // optional uint32 account_id = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_publisher_group_id;
        break;
      }

      // optional uint32 publisher_group_id = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_publisher_group_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &publisher_group_id_)));
          set_has_publisher_group_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_key_id;
        break;
      }

      // optional uint32 key_id = 4;
      case 4: {
        if (tag == 32) {
         parse_key_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_id_)));
          set_has_key_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_domain;
        break;
      }

      // optional string domain = 5;
      case 5: {
        if (tag == 42) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIKey.domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgWebAPIKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgWebAPIKey)
  return false;
#undef DO_
}

void CMsgWebAPIKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgWebAPIKey)
  // optional uint32 status = 1 [default = 255];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status(), output);
  }

  // optional uint32 account_id = 2 [default = 0];
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->account_id(), output);
  }

  // optional uint32 publisher_group_id = 3 [default = 0];
  if (has_publisher_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->publisher_group_id(), output);
  }

  // optional uint32 key_id = 4;
  if (has_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->key_id(), output);
  }

  // optional string domain = 5;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIKey.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->domain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgWebAPIKey)
}

::google::protobuf::uint8* CMsgWebAPIKey::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgWebAPIKey)
  // optional uint32 status = 1 [default = 255];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status(), target);
  }

  // optional uint32 account_id = 2 [default = 0];
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->account_id(), target);
  }

  // optional uint32 publisher_group_id = 3 [default = 0];
  if (has_publisher_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->publisher_group_id(), target);
  }

  // optional uint32 key_id = 4;
  if (has_key_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->key_id(), target);
  }

  // optional string domain = 5;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIKey.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->domain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgWebAPIKey)
  return target;
}

int CMsgWebAPIKey::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 status = 1 [default = 255];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional uint32 account_id = 2 [default = 0];
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 publisher_group_id = 3 [default = 0];
    if (has_publisher_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->publisher_group_id());
    }

    // optional uint32 key_id = 4;
    if (has_key_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->key_id());
    }

    // optional string domain = 5;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgWebAPIKey::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgWebAPIKey* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgWebAPIKey>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgWebAPIKey::MergeFrom(const CMsgWebAPIKey& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_publisher_group_id()) {
      set_publisher_group_id(from.publisher_group_id());
    }
    if (from.has_key_id()) {
      set_key_id(from.key_id());
    }
    if (from.has_domain()) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgWebAPIKey::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgWebAPIKey::CopyFrom(const CMsgWebAPIKey& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgWebAPIKey::IsInitialized() const {

  return true;
}

void CMsgWebAPIKey::Swap(CMsgWebAPIKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgWebAPIKey::InternalSwap(CMsgWebAPIKey* other) {
  std::swap(status_, other->status_);
  std::swap(account_id_, other->account_id_);
  std::swap(publisher_group_id_, other->publisher_group_id_);
  std::swap(key_id_, other->key_id_);
  domain_.Swap(&other->domain_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgWebAPIKey::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgWebAPIKey_descriptor_;
  metadata.reflection = CMsgWebAPIKey_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgWebAPIKey

// optional uint32 status = 1 [default = 255];
bool CMsgWebAPIKey::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgWebAPIKey::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgWebAPIKey::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgWebAPIKey::clear_status() {
  status_ = 255u;
  clear_has_status();
}
 ::google::protobuf::uint32 CMsgWebAPIKey::status() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIKey.status)
  return status_;
}
 void CMsgWebAPIKey::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgWebAPIKey.status)
}

// optional uint32 account_id = 2 [default = 0];
bool CMsgWebAPIKey::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgWebAPIKey::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgWebAPIKey::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgWebAPIKey::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
 ::google::protobuf::uint32 CMsgWebAPIKey::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIKey.account_id)
  return account_id_;
}
 void CMsgWebAPIKey::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgWebAPIKey.account_id)
}

// optional uint32 publisher_group_id = 3 [default = 0];
bool CMsgWebAPIKey::has_publisher_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgWebAPIKey::set_has_publisher_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgWebAPIKey::clear_has_publisher_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgWebAPIKey::clear_publisher_group_id() {
  publisher_group_id_ = 0u;
  clear_has_publisher_group_id();
}
 ::google::protobuf::uint32 CMsgWebAPIKey::publisher_group_id() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIKey.publisher_group_id)
  return publisher_group_id_;
}
 void CMsgWebAPIKey::set_publisher_group_id(::google::protobuf::uint32 value) {
  set_has_publisher_group_id();
  publisher_group_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgWebAPIKey.publisher_group_id)
}

// optional uint32 key_id = 4;
bool CMsgWebAPIKey::has_key_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgWebAPIKey::set_has_key_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgWebAPIKey::clear_has_key_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgWebAPIKey::clear_key_id() {
  key_id_ = 0u;
  clear_has_key_id();
}
 ::google::protobuf::uint32 CMsgWebAPIKey::key_id() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIKey.key_id)
  return key_id_;
}
 void CMsgWebAPIKey::set_key_id(::google::protobuf::uint32 value) {
  set_has_key_id();
  key_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgWebAPIKey.key_id)
}

// optional string domain = 5;
bool CMsgWebAPIKey::has_domain() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgWebAPIKey::set_has_domain() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgWebAPIKey::clear_has_domain() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgWebAPIKey::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
 const ::std::string& CMsgWebAPIKey::domain() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIKey.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIKey::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgWebAPIKey.domain)
}
 void CMsgWebAPIKey::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgWebAPIKey.domain)
}
 void CMsgWebAPIKey::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgWebAPIKey.domain)
}
 ::std::string* CMsgWebAPIKey::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:CMsgWebAPIKey.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgWebAPIKey::release_domain() {
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIKey::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:CMsgWebAPIKey.domain)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgHttpRequest_RequestHeader::kNameFieldNumber;
const int CMsgHttpRequest_RequestHeader::kValueFieldNumber;
#endif  // !_MSC_VER

CMsgHttpRequest_RequestHeader::CMsgHttpRequest_RequestHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpRequest.RequestHeader)
}

void CMsgHttpRequest_RequestHeader::InitAsDefaultInstance() {
}

CMsgHttpRequest_RequestHeader::CMsgHttpRequest_RequestHeader(const CMsgHttpRequest_RequestHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest.RequestHeader)
}

void CMsgHttpRequest_RequestHeader::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgHttpRequest_RequestHeader::~CMsgHttpRequest_RequestHeader() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest.RequestHeader)
  SharedDtor();
}

void CMsgHttpRequest_RequestHeader::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgHttpRequest_RequestHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpRequest_RequestHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgHttpRequest_RequestHeader_descriptor_;
}

const CMsgHttpRequest_RequestHeader& CMsgHttpRequest_RequestHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgHttpRequest_RequestHeader* CMsgHttpRequest_RequestHeader::default_instance_ = NULL;

CMsgHttpRequest_RequestHeader* CMsgHttpRequest_RequestHeader::New(::google::protobuf::Arena* arena) const {
  CMsgHttpRequest_RequestHeader* n = new CMsgHttpRequest_RequestHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpRequest_RequestHeader::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgHttpRequest_RequestHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpRequest.RequestHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.RequestHeader.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.RequestHeader.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpRequest.RequestHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpRequest.RequestHeader)
  return false;
#undef DO_
}

void CMsgHttpRequest_RequestHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpRequest.RequestHeader)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpRequest.RequestHeader)
}

::google::protobuf::uint8* CMsgHttpRequest_RequestHeader::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest.RequestHeader)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest.RequestHeader)
  return target;
}

int CMsgHttpRequest_RequestHeader::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpRequest_RequestHeader::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgHttpRequest_RequestHeader* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpRequest_RequestHeader>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgHttpRequest_RequestHeader::MergeFrom(const CMsgHttpRequest_RequestHeader& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgHttpRequest_RequestHeader::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpRequest_RequestHeader::CopyFrom(const CMsgHttpRequest_RequestHeader& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpRequest_RequestHeader::IsInitialized() const {

  return true;
}

void CMsgHttpRequest_RequestHeader::Swap(CMsgHttpRequest_RequestHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpRequest_RequestHeader::InternalSwap(CMsgHttpRequest_RequestHeader* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpRequest_RequestHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgHttpRequest_RequestHeader_descriptor_;
  metadata.reflection = CMsgHttpRequest_RequestHeader_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgHttpRequest_QueryParam::kNameFieldNumber;
const int CMsgHttpRequest_QueryParam::kValueFieldNumber;
#endif  // !_MSC_VER

CMsgHttpRequest_QueryParam::CMsgHttpRequest_QueryParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpRequest.QueryParam)
}

void CMsgHttpRequest_QueryParam::InitAsDefaultInstance() {
}

CMsgHttpRequest_QueryParam::CMsgHttpRequest_QueryParam(const CMsgHttpRequest_QueryParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest.QueryParam)
}

void CMsgHttpRequest_QueryParam::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgHttpRequest_QueryParam::~CMsgHttpRequest_QueryParam() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest.QueryParam)
  SharedDtor();
}

void CMsgHttpRequest_QueryParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgHttpRequest_QueryParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpRequest_QueryParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgHttpRequest_QueryParam_descriptor_;
}

const CMsgHttpRequest_QueryParam& CMsgHttpRequest_QueryParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgHttpRequest_QueryParam* CMsgHttpRequest_QueryParam::default_instance_ = NULL;

CMsgHttpRequest_QueryParam* CMsgHttpRequest_QueryParam::New(::google::protobuf::Arena* arena) const {
  CMsgHttpRequest_QueryParam* n = new CMsgHttpRequest_QueryParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpRequest_QueryParam::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgHttpRequest_QueryParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpRequest.QueryParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.QueryParam.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpRequest.QueryParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpRequest.QueryParam)
  return false;
#undef DO_
}

void CMsgHttpRequest_QueryParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpRequest.QueryParam)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.QueryParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpRequest.QueryParam)
}

::google::protobuf::uint8* CMsgHttpRequest_QueryParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest.QueryParam)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.QueryParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest.QueryParam)
  return target;
}

int CMsgHttpRequest_QueryParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpRequest_QueryParam::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgHttpRequest_QueryParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpRequest_QueryParam>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgHttpRequest_QueryParam::MergeFrom(const CMsgHttpRequest_QueryParam& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgHttpRequest_QueryParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpRequest_QueryParam::CopyFrom(const CMsgHttpRequest_QueryParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpRequest_QueryParam::IsInitialized() const {

  return true;
}

void CMsgHttpRequest_QueryParam::Swap(CMsgHttpRequest_QueryParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpRequest_QueryParam::InternalSwap(CMsgHttpRequest_QueryParam* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpRequest_QueryParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgHttpRequest_QueryParam_descriptor_;
  metadata.reflection = CMsgHttpRequest_QueryParam_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgHttpRequest::kRequestMethodFieldNumber;
const int CMsgHttpRequest::kHostnameFieldNumber;
const int CMsgHttpRequest::kUrlFieldNumber;
const int CMsgHttpRequest::kHeadersFieldNumber;
const int CMsgHttpRequest::kGetParamsFieldNumber;
const int CMsgHttpRequest::kPostParamsFieldNumber;
const int CMsgHttpRequest::kBodyFieldNumber;
const int CMsgHttpRequest::kAbsoluteTimeoutFieldNumber;
#endif  // !_MSC_VER

CMsgHttpRequest::CMsgHttpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpRequest)
}

void CMsgHttpRequest::InitAsDefaultInstance() {
}

CMsgHttpRequest::CMsgHttpRequest(const CMsgHttpRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest)
}

void CMsgHttpRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  request_method_ = 0u;
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  absolute_timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgHttpRequest::~CMsgHttpRequest() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest)
  SharedDtor();
}

void CMsgHttpRequest::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgHttpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgHttpRequest_descriptor_;
}

const CMsgHttpRequest& CMsgHttpRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgHttpRequest* CMsgHttpRequest::default_instance_ = NULL;

CMsgHttpRequest* CMsgHttpRequest::New(::google::protobuf::Arena* arena) const {
  CMsgHttpRequest* n = new CMsgHttpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgHttpRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 199u) {
    ZR_(request_method_, absolute_timeout_);
    if (has_hostname()) {
      hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_url()) {
      url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body()) {
      body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  headers_.Clear();
  get_params_.Clear();
  post_params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgHttpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 request_method = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_method_)));
          set_has_request_method();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hostname;
        break;
      }

      // optional string hostname = 2;
      case 2: {
        if (tag == 18) {
         parse_hostname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.hostname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }

      // optional string url = 3;
      case 3: {
        if (tag == 26) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_headers;
        break;
      }

      // repeated .CMsgHttpRequest.RequestHeader headers = 4;
      case 4: {
        if (tag == 34) {
         parse_headers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_headers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_headers;
        if (input->ExpectTag(42)) goto parse_loop_get_params;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CMsgHttpRequest.QueryParam get_params = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_get_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_get_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_get_params;
        if (input->ExpectTag(50)) goto parse_loop_post_params;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CMsgHttpRequest.QueryParam post_params = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_post_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_post_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_post_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(58)) goto parse_body;
        break;
      }

      // optional bytes body = 7;
      case 7: {
        if (tag == 58) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_absolute_timeout;
        break;
      }

      // optional uint32 absolute_timeout = 8;
      case 8: {
        if (tag == 64) {
         parse_absolute_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &absolute_timeout_)));
          set_has_absolute_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpRequest)
  return false;
#undef DO_
}

void CMsgHttpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpRequest)
  // optional uint32 request_method = 1;
  if (has_request_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_method(), output);
  }

  // optional string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hostname(), output);
  }

  // optional string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->headers(i), output);
  }

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  for (unsigned int i = 0, n = this->get_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->get_params(i), output);
  }

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  for (unsigned int i = 0, n = this->post_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->post_params(i), output);
  }

  // optional bytes body = 7;
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->body(), output);
  }

  // optional uint32 absolute_timeout = 8;
  if (has_absolute_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->absolute_timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpRequest)
}

::google::protobuf::uint8* CMsgHttpRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest)
  // optional uint32 request_method = 1;
  if (has_request_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_method(), target);
  }

  // optional string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hostname(), target);
  }

  // optional string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->headers(i), target);
  }

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  for (unsigned int i = 0, n = this->get_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->get_params(i), target);
  }

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  for (unsigned int i = 0, n = this->post_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->post_params(i), target);
  }

  // optional bytes body = 7;
  if (has_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->body(), target);
  }

  // optional uint32 absolute_timeout = 8;
  if (has_absolute_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->absolute_timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest)
  return target;
}

int CMsgHttpRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 199u) {
    // optional uint32 request_method = 1;
    if (has_request_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->request_method());
    }

    // optional string hostname = 2;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional bytes body = 7;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

    // optional uint32 absolute_timeout = 8;
    if (has_absolute_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->absolute_timeout());
    }

  }
  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  total_size += 1 * this->headers_size();
  for (int i = 0; i < this->headers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->headers(i));
  }

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  total_size += 1 * this->get_params_size();
  for (int i = 0; i < this->get_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->get_params(i));
  }

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  total_size += 1 * this->post_params_size();
  for (int i = 0; i < this->post_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->post_params(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgHttpRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgHttpRequest::MergeFrom(const CMsgHttpRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  headers_.MergeFrom(from.headers_);
  get_params_.MergeFrom(from.get_params_);
  post_params_.MergeFrom(from.post_params_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request_method()) {
      set_request_method(from.request_method());
    }
    if (from.has_hostname()) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (from.has_url()) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (from.has_body()) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (from.has_absolute_timeout()) {
      set_absolute_timeout(from.absolute_timeout());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgHttpRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpRequest::CopyFrom(const CMsgHttpRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpRequest::IsInitialized() const {

  return true;
}

void CMsgHttpRequest::Swap(CMsgHttpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpRequest::InternalSwap(CMsgHttpRequest* other) {
  std::swap(request_method_, other->request_method_);
  hostname_.Swap(&other->hostname_);
  url_.Swap(&other->url_);
  headers_.UnsafeArenaSwap(&other->headers_);
  get_params_.UnsafeArenaSwap(&other->get_params_);
  post_params_.UnsafeArenaSwap(&other->post_params_);
  body_.Swap(&other->body_);
  std::swap(absolute_timeout_, other->absolute_timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgHttpRequest_descriptor_;
  metadata.reflection = CMsgHttpRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgHttpRequest_RequestHeader

// optional string name = 1;
bool CMsgHttpRequest_RequestHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgHttpRequest_RequestHeader::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgHttpRequest_RequestHeader::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgHttpRequest_RequestHeader::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CMsgHttpRequest_RequestHeader::name() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.RequestHeader.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_RequestHeader::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.RequestHeader.name)
}
 void CMsgHttpRequest_RequestHeader::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpRequest.RequestHeader.name)
}
 void CMsgHttpRequest_RequestHeader::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpRequest.RequestHeader.name)
}
 ::std::string* CMsgHttpRequest_RequestHeader::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.RequestHeader.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpRequest_RequestHeader::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_RequestHeader::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpRequest.RequestHeader.name)
}

// optional string value = 2;
bool CMsgHttpRequest_RequestHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgHttpRequest_RequestHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgHttpRequest_RequestHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgHttpRequest_RequestHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& CMsgHttpRequest_RequestHeader::value() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.RequestHeader.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_RequestHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.RequestHeader.value)
}
 void CMsgHttpRequest_RequestHeader::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpRequest.RequestHeader.value)
}
 void CMsgHttpRequest_RequestHeader::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpRequest.RequestHeader.value)
}
 ::std::string* CMsgHttpRequest_RequestHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.RequestHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpRequest_RequestHeader::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_RequestHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpRequest.RequestHeader.value)
}

// -------------------------------------------------------------------

// CMsgHttpRequest_QueryParam

// optional string name = 1;
bool CMsgHttpRequest_QueryParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgHttpRequest_QueryParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgHttpRequest_QueryParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgHttpRequest_QueryParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CMsgHttpRequest_QueryParam::name() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.QueryParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_QueryParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.QueryParam.name)
}
 void CMsgHttpRequest_QueryParam::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpRequest.QueryParam.name)
}
 void CMsgHttpRequest_QueryParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpRequest.QueryParam.name)
}
 ::std::string* CMsgHttpRequest_QueryParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.QueryParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpRequest_QueryParam::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_QueryParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpRequest.QueryParam.name)
}

// optional bytes value = 2;
bool CMsgHttpRequest_QueryParam::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgHttpRequest_QueryParam::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgHttpRequest_QueryParam::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgHttpRequest_QueryParam::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& CMsgHttpRequest_QueryParam::value() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.QueryParam.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_QueryParam::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.QueryParam.value)
}
 void CMsgHttpRequest_QueryParam::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpRequest.QueryParam.value)
}
 void CMsgHttpRequest_QueryParam::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpRequest.QueryParam.value)
}
 ::std::string* CMsgHttpRequest_QueryParam::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.QueryParam.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpRequest_QueryParam::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest_QueryParam::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpRequest.QueryParam.value)
}

// -------------------------------------------------------------------

// CMsgHttpRequest

// optional uint32 request_method = 1;
bool CMsgHttpRequest::has_request_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgHttpRequest::set_has_request_method() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgHttpRequest::clear_has_request_method() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgHttpRequest::clear_request_method() {
  request_method_ = 0u;
  clear_has_request_method();
}
 ::google::protobuf::uint32 CMsgHttpRequest::request_method() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.request_method)
  return request_method_;
}
 void CMsgHttpRequest::set_request_method(::google::protobuf::uint32 value) {
  set_has_request_method();
  request_method_ = value;
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.request_method)
}

// optional string hostname = 2;
bool CMsgHttpRequest::has_hostname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgHttpRequest::set_has_hostname() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgHttpRequest::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgHttpRequest::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostname();
}
 const ::std::string& CMsgHttpRequest::hostname() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.hostname)
  return hostname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest::set_hostname(const ::std::string& value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.hostname)
}
 void CMsgHttpRequest::set_hostname(const char* value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpRequest.hostname)
}
 void CMsgHttpRequest::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpRequest.hostname)
}
 ::std::string* CMsgHttpRequest::mutable_hostname() {
  set_has_hostname();
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpRequest::release_hostname() {
  clear_has_hostname();
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    set_has_hostname();
  } else {
    clear_has_hostname();
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpRequest.hostname)
}

// optional string url = 3;
bool CMsgHttpRequest::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgHttpRequest::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgHttpRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgHttpRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
 const ::std::string& CMsgHttpRequest::url() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.url)
}
 void CMsgHttpRequest::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpRequest.url)
}
 void CMsgHttpRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpRequest.url)
}
 ::std::string* CMsgHttpRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpRequest::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpRequest.url)
}

// repeated .CMsgHttpRequest.RequestHeader headers = 4;
int CMsgHttpRequest::headers_size() const {
  return headers_.size();
}
void CMsgHttpRequest::clear_headers() {
  headers_.Clear();
}
const ::CMsgHttpRequest_RequestHeader& CMsgHttpRequest::headers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.headers)
  return headers_.Get(index);
}
::CMsgHttpRequest_RequestHeader* CMsgHttpRequest::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.headers)
  return headers_.Mutable(index);
}
::CMsgHttpRequest_RequestHeader* CMsgHttpRequest::add_headers() {
  // @@protoc_insertion_point(field_add:CMsgHttpRequest.headers)
  return headers_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_RequestHeader >*
CMsgHttpRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHttpRequest.headers)
  return &headers_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_RequestHeader >&
CMsgHttpRequest::headers() const {
  // @@protoc_insertion_point(field_list:CMsgHttpRequest.headers)
  return headers_;
}

// repeated .CMsgHttpRequest.QueryParam get_params = 5;
int CMsgHttpRequest::get_params_size() const {
  return get_params_.size();
}
void CMsgHttpRequest::clear_get_params() {
  get_params_.Clear();
}
const ::CMsgHttpRequest_QueryParam& CMsgHttpRequest::get_params(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.get_params)
  return get_params_.Get(index);
}
::CMsgHttpRequest_QueryParam* CMsgHttpRequest::mutable_get_params(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.get_params)
  return get_params_.Mutable(index);
}
::CMsgHttpRequest_QueryParam* CMsgHttpRequest::add_get_params() {
  // @@protoc_insertion_point(field_add:CMsgHttpRequest.get_params)
  return get_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >*
CMsgHttpRequest::mutable_get_params() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHttpRequest.get_params)
  return &get_params_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >&
CMsgHttpRequest::get_params() const {
  // @@protoc_insertion_point(field_list:CMsgHttpRequest.get_params)
  return get_params_;
}

// repeated .CMsgHttpRequest.QueryParam post_params = 6;
int CMsgHttpRequest::post_params_size() const {
  return post_params_.size();
}
void CMsgHttpRequest::clear_post_params() {
  post_params_.Clear();
}
const ::CMsgHttpRequest_QueryParam& CMsgHttpRequest::post_params(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.post_params)
  return post_params_.Get(index);
}
::CMsgHttpRequest_QueryParam* CMsgHttpRequest::mutable_post_params(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.post_params)
  return post_params_.Mutable(index);
}
::CMsgHttpRequest_QueryParam* CMsgHttpRequest::add_post_params() {
  // @@protoc_insertion_point(field_add:CMsgHttpRequest.post_params)
  return post_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >*
CMsgHttpRequest::mutable_post_params() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHttpRequest.post_params)
  return &post_params_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >&
CMsgHttpRequest::post_params() const {
  // @@protoc_insertion_point(field_list:CMsgHttpRequest.post_params)
  return post_params_;
}

// optional bytes body = 7;
bool CMsgHttpRequest::has_body() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgHttpRequest::set_has_body() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgHttpRequest::clear_has_body() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgHttpRequest::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
 const ::std::string& CMsgHttpRequest::body() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.body)
}
 void CMsgHttpRequest::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpRequest.body)
}
 void CMsgHttpRequest::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpRequest.body)
}
 ::std::string* CMsgHttpRequest::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:CMsgHttpRequest.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpRequest::release_body() {
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpRequest::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpRequest.body)
}

// optional uint32 absolute_timeout = 8;
bool CMsgHttpRequest::has_absolute_timeout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgHttpRequest::set_has_absolute_timeout() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgHttpRequest::clear_has_absolute_timeout() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgHttpRequest::clear_absolute_timeout() {
  absolute_timeout_ = 0u;
  clear_has_absolute_timeout();
}
 ::google::protobuf::uint32 CMsgHttpRequest::absolute_timeout() const {
  // @@protoc_insertion_point(field_get:CMsgHttpRequest.absolute_timeout)
  return absolute_timeout_;
}
 void CMsgHttpRequest::set_absolute_timeout(::google::protobuf::uint32 value) {
  set_has_absolute_timeout();
  absolute_timeout_ = value;
  // @@protoc_insertion_point(field_set:CMsgHttpRequest.absolute_timeout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgWebAPIRequest::kUNUSEDJobNameFieldNumber;
const int CMsgWebAPIRequest::kInterfaceNameFieldNumber;
const int CMsgWebAPIRequest::kMethodNameFieldNumber;
const int CMsgWebAPIRequest::kVersionFieldNumber;
const int CMsgWebAPIRequest::kApiKeyFieldNumber;
const int CMsgWebAPIRequest::kRequestFieldNumber;
const int CMsgWebAPIRequest::kRoutingAppIdFieldNumber;
#endif  // !_MSC_VER

CMsgWebAPIRequest::CMsgWebAPIRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgWebAPIRequest)
}

void CMsgWebAPIRequest::InitAsDefaultInstance() {
  api_key_ = const_cast< ::CMsgWebAPIKey*>(&::CMsgWebAPIKey::default_instance());
  request_ = const_cast< ::CMsgHttpRequest*>(&::CMsgHttpRequest::default_instance());
}

CMsgWebAPIRequest::CMsgWebAPIRequest(const CMsgWebAPIRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgWebAPIRequest)
}

void CMsgWebAPIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  unused_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0u;
  api_key_ = NULL;
  request_ = NULL;
  routing_app_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgWebAPIRequest::~CMsgWebAPIRequest() {
  // @@protoc_insertion_point(destructor:CMsgWebAPIRequest)
  SharedDtor();
}

void CMsgWebAPIRequest::SharedDtor() {
  unused_job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete api_key_;
    delete request_;
  }
}

void CMsgWebAPIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgWebAPIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgWebAPIRequest_descriptor_;
}

const CMsgWebAPIRequest& CMsgWebAPIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgWebAPIRequest* CMsgWebAPIRequest::default_instance_ = NULL;

CMsgWebAPIRequest* CMsgWebAPIRequest::New(::google::protobuf::Arena* arena) const {
  CMsgWebAPIRequest* n = new CMsgWebAPIRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgWebAPIRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgWebAPIRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(version_, routing_app_id_);
    if (has_unused_job_name()) {
      unused_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_interface_name()) {
      interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_method_name()) {
      method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_api_key()) {
      if (api_key_ != NULL) api_key_->::CMsgWebAPIKey::Clear();
    }
    if (has_request()) {
      if (request_ != NULL) request_->::CMsgHttpRequest::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgWebAPIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgWebAPIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UNUSED_job_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unused_job_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unused_job_name().data(), this->unused_job_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIRequest.UNUSED_job_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_interface_name;
        break;
      }

      // optional string interface_name = 2;
      case 2: {
        if (tag == 18) {
         parse_interface_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interface_name().data(), this->interface_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIRequest.interface_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_method_name;
        break;
      }

      // optional string method_name = 3;
      case 3: {
        if (tag == 26) {
         parse_method_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), this->method_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIRequest.method_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_version;
        break;
      }

      // optional uint32 version = 4;
      case 4: {
        if (tag == 32) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_api_key;
        break;
      }

      // optional .CMsgWebAPIKey api_key = 5;
      case 5: {
        if (tag == 42) {
         parse_api_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_api_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_request;
        break;
      }

      // optional .CMsgHttpRequest request = 6;
      case 6: {
        if (tag == 50) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_routing_app_id;
        break;
      }

      // optional uint32 routing_app_id = 7;
      case 7: {
        if (tag == 56) {
         parse_routing_app_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routing_app_id_)));
          set_has_routing_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgWebAPIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgWebAPIRequest)
  return false;
#undef DO_
}

void CMsgWebAPIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgWebAPIRequest)
  // optional string UNUSED_job_name = 1;
  if (has_unused_job_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unused_job_name().data(), this->unused_job_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.UNUSED_job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unused_job_name(), output);
  }

  // optional string interface_name = 2;
  if (has_interface_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), this->interface_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.interface_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->interface_name(), output);
  }

  // optional string method_name = 3;
  if (has_method_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->method_name(), output);
  }

  // optional uint32 version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->version(), output);
  }

  // optional .CMsgWebAPIKey api_key = 5;
  if (has_api_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->api_key_, output);
  }

  // optional .CMsgHttpRequest request = 6;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->request_, output);
  }

  // optional uint32 routing_app_id = 7;
  if (has_routing_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->routing_app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgWebAPIRequest)
}

::google::protobuf::uint8* CMsgWebAPIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgWebAPIRequest)
  // optional string UNUSED_job_name = 1;
  if (has_unused_job_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unused_job_name().data(), this->unused_job_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.UNUSED_job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unused_job_name(), target);
  }

  // optional string interface_name = 2;
  if (has_interface_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), this->interface_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.interface_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->interface_name(), target);
  }

  // optional string method_name = 3;
  if (has_method_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->method_name(), target);
  }

  // optional uint32 version = 4;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->version(), target);
  }

  // optional .CMsgWebAPIKey api_key = 5;
  if (has_api_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->api_key_, target);
  }

  // optional .CMsgHttpRequest request = 6;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->request_, target);
  }

  // optional uint32 routing_app_id = 7;
  if (has_routing_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->routing_app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgWebAPIRequest)
  return target;
}

int CMsgWebAPIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional string UNUSED_job_name = 1;
    if (has_unused_job_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unused_job_name());
    }

    // optional string interface_name = 2;
    if (has_interface_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interface_name());
    }

    // optional string method_name = 3;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional uint32 version = 4;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional .CMsgWebAPIKey api_key = 5;
    if (has_api_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->api_key_);
    }

    // optional .CMsgHttpRequest request = 6;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->request_);
    }

    // optional uint32 routing_app_id = 7;
    if (has_routing_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->routing_app_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgWebAPIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgWebAPIRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgWebAPIRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgWebAPIRequest::MergeFrom(const CMsgWebAPIRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_unused_job_name()) {
      set_has_unused_job_name();
      unused_job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unused_job_name_);
    }
    if (from.has_interface_name()) {
      set_has_interface_name();
      interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
    }
    if (from.has_method_name()) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_api_key()) {
      mutable_api_key()->::CMsgWebAPIKey::MergeFrom(from.api_key());
    }
    if (from.has_request()) {
      mutable_request()->::CMsgHttpRequest::MergeFrom(from.request());
    }
    if (from.has_routing_app_id()) {
      set_routing_app_id(from.routing_app_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgWebAPIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgWebAPIRequest::CopyFrom(const CMsgWebAPIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgWebAPIRequest::IsInitialized() const {

  return true;
}

void CMsgWebAPIRequest::Swap(CMsgWebAPIRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgWebAPIRequest::InternalSwap(CMsgWebAPIRequest* other) {
  unused_job_name_.Swap(&other->unused_job_name_);
  interface_name_.Swap(&other->interface_name_);
  method_name_.Swap(&other->method_name_);
  std::swap(version_, other->version_);
  std::swap(api_key_, other->api_key_);
  std::swap(request_, other->request_);
  std::swap(routing_app_id_, other->routing_app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgWebAPIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgWebAPIRequest_descriptor_;
  metadata.reflection = CMsgWebAPIRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgWebAPIRequest

// optional string UNUSED_job_name = 1;
bool CMsgWebAPIRequest::has_unused_job_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgWebAPIRequest::set_has_unused_job_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgWebAPIRequest::clear_has_unused_job_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgWebAPIRequest::clear_unused_job_name() {
  unused_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unused_job_name();
}
 const ::std::string& CMsgWebAPIRequest::unused_job_name() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIRequest.UNUSED_job_name)
  return unused_job_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIRequest::set_unused_job_name(const ::std::string& value) {
  set_has_unused_job_name();
  unused_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgWebAPIRequest.UNUSED_job_name)
}
 void CMsgWebAPIRequest::set_unused_job_name(const char* value) {
  set_has_unused_job_name();
  unused_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgWebAPIRequest.UNUSED_job_name)
}
 void CMsgWebAPIRequest::set_unused_job_name(const char* value, size_t size) {
  set_has_unused_job_name();
  unused_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgWebAPIRequest.UNUSED_job_name)
}
 ::std::string* CMsgWebAPIRequest::mutable_unused_job_name() {
  set_has_unused_job_name();
  // @@protoc_insertion_point(field_mutable:CMsgWebAPIRequest.UNUSED_job_name)
  return unused_job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgWebAPIRequest::release_unused_job_name() {
  clear_has_unused_job_name();
  return unused_job_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIRequest::set_allocated_unused_job_name(::std::string* unused_job_name) {
  if (unused_job_name != NULL) {
    set_has_unused_job_name();
  } else {
    clear_has_unused_job_name();
  }
  unused_job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unused_job_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgWebAPIRequest.UNUSED_job_name)
}

// optional string interface_name = 2;
bool CMsgWebAPIRequest::has_interface_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgWebAPIRequest::set_has_interface_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgWebAPIRequest::clear_has_interface_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgWebAPIRequest::clear_interface_name() {
  interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_interface_name();
}
 const ::std::string& CMsgWebAPIRequest::interface_name() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIRequest.interface_name)
  return interface_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIRequest::set_interface_name(const ::std::string& value) {
  set_has_interface_name();
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgWebAPIRequest.interface_name)
}
 void CMsgWebAPIRequest::set_interface_name(const char* value) {
  set_has_interface_name();
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgWebAPIRequest.interface_name)
}
 void CMsgWebAPIRequest::set_interface_name(const char* value, size_t size) {
  set_has_interface_name();
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgWebAPIRequest.interface_name)
}
 ::std::string* CMsgWebAPIRequest::mutable_interface_name() {
  set_has_interface_name();
  // @@protoc_insertion_point(field_mutable:CMsgWebAPIRequest.interface_name)
  return interface_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgWebAPIRequest::release_interface_name() {
  clear_has_interface_name();
  return interface_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIRequest::set_allocated_interface_name(::std::string* interface_name) {
  if (interface_name != NULL) {
    set_has_interface_name();
  } else {
    clear_has_interface_name();
  }
  interface_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgWebAPIRequest.interface_name)
}

// optional string method_name = 3;
bool CMsgWebAPIRequest::has_method_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgWebAPIRequest::set_has_method_name() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgWebAPIRequest::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgWebAPIRequest::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_name();
}
 const ::std::string& CMsgWebAPIRequest::method_name() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIRequest.method_name)
  return method_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIRequest::set_method_name(const ::std::string& value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgWebAPIRequest.method_name)
}
 void CMsgWebAPIRequest::set_method_name(const char* value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgWebAPIRequest.method_name)
}
 void CMsgWebAPIRequest::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgWebAPIRequest.method_name)
}
 ::std::string* CMsgWebAPIRequest::mutable_method_name() {
  set_has_method_name();
  // @@protoc_insertion_point(field_mutable:CMsgWebAPIRequest.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgWebAPIRequest::release_method_name() {
  clear_has_method_name();
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgWebAPIRequest::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    set_has_method_name();
  } else {
    clear_has_method_name();
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgWebAPIRequest.method_name)
}

// optional uint32 version = 4;
bool CMsgWebAPIRequest::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgWebAPIRequest::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgWebAPIRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgWebAPIRequest::clear_version() {
  version_ = 0u;
  clear_has_version();
}
 ::google::protobuf::uint32 CMsgWebAPIRequest::version() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIRequest.version)
  return version_;
}
 void CMsgWebAPIRequest::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgWebAPIRequest.version)
}

// optional .CMsgWebAPIKey api_key = 5;
bool CMsgWebAPIRequest::has_api_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgWebAPIRequest::set_has_api_key() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgWebAPIRequest::clear_has_api_key() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgWebAPIRequest::clear_api_key() {
  if (api_key_ != NULL) api_key_->::CMsgWebAPIKey::Clear();
  clear_has_api_key();
}
const ::CMsgWebAPIKey& CMsgWebAPIRequest::api_key() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIRequest.api_key)
  return api_key_ != NULL ? *api_key_ : *default_instance_->api_key_;
}
::CMsgWebAPIKey* CMsgWebAPIRequest::mutable_api_key() {
  set_has_api_key();
  if (api_key_ == NULL) {
    api_key_ = new ::CMsgWebAPIKey;
  }
  // @@protoc_insertion_point(field_mutable:CMsgWebAPIRequest.api_key)
  return api_key_;
}
::CMsgWebAPIKey* CMsgWebAPIRequest::release_api_key() {
  clear_has_api_key();
  ::CMsgWebAPIKey* temp = api_key_;
  api_key_ = NULL;
  return temp;
}
void CMsgWebAPIRequest::set_allocated_api_key(::CMsgWebAPIKey* api_key) {
  delete api_key_;
  api_key_ = api_key;
  if (api_key) {
    set_has_api_key();
  } else {
    clear_has_api_key();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgWebAPIRequest.api_key)
}

// optional .CMsgHttpRequest request = 6;
bool CMsgWebAPIRequest::has_request() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgWebAPIRequest::set_has_request() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgWebAPIRequest::clear_has_request() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgWebAPIRequest::clear_request() {
  if (request_ != NULL) request_->::CMsgHttpRequest::Clear();
  clear_has_request();
}
const ::CMsgHttpRequest& CMsgWebAPIRequest::request() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIRequest.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
::CMsgHttpRequest* CMsgWebAPIRequest::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::CMsgHttpRequest;
  }
  // @@protoc_insertion_point(field_mutable:CMsgWebAPIRequest.request)
  return request_;
}
::CMsgHttpRequest* CMsgWebAPIRequest::release_request() {
  clear_has_request();
  ::CMsgHttpRequest* temp = request_;
  request_ = NULL;
  return temp;
}
void CMsgWebAPIRequest::set_allocated_request(::CMsgHttpRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgWebAPIRequest.request)
}

// optional uint32 routing_app_id = 7;
bool CMsgWebAPIRequest::has_routing_app_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgWebAPIRequest::set_has_routing_app_id() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgWebAPIRequest::clear_has_routing_app_id() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgWebAPIRequest::clear_routing_app_id() {
  routing_app_id_ = 0u;
  clear_has_routing_app_id();
}
 ::google::protobuf::uint32 CMsgWebAPIRequest::routing_app_id() const {
  // @@protoc_insertion_point(field_get:CMsgWebAPIRequest.routing_app_id)
  return routing_app_id_;
}
 void CMsgWebAPIRequest::set_routing_app_id(::google::protobuf::uint32 value) {
  set_has_routing_app_id();
  routing_app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgWebAPIRequest.routing_app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgHttpResponse_ResponseHeader::kNameFieldNumber;
const int CMsgHttpResponse_ResponseHeader::kValueFieldNumber;
#endif  // !_MSC_VER

CMsgHttpResponse_ResponseHeader::CMsgHttpResponse_ResponseHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpResponse.ResponseHeader)
}

void CMsgHttpResponse_ResponseHeader::InitAsDefaultInstance() {
}

CMsgHttpResponse_ResponseHeader::CMsgHttpResponse_ResponseHeader(const CMsgHttpResponse_ResponseHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgHttpResponse.ResponseHeader)
}

void CMsgHttpResponse_ResponseHeader::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgHttpResponse_ResponseHeader::~CMsgHttpResponse_ResponseHeader() {
  // @@protoc_insertion_point(destructor:CMsgHttpResponse.ResponseHeader)
  SharedDtor();
}

void CMsgHttpResponse_ResponseHeader::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgHttpResponse_ResponseHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpResponse_ResponseHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgHttpResponse_ResponseHeader_descriptor_;
}

const CMsgHttpResponse_ResponseHeader& CMsgHttpResponse_ResponseHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgHttpResponse_ResponseHeader* CMsgHttpResponse_ResponseHeader::default_instance_ = NULL;

CMsgHttpResponse_ResponseHeader* CMsgHttpResponse_ResponseHeader::New(::google::protobuf::Arena* arena) const {
  CMsgHttpResponse_ResponseHeader* n = new CMsgHttpResponse_ResponseHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpResponse_ResponseHeader::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgHttpResponse_ResponseHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpResponse.ResponseHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpResponse.ResponseHeader.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpResponse.ResponseHeader.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpResponse.ResponseHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpResponse.ResponseHeader)
  return false;
#undef DO_
}

void CMsgHttpResponse_ResponseHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpResponse.ResponseHeader)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpResponse.ResponseHeader)
}

::google::protobuf::uint8* CMsgHttpResponse_ResponseHeader::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpResponse.ResponseHeader)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpResponse.ResponseHeader)
  return target;
}

int CMsgHttpResponse_ResponseHeader::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpResponse_ResponseHeader::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgHttpResponse_ResponseHeader* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpResponse_ResponseHeader>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgHttpResponse_ResponseHeader::MergeFrom(const CMsgHttpResponse_ResponseHeader& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgHttpResponse_ResponseHeader::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpResponse_ResponseHeader::CopyFrom(const CMsgHttpResponse_ResponseHeader& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpResponse_ResponseHeader::IsInitialized() const {

  return true;
}

void CMsgHttpResponse_ResponseHeader::Swap(CMsgHttpResponse_ResponseHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpResponse_ResponseHeader::InternalSwap(CMsgHttpResponse_ResponseHeader* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpResponse_ResponseHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgHttpResponse_ResponseHeader_descriptor_;
  metadata.reflection = CMsgHttpResponse_ResponseHeader_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgHttpResponse::kStatusCodeFieldNumber;
const int CMsgHttpResponse::kHeadersFieldNumber;
const int CMsgHttpResponse::kBodyFieldNumber;
#endif  // !_MSC_VER

CMsgHttpResponse::CMsgHttpResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpResponse)
}

void CMsgHttpResponse::InitAsDefaultInstance() {
}

CMsgHttpResponse::CMsgHttpResponse(const CMsgHttpResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgHttpResponse)
}

void CMsgHttpResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_code_ = 0u;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgHttpResponse::~CMsgHttpResponse() {
  // @@protoc_insertion_point(destructor:CMsgHttpResponse)
  SharedDtor();
}

void CMsgHttpResponse::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgHttpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgHttpResponse_descriptor_;
}

const CMsgHttpResponse& CMsgHttpResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgHttpResponse* CMsgHttpResponse::default_instance_ = NULL;

CMsgHttpResponse* CMsgHttpResponse::New(::google::protobuf::Arena* arena) const {
  CMsgHttpResponse* n = new CMsgHttpResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpResponse::Clear() {
  if (_has_bits_[0 / 32] & 5u) {
    status_code_ = 0u;
    if (has_body()) {
      body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  headers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgHttpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_code_)));
          set_has_status_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_headers;
        break;
      }

      // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
      case 2: {
        if (tag == 18) {
         parse_headers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_headers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_headers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_body;
        break;
      }

      // optional bytes body = 3;
      case 3: {
        if (tag == 26) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpResponse)
  return false;
#undef DO_
}

void CMsgHttpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpResponse)
  // optional uint32 status_code = 1;
  if (has_status_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status_code(), output);
  }

  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->headers(i), output);
  }

  // optional bytes body = 3;
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpResponse)
}

::google::protobuf::uint8* CMsgHttpResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpResponse)
  // optional uint32 status_code = 1;
  if (has_status_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status_code(), target);
  }

  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->headers(i), target);
  }

  // optional bytes body = 3;
  if (has_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpResponse)
  return target;
}

int CMsgHttpResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 5u) {
    // optional uint32 status_code = 1;
    if (has_status_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status_code());
    }

    // optional bytes body = 3;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

  }
  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  total_size += 1 * this->headers_size();
  for (int i = 0; i < this->headers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->headers(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgHttpResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgHttpResponse::MergeFrom(const CMsgHttpResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  headers_.MergeFrom(from.headers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status_code()) {
      set_status_code(from.status_code());
    }
    if (from.has_body()) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgHttpResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpResponse::CopyFrom(const CMsgHttpResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpResponse::IsInitialized() const {

  return true;
}

void CMsgHttpResponse::Swap(CMsgHttpResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpResponse::InternalSwap(CMsgHttpResponse* other) {
  std::swap(status_code_, other->status_code_);
  headers_.UnsafeArenaSwap(&other->headers_);
  body_.Swap(&other->body_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgHttpResponse_descriptor_;
  metadata.reflection = CMsgHttpResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgHttpResponse_ResponseHeader

// optional string name = 1;
bool CMsgHttpResponse_ResponseHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgHttpResponse_ResponseHeader::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgHttpResponse_ResponseHeader::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgHttpResponse_ResponseHeader::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CMsgHttpResponse_ResponseHeader::name() const {
  // @@protoc_insertion_point(field_get:CMsgHttpResponse.ResponseHeader.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpResponse_ResponseHeader::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpResponse.ResponseHeader.name)
}
 void CMsgHttpResponse_ResponseHeader::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpResponse.ResponseHeader.name)
}
 void CMsgHttpResponse_ResponseHeader::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpResponse.ResponseHeader.name)
}
 ::std::string* CMsgHttpResponse_ResponseHeader::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgHttpResponse.ResponseHeader.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpResponse_ResponseHeader::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpResponse_ResponseHeader::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpResponse.ResponseHeader.name)
}

// optional string value = 2;
bool CMsgHttpResponse_ResponseHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgHttpResponse_ResponseHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgHttpResponse_ResponseHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgHttpResponse_ResponseHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& CMsgHttpResponse_ResponseHeader::value() const {
  // @@protoc_insertion_point(field_get:CMsgHttpResponse.ResponseHeader.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpResponse_ResponseHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpResponse.ResponseHeader.value)
}
 void CMsgHttpResponse_ResponseHeader::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpResponse.ResponseHeader.value)
}
 void CMsgHttpResponse_ResponseHeader::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpResponse.ResponseHeader.value)
}
 ::std::string* CMsgHttpResponse_ResponseHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CMsgHttpResponse.ResponseHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpResponse_ResponseHeader::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpResponse_ResponseHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpResponse.ResponseHeader.value)
}

// -------------------------------------------------------------------

// CMsgHttpResponse

// optional uint32 status_code = 1;
bool CMsgHttpResponse::has_status_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgHttpResponse::set_has_status_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgHttpResponse::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgHttpResponse::clear_status_code() {
  status_code_ = 0u;
  clear_has_status_code();
}
 ::google::protobuf::uint32 CMsgHttpResponse::status_code() const {
  // @@protoc_insertion_point(field_get:CMsgHttpResponse.status_code)
  return status_code_;
}
 void CMsgHttpResponse::set_status_code(::google::protobuf::uint32 value) {
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgHttpResponse.status_code)
}

// repeated .CMsgHttpResponse.ResponseHeader headers = 2;
int CMsgHttpResponse::headers_size() const {
  return headers_.size();
}
void CMsgHttpResponse::clear_headers() {
  headers_.Clear();
}
const ::CMsgHttpResponse_ResponseHeader& CMsgHttpResponse::headers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHttpResponse.headers)
  return headers_.Get(index);
}
::CMsgHttpResponse_ResponseHeader* CMsgHttpResponse::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHttpResponse.headers)
  return headers_.Mutable(index);
}
::CMsgHttpResponse_ResponseHeader* CMsgHttpResponse::add_headers() {
  // @@protoc_insertion_point(field_add:CMsgHttpResponse.headers)
  return headers_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgHttpResponse_ResponseHeader >*
CMsgHttpResponse::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHttpResponse.headers)
  return &headers_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgHttpResponse_ResponseHeader >&
CMsgHttpResponse::headers() const {
  // @@protoc_insertion_point(field_list:CMsgHttpResponse.headers)
  return headers_;
}

// optional bytes body = 3;
bool CMsgHttpResponse::has_body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgHttpResponse::set_has_body() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgHttpResponse::clear_has_body() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgHttpResponse::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
 const ::std::string& CMsgHttpResponse::body() const {
  // @@protoc_insertion_point(field_get:CMsgHttpResponse.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpResponse::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgHttpResponse.body)
}
 void CMsgHttpResponse::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgHttpResponse.body)
}
 void CMsgHttpResponse::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgHttpResponse.body)
}
 ::std::string* CMsgHttpResponse::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:CMsgHttpResponse.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgHttpResponse::release_body() {
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgHttpResponse::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:CMsgHttpResponse.body)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMFindAccounts::kSearchTypeFieldNumber;
const int CMsgAMFindAccounts::kSearchStringFieldNumber;
#endif  // !_MSC_VER

CMsgAMFindAccounts::CMsgAMFindAccounts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMFindAccounts)
}

void CMsgAMFindAccounts::InitAsDefaultInstance() {
}

CMsgAMFindAccounts::CMsgAMFindAccounts(const CMsgAMFindAccounts& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMFindAccounts)
}

void CMsgAMFindAccounts::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_type_ = 0u;
  search_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMFindAccounts::~CMsgAMFindAccounts() {
  // @@protoc_insertion_point(destructor:CMsgAMFindAccounts)
  SharedDtor();
}

void CMsgAMFindAccounts::SharedDtor() {
  search_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgAMFindAccounts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMFindAccounts::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMFindAccounts_descriptor_;
}

const CMsgAMFindAccounts& CMsgAMFindAccounts::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMFindAccounts* CMsgAMFindAccounts::default_instance_ = NULL;

CMsgAMFindAccounts* CMsgAMFindAccounts::New(::google::protobuf::Arena* arena) const {
  CMsgAMFindAccounts* n = new CMsgAMFindAccounts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMFindAccounts::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    search_type_ = 0u;
    if (has_search_string()) {
      search_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMFindAccounts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMFindAccounts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 search_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &search_type_)));
          set_has_search_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_search_string;
        break;
      }

      // optional string search_string = 2;
      case 2: {
        if (tag == 18) {
         parse_search_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->search_string().data(), this->search_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMFindAccounts.search_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMFindAccounts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMFindAccounts)
  return false;
#undef DO_
}

void CMsgAMFindAccounts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMFindAccounts)
  // optional uint32 search_type = 1;
  if (has_search_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->search_type(), output);
  }

  // optional string search_string = 2;
  if (has_search_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_string().data(), this->search_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMFindAccounts.search_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->search_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMFindAccounts)
}

::google::protobuf::uint8* CMsgAMFindAccounts::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMFindAccounts)
  // optional uint32 search_type = 1;
  if (has_search_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->search_type(), target);
  }

  // optional string search_string = 2;
  if (has_search_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_string().data(), this->search_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMFindAccounts.search_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->search_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMFindAccounts)
  return target;
}

int CMsgAMFindAccounts::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 search_type = 1;
    if (has_search_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->search_type());
    }

    // optional string search_string = 2;
    if (has_search_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_string());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMFindAccounts::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMFindAccounts* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMFindAccounts>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMFindAccounts::MergeFrom(const CMsgAMFindAccounts& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_search_type()) {
      set_search_type(from.search_type());
    }
    if (from.has_search_string()) {
      set_has_search_string();
      search_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMFindAccounts::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMFindAccounts::CopyFrom(const CMsgAMFindAccounts& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMFindAccounts::IsInitialized() const {

  return true;
}

void CMsgAMFindAccounts::Swap(CMsgAMFindAccounts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMFindAccounts::InternalSwap(CMsgAMFindAccounts* other) {
  std::swap(search_type_, other->search_type_);
  search_string_.Swap(&other->search_string_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMFindAccounts::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMFindAccounts_descriptor_;
  metadata.reflection = CMsgAMFindAccounts_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMFindAccounts

// optional uint32 search_type = 1;
bool CMsgAMFindAccounts::has_search_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMFindAccounts::set_has_search_type() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMFindAccounts::clear_has_search_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMFindAccounts::clear_search_type() {
  search_type_ = 0u;
  clear_has_search_type();
}
 ::google::protobuf::uint32 CMsgAMFindAccounts::search_type() const {
  // @@protoc_insertion_point(field_get:CMsgAMFindAccounts.search_type)
  return search_type_;
}
 void CMsgAMFindAccounts::set_search_type(::google::protobuf::uint32 value) {
  set_has_search_type();
  search_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMFindAccounts.search_type)
}

// optional string search_string = 2;
bool CMsgAMFindAccounts::has_search_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMFindAccounts::set_has_search_string() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMFindAccounts::clear_has_search_string() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMFindAccounts::clear_search_string() {
  search_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_search_string();
}
 const ::std::string& CMsgAMFindAccounts::search_string() const {
  // @@protoc_insertion_point(field_get:CMsgAMFindAccounts.search_string)
  return search_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMFindAccounts::set_search_string(const ::std::string& value) {
  set_has_search_string();
  search_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgAMFindAccounts.search_string)
}
 void CMsgAMFindAccounts::set_search_string(const char* value) {
  set_has_search_string();
  search_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgAMFindAccounts.search_string)
}
 void CMsgAMFindAccounts::set_search_string(const char* value, size_t size) {
  set_has_search_string();
  search_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgAMFindAccounts.search_string)
}
 ::std::string* CMsgAMFindAccounts::mutable_search_string() {
  set_has_search_string();
  // @@protoc_insertion_point(field_mutable:CMsgAMFindAccounts.search_string)
  return search_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgAMFindAccounts::release_search_string() {
  clear_has_search_string();
  return search_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMFindAccounts::set_allocated_search_string(::std::string* search_string) {
  if (search_string != NULL) {
    set_has_search_string();
  } else {
    clear_has_search_string();
  }
  search_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_string);
  // @@protoc_insertion_point(field_set_allocated:CMsgAMFindAccounts.search_string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMFindAccountsResponse::kSteamIdFieldNumber;
#endif  // !_MSC_VER

CMsgAMFindAccountsResponse::CMsgAMFindAccountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMFindAccountsResponse)
}

void CMsgAMFindAccountsResponse::InitAsDefaultInstance() {
}

CMsgAMFindAccountsResponse::CMsgAMFindAccountsResponse(const CMsgAMFindAccountsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMFindAccountsResponse)
}

void CMsgAMFindAccountsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMFindAccountsResponse::~CMsgAMFindAccountsResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMFindAccountsResponse)
  SharedDtor();
}

void CMsgAMFindAccountsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMFindAccountsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMFindAccountsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMFindAccountsResponse_descriptor_;
}

const CMsgAMFindAccountsResponse& CMsgAMFindAccountsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMFindAccountsResponse* CMsgAMFindAccountsResponse::default_instance_ = NULL;

CMsgAMFindAccountsResponse* CMsgAMFindAccountsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMFindAccountsResponse* n = new CMsgAMFindAccountsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMFindAccountsResponse::Clear() {
  steam_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMFindAccountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMFindAccountsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 steam_id = 1;
      case 1: {
        if (tag == 9) {
         parse_steam_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9, input, this->mutable_steam_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steam_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_steam_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMFindAccountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMFindAccountsResponse)
  return false;
#undef DO_
}

void CMsgAMFindAccountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMFindAccountsResponse)
  // repeated fixed64 steam_id = 1;
  for (int i = 0; i < this->steam_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->steam_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMFindAccountsResponse)
}

::google::protobuf::uint8* CMsgAMFindAccountsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMFindAccountsResponse)
  // repeated fixed64 steam_id = 1;
  for (int i = 0; i < this->steam_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(1, this->steam_id(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMFindAccountsResponse)
  return target;
}

int CMsgAMFindAccountsResponse::ByteSize() const {
  int total_size = 0;

  // repeated fixed64 steam_id = 1;
  {
    int data_size = 0;
    data_size = 8 * this->steam_id_size();
    total_size += 1 * this->steam_id_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMFindAccountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMFindAccountsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMFindAccountsResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMFindAccountsResponse::MergeFrom(const CMsgAMFindAccountsResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  steam_id_.MergeFrom(from.steam_id_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMFindAccountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMFindAccountsResponse::CopyFrom(const CMsgAMFindAccountsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMFindAccountsResponse::IsInitialized() const {

  return true;
}

void CMsgAMFindAccountsResponse::Swap(CMsgAMFindAccountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMFindAccountsResponse::InternalSwap(CMsgAMFindAccountsResponse* other) {
  steam_id_.UnsafeArenaSwap(&other->steam_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMFindAccountsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMFindAccountsResponse_descriptor_;
  metadata.reflection = CMsgAMFindAccountsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMFindAccountsResponse

// repeated fixed64 steam_id = 1;
int CMsgAMFindAccountsResponse::steam_id_size() const {
  return steam_id_.size();
}
void CMsgAMFindAccountsResponse::clear_steam_id() {
  steam_id_.Clear();
}
 ::google::protobuf::uint64 CMsgAMFindAccountsResponse::steam_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAMFindAccountsResponse.steam_id)
  return steam_id_.Get(index);
}
 void CMsgAMFindAccountsResponse::set_steam_id(int index, ::google::protobuf::uint64 value) {
  steam_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAMFindAccountsResponse.steam_id)
}
 void CMsgAMFindAccountsResponse::add_steam_id(::google::protobuf::uint64 value) {
  steam_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgAMFindAccountsResponse.steam_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgAMFindAccountsResponse::steam_id() const {
  // @@protoc_insertion_point(field_list:CMsgAMFindAccountsResponse.steam_id)
  return steam_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgAMFindAccountsResponse::mutable_steam_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAMFindAccountsResponse.steam_id)
  return &steam_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgNotifyWatchdog::kSourceFieldNumber;
const int CMsgNotifyWatchdog::kAlertTypeFieldNumber;
const int CMsgNotifyWatchdog::kAlertDestinationFieldNumber;
const int CMsgNotifyWatchdog::kCriticalFieldNumber;
const int CMsgNotifyWatchdog::kTimeFieldNumber;
const int CMsgNotifyWatchdog::kAppidFieldNumber;
const int CMsgNotifyWatchdog::kTextFieldNumber;
#endif  // !_MSC_VER

CMsgNotifyWatchdog::CMsgNotifyWatchdog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNotifyWatchdog)
}

void CMsgNotifyWatchdog::InitAsDefaultInstance() {
}

CMsgNotifyWatchdog::CMsgNotifyWatchdog(const CMsgNotifyWatchdog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgNotifyWatchdog)
}

void CMsgNotifyWatchdog::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  source_ = 0u;
  alert_type_ = 0u;
  alert_destination_ = 0u;
  critical_ = false;
  time_ = 0u;
  appid_ = 0u;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgNotifyWatchdog::~CMsgNotifyWatchdog() {
  // @@protoc_insertion_point(destructor:CMsgNotifyWatchdog)
  SharedDtor();
}

void CMsgNotifyWatchdog::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgNotifyWatchdog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgNotifyWatchdog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgNotifyWatchdog_descriptor_;
}

const CMsgNotifyWatchdog& CMsgNotifyWatchdog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgNotifyWatchdog* CMsgNotifyWatchdog::default_instance_ = NULL;

CMsgNotifyWatchdog* CMsgNotifyWatchdog::New(::google::protobuf::Arena* arena) const {
  CMsgNotifyWatchdog* n = new CMsgNotifyWatchdog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgNotifyWatchdog::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgNotifyWatchdog*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(source_, appid_);
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgNotifyWatchdog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNotifyWatchdog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_alert_type;
        break;
      }

      // optional uint32 alert_type = 2;
      case 2: {
        if (tag == 16) {
         parse_alert_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alert_type_)));
          set_has_alert_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_alert_destination;
        break;
      }

      // optional uint32 alert_destination = 3;
      case 3: {
        if (tag == 24) {
         parse_alert_destination:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alert_destination_)));
          set_has_alert_destination();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_critical;
        break;
      }

      // optional bool critical = 4;
      case 4: {
        if (tag == 32) {
         parse_critical:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &critical_)));
          set_has_critical();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time;
        break;
      }

      // optional uint32 time = 5;
      case 5: {
        if (tag == 40) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_appid;
        break;
      }

      // optional uint32 appid = 6;
      case 6: {
        if (tag == 48) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_text;
        break;
      }

      // optional string text = 7;
      case 7: {
        if (tag == 58) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgNotifyWatchdog.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNotifyWatchdog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNotifyWatchdog)
  return false;
#undef DO_
}

void CMsgNotifyWatchdog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNotifyWatchdog)
  // optional uint32 source = 1;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source(), output);
  }

  // optional uint32 alert_type = 2;
  if (has_alert_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->alert_type(), output);
  }

  // optional uint32 alert_destination = 3;
  if (has_alert_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->alert_destination(), output);
  }

  // optional bool critical = 4;
  if (has_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->critical(), output);
  }

  // optional uint32 time = 5;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time(), output);
  }

  // optional uint32 appid = 6;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->appid(), output);
  }

  // optional string text = 7;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNotifyWatchdog.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNotifyWatchdog)
}

::google::protobuf::uint8* CMsgNotifyWatchdog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotifyWatchdog)
  // optional uint32 source = 1;
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source(), target);
  }

  // optional uint32 alert_type = 2;
  if (has_alert_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->alert_type(), target);
  }

  // optional uint32 alert_destination = 3;
  if (has_alert_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->alert_destination(), target);
  }

  // optional bool critical = 4;
  if (has_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->critical(), target);
  }

  // optional uint32 time = 5;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time(), target);
  }

  // optional uint32 appid = 6;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->appid(), target);
  }

  // optional string text = 7;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNotifyWatchdog.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotifyWatchdog)
  return target;
}

int CMsgNotifyWatchdog::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional uint32 source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source());
    }

    // optional uint32 alert_type = 2;
    if (has_alert_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->alert_type());
    }

    // optional uint32 alert_destination = 3;
    if (has_alert_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->alert_destination());
    }

    // optional bool critical = 4;
    if (has_critical()) {
      total_size += 1 + 1;
    }

    // optional uint32 time = 5;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 appid = 6;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional string text = 7;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgNotifyWatchdog::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgNotifyWatchdog* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNotifyWatchdog>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgNotifyWatchdog::MergeFrom(const CMsgNotifyWatchdog& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_alert_type()) {
      set_alert_type(from.alert_type());
    }
    if (from.has_alert_destination()) {
      set_alert_destination(from.alert_destination());
    }
    if (from.has_critical()) {
      set_critical(from.critical());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgNotifyWatchdog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNotifyWatchdog::CopyFrom(const CMsgNotifyWatchdog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNotifyWatchdog::IsInitialized() const {

  return true;
}

void CMsgNotifyWatchdog::Swap(CMsgNotifyWatchdog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNotifyWatchdog::InternalSwap(CMsgNotifyWatchdog* other) {
  std::swap(source_, other->source_);
  std::swap(alert_type_, other->alert_type_);
  std::swap(alert_destination_, other->alert_destination_);
  std::swap(critical_, other->critical_);
  std::swap(time_, other->time_);
  std::swap(appid_, other->appid_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgNotifyWatchdog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgNotifyWatchdog_descriptor_;
  metadata.reflection = CMsgNotifyWatchdog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgNotifyWatchdog

// optional uint32 source = 1;
bool CMsgNotifyWatchdog::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgNotifyWatchdog::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgNotifyWatchdog::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgNotifyWatchdog::clear_source() {
  source_ = 0u;
  clear_has_source();
}
 ::google::protobuf::uint32 CMsgNotifyWatchdog::source() const {
  // @@protoc_insertion_point(field_get:CMsgNotifyWatchdog.source)
  return source_;
}
 void CMsgNotifyWatchdog::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotifyWatchdog.source)
}

// optional uint32 alert_type = 2;
bool CMsgNotifyWatchdog::has_alert_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgNotifyWatchdog::set_has_alert_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgNotifyWatchdog::clear_has_alert_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgNotifyWatchdog::clear_alert_type() {
  alert_type_ = 0u;
  clear_has_alert_type();
}
 ::google::protobuf::uint32 CMsgNotifyWatchdog::alert_type() const {
  // @@protoc_insertion_point(field_get:CMsgNotifyWatchdog.alert_type)
  return alert_type_;
}
 void CMsgNotifyWatchdog::set_alert_type(::google::protobuf::uint32 value) {
  set_has_alert_type();
  alert_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotifyWatchdog.alert_type)
}

// optional uint32 alert_destination = 3;
bool CMsgNotifyWatchdog::has_alert_destination() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgNotifyWatchdog::set_has_alert_destination() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgNotifyWatchdog::clear_has_alert_destination() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgNotifyWatchdog::clear_alert_destination() {
  alert_destination_ = 0u;
  clear_has_alert_destination();
}
 ::google::protobuf::uint32 CMsgNotifyWatchdog::alert_destination() const {
  // @@protoc_insertion_point(field_get:CMsgNotifyWatchdog.alert_destination)
  return alert_destination_;
}
 void CMsgNotifyWatchdog::set_alert_destination(::google::protobuf::uint32 value) {
  set_has_alert_destination();
  alert_destination_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotifyWatchdog.alert_destination)
}

// optional bool critical = 4;
bool CMsgNotifyWatchdog::has_critical() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgNotifyWatchdog::set_has_critical() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgNotifyWatchdog::clear_has_critical() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgNotifyWatchdog::clear_critical() {
  critical_ = false;
  clear_has_critical();
}
 bool CMsgNotifyWatchdog::critical() const {
  // @@protoc_insertion_point(field_get:CMsgNotifyWatchdog.critical)
  return critical_;
}
 void CMsgNotifyWatchdog::set_critical(bool value) {
  set_has_critical();
  critical_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotifyWatchdog.critical)
}

// optional uint32 time = 5;
bool CMsgNotifyWatchdog::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgNotifyWatchdog::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgNotifyWatchdog::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgNotifyWatchdog::clear_time() {
  time_ = 0u;
  clear_has_time();
}
 ::google::protobuf::uint32 CMsgNotifyWatchdog::time() const {
  // @@protoc_insertion_point(field_get:CMsgNotifyWatchdog.time)
  return time_;
}
 void CMsgNotifyWatchdog::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotifyWatchdog.time)
}

// optional uint32 appid = 6;
bool CMsgNotifyWatchdog::has_appid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgNotifyWatchdog::set_has_appid() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgNotifyWatchdog::clear_has_appid() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgNotifyWatchdog::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
 ::google::protobuf::uint32 CMsgNotifyWatchdog::appid() const {
  // @@protoc_insertion_point(field_get:CMsgNotifyWatchdog.appid)
  return appid_;
}
 void CMsgNotifyWatchdog::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotifyWatchdog.appid)
}

// optional string text = 7;
bool CMsgNotifyWatchdog::has_text() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgNotifyWatchdog::set_has_text() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgNotifyWatchdog::clear_has_text() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgNotifyWatchdog::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& CMsgNotifyWatchdog::text() const {
  // @@protoc_insertion_point(field_get:CMsgNotifyWatchdog.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgNotifyWatchdog::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgNotifyWatchdog.text)
}
 void CMsgNotifyWatchdog::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgNotifyWatchdog.text)
}
 void CMsgNotifyWatchdog::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgNotifyWatchdog.text)
}
 ::std::string* CMsgNotifyWatchdog::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CMsgNotifyWatchdog.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgNotifyWatchdog::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgNotifyWatchdog::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CMsgNotifyWatchdog.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMGetLicenses::kSteamidFieldNumber;
#endif  // !_MSC_VER

CMsgAMGetLicenses::CMsgAMGetLicenses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetLicenses)
}

void CMsgAMGetLicenses::InitAsDefaultInstance() {
}

CMsgAMGetLicenses::CMsgAMGetLicenses(const CMsgAMGetLicenses& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetLicenses)
}

void CMsgAMGetLicenses::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGetLicenses::~CMsgAMGetLicenses() {
  // @@protoc_insertion_point(destructor:CMsgAMGetLicenses)
  SharedDtor();
}

void CMsgAMGetLicenses::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGetLicenses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetLicenses::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGetLicenses_descriptor_;
}

const CMsgAMGetLicenses& CMsgAMGetLicenses::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGetLicenses* CMsgAMGetLicenses::default_instance_ = NULL;

CMsgAMGetLicenses* CMsgAMGetLicenses::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetLicenses* n = new CMsgAMGetLicenses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetLicenses::Clear() {
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGetLicenses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetLicenses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetLicenses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetLicenses)
  return false;
#undef DO_
}

void CMsgAMGetLicenses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetLicenses)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetLicenses)
}

::google::protobuf::uint8* CMsgAMGetLicenses::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetLicenses)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetLicenses)
  return target;
}

int CMsgAMGetLicenses::ByteSize() const {
  int total_size = 0;

  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetLicenses::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGetLicenses* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetLicenses>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGetLicenses::MergeFrom(const CMsgAMGetLicenses& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGetLicenses::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetLicenses::CopyFrom(const CMsgAMGetLicenses& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetLicenses::IsInitialized() const {

  return true;
}

void CMsgAMGetLicenses::Swap(CMsgAMGetLicenses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetLicenses::InternalSwap(CMsgAMGetLicenses* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetLicenses::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGetLicenses_descriptor_;
  metadata.reflection = CMsgAMGetLicenses_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMGetLicenses

// optional fixed64 steamid = 1;
bool CMsgAMGetLicenses::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMGetLicenses::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMGetLicenses::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMGetLicenses::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgAMGetLicenses::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetLicenses.steamid)
  return steamid_;
}
 void CMsgAMGetLicenses::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetLicenses.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgPackageLicense::kPackageIdFieldNumber;
const int CMsgPackageLicense::kTimeCreatedFieldNumber;
const int CMsgPackageLicense::kOwnerIdFieldNumber;
#endif  // !_MSC_VER

CMsgPackageLicense::CMsgPackageLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPackageLicense)
}

void CMsgPackageLicense::InitAsDefaultInstance() {
}

CMsgPackageLicense::CMsgPackageLicense(const CMsgPackageLicense& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgPackageLicense)
}

void CMsgPackageLicense::SharedCtor() {
  _cached_size_ = 0;
  package_id_ = 0u;
  time_created_ = 0u;
  owner_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgPackageLicense::~CMsgPackageLicense() {
  // @@protoc_insertion_point(destructor:CMsgPackageLicense)
  SharedDtor();
}

void CMsgPackageLicense::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgPackageLicense::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgPackageLicense::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgPackageLicense_descriptor_;
}

const CMsgPackageLicense& CMsgPackageLicense::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgPackageLicense* CMsgPackageLicense::default_instance_ = NULL;

CMsgPackageLicense* CMsgPackageLicense::New(::google::protobuf::Arena* arena) const {
  CMsgPackageLicense* n = new CMsgPackageLicense;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgPackageLicense::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgPackageLicense*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(package_id_, owner_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgPackageLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPackageLicense)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
          set_has_package_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time_created;
        break;
      }

      // optional uint32 time_created = 2;
      case 2: {
        if (tag == 16) {
         parse_time_created:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_created_)));
          set_has_time_created();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_owner_id;
        break;
      }

      // optional uint32 owner_id = 3;
      case 3: {
        if (tag == 24) {
         parse_owner_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
          set_has_owner_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPackageLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPackageLicense)
  return false;
#undef DO_
}

void CMsgPackageLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPackageLicense)
  // optional uint32 package_id = 1;
  if (has_package_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_id(), output);
  }

  // optional uint32 time_created = 2;
  if (has_time_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_created(), output);
  }

  // optional uint32 owner_id = 3;
  if (has_owner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->owner_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPackageLicense)
}

::google::protobuf::uint8* CMsgPackageLicense::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPackageLicense)
  // optional uint32 package_id = 1;
  if (has_package_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_id(), target);
  }

  // optional uint32 time_created = 2;
  if (has_time_created()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_created(), target);
  }

  // optional uint32 owner_id = 3;
  if (has_owner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->owner_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPackageLicense)
  return target;
}

int CMsgPackageLicense::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 package_id = 1;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional uint32 time_created = 2;
    if (has_time_created()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_created());
    }

    // optional uint32 owner_id = 3;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgPackageLicense::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgPackageLicense* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPackageLicense>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgPackageLicense::MergeFrom(const CMsgPackageLicense& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_id()) {
      set_package_id(from.package_id());
    }
    if (from.has_time_created()) {
      set_time_created(from.time_created());
    }
    if (from.has_owner_id()) {
      set_owner_id(from.owner_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgPackageLicense::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPackageLicense::CopyFrom(const CMsgPackageLicense& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPackageLicense::IsInitialized() const {

  return true;
}

void CMsgPackageLicense::Swap(CMsgPackageLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPackageLicense::InternalSwap(CMsgPackageLicense* other) {
  std::swap(package_id_, other->package_id_);
  std::swap(time_created_, other->time_created_);
  std::swap(owner_id_, other->owner_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgPackageLicense::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgPackageLicense_descriptor_;
  metadata.reflection = CMsgPackageLicense_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgPackageLicense

// optional uint32 package_id = 1;
bool CMsgPackageLicense::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgPackageLicense::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgPackageLicense::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgPackageLicense::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
 ::google::protobuf::uint32 CMsgPackageLicense::package_id() const {
  // @@protoc_insertion_point(field_get:CMsgPackageLicense.package_id)
  return package_id_;
}
 void CMsgPackageLicense::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPackageLicense.package_id)
}

// optional uint32 time_created = 2;
bool CMsgPackageLicense::has_time_created() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgPackageLicense::set_has_time_created() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgPackageLicense::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgPackageLicense::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
 ::google::protobuf::uint32 CMsgPackageLicense::time_created() const {
  // @@protoc_insertion_point(field_get:CMsgPackageLicense.time_created)
  return time_created_;
}
 void CMsgPackageLicense::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgPackageLicense.time_created)
}

// optional uint32 owner_id = 3;
bool CMsgPackageLicense::has_owner_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgPackageLicense::set_has_owner_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgPackageLicense::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgPackageLicense::clear_owner_id() {
  owner_id_ = 0u;
  clear_has_owner_id();
}
 ::google::protobuf::uint32 CMsgPackageLicense::owner_id() const {
  // @@protoc_insertion_point(field_get:CMsgPackageLicense.owner_id)
  return owner_id_;
}
 void CMsgPackageLicense::set_owner_id(::google::protobuf::uint32 value) {
  set_has_owner_id();
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPackageLicense.owner_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMGetLicensesResponse::kLicenseFieldNumber;
const int CMsgAMGetLicensesResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CMsgAMGetLicensesResponse::CMsgAMGetLicensesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetLicensesResponse)
}

void CMsgAMGetLicensesResponse::InitAsDefaultInstance() {
}

CMsgAMGetLicensesResponse::CMsgAMGetLicensesResponse(const CMsgAMGetLicensesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetLicensesResponse)
}

void CMsgAMGetLicensesResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGetLicensesResponse::~CMsgAMGetLicensesResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMGetLicensesResponse)
  SharedDtor();
}

void CMsgAMGetLicensesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGetLicensesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetLicensesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGetLicensesResponse_descriptor_;
}

const CMsgAMGetLicensesResponse& CMsgAMGetLicensesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGetLicensesResponse* CMsgAMGetLicensesResponse::default_instance_ = NULL;

CMsgAMGetLicensesResponse* CMsgAMGetLicensesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetLicensesResponse* n = new CMsgAMGetLicensesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetLicensesResponse::Clear() {
  result_ = 0u;
  license_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGetLicensesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetLicensesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgPackageLicense license = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_license:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_license()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_license;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional uint32 result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetLicensesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetLicensesResponse)
  return false;
#undef DO_
}

void CMsgAMGetLicensesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetLicensesResponse)
  // repeated .CMsgPackageLicense license = 1;
  for (unsigned int i = 0, n = this->license_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->license(i), output);
  }

  // optional uint32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetLicensesResponse)
}

::google::protobuf::uint8* CMsgAMGetLicensesResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetLicensesResponse)
  // repeated .CMsgPackageLicense license = 1;
  for (unsigned int i = 0, n = this->license_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->license(i), target);
  }

  // optional uint32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetLicensesResponse)
  return target;
}

int CMsgAMGetLicensesResponse::ByteSize() const {
  int total_size = 0;

  // optional uint32 result = 2;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // repeated .CMsgPackageLicense license = 1;
  total_size += 1 * this->license_size();
  for (int i = 0; i < this->license_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->license(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetLicensesResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGetLicensesResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetLicensesResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGetLicensesResponse::MergeFrom(const CMsgAMGetLicensesResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  license_.MergeFrom(from.license_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGetLicensesResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetLicensesResponse::CopyFrom(const CMsgAMGetLicensesResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetLicensesResponse::IsInitialized() const {

  return true;
}

void CMsgAMGetLicensesResponse::Swap(CMsgAMGetLicensesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetLicensesResponse::InternalSwap(CMsgAMGetLicensesResponse* other) {
  license_.UnsafeArenaSwap(&other->license_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetLicensesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGetLicensesResponse_descriptor_;
  metadata.reflection = CMsgAMGetLicensesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMGetLicensesResponse

// repeated .CMsgPackageLicense license = 1;
int CMsgAMGetLicensesResponse::license_size() const {
  return license_.size();
}
void CMsgAMGetLicensesResponse::clear_license() {
  license_.Clear();
}
const ::CMsgPackageLicense& CMsgAMGetLicensesResponse::license(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAMGetLicensesResponse.license)
  return license_.Get(index);
}
::CMsgPackageLicense* CMsgAMGetLicensesResponse::mutable_license(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAMGetLicensesResponse.license)
  return license_.Mutable(index);
}
::CMsgPackageLicense* CMsgAMGetLicensesResponse::add_license() {
  // @@protoc_insertion_point(field_add:CMsgAMGetLicensesResponse.license)
  return license_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgPackageLicense >*
CMsgAMGetLicensesResponse::mutable_license() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAMGetLicensesResponse.license)
  return &license_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgPackageLicense >&
CMsgAMGetLicensesResponse::license() const {
  // @@protoc_insertion_point(field_list:CMsgAMGetLicensesResponse.license)
  return license_;
}

// optional uint32 result = 2;
bool CMsgAMGetLicensesResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMGetLicensesResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMGetLicensesResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMGetLicensesResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 CMsgAMGetLicensesResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetLicensesResponse.result)
  return result_;
}
 void CMsgAMGetLicensesResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetLicensesResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMGetUserGameStats::kSteamIdFieldNumber;
const int CMsgAMGetUserGameStats::kGameIdFieldNumber;
const int CMsgAMGetUserGameStats::kStatsFieldNumber;
#endif  // !_MSC_VER

CMsgAMGetUserGameStats::CMsgAMGetUserGameStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStats)
}

void CMsgAMGetUserGameStats::InitAsDefaultInstance() {
}

CMsgAMGetUserGameStats::CMsgAMGetUserGameStats(const CMsgAMGetUserGameStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStats)
}

void CMsgAMGetUserGameStats::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
  game_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGetUserGameStats::~CMsgAMGetUserGameStats() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStats)
  SharedDtor();
}

void CMsgAMGetUserGameStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGetUserGameStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGetUserGameStats_descriptor_;
}

const CMsgAMGetUserGameStats& CMsgAMGetUserGameStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGetUserGameStats* CMsgAMGetUserGameStats::default_instance_ = NULL;

CMsgAMGetUserGameStats* CMsgAMGetUserGameStats::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStats* n = new CMsgAMGetUserGameStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMGetUserGameStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(steam_id_, game_id_);

#undef ZR_HELPER_
#undef ZR_

  stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGetUserGameStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
          set_has_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_game_id;
        break;
      }

      // optional fixed64 game_id = 2;
      case 2: {
        if (tag == 17) {
         parse_game_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
          set_has_game_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stats;
        break;
      }

      // repeated uint32 stats = 3;
      case 3: {
        if (tag == 24) {
         parse_stats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_stats())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_stats())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stats;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStats)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStats)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional fixed64 game_id = 2;
  if (has_game_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->game_id(), output);
  }

  // repeated uint32 stats = 3;
  for (int i = 0; i < this->stats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStats)
}

::google::protobuf::uint8* CMsgAMGetUserGameStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStats)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (has_game_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->game_id(), target);
  }

  // repeated uint32 stats = 3;
  for (int i = 0; i < this->stats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->stats(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStats)
  return target;
}

int CMsgAMGetUserGameStats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 game_id = 2;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

  }
  // repeated uint32 stats = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->stats_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->stats(i));
    }
    total_size += 1 * this->stats_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGetUserGameStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStats::MergeFrom(const CMsgAMGetUserGameStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  stats_.MergeFrom(from.stats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steam_id()) {
      set_steam_id(from.steam_id());
    }
    if (from.has_game_id()) {
      set_game_id(from.game_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGetUserGameStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStats::CopyFrom(const CMsgAMGetUserGameStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStats::IsInitialized() const {

  return true;
}

void CMsgAMGetUserGameStats::Swap(CMsgAMGetUserGameStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStats::InternalSwap(CMsgAMGetUserGameStats* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(game_id_, other->game_id_);
  stats_.UnsafeArenaSwap(&other->stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGetUserGameStats_descriptor_;
  metadata.reflection = CMsgAMGetUserGameStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMGetUserGameStats

// optional fixed64 steam_id = 1;
bool CMsgAMGetUserGameStats::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMGetUserGameStats::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMGetUserGameStats::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMGetUserGameStats::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
 ::google::protobuf::uint64 CMsgAMGetUserGameStats::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStats.steam_id)
  return steam_id_;
}
 void CMsgAMGetUserGameStats::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStats.steam_id)
}

// optional fixed64 game_id = 2;
bool CMsgAMGetUserGameStats::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMGetUserGameStats::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMGetUserGameStats::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMGetUserGameStats::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
 ::google::protobuf::uint64 CMsgAMGetUserGameStats::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStats.game_id)
  return game_id_;
}
 void CMsgAMGetUserGameStats::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStats.game_id)
}

// repeated uint32 stats = 3;
int CMsgAMGetUserGameStats::stats_size() const {
  return stats_.size();
}
void CMsgAMGetUserGameStats::clear_stats() {
  stats_.Clear();
}
 ::google::protobuf::uint32 CMsgAMGetUserGameStats::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStats.stats)
  return stats_.Get(index);
}
 void CMsgAMGetUserGameStats::set_stats(int index, ::google::protobuf::uint32 value) {
  stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStats.stats)
}
 void CMsgAMGetUserGameStats::add_stats(::google::protobuf::uint32 value) {
  stats_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgAMGetUserGameStats.stats)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgAMGetUserGameStats::stats() const {
  // @@protoc_insertion_point(field_list:CMsgAMGetUserGameStats.stats)
  return stats_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgAMGetUserGameStats::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAMGetUserGameStats.stats)
  return &stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMGetUserGameStatsResponse_Stats::kStatIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse_Stats::kStatValueFieldNumber;
#endif  // !_MSC_VER

CMsgAMGetUserGameStatsResponse_Stats::CMsgAMGetUserGameStatsResponse_Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStatsResponse.Stats)
}

void CMsgAMGetUserGameStatsResponse_Stats::InitAsDefaultInstance() {
}

CMsgAMGetUserGameStatsResponse_Stats::CMsgAMGetUserGameStatsResponse_Stats(const CMsgAMGetUserGameStatsResponse_Stats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse.Stats)
}

void CMsgAMGetUserGameStatsResponse_Stats::SharedCtor() {
  _cached_size_ = 0;
  stat_id_ = 0u;
  stat_value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGetUserGameStatsResponse_Stats::~CMsgAMGetUserGameStatsResponse_Stats() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse.Stats)
  SharedDtor();
}

void CMsgAMGetUserGameStatsResponse_Stats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGetUserGameStatsResponse_Stats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse_Stats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGetUserGameStatsResponse_Stats_descriptor_;
}

const CMsgAMGetUserGameStatsResponse_Stats& CMsgAMGetUserGameStatsResponse_Stats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse_Stats::default_instance_ = NULL;

CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse_Stats::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStatsResponse_Stats* n = new CMsgAMGetUserGameStatsResponse_Stats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStatsResponse_Stats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMGetUserGameStatsResponse_Stats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(stat_id_, stat_value_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGetUserGameStatsResponse_Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStatsResponse.Stats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stat_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_id_)));
          set_has_stat_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stat_value;
        break;
      }

      // optional uint32 stat_value = 2;
      case 2: {
        if (tag == 16) {
         parse_stat_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_value_)));
          set_has_stat_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStatsResponse.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStatsResponse.Stats)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStatsResponse_Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStatsResponse.Stats)
  // optional uint32 stat_id = 1;
  if (has_stat_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stat_id(), output);
  }

  // optional uint32 stat_value = 2;
  if (has_stat_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStatsResponse.Stats)
}

::google::protobuf::uint8* CMsgAMGetUserGameStatsResponse_Stats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse.Stats)
  // optional uint32 stat_id = 1;
  if (has_stat_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stat_id(), target);
  }

  // optional uint32 stat_value = 2;
  if (has_stat_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse.Stats)
  return target;
}

int CMsgAMGetUserGameStatsResponse_Stats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_id());
    }

    // optional uint32 stat_value = 2;
    if (has_stat_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStatsResponse_Stats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGetUserGameStatsResponse_Stats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStatsResponse_Stats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStatsResponse_Stats::MergeFrom(const CMsgAMGetUserGameStatsResponse_Stats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stat_id()) {
      set_stat_id(from.stat_id());
    }
    if (from.has_stat_value()) {
      set_stat_value(from.stat_value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGetUserGameStatsResponse_Stats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStatsResponse_Stats::CopyFrom(const CMsgAMGetUserGameStatsResponse_Stats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStatsResponse_Stats::IsInitialized() const {

  return true;
}

void CMsgAMGetUserGameStatsResponse_Stats::Swap(CMsgAMGetUserGameStatsResponse_Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStatsResponse_Stats::InternalSwap(CMsgAMGetUserGameStatsResponse_Stats* other) {
  std::swap(stat_id_, other->stat_id_);
  std::swap(stat_value_, other->stat_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse_Stats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGetUserGameStatsResponse_Stats_descriptor_;
  metadata.reflection = CMsgAMGetUserGameStatsResponse_Stats_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgAMGetUserGameStatsResponse_Achievement_Blocks::kAchievementIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse_Achievement_Blocks::kAchievementBitIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse_Achievement_Blocks::kUnlockTimeFieldNumber;
#endif  // !_MSC_VER

CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CMsgAMGetUserGameStatsResponse_Achievement_Blocks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::InitAsDefaultInstance() {
}

CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CMsgAMGetUserGameStatsResponse_Achievement_Blocks(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SharedCtor() {
  _cached_size_ = 0;
  achievement_id_ = 0u;
  achievement_bit_id_ = 0u;
  unlock_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGetUserGameStatsResponse_Achievement_Blocks::~CMsgAMGetUserGameStatsResponse_Achievement_Blocks() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  SharedDtor();
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_;
}

const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance_ = NULL;

CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks* n = new CMsgAMGetUserGameStatsResponse_Achievement_Blocks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMGetUserGameStatsResponse_Achievement_Blocks*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(achievement_id_, unlock_time_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 achievement_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achievement_id_)));
          set_has_achievement_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_achievement_bit_id;
        break;
      }

      // optional uint32 achievement_bit_id = 2;
      case 2: {
        if (tag == 16) {
         parse_achievement_bit_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achievement_bit_id_)));
          set_has_achievement_bit_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_unlock_time;
        break;
      }

      // optional fixed32 unlock_time = 3;
      case 3: {
        if (tag == 29) {
         parse_unlock_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &unlock_time_)));
          set_has_unlock_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  // optional uint32 achievement_id = 1;
  if (has_achievement_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->achievement_id(), output);
  }

  // optional uint32 achievement_bit_id = 2;
  if (has_achievement_bit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->achievement_bit_id(), output);
  }

  // optional fixed32 unlock_time = 3;
  if (has_unlock_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->unlock_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}

::google::protobuf::uint8* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  // optional uint32 achievement_id = 1;
  if (has_achievement_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->achievement_id(), target);
  }

  // optional uint32 achievement_bit_id = 2;
  if (has_achievement_bit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->achievement_bit_id(), target);
  }

  // optional fixed32 unlock_time = 3;
  if (has_unlock_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->unlock_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  return target;
}

int CMsgAMGetUserGameStatsResponse_Achievement_Blocks::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 achievement_id = 1;
    if (has_achievement_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->achievement_id());
    }

    // optional uint32 achievement_bit_id = 2;
    if (has_achievement_bit_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->achievement_bit_id());
    }

    // optional fixed32 unlock_time = 3;
    if (has_unlock_time()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGetUserGameStatsResponse_Achievement_Blocks* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStatsResponse_Achievement_Blocks>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_achievement_id()) {
      set_achievement_id(from.achievement_id());
    }
    if (from.has_achievement_bit_id()) {
      set_achievement_bit_id(from.achievement_bit_id());
    }
    if (from.has_unlock_time()) {
      set_unlock_time(from.unlock_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CopyFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::IsInitialized() const {

  return true;
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::Swap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::InternalSwap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other) {
  std::swap(achievement_id_, other->achievement_id_);
  std::swap(achievement_bit_id_, other->achievement_bit_id_);
  std::swap(unlock_time_, other->unlock_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_;
  metadata.reflection = CMsgAMGetUserGameStatsResponse_Achievement_Blocks_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgAMGetUserGameStatsResponse::kSteamIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kGameIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kEresultFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kStatsFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kAchievementBlocksFieldNumber;
#endif  // !_MSC_VER

CMsgAMGetUserGameStatsResponse::CMsgAMGetUserGameStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStatsResponse)
}

void CMsgAMGetUserGameStatsResponse::InitAsDefaultInstance() {
}

CMsgAMGetUserGameStatsResponse::CMsgAMGetUserGameStatsResponse(const CMsgAMGetUserGameStatsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse)
}

void CMsgAMGetUserGameStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
  game_id_ = GOOGLE_ULONGLONG(0);
  eresult_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGetUserGameStatsResponse::~CMsgAMGetUserGameStatsResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse)
  SharedDtor();
}

void CMsgAMGetUserGameStatsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGetUserGameStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGetUserGameStatsResponse_descriptor_;
}

const CMsgAMGetUserGameStatsResponse& CMsgAMGetUserGameStatsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGetUserGameStatsResponse* CMsgAMGetUserGameStatsResponse::default_instance_ = NULL;

CMsgAMGetUserGameStatsResponse* CMsgAMGetUserGameStatsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStatsResponse* n = new CMsgAMGetUserGameStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStatsResponse::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMGetUserGameStatsResponse*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(steam_id_, game_id_);
    eresult_ = 2;
  }

#undef ZR_HELPER_
#undef ZR_

  stats_.Clear();
  achievement_blocks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGetUserGameStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
          set_has_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_game_id;
        break;
      }

      // optional fixed64 game_id = 2;
      case 2: {
        if (tag == 17) {
         parse_game_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
          set_has_game_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_eresult;
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (tag == 24) {
         parse_eresult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stats;
        break;
      }

      // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
      case 4: {
        if (tag == 34) {
         parse_stats:
          DO_(input->IncrementRecursionDepth());
         parse_loop_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_stats;
        if (input->ExpectTag(42)) goto parse_loop_achievement_blocks;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_achievement_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_achievement_blocks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_achievement_blocks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStatsResponse)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStatsResponse)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional fixed64 game_id = 2;
  if (has_game_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->game_id(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stats(i), output);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  for (unsigned int i = 0, n = this->achievement_blocks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->achievement_blocks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStatsResponse)
}

::google::protobuf::uint8* CMsgAMGetUserGameStatsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (has_game_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->game_id(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->stats(i), target);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  for (unsigned int i = 0, n = this->achievement_blocks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->achievement_blocks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse)
  return target;
}

int CMsgAMGetUserGameStatsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 game_id = 2;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  total_size += 1 * this->stats_size();
  for (int i = 0; i < this->stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stats(i));
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  total_size += 1 * this->achievement_blocks_size();
  for (int i = 0; i < this->achievement_blocks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->achievement_blocks(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGetUserGameStatsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStatsResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStatsResponse::MergeFrom(const CMsgAMGetUserGameStatsResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  stats_.MergeFrom(from.stats_);
  achievement_blocks_.MergeFrom(from.achievement_blocks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steam_id()) {
      set_steam_id(from.steam_id());
    }
    if (from.has_game_id()) {
      set_game_id(from.game_id());
    }
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGetUserGameStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStatsResponse::CopyFrom(const CMsgAMGetUserGameStatsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStatsResponse::IsInitialized() const {

  return true;
}

void CMsgAMGetUserGameStatsResponse::Swap(CMsgAMGetUserGameStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStatsResponse::InternalSwap(CMsgAMGetUserGameStatsResponse* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(game_id_, other->game_id_);
  std::swap(eresult_, other->eresult_);
  stats_.UnsafeArenaSwap(&other->stats_);
  achievement_blocks_.UnsafeArenaSwap(&other->achievement_blocks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGetUserGameStatsResponse_descriptor_;
  metadata.reflection = CMsgAMGetUserGameStatsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMGetUserGameStatsResponse_Stats

// optional uint32 stat_id = 1;
bool CMsgAMGetUserGameStatsResponse_Stats::has_stat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMGetUserGameStatsResponse_Stats::set_has_stat_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMGetUserGameStatsResponse_Stats::clear_has_stat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMGetUserGameStatsResponse_Stats::clear_stat_id() {
  stat_id_ = 0u;
  clear_has_stat_id();
}
 ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Stats::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.Stats.stat_id)
  return stat_id_;
}
 void CMsgAMGetUserGameStatsResponse_Stats::set_stat_id(::google::protobuf::uint32 value) {
  set_has_stat_id();
  stat_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.Stats.stat_id)
}

// optional uint32 stat_value = 2;
bool CMsgAMGetUserGameStatsResponse_Stats::has_stat_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMGetUserGameStatsResponse_Stats::set_has_stat_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMGetUserGameStatsResponse_Stats::clear_has_stat_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMGetUserGameStatsResponse_Stats::clear_stat_value() {
  stat_value_ = 0u;
  clear_has_stat_value();
}
 ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Stats::stat_value() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.Stats.stat_value)
  return stat_value_;
}
 void CMsgAMGetUserGameStatsResponse_Stats::set_stat_value(::google::protobuf::uint32 value) {
  set_has_stat_value();
  stat_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.Stats.stat_value)
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse_Achievement_Blocks

// optional uint32 achievement_id = 1;
bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_achievement_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_has_achievement_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_has_achievement_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_achievement_id() {
  achievement_id_ = 0u;
  clear_has_achievement_id();
}
 ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::achievement_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_id)
  return achievement_id_;
}
 void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_achievement_id(::google::protobuf::uint32 value) {
  set_has_achievement_id();
  achievement_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_id)
}

// optional uint32 achievement_bit_id = 2;
bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_achievement_bit_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_has_achievement_bit_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_has_achievement_bit_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_achievement_bit_id() {
  achievement_bit_id_ = 0u;
  clear_has_achievement_bit_id();
}
 ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::achievement_bit_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_bit_id)
  return achievement_bit_id_;
}
 void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_achievement_bit_id(::google::protobuf::uint32 value) {
  set_has_achievement_bit_id();
  achievement_bit_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_bit_id)
}

// optional fixed32 unlock_time = 3;
bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_unlock_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_has_unlock_time() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_has_unlock_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_unlock_time() {
  unlock_time_ = 0u;
  clear_has_unlock_time();
}
 ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::unlock_time() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.Achievement_Blocks.unlock_time)
  return unlock_time_;
}
 void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_unlock_time(::google::protobuf::uint32 value) {
  set_has_unlock_time();
  unlock_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.Achievement_Blocks.unlock_time)
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse

// optional fixed64 steam_id = 1;
bool CMsgAMGetUserGameStatsResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMGetUserGameStatsResponse::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMGetUserGameStatsResponse::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMGetUserGameStatsResponse::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
 ::google::protobuf::uint64 CMsgAMGetUserGameStatsResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.steam_id)
  return steam_id_;
}
 void CMsgAMGetUserGameStatsResponse::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.steam_id)
}

// optional fixed64 game_id = 2;
bool CMsgAMGetUserGameStatsResponse::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMGetUserGameStatsResponse::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMGetUserGameStatsResponse::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMGetUserGameStatsResponse::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
 ::google::protobuf::uint64 CMsgAMGetUserGameStatsResponse::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.game_id)
  return game_id_;
}
 void CMsgAMGetUserGameStatsResponse::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.game_id)
}

// optional int32 eresult = 3 [default = 2];
bool CMsgAMGetUserGameStatsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAMGetUserGameStatsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAMGetUserGameStatsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAMGetUserGameStatsResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
 ::google::protobuf::int32 CMsgAMGetUserGameStatsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.eresult)
  return eresult_;
}
 void CMsgAMGetUserGameStatsResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGetUserGameStatsResponse.eresult)
}

// repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
int CMsgAMGetUserGameStatsResponse::stats_size() const {
  return stats_.size();
}
void CMsgAMGetUserGameStatsResponse::clear_stats() {
  stats_.Clear();
}
const ::CMsgAMGetUserGameStatsResponse_Stats& CMsgAMGetUserGameStatsResponse::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.stats)
  return stats_.Get(index);
}
::CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAMGetUserGameStatsResponse.stats)
  return stats_.Mutable(index);
}
::CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse::add_stats() {
  // @@protoc_insertion_point(field_add:CMsgAMGetUserGameStatsResponse.stats)
  return stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Stats >*
CMsgAMGetUserGameStatsResponse::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAMGetUserGameStatsResponse.stats)
  return &stats_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Stats >&
CMsgAMGetUserGameStatsResponse::stats() const {
  // @@protoc_insertion_point(field_list:CMsgAMGetUserGameStatsResponse.stats)
  return stats_;
}

// repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
int CMsgAMGetUserGameStatsResponse::achievement_blocks_size() const {
  return achievement_blocks_.size();
}
void CMsgAMGetUserGameStatsResponse::clear_achievement_blocks() {
  achievement_blocks_.Clear();
}
const ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks& CMsgAMGetUserGameStatsResponse::achievement_blocks(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_.Get(index);
}
::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse::mutable_achievement_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_.Mutable(index);
}
::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse::add_achievement_blocks() {
  // @@protoc_insertion_point(field_add:CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >*
CMsgAMGetUserGameStatsResponse::mutable_achievement_blocks() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return &achievement_blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >&
CMsgAMGetUserGameStatsResponse::achievement_blocks() const {
  // @@protoc_insertion_point(field_list:CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetCommandList::kAppIdFieldNumber;
const int CMsgGCGetCommandList::kCommandPrefixFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetCommandList::CMsgGCGetCommandList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetCommandList)
}

void CMsgGCGetCommandList::InitAsDefaultInstance() {
}

CMsgGCGetCommandList::CMsgGCGetCommandList(const CMsgGCGetCommandList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetCommandList)
}

void CMsgGCGetCommandList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_id_ = 0u;
  command_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetCommandList::~CMsgGCGetCommandList() {
  // @@protoc_insertion_point(destructor:CMsgGCGetCommandList)
  SharedDtor();
}

void CMsgGCGetCommandList::SharedDtor() {
  command_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgGCGetCommandList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetCommandList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetCommandList_descriptor_;
}

const CMsgGCGetCommandList& CMsgGCGetCommandList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetCommandList* CMsgGCGetCommandList::default_instance_ = NULL;

CMsgGCGetCommandList* CMsgGCGetCommandList::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetCommandList* n = new CMsgGCGetCommandList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetCommandList::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    app_id_ = 0u;
    if (has_command_prefix()) {
      command_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetCommandList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetCommandList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
          set_has_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_command_prefix;
        break;
      }

      // optional string command_prefix = 2;
      case 2: {
        if (tag == 18) {
         parse_command_prefix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_prefix()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command_prefix().data(), this->command_prefix().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetCommandList.command_prefix");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetCommandList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetCommandList)
  return false;
#undef DO_
}

void CMsgGCGetCommandList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetCommandList)
  // optional uint32 app_id = 1;
  if (has_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string command_prefix = 2;
  if (has_command_prefix()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_prefix().data(), this->command_prefix().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandList.command_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command_prefix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetCommandList)
}

::google::protobuf::uint8* CMsgGCGetCommandList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetCommandList)
  // optional uint32 app_id = 1;
  if (has_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string command_prefix = 2;
  if (has_command_prefix()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_prefix().data(), this->command_prefix().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandList.command_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command_prefix(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetCommandList)
  return target;
}

int CMsgGCGetCommandList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional string command_prefix = 2;
    if (has_command_prefix()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command_prefix());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetCommandList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetCommandList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetCommandList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetCommandList::MergeFrom(const CMsgGCGetCommandList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_app_id()) {
      set_app_id(from.app_id());
    }
    if (from.has_command_prefix()) {
      set_has_command_prefix();
      command_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_prefix_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetCommandList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetCommandList::CopyFrom(const CMsgGCGetCommandList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetCommandList::IsInitialized() const {

  return true;
}

void CMsgGCGetCommandList::Swap(CMsgGCGetCommandList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetCommandList::InternalSwap(CMsgGCGetCommandList* other) {
  std::swap(app_id_, other->app_id_);
  command_prefix_.Swap(&other->command_prefix_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetCommandList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetCommandList_descriptor_;
  metadata.reflection = CMsgGCGetCommandList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetCommandList

// optional uint32 app_id = 1;
bool CMsgGCGetCommandList::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetCommandList::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetCommandList::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetCommandList::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
 ::google::protobuf::uint32 CMsgGCGetCommandList::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetCommandList.app_id)
  return app_id_;
}
 void CMsgGCGetCommandList::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetCommandList.app_id)
}

// optional string command_prefix = 2;
bool CMsgGCGetCommandList::has_command_prefix() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCGetCommandList::set_has_command_prefix() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCGetCommandList::clear_has_command_prefix() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCGetCommandList::clear_command_prefix() {
  command_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command_prefix();
}
 const ::std::string& CMsgGCGetCommandList::command_prefix() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetCommandList.command_prefix)
  return command_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCGetCommandList::set_command_prefix(const ::std::string& value) {
  set_has_command_prefix();
  command_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCGetCommandList.command_prefix)
}
 void CMsgGCGetCommandList::set_command_prefix(const char* value) {
  set_has_command_prefix();
  command_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCGetCommandList.command_prefix)
}
 void CMsgGCGetCommandList::set_command_prefix(const char* value, size_t size) {
  set_has_command_prefix();
  command_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCGetCommandList.command_prefix)
}
 ::std::string* CMsgGCGetCommandList::mutable_command_prefix() {
  set_has_command_prefix();
  // @@protoc_insertion_point(field_mutable:CMsgGCGetCommandList.command_prefix)
  return command_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCGetCommandList::release_command_prefix() {
  clear_has_command_prefix();
  return command_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCGetCommandList::set_allocated_command_prefix(::std::string* command_prefix) {
  if (command_prefix != NULL) {
    set_has_command_prefix();
  } else {
    clear_has_command_prefix();
  }
  command_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_prefix);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCGetCommandList.command_prefix)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetCommandListResponse::kCommandNameFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetCommandListResponse::CMsgGCGetCommandListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetCommandListResponse)
}

void CMsgGCGetCommandListResponse::InitAsDefaultInstance() {
}

CMsgGCGetCommandListResponse::CMsgGCGetCommandListResponse(const CMsgGCGetCommandListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetCommandListResponse)
}

void CMsgGCGetCommandListResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetCommandListResponse::~CMsgGCGetCommandListResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCGetCommandListResponse)
  SharedDtor();
}

void CMsgGCGetCommandListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetCommandListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetCommandListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetCommandListResponse_descriptor_;
}

const CMsgGCGetCommandListResponse& CMsgGCGetCommandListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetCommandListResponse* CMsgGCGetCommandListResponse::default_instance_ = NULL;

CMsgGCGetCommandListResponse* CMsgGCGetCommandListResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetCommandListResponse* n = new CMsgGCGetCommandListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetCommandListResponse::Clear() {
  command_name_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetCommandListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetCommandListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string command_name = 1;
      case 1: {
        if (tag == 10) {
         parse_command_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_command_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command_name(this->command_name_size() - 1).data(),
            this->command_name(this->command_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetCommandListResponse.command_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_command_name;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetCommandListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetCommandListResponse)
  return false;
#undef DO_
}

void CMsgGCGetCommandListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetCommandListResponse)
  // repeated string command_name = 1;
  for (int i = 0; i < this->command_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_name(i).data(), this->command_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandListResponse.command_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->command_name(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetCommandListResponse)
}

::google::protobuf::uint8* CMsgGCGetCommandListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetCommandListResponse)
  // repeated string command_name = 1;
  for (int i = 0; i < this->command_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_name(i).data(), this->command_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandListResponse.command_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->command_name(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetCommandListResponse)
  return target;
}

int CMsgGCGetCommandListResponse::ByteSize() const {
  int total_size = 0;

  // repeated string command_name = 1;
  total_size += 1 * this->command_name_size();
  for (int i = 0; i < this->command_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->command_name(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetCommandListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetCommandListResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetCommandListResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetCommandListResponse::MergeFrom(const CMsgGCGetCommandListResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  command_name_.MergeFrom(from.command_name_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetCommandListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetCommandListResponse::CopyFrom(const CMsgGCGetCommandListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetCommandListResponse::IsInitialized() const {

  return true;
}

void CMsgGCGetCommandListResponse::Swap(CMsgGCGetCommandListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetCommandListResponse::InternalSwap(CMsgGCGetCommandListResponse* other) {
  command_name_.UnsafeArenaSwap(&other->command_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetCommandListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetCommandListResponse_descriptor_;
  metadata.reflection = CMsgGCGetCommandListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetCommandListResponse

// repeated string command_name = 1;
int CMsgGCGetCommandListResponse::command_name_size() const {
  return command_name_.size();
}
void CMsgGCGetCommandListResponse::clear_command_name() {
  command_name_.Clear();
}
 const ::std::string& CMsgGCGetCommandListResponse::command_name(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetCommandListResponse.command_name)
  return command_name_.Get(index);
}
 ::std::string* CMsgGCGetCommandListResponse::mutable_command_name(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCGetCommandListResponse.command_name)
  return command_name_.Mutable(index);
}
 void CMsgGCGetCommandListResponse::set_command_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgGCGetCommandListResponse.command_name)
  command_name_.Mutable(index)->assign(value);
}
 void CMsgGCGetCommandListResponse::set_command_name(int index, const char* value) {
  command_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCGetCommandListResponse.command_name)
}
 void CMsgGCGetCommandListResponse::set_command_name(int index, const char* value, size_t size) {
  command_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCGetCommandListResponse.command_name)
}
 ::std::string* CMsgGCGetCommandListResponse::add_command_name() {
  return command_name_.Add();
}
 void CMsgGCGetCommandListResponse::add_command_name(const ::std::string& value) {
  command_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgGCGetCommandListResponse.command_name)
}
 void CMsgGCGetCommandListResponse::add_command_name(const char* value) {
  command_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgGCGetCommandListResponse.command_name)
}
 void CMsgGCGetCommandListResponse::add_command_name(const char* value, size_t size) {
  command_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgGCGetCommandListResponse.command_name)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgGCGetCommandListResponse::command_name() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetCommandListResponse.command_name)
  return command_name_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgGCGetCommandListResponse::mutable_command_name() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetCommandListResponse.command_name)
  return &command_name_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgMemCachedGet::kKeysFieldNumber;
#endif  // !_MSC_VER

CGCMsgMemCachedGet::CGCMsgMemCachedGet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedGet)
}

void CGCMsgMemCachedGet::InitAsDefaultInstance() {
}

CGCMsgMemCachedGet::CGCMsgMemCachedGet(const CGCMsgMemCachedGet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGet)
}

void CGCMsgMemCachedGet::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedGet::~CGCMsgMemCachedGet() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGet)
  SharedDtor();
}

void CGCMsgMemCachedGet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedGet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedGet_descriptor_;
}

const CGCMsgMemCachedGet& CGCMsgMemCachedGet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedGet* CGCMsgMemCachedGet::default_instance_ = NULL;

CGCMsgMemCachedGet* CGCMsgMemCachedGet::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedGet* n = new CGCMsgMemCachedGet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedGet::Clear() {
  keys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keys = 1;
      case 1: {
        if (tag == 10) {
         parse_keys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keys(this->keys_size() - 1).data(),
            this->keys(this->keys_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCMsgMemCachedGet.keys");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_keys;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedGet)
  return false;
#undef DO_
}

void CGCMsgMemCachedGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedGet)
  // repeated string keys = 1;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), this->keys(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedGet.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedGet)
}

::google::protobuf::uint8* CGCMsgMemCachedGet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGet)
  // repeated string keys = 1;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), this->keys(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedGet.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGet)
  return target;
}

int CGCMsgMemCachedGet::ByteSize() const {
  int total_size = 0;

  // repeated string keys = 1;
  total_size += 1 * this->keys_size();
  for (int i = 0; i < this->keys_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedGet::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedGet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedGet>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedGet::MergeFrom(const CGCMsgMemCachedGet& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  keys_.MergeFrom(from.keys_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedGet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedGet::CopyFrom(const CGCMsgMemCachedGet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedGet::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedGet::Swap(CGCMsgMemCachedGet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedGet::InternalSwap(CGCMsgMemCachedGet* other) {
  keys_.UnsafeArenaSwap(&other->keys_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedGet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedGet_descriptor_;
  metadata.reflection = CGCMsgMemCachedGet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgMemCachedGet

// repeated string keys = 1;
int CGCMsgMemCachedGet::keys_size() const {
  return keys_.size();
}
void CGCMsgMemCachedGet::clear_keys() {
  keys_.Clear();
}
 const ::std::string& CGCMsgMemCachedGet::keys(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedGet.keys)
  return keys_.Get(index);
}
 ::std::string* CGCMsgMemCachedGet::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgMemCachedGet.keys)
  return keys_.Mutable(index);
}
 void CGCMsgMemCachedGet::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedGet.keys)
  keys_.Mutable(index)->assign(value);
}
 void CGCMsgMemCachedGet::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgMemCachedGet.keys)
}
 void CGCMsgMemCachedGet::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgMemCachedGet.keys)
}
 ::std::string* CGCMsgMemCachedGet::add_keys() {
  return keys_.Add();
}
 void CGCMsgMemCachedGet::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CGCMsgMemCachedGet.keys)
}
 void CGCMsgMemCachedGet::add_keys(const char* value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CGCMsgMemCachedGet.keys)
}
 void CGCMsgMemCachedGet::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CGCMsgMemCachedGet.keys)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CGCMsgMemCachedGet::keys() const {
  // @@protoc_insertion_point(field_list:CGCMsgMemCachedGet.keys)
  return keys_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CGCMsgMemCachedGet::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgMemCachedGet.keys)
  return &keys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgMemCachedGetResponse_ValueTag::kFoundFieldNumber;
const int CGCMsgMemCachedGetResponse_ValueTag::kValueFieldNumber;
#endif  // !_MSC_VER

CGCMsgMemCachedGetResponse_ValueTag::CGCMsgMemCachedGetResponse_ValueTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedGetResponse.ValueTag)
}

void CGCMsgMemCachedGetResponse_ValueTag::InitAsDefaultInstance() {
}

CGCMsgMemCachedGetResponse_ValueTag::CGCMsgMemCachedGetResponse_ValueTag(const CGCMsgMemCachedGetResponse_ValueTag& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGetResponse.ValueTag)
}

void CGCMsgMemCachedGetResponse_ValueTag::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  found_ = false;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedGetResponse_ValueTag::~CGCMsgMemCachedGetResponse_ValueTag() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGetResponse.ValueTag)
  SharedDtor();
}

void CGCMsgMemCachedGetResponse_ValueTag::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedGetResponse_ValueTag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedGetResponse_ValueTag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedGetResponse_ValueTag_descriptor_;
}

const CGCMsgMemCachedGetResponse_ValueTag& CGCMsgMemCachedGetResponse_ValueTag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse_ValueTag::default_instance_ = NULL;

CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse_ValueTag::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedGetResponse_ValueTag* n = new CGCMsgMemCachedGetResponse_ValueTag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedGetResponse_ValueTag::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    found_ = false;
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedGetResponse_ValueTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedGetResponse.ValueTag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool found = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &found_)));
          set_has_found();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedGetResponse.ValueTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedGetResponse.ValueTag)
  return false;
#undef DO_
}

void CGCMsgMemCachedGetResponse_ValueTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedGetResponse.ValueTag)
  // optional bool found = 1;
  if (has_found()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->found(), output);
  }

  // optional bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedGetResponse.ValueTag)
}

::google::protobuf::uint8* CGCMsgMemCachedGetResponse_ValueTag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGetResponse.ValueTag)
  // optional bool found = 1;
  if (has_found()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->found(), target);
  }

  // optional bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGetResponse.ValueTag)
  return target;
}

int CGCMsgMemCachedGetResponse_ValueTag::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool found = 1;
    if (has_found()) {
      total_size += 1 + 1;
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedGetResponse_ValueTag::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedGetResponse_ValueTag* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedGetResponse_ValueTag>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedGetResponse_ValueTag::MergeFrom(const CGCMsgMemCachedGetResponse_ValueTag& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_found()) {
      set_found(from.found());
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedGetResponse_ValueTag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedGetResponse_ValueTag::CopyFrom(const CGCMsgMemCachedGetResponse_ValueTag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedGetResponse_ValueTag::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedGetResponse_ValueTag::Swap(CGCMsgMemCachedGetResponse_ValueTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedGetResponse_ValueTag::InternalSwap(CGCMsgMemCachedGetResponse_ValueTag* other) {
  std::swap(found_, other->found_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedGetResponse_ValueTag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedGetResponse_ValueTag_descriptor_;
  metadata.reflection = CGCMsgMemCachedGetResponse_ValueTag_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CGCMsgMemCachedGetResponse::kValuesFieldNumber;
#endif  // !_MSC_VER

CGCMsgMemCachedGetResponse::CGCMsgMemCachedGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedGetResponse)
}

void CGCMsgMemCachedGetResponse::InitAsDefaultInstance() {
}

CGCMsgMemCachedGetResponse::CGCMsgMemCachedGetResponse(const CGCMsgMemCachedGetResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGetResponse)
}

void CGCMsgMemCachedGetResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedGetResponse::~CGCMsgMemCachedGetResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGetResponse)
  SharedDtor();
}

void CGCMsgMemCachedGetResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedGetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedGetResponse_descriptor_;
}

const CGCMsgMemCachedGetResponse& CGCMsgMemCachedGetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedGetResponse* CGCMsgMemCachedGetResponse::default_instance_ = NULL;

CGCMsgMemCachedGetResponse* CGCMsgMemCachedGetResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedGetResponse* n = new CGCMsgMemCachedGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedGetResponse::Clear() {
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedGetResponse)
  return false;
#undef DO_
}

void CGCMsgMemCachedGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedGetResponse)
  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedGetResponse)
}

::google::protobuf::uint8* CGCMsgMemCachedGetResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGetResponse)
  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGetResponse)
  return target;
}

int CGCMsgMemCachedGetResponse::ByteSize() const {
  int total_size = 0;

  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  total_size += 1 * this->values_size();
  for (int i = 0; i < this->values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->values(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedGetResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedGetResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedGetResponse::MergeFrom(const CGCMsgMemCachedGetResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  values_.MergeFrom(from.values_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedGetResponse::CopyFrom(const CGCMsgMemCachedGetResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedGetResponse::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedGetResponse::Swap(CGCMsgMemCachedGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedGetResponse::InternalSwap(CGCMsgMemCachedGetResponse* other) {
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedGetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedGetResponse_descriptor_;
  metadata.reflection = CGCMsgMemCachedGetResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgMemCachedGetResponse_ValueTag

// optional bool found = 1;
bool CGCMsgMemCachedGetResponse_ValueTag::has_found() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCMsgMemCachedGetResponse_ValueTag::set_has_found() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCMsgMemCachedGetResponse_ValueTag::clear_has_found() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCMsgMemCachedGetResponse_ValueTag::clear_found() {
  found_ = false;
  clear_has_found();
}
 bool CGCMsgMemCachedGetResponse_ValueTag::found() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedGetResponse.ValueTag.found)
  return found_;
}
 void CGCMsgMemCachedGetResponse_ValueTag::set_found(bool value) {
  set_has_found();
  found_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedGetResponse.ValueTag.found)
}

// optional bytes value = 2;
bool CGCMsgMemCachedGetResponse_ValueTag::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCMsgMemCachedGetResponse_ValueTag::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCMsgMemCachedGetResponse_ValueTag::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCMsgMemCachedGetResponse_ValueTag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& CGCMsgMemCachedGetResponse_ValueTag::value() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedGetResponse.ValueTag.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgMemCachedGetResponse_ValueTag::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedGetResponse.ValueTag.value)
}
 void CGCMsgMemCachedGetResponse_ValueTag::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgMemCachedGetResponse.ValueTag.value)
}
 void CGCMsgMemCachedGetResponse_ValueTag::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgMemCachedGetResponse.ValueTag.value)
}
 ::std::string* CGCMsgMemCachedGetResponse_ValueTag::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CGCMsgMemCachedGetResponse.ValueTag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCMsgMemCachedGetResponse_ValueTag::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgMemCachedGetResponse_ValueTag::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgMemCachedGetResponse.ValueTag.value)
}

// -------------------------------------------------------------------

// CGCMsgMemCachedGetResponse

// repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
int CGCMsgMemCachedGetResponse::values_size() const {
  return values_.size();
}
void CGCMsgMemCachedGetResponse::clear_values() {
  values_.Clear();
}
const ::CGCMsgMemCachedGetResponse_ValueTag& CGCMsgMemCachedGetResponse::values(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedGetResponse.values)
  return values_.Get(index);
}
::CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgMemCachedGetResponse.values)
  return values_.Mutable(index);
}
::CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse::add_values() {
  // @@protoc_insertion_point(field_add:CGCMsgMemCachedGetResponse.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedGetResponse_ValueTag >*
CGCMsgMemCachedGetResponse::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgMemCachedGetResponse.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedGetResponse_ValueTag >&
CGCMsgMemCachedGetResponse::values() const {
  // @@protoc_insertion_point(field_list:CGCMsgMemCachedGetResponse.values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgMemCachedSet_KeyPair::kNameFieldNumber;
const int CGCMsgMemCachedSet_KeyPair::kValueFieldNumber;
#endif  // !_MSC_VER

CGCMsgMemCachedSet_KeyPair::CGCMsgMemCachedSet_KeyPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedSet.KeyPair)
}

void CGCMsgMemCachedSet_KeyPair::InitAsDefaultInstance() {
}

CGCMsgMemCachedSet_KeyPair::CGCMsgMemCachedSet_KeyPair(const CGCMsgMemCachedSet_KeyPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedSet.KeyPair)
}

void CGCMsgMemCachedSet_KeyPair::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedSet_KeyPair::~CGCMsgMemCachedSet_KeyPair() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedSet.KeyPair)
  SharedDtor();
}

void CGCMsgMemCachedSet_KeyPair::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedSet_KeyPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedSet_KeyPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedSet_KeyPair_descriptor_;
}

const CGCMsgMemCachedSet_KeyPair& CGCMsgMemCachedSet_KeyPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet_KeyPair::default_instance_ = NULL;

CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet_KeyPair::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedSet_KeyPair* n = new CGCMsgMemCachedSet_KeyPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedSet_KeyPair::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedSet_KeyPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedSet.KeyPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCMsgMemCachedSet.KeyPair.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedSet.KeyPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedSet.KeyPair)
  return false;
#undef DO_
}

void CGCMsgMemCachedSet_KeyPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedSet.KeyPair)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedSet.KeyPair.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedSet.KeyPair)
}

::google::protobuf::uint8* CGCMsgMemCachedSet_KeyPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedSet.KeyPair)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedSet.KeyPair.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedSet.KeyPair)
  return target;
}

int CGCMsgMemCachedSet_KeyPair::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedSet_KeyPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedSet_KeyPair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedSet_KeyPair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedSet_KeyPair::MergeFrom(const CGCMsgMemCachedSet_KeyPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedSet_KeyPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedSet_KeyPair::CopyFrom(const CGCMsgMemCachedSet_KeyPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedSet_KeyPair::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedSet_KeyPair::Swap(CGCMsgMemCachedSet_KeyPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedSet_KeyPair::InternalSwap(CGCMsgMemCachedSet_KeyPair* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedSet_KeyPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedSet_KeyPair_descriptor_;
  metadata.reflection = CGCMsgMemCachedSet_KeyPair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CGCMsgMemCachedSet::kKeysFieldNumber;
#endif  // !_MSC_VER

CGCMsgMemCachedSet::CGCMsgMemCachedSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedSet)
}

void CGCMsgMemCachedSet::InitAsDefaultInstance() {
}

CGCMsgMemCachedSet::CGCMsgMemCachedSet(const CGCMsgMemCachedSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedSet)
}

void CGCMsgMemCachedSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedSet::~CGCMsgMemCachedSet() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedSet)
  SharedDtor();
}

void CGCMsgMemCachedSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedSet_descriptor_;
}

const CGCMsgMemCachedSet& CGCMsgMemCachedSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedSet* CGCMsgMemCachedSet::default_instance_ = NULL;

CGCMsgMemCachedSet* CGCMsgMemCachedSet::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedSet* n = new CGCMsgMemCachedSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedSet::Clear() {
  keys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_keys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_keys;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedSet)
  return false;
#undef DO_
}

void CGCMsgMemCachedSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedSet)
  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  for (unsigned int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->keys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedSet)
}

::google::protobuf::uint8* CGCMsgMemCachedSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedSet)
  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  for (unsigned int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->keys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedSet)
  return target;
}

int CGCMsgMemCachedSet::ByteSize() const {
  int total_size = 0;

  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  total_size += 1 * this->keys_size();
  for (int i = 0; i < this->keys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->keys(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedSet::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedSet>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedSet::MergeFrom(const CGCMsgMemCachedSet& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  keys_.MergeFrom(from.keys_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedSet::CopyFrom(const CGCMsgMemCachedSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedSet::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedSet::Swap(CGCMsgMemCachedSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedSet::InternalSwap(CGCMsgMemCachedSet* other) {
  keys_.UnsafeArenaSwap(&other->keys_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedSet_descriptor_;
  metadata.reflection = CGCMsgMemCachedSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgMemCachedSet_KeyPair

// optional string name = 1;
bool CGCMsgMemCachedSet_KeyPair::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCMsgMemCachedSet_KeyPair::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCMsgMemCachedSet_KeyPair::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCMsgMemCachedSet_KeyPair::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CGCMsgMemCachedSet_KeyPair::name() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedSet.KeyPair.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgMemCachedSet_KeyPair::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedSet.KeyPair.name)
}
 void CGCMsgMemCachedSet_KeyPair::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgMemCachedSet.KeyPair.name)
}
 void CGCMsgMemCachedSet_KeyPair::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgMemCachedSet.KeyPair.name)
}
 ::std::string* CGCMsgMemCachedSet_KeyPair::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CGCMsgMemCachedSet.KeyPair.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCMsgMemCachedSet_KeyPair::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgMemCachedSet_KeyPair::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgMemCachedSet.KeyPair.name)
}

// optional bytes value = 2;
bool CGCMsgMemCachedSet_KeyPair::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCMsgMemCachedSet_KeyPair::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCMsgMemCachedSet_KeyPair::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCMsgMemCachedSet_KeyPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& CGCMsgMemCachedSet_KeyPair::value() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedSet.KeyPair.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgMemCachedSet_KeyPair::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedSet.KeyPair.value)
}
 void CGCMsgMemCachedSet_KeyPair::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgMemCachedSet.KeyPair.value)
}
 void CGCMsgMemCachedSet_KeyPair::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgMemCachedSet.KeyPair.value)
}
 ::std::string* CGCMsgMemCachedSet_KeyPair::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CGCMsgMemCachedSet.KeyPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCMsgMemCachedSet_KeyPair::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgMemCachedSet_KeyPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgMemCachedSet.KeyPair.value)
}

// -------------------------------------------------------------------

// CGCMsgMemCachedSet

// repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
int CGCMsgMemCachedSet::keys_size() const {
  return keys_.size();
}
void CGCMsgMemCachedSet::clear_keys() {
  keys_.Clear();
}
const ::CGCMsgMemCachedSet_KeyPair& CGCMsgMemCachedSet::keys(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedSet.keys)
  return keys_.Get(index);
}
::CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgMemCachedSet.keys)
  return keys_.Mutable(index);
}
::CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet::add_keys() {
  // @@protoc_insertion_point(field_add:CGCMsgMemCachedSet.keys)
  return keys_.Add();
}
::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedSet_KeyPair >*
CGCMsgMemCachedSet::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgMemCachedSet.keys)
  return &keys_;
}
const ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedSet_KeyPair >&
CGCMsgMemCachedSet::keys() const {
  // @@protoc_insertion_point(field_list:CGCMsgMemCachedSet.keys)
  return keys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgMemCachedDelete::kKeysFieldNumber;
#endif  // !_MSC_VER

CGCMsgMemCachedDelete::CGCMsgMemCachedDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedDelete)
}

void CGCMsgMemCachedDelete::InitAsDefaultInstance() {
}

CGCMsgMemCachedDelete::CGCMsgMemCachedDelete(const CGCMsgMemCachedDelete& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedDelete)
}

void CGCMsgMemCachedDelete::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedDelete::~CGCMsgMemCachedDelete() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedDelete)
  SharedDtor();
}

void CGCMsgMemCachedDelete::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedDelete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedDelete::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedDelete_descriptor_;
}

const CGCMsgMemCachedDelete& CGCMsgMemCachedDelete::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedDelete* CGCMsgMemCachedDelete::default_instance_ = NULL;

CGCMsgMemCachedDelete* CGCMsgMemCachedDelete::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedDelete* n = new CGCMsgMemCachedDelete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedDelete::Clear() {
  keys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedDelete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keys = 1;
      case 1: {
        if (tag == 10) {
         parse_keys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keys(this->keys_size() - 1).data(),
            this->keys(this->keys_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCMsgMemCachedDelete.keys");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_keys;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedDelete)
  return false;
#undef DO_
}

void CGCMsgMemCachedDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedDelete)
  // repeated string keys = 1;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), this->keys(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedDelete.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedDelete)
}

::google::protobuf::uint8* CGCMsgMemCachedDelete::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedDelete)
  // repeated string keys = 1;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), this->keys(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedDelete.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedDelete)
  return target;
}

int CGCMsgMemCachedDelete::ByteSize() const {
  int total_size = 0;

  // repeated string keys = 1;
  total_size += 1 * this->keys_size();
  for (int i = 0; i < this->keys_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedDelete::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedDelete* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedDelete>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedDelete::MergeFrom(const CGCMsgMemCachedDelete& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  keys_.MergeFrom(from.keys_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedDelete::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedDelete::CopyFrom(const CGCMsgMemCachedDelete& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedDelete::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedDelete::Swap(CGCMsgMemCachedDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedDelete::InternalSwap(CGCMsgMemCachedDelete* other) {
  keys_.UnsafeArenaSwap(&other->keys_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedDelete::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedDelete_descriptor_;
  metadata.reflection = CGCMsgMemCachedDelete_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgMemCachedDelete

// repeated string keys = 1;
int CGCMsgMemCachedDelete::keys_size() const {
  return keys_.size();
}
void CGCMsgMemCachedDelete::clear_keys() {
  keys_.Clear();
}
 const ::std::string& CGCMsgMemCachedDelete::keys(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedDelete.keys)
  return keys_.Get(index);
}
 ::std::string* CGCMsgMemCachedDelete::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgMemCachedDelete.keys)
  return keys_.Mutable(index);
}
 void CGCMsgMemCachedDelete::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedDelete.keys)
  keys_.Mutable(index)->assign(value);
}
 void CGCMsgMemCachedDelete::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgMemCachedDelete.keys)
}
 void CGCMsgMemCachedDelete::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgMemCachedDelete.keys)
}
 ::std::string* CGCMsgMemCachedDelete::add_keys() {
  return keys_.Add();
}
 void CGCMsgMemCachedDelete::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CGCMsgMemCachedDelete.keys)
}
 void CGCMsgMemCachedDelete::add_keys(const char* value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CGCMsgMemCachedDelete.keys)
}
 void CGCMsgMemCachedDelete::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CGCMsgMemCachedDelete.keys)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CGCMsgMemCachedDelete::keys() const {
  // @@protoc_insertion_point(field_list:CGCMsgMemCachedDelete.keys)
  return keys_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CGCMsgMemCachedDelete::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgMemCachedDelete.keys)
  return &keys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CGCMsgMemCachedStats::CGCMsgMemCachedStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedStats)
}

void CGCMsgMemCachedStats::InitAsDefaultInstance() {
}

CGCMsgMemCachedStats::CGCMsgMemCachedStats(const CGCMsgMemCachedStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedStats)
}

void CGCMsgMemCachedStats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedStats::~CGCMsgMemCachedStats() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedStats)
  SharedDtor();
}

void CGCMsgMemCachedStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedStats_descriptor_;
}

const CGCMsgMemCachedStats& CGCMsgMemCachedStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedStats* CGCMsgMemCachedStats::default_instance_ = NULL;

CGCMsgMemCachedStats* CGCMsgMemCachedStats::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedStats* n = new CGCMsgMemCachedStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedStats::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedStats)
  return false;
#undef DO_
}

void CGCMsgMemCachedStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedStats)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedStats)
}

::google::protobuf::uint8* CGCMsgMemCachedStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedStats)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedStats)
  return target;
}

int CGCMsgMemCachedStats::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedStats::MergeFrom(const CGCMsgMemCachedStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedStats::CopyFrom(const CGCMsgMemCachedStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedStats::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedStats::Swap(CGCMsgMemCachedStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedStats::InternalSwap(CGCMsgMemCachedStats* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedStats_descriptor_;
  metadata.reflection = CGCMsgMemCachedStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgMemCachedStats

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgMemCachedStatsResponse::kCurrConnectionsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCmdGetFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCmdSetFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCmdFlushFieldNumber;
const int CGCMsgMemCachedStatsResponse::kGetHitsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kGetMissesFieldNumber;
const int CGCMsgMemCachedStatsResponse::kDeleteHitsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kDeleteMissesFieldNumber;
const int CGCMsgMemCachedStatsResponse::kBytesReadFieldNumber;
const int CGCMsgMemCachedStatsResponse::kBytesWrittenFieldNumber;
const int CGCMsgMemCachedStatsResponse::kLimitMaxbytesFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCurrItemsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kEvictionsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kBytesFieldNumber;
#endif  // !_MSC_VER

CGCMsgMemCachedStatsResponse::CGCMsgMemCachedStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedStatsResponse)
}

void CGCMsgMemCachedStatsResponse::InitAsDefaultInstance() {
}

CGCMsgMemCachedStatsResponse::CGCMsgMemCachedStatsResponse(const CGCMsgMemCachedStatsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedStatsResponse)
}

void CGCMsgMemCachedStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  curr_connections_ = GOOGLE_ULONGLONG(0);
  cmd_get_ = GOOGLE_ULONGLONG(0);
  cmd_set_ = GOOGLE_ULONGLONG(0);
  cmd_flush_ = GOOGLE_ULONGLONG(0);
  get_hits_ = GOOGLE_ULONGLONG(0);
  get_misses_ = GOOGLE_ULONGLONG(0);
  delete_hits_ = GOOGLE_ULONGLONG(0);
  delete_misses_ = GOOGLE_ULONGLONG(0);
  bytes_read_ = GOOGLE_ULONGLONG(0);
  bytes_written_ = GOOGLE_ULONGLONG(0);
  limit_maxbytes_ = GOOGLE_ULONGLONG(0);
  curr_items_ = GOOGLE_ULONGLONG(0);
  evictions_ = GOOGLE_ULONGLONG(0);
  bytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgMemCachedStatsResponse::~CGCMsgMemCachedStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedStatsResponse)
  SharedDtor();
}

void CGCMsgMemCachedStatsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgMemCachedStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedStatsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgMemCachedStatsResponse_descriptor_;
}

const CGCMsgMemCachedStatsResponse& CGCMsgMemCachedStatsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgMemCachedStatsResponse* CGCMsgMemCachedStatsResponse::default_instance_ = NULL;

CGCMsgMemCachedStatsResponse* CGCMsgMemCachedStatsResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedStatsResponse* n = new CGCMsgMemCachedStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedStatsResponse::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCMsgMemCachedStatsResponse*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(curr_connections_, delete_misses_);
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(bytes_read_, bytes_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgMemCachedStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 curr_connections = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curr_connections_)));
          set_has_curr_connections();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cmd_get;
        break;
      }

      // optional uint64 cmd_get = 2;
      case 2: {
        if (tag == 16) {
         parse_cmd_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cmd_get_)));
          set_has_cmd_get();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cmd_set;
        break;
      }

      // optional uint64 cmd_set = 3;
      case 3: {
        if (tag == 24) {
         parse_cmd_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cmd_set_)));
          set_has_cmd_set();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cmd_flush;
        break;
      }

      // optional uint64 cmd_flush = 4;
      case 4: {
        if (tag == 32) {
         parse_cmd_flush:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cmd_flush_)));
          set_has_cmd_flush();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_get_hits;
        break;
      }

      // optional uint64 get_hits = 5;
      case 5: {
        if (tag == 40) {
         parse_get_hits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &get_hits_)));
          set_has_get_hits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_get_misses;
        break;
      }

      // optional uint64 get_misses = 6;
      case 6: {
        if (tag == 48) {
         parse_get_misses:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &get_misses_)));
          set_has_get_misses();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_delete_hits;
        break;
      }

      // optional uint64 delete_hits = 7;
      case 7: {
        if (tag == 56) {
         parse_delete_hits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &delete_hits_)));
          set_has_delete_hits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_delete_misses;
        break;
      }

      // optional uint64 delete_misses = 8;
      case 8: {
        if (tag == 64) {
         parse_delete_misses:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &delete_misses_)));
          set_has_delete_misses();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_bytes_read;
        break;
      }

      // optional uint64 bytes_read = 9;
      case 9: {
        if (tag == 72) {
         parse_bytes_read:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_read_)));
          set_has_bytes_read();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_bytes_written;
        break;
      }

      // optional uint64 bytes_written = 10;
      case 10: {
        if (tag == 80) {
         parse_bytes_written:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_written_)));
          set_has_bytes_written();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_limit_maxbytes;
        break;
      }

      // optional uint64 limit_maxbytes = 11;
      case 11: {
        if (tag == 88) {
         parse_limit_maxbytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limit_maxbytes_)));
          set_has_limit_maxbytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_curr_items;
        break;
      }

      // optional uint64 curr_items = 12;
      case 12: {
        if (tag == 96) {
         parse_curr_items:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curr_items_)));
          set_has_curr_items();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_evictions;
        break;
      }

      // optional uint64 evictions = 13;
      case 13: {
        if (tag == 104) {
         parse_evictions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &evictions_)));
          set_has_evictions();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_bytes;
        break;
      }

      // optional uint64 bytes = 14;
      case 14: {
        if (tag == 112) {
         parse_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
          set_has_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedStatsResponse)
  return false;
#undef DO_
}

void CGCMsgMemCachedStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedStatsResponse)
  // optional uint64 curr_connections = 1;
  if (has_curr_connections()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->curr_connections(), output);
  }

  // optional uint64 cmd_get = 2;
  if (has_cmd_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cmd_get(), output);
  }

  // optional uint64 cmd_set = 3;
  if (has_cmd_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->cmd_set(), output);
  }

  // optional uint64 cmd_flush = 4;
  if (has_cmd_flush()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->cmd_flush(), output);
  }

  // optional uint64 get_hits = 5;
  if (has_get_hits()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->get_hits(), output);
  }

  // optional uint64 get_misses = 6;
  if (has_get_misses()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->get_misses(), output);
  }

  // optional uint64 delete_hits = 7;
  if (has_delete_hits()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->delete_hits(), output);
  }

  // optional uint64 delete_misses = 8;
  if (has_delete_misses()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->delete_misses(), output);
  }

  // optional uint64 bytes_read = 9;
  if (has_bytes_read()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->bytes_read(), output);
  }

  // optional uint64 bytes_written = 10;
  if (has_bytes_written()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->bytes_written(), output);
  }

  // optional uint64 limit_maxbytes = 11;
  if (has_limit_maxbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->limit_maxbytes(), output);
  }

  // optional uint64 curr_items = 12;
  if (has_curr_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->curr_items(), output);
  }

  // optional uint64 evictions = 13;
  if (has_evictions()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->evictions(), output);
  }

  // optional uint64 bytes = 14;
  if (has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedStatsResponse)
}

::google::protobuf::uint8* CGCMsgMemCachedStatsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedStatsResponse)
  // optional uint64 curr_connections = 1;
  if (has_curr_connections()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->curr_connections(), target);
  }

  // optional uint64 cmd_get = 2;
  if (has_cmd_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cmd_get(), target);
  }

  // optional uint64 cmd_set = 3;
  if (has_cmd_set()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->cmd_set(), target);
  }

  // optional uint64 cmd_flush = 4;
  if (has_cmd_flush()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->cmd_flush(), target);
  }

  // optional uint64 get_hits = 5;
  if (has_get_hits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->get_hits(), target);
  }

  // optional uint64 get_misses = 6;
  if (has_get_misses()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->get_misses(), target);
  }

  // optional uint64 delete_hits = 7;
  if (has_delete_hits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->delete_hits(), target);
  }

  // optional uint64 delete_misses = 8;
  if (has_delete_misses()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->delete_misses(), target);
  }

  // optional uint64 bytes_read = 9;
  if (has_bytes_read()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->bytes_read(), target);
  }

  // optional uint64 bytes_written = 10;
  if (has_bytes_written()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->bytes_written(), target);
  }

  // optional uint64 limit_maxbytes = 11;
  if (has_limit_maxbytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->limit_maxbytes(), target);
  }

  // optional uint64 curr_items = 12;
  if (has_curr_items()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->curr_items(), target);
  }

  // optional uint64 evictions = 13;
  if (has_evictions()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->evictions(), target);
  }

  // optional uint64 bytes = 14;
  if (has_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedStatsResponse)
  return target;
}

int CGCMsgMemCachedStatsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 curr_connections = 1;
    if (has_curr_connections()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->curr_connections());
    }

    // optional uint64 cmd_get = 2;
    if (has_cmd_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cmd_get());
    }

    // optional uint64 cmd_set = 3;
    if (has_cmd_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cmd_set());
    }

    // optional uint64 cmd_flush = 4;
    if (has_cmd_flush()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cmd_flush());
    }

    // optional uint64 get_hits = 5;
    if (has_get_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->get_hits());
    }

    // optional uint64 get_misses = 6;
    if (has_get_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->get_misses());
    }

    // optional uint64 delete_hits = 7;
    if (has_delete_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->delete_hits());
    }

    // optional uint64 delete_misses = 8;
    if (has_delete_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->delete_misses());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint64 bytes_read = 9;
    if (has_bytes_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_read());
    }

    // optional uint64 bytes_written = 10;
    if (has_bytes_written()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_written());
    }

    // optional uint64 limit_maxbytes = 11;
    if (has_limit_maxbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->limit_maxbytes());
    }

    // optional uint64 curr_items = 12;
    if (has_curr_items()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->curr_items());
    }

    // optional uint64 evictions = 13;
    if (has_evictions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->evictions());
    }

    // optional uint64 bytes = 14;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgMemCachedStatsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedStatsResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedStatsResponse::MergeFrom(const CGCMsgMemCachedStatsResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_curr_connections()) {
      set_curr_connections(from.curr_connections());
    }
    if (from.has_cmd_get()) {
      set_cmd_get(from.cmd_get());
    }
    if (from.has_cmd_set()) {
      set_cmd_set(from.cmd_set());
    }
    if (from.has_cmd_flush()) {
      set_cmd_flush(from.cmd_flush());
    }
    if (from.has_get_hits()) {
      set_get_hits(from.get_hits());
    }
    if (from.has_get_misses()) {
      set_get_misses(from.get_misses());
    }
    if (from.has_delete_hits()) {
      set_delete_hits(from.delete_hits());
    }
    if (from.has_delete_misses()) {
      set_delete_misses(from.delete_misses());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_bytes_read()) {
      set_bytes_read(from.bytes_read());
    }
    if (from.has_bytes_written()) {
      set_bytes_written(from.bytes_written());
    }
    if (from.has_limit_maxbytes()) {
      set_limit_maxbytes(from.limit_maxbytes());
    }
    if (from.has_curr_items()) {
      set_curr_items(from.curr_items());
    }
    if (from.has_evictions()) {
      set_evictions(from.evictions());
    }
    if (from.has_bytes()) {
      set_bytes(from.bytes());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgMemCachedStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedStatsResponse::CopyFrom(const CGCMsgMemCachedStatsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedStatsResponse::IsInitialized() const {

  return true;
}

void CGCMsgMemCachedStatsResponse::Swap(CGCMsgMemCachedStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedStatsResponse::InternalSwap(CGCMsgMemCachedStatsResponse* other) {
  std::swap(curr_connections_, other->curr_connections_);
  std::swap(cmd_get_, other->cmd_get_);
  std::swap(cmd_set_, other->cmd_set_);
  std::swap(cmd_flush_, other->cmd_flush_);
  std::swap(get_hits_, other->get_hits_);
  std::swap(get_misses_, other->get_misses_);
  std::swap(delete_hits_, other->delete_hits_);
  std::swap(delete_misses_, other->delete_misses_);
  std::swap(bytes_read_, other->bytes_read_);
  std::swap(bytes_written_, other->bytes_written_);
  std::swap(limit_maxbytes_, other->limit_maxbytes_);
  std::swap(curr_items_, other->curr_items_);
  std::swap(evictions_, other->evictions_);
  std::swap(bytes_, other->bytes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedStatsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgMemCachedStatsResponse_descriptor_;
  metadata.reflection = CGCMsgMemCachedStatsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgMemCachedStatsResponse

// optional uint64 curr_connections = 1;
bool CGCMsgMemCachedStatsResponse::has_curr_connections() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_curr_connections() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCMsgMemCachedStatsResponse::clear_has_curr_connections() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCMsgMemCachedStatsResponse::clear_curr_connections() {
  curr_connections_ = GOOGLE_ULONGLONG(0);
  clear_has_curr_connections();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::curr_connections() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.curr_connections)
  return curr_connections_;
}
 void CGCMsgMemCachedStatsResponse::set_curr_connections(::google::protobuf::uint64 value) {
  set_has_curr_connections();
  curr_connections_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.curr_connections)
}

// optional uint64 cmd_get = 2;
bool CGCMsgMemCachedStatsResponse::has_cmd_get() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_cmd_get() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCMsgMemCachedStatsResponse::clear_has_cmd_get() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCMsgMemCachedStatsResponse::clear_cmd_get() {
  cmd_get_ = GOOGLE_ULONGLONG(0);
  clear_has_cmd_get();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_get() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.cmd_get)
  return cmd_get_;
}
 void CGCMsgMemCachedStatsResponse::set_cmd_get(::google::protobuf::uint64 value) {
  set_has_cmd_get();
  cmd_get_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.cmd_get)
}

// optional uint64 cmd_set = 3;
bool CGCMsgMemCachedStatsResponse::has_cmd_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_cmd_set() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCMsgMemCachedStatsResponse::clear_has_cmd_set() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCMsgMemCachedStatsResponse::clear_cmd_set() {
  cmd_set_ = GOOGLE_ULONGLONG(0);
  clear_has_cmd_set();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_set() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.cmd_set)
  return cmd_set_;
}
 void CGCMsgMemCachedStatsResponse::set_cmd_set(::google::protobuf::uint64 value) {
  set_has_cmd_set();
  cmd_set_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.cmd_set)
}

// optional uint64 cmd_flush = 4;
bool CGCMsgMemCachedStatsResponse::has_cmd_flush() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_cmd_flush() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCMsgMemCachedStatsResponse::clear_has_cmd_flush() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCMsgMemCachedStatsResponse::clear_cmd_flush() {
  cmd_flush_ = GOOGLE_ULONGLONG(0);
  clear_has_cmd_flush();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_flush() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.cmd_flush)
  return cmd_flush_;
}
 void CGCMsgMemCachedStatsResponse::set_cmd_flush(::google::protobuf::uint64 value) {
  set_has_cmd_flush();
  cmd_flush_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.cmd_flush)
}

// optional uint64 get_hits = 5;
bool CGCMsgMemCachedStatsResponse::has_get_hits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_get_hits() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCMsgMemCachedStatsResponse::clear_has_get_hits() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCMsgMemCachedStatsResponse::clear_get_hits() {
  get_hits_ = GOOGLE_ULONGLONG(0);
  clear_has_get_hits();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::get_hits() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.get_hits)
  return get_hits_;
}
 void CGCMsgMemCachedStatsResponse::set_get_hits(::google::protobuf::uint64 value) {
  set_has_get_hits();
  get_hits_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.get_hits)
}

// optional uint64 get_misses = 6;
bool CGCMsgMemCachedStatsResponse::has_get_misses() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_get_misses() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCMsgMemCachedStatsResponse::clear_has_get_misses() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCMsgMemCachedStatsResponse::clear_get_misses() {
  get_misses_ = GOOGLE_ULONGLONG(0);
  clear_has_get_misses();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::get_misses() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.get_misses)
  return get_misses_;
}
 void CGCMsgMemCachedStatsResponse::set_get_misses(::google::protobuf::uint64 value) {
  set_has_get_misses();
  get_misses_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.get_misses)
}

// optional uint64 delete_hits = 7;
bool CGCMsgMemCachedStatsResponse::has_delete_hits() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_delete_hits() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCMsgMemCachedStatsResponse::clear_has_delete_hits() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCMsgMemCachedStatsResponse::clear_delete_hits() {
  delete_hits_ = GOOGLE_ULONGLONG(0);
  clear_has_delete_hits();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::delete_hits() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.delete_hits)
  return delete_hits_;
}
 void CGCMsgMemCachedStatsResponse::set_delete_hits(::google::protobuf::uint64 value) {
  set_has_delete_hits();
  delete_hits_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.delete_hits)
}

// optional uint64 delete_misses = 8;
bool CGCMsgMemCachedStatsResponse::has_delete_misses() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_delete_misses() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCMsgMemCachedStatsResponse::clear_has_delete_misses() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCMsgMemCachedStatsResponse::clear_delete_misses() {
  delete_misses_ = GOOGLE_ULONGLONG(0);
  clear_has_delete_misses();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::delete_misses() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.delete_misses)
  return delete_misses_;
}
 void CGCMsgMemCachedStatsResponse::set_delete_misses(::google::protobuf::uint64 value) {
  set_has_delete_misses();
  delete_misses_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.delete_misses)
}

// optional uint64 bytes_read = 9;
bool CGCMsgMemCachedStatsResponse::has_bytes_read() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_bytes_read() {
  _has_bits_[0] |= 0x00000100u;
}
void CGCMsgMemCachedStatsResponse::clear_has_bytes_read() {
  _has_bits_[0] &= ~0x00000100u;
}
void CGCMsgMemCachedStatsResponse::clear_bytes_read() {
  bytes_read_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_read();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes_read() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.bytes_read)
  return bytes_read_;
}
 void CGCMsgMemCachedStatsResponse::set_bytes_read(::google::protobuf::uint64 value) {
  set_has_bytes_read();
  bytes_read_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.bytes_read)
}

// optional uint64 bytes_written = 10;
bool CGCMsgMemCachedStatsResponse::has_bytes_written() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_bytes_written() {
  _has_bits_[0] |= 0x00000200u;
}
void CGCMsgMemCachedStatsResponse::clear_has_bytes_written() {
  _has_bits_[0] &= ~0x00000200u;
}
void CGCMsgMemCachedStatsResponse::clear_bytes_written() {
  bytes_written_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_written();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes_written() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.bytes_written)
  return bytes_written_;
}
 void CGCMsgMemCachedStatsResponse::set_bytes_written(::google::protobuf::uint64 value) {
  set_has_bytes_written();
  bytes_written_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.bytes_written)
}

// optional uint64 limit_maxbytes = 11;
bool CGCMsgMemCachedStatsResponse::has_limit_maxbytes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_limit_maxbytes() {
  _has_bits_[0] |= 0x00000400u;
}
void CGCMsgMemCachedStatsResponse::clear_has_limit_maxbytes() {
  _has_bits_[0] &= ~0x00000400u;
}
void CGCMsgMemCachedStatsResponse::clear_limit_maxbytes() {
  limit_maxbytes_ = GOOGLE_ULONGLONG(0);
  clear_has_limit_maxbytes();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::limit_maxbytes() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.limit_maxbytes)
  return limit_maxbytes_;
}
 void CGCMsgMemCachedStatsResponse::set_limit_maxbytes(::google::protobuf::uint64 value) {
  set_has_limit_maxbytes();
  limit_maxbytes_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.limit_maxbytes)
}

// optional uint64 curr_items = 12;
bool CGCMsgMemCachedStatsResponse::has_curr_items() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_curr_items() {
  _has_bits_[0] |= 0x00000800u;
}
void CGCMsgMemCachedStatsResponse::clear_has_curr_items() {
  _has_bits_[0] &= ~0x00000800u;
}
void CGCMsgMemCachedStatsResponse::clear_curr_items() {
  curr_items_ = GOOGLE_ULONGLONG(0);
  clear_has_curr_items();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::curr_items() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.curr_items)
  return curr_items_;
}
 void CGCMsgMemCachedStatsResponse::set_curr_items(::google::protobuf::uint64 value) {
  set_has_curr_items();
  curr_items_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.curr_items)
}

// optional uint64 evictions = 13;
bool CGCMsgMemCachedStatsResponse::has_evictions() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_evictions() {
  _has_bits_[0] |= 0x00001000u;
}
void CGCMsgMemCachedStatsResponse::clear_has_evictions() {
  _has_bits_[0] &= ~0x00001000u;
}
void CGCMsgMemCachedStatsResponse::clear_evictions() {
  evictions_ = GOOGLE_ULONGLONG(0);
  clear_has_evictions();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::evictions() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.evictions)
  return evictions_;
}
 void CGCMsgMemCachedStatsResponse::set_evictions(::google::protobuf::uint64 value) {
  set_has_evictions();
  evictions_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.evictions)
}

// optional uint64 bytes = 14;
bool CGCMsgMemCachedStatsResponse::has_bytes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CGCMsgMemCachedStatsResponse::set_has_bytes() {
  _has_bits_[0] |= 0x00002000u;
}
void CGCMsgMemCachedStatsResponse::clear_has_bytes() {
  _has_bits_[0] &= ~0x00002000u;
}
void CGCMsgMemCachedStatsResponse::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
 ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes() const {
  // @@protoc_insertion_point(field_get:CGCMsgMemCachedStatsResponse.bytes)
  return bytes_;
}
 void CGCMsgMemCachedStatsResponse::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgMemCachedStatsResponse.bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgSQLStats::kSchemaCatalogFieldNumber;
#endif  // !_MSC_VER

CGCMsgSQLStats::CGCMsgSQLStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgSQLStats)
}

void CGCMsgSQLStats::InitAsDefaultInstance() {
}

CGCMsgSQLStats::CGCMsgSQLStats(const CGCMsgSQLStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgSQLStats)
}

void CGCMsgSQLStats::SharedCtor() {
  _cached_size_ = 0;
  schema_catalog_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgSQLStats::~CGCMsgSQLStats() {
  // @@protoc_insertion_point(destructor:CGCMsgSQLStats)
  SharedDtor();
}

void CGCMsgSQLStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgSQLStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgSQLStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgSQLStats_descriptor_;
}

const CGCMsgSQLStats& CGCMsgSQLStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgSQLStats* CGCMsgSQLStats::default_instance_ = NULL;

CGCMsgSQLStats* CGCMsgSQLStats::New(::google::protobuf::Arena* arena) const {
  CGCMsgSQLStats* n = new CGCMsgSQLStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgSQLStats::Clear() {
  schema_catalog_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgSQLStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgSQLStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 schema_catalog = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schema_catalog_)));
          set_has_schema_catalog();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgSQLStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgSQLStats)
  return false;
#undef DO_
}

void CGCMsgSQLStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgSQLStats)
  // optional uint32 schema_catalog = 1;
  if (has_schema_catalog()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schema_catalog(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgSQLStats)
}

::google::protobuf::uint8* CGCMsgSQLStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSQLStats)
  // optional uint32 schema_catalog = 1;
  if (has_schema_catalog()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schema_catalog(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSQLStats)
  return target;
}

int CGCMsgSQLStats::ByteSize() const {
  int total_size = 0;

  // optional uint32 schema_catalog = 1;
  if (has_schema_catalog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schema_catalog());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgSQLStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgSQLStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgSQLStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgSQLStats::MergeFrom(const CGCMsgSQLStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_schema_catalog()) {
      set_schema_catalog(from.schema_catalog());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgSQLStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgSQLStats::CopyFrom(const CGCMsgSQLStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgSQLStats::IsInitialized() const {

  return true;
}

void CGCMsgSQLStats::Swap(CGCMsgSQLStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgSQLStats::InternalSwap(CGCMsgSQLStats* other) {
  std::swap(schema_catalog_, other->schema_catalog_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgSQLStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgSQLStats_descriptor_;
  metadata.reflection = CGCMsgSQLStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgSQLStats

// optional uint32 schema_catalog = 1;
bool CGCMsgSQLStats::has_schema_catalog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCMsgSQLStats::set_has_schema_catalog() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCMsgSQLStats::clear_has_schema_catalog() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCMsgSQLStats::clear_schema_catalog() {
  schema_catalog_ = 0u;
  clear_has_schema_catalog();
}
 ::google::protobuf::uint32 CGCMsgSQLStats::schema_catalog() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStats.schema_catalog)
  return schema_catalog_;
}
 void CGCMsgSQLStats::set_schema_catalog(::google::protobuf::uint32 value) {
  set_has_schema_catalog();
  schema_catalog_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStats.schema_catalog)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgSQLStatsResponse::kThreadsFieldNumber;
const int CGCMsgSQLStatsResponse::kThreadsConnectedFieldNumber;
const int CGCMsgSQLStatsResponse::kThreadsActiveFieldNumber;
const int CGCMsgSQLStatsResponse::kOperationsSubmittedFieldNumber;
const int CGCMsgSQLStatsResponse::kPreparedStatementsExecutedFieldNumber;
const int CGCMsgSQLStatsResponse::kNonPreparedStatementsExecutedFieldNumber;
const int CGCMsgSQLStatsResponse::kDeadlockRetriesFieldNumber;
const int CGCMsgSQLStatsResponse::kOperationsTimedOutInQueueFieldNumber;
const int CGCMsgSQLStatsResponse::kErrorsFieldNumber;
#endif  // !_MSC_VER

CGCMsgSQLStatsResponse::CGCMsgSQLStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgSQLStatsResponse)
}

void CGCMsgSQLStatsResponse::InitAsDefaultInstance() {
}

CGCMsgSQLStatsResponse::CGCMsgSQLStatsResponse(const CGCMsgSQLStatsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgSQLStatsResponse)
}

void CGCMsgSQLStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  threads_ = 0u;
  threads_connected_ = 0u;
  threads_active_ = 0u;
  operations_submitted_ = 0u;
  prepared_statements_executed_ = 0u;
  non_prepared_statements_executed_ = 0u;
  deadlock_retries_ = 0u;
  operations_timed_out_in_queue_ = 0u;
  errors_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgSQLStatsResponse::~CGCMsgSQLStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgSQLStatsResponse)
  SharedDtor();
}

void CGCMsgSQLStatsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgSQLStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgSQLStatsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgSQLStatsResponse_descriptor_;
}

const CGCMsgSQLStatsResponse& CGCMsgSQLStatsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgSQLStatsResponse* CGCMsgSQLStatsResponse::default_instance_ = NULL;

CGCMsgSQLStatsResponse* CGCMsgSQLStatsResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgSQLStatsResponse* n = new CGCMsgSQLStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgSQLStatsResponse::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCMsgSQLStatsResponse*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(threads_, operations_timed_out_in_queue_);
  }
  errors_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgSQLStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgSQLStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 threads = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_)));
          set_has_threads();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_threads_connected;
        break;
      }

      // optional uint32 threads_connected = 2;
      case 2: {
        if (tag == 16) {
         parse_threads_connected:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_connected_)));
          set_has_threads_connected();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_threads_active;
        break;
      }

      // optional uint32 threads_active = 3;
      case 3: {
        if (tag == 24) {
         parse_threads_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_active_)));
          set_has_threads_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_operations_submitted;
        break;
      }

      // optional uint32 operations_submitted = 4;
      case 4: {
        if (tag == 32) {
         parse_operations_submitted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operations_submitted_)));
          set_has_operations_submitted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_prepared_statements_executed;
        break;
      }

      // optional uint32 prepared_statements_executed = 5;
      case 5: {
        if (tag == 40) {
         parse_prepared_statements_executed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prepared_statements_executed_)));
          set_has_prepared_statements_executed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_non_prepared_statements_executed;
        break;
      }

      // optional uint32 non_prepared_statements_executed = 6;
      case 6: {
        if (tag == 48) {
         parse_non_prepared_statements_executed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &non_prepared_statements_executed_)));
          set_has_non_prepared_statements_executed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_deadlock_retries;
        break;
      }

      // optional uint32 deadlock_retries = 7;
      case 7: {
        if (tag == 56) {
         parse_deadlock_retries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deadlock_retries_)));
          set_has_deadlock_retries();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_operations_timed_out_in_queue;
        break;
      }

      // optional uint32 operations_timed_out_in_queue = 8;
      case 8: {
        if (tag == 64) {
         parse_operations_timed_out_in_queue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operations_timed_out_in_queue_)));
          set_has_operations_timed_out_in_queue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_errors;
        break;
      }

      // optional uint32 errors = 9;
      case 9: {
        if (tag == 72) {
         parse_errors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errors_)));
          set_has_errors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgSQLStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgSQLStatsResponse)
  return false;
#undef DO_
}

void CGCMsgSQLStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgSQLStatsResponse)
  // optional uint32 threads = 1;
  if (has_threads()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->threads(), output);
  }

  // optional uint32 threads_connected = 2;
  if (has_threads_connected()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->threads_connected(), output);
  }

  // optional uint32 threads_active = 3;
  if (has_threads_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->threads_active(), output);
  }

  // optional uint32 operations_submitted = 4;
  if (has_operations_submitted()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->operations_submitted(), output);
  }

  // optional uint32 prepared_statements_executed = 5;
  if (has_prepared_statements_executed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->prepared_statements_executed(), output);
  }

  // optional uint32 non_prepared_statements_executed = 6;
  if (has_non_prepared_statements_executed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->non_prepared_statements_executed(), output);
  }

  // optional uint32 deadlock_retries = 7;
  if (has_deadlock_retries()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->deadlock_retries(), output);
  }

  // optional uint32 operations_timed_out_in_queue = 8;
  if (has_operations_timed_out_in_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->operations_timed_out_in_queue(), output);
  }

  // optional uint32 errors = 9;
  if (has_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->errors(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgSQLStatsResponse)
}

::google::protobuf::uint8* CGCMsgSQLStatsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSQLStatsResponse)
  // optional uint32 threads = 1;
  if (has_threads()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->threads(), target);
  }

  // optional uint32 threads_connected = 2;
  if (has_threads_connected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->threads_connected(), target);
  }

  // optional uint32 threads_active = 3;
  if (has_threads_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->threads_active(), target);
  }

  // optional uint32 operations_submitted = 4;
  if (has_operations_submitted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->operations_submitted(), target);
  }

  // optional uint32 prepared_statements_executed = 5;
  if (has_prepared_statements_executed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->prepared_statements_executed(), target);
  }

  // optional uint32 non_prepared_statements_executed = 6;
  if (has_non_prepared_statements_executed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->non_prepared_statements_executed(), target);
  }

  // optional uint32 deadlock_retries = 7;
  if (has_deadlock_retries()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->deadlock_retries(), target);
  }

  // optional uint32 operations_timed_out_in_queue = 8;
  if (has_operations_timed_out_in_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->operations_timed_out_in_queue(), target);
  }

  // optional uint32 errors = 9;
  if (has_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->errors(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSQLStatsResponse)
  return target;
}

int CGCMsgSQLStatsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 threads = 1;
    if (has_threads()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->threads());
    }

    // optional uint32 threads_connected = 2;
    if (has_threads_connected()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->threads_connected());
    }

    // optional uint32 threads_active = 3;
    if (has_threads_active()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->threads_active());
    }

    // optional uint32 operations_submitted = 4;
    if (has_operations_submitted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operations_submitted());
    }

    // optional uint32 prepared_statements_executed = 5;
    if (has_prepared_statements_executed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prepared_statements_executed());
    }

    // optional uint32 non_prepared_statements_executed = 6;
    if (has_non_prepared_statements_executed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->non_prepared_statements_executed());
    }

    // optional uint32 deadlock_retries = 7;
    if (has_deadlock_retries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deadlock_retries());
    }

    // optional uint32 operations_timed_out_in_queue = 8;
    if (has_operations_timed_out_in_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operations_timed_out_in_queue());
    }

  }
  // optional uint32 errors = 9;
  if (has_errors()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errors());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgSQLStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgSQLStatsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgSQLStatsResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgSQLStatsResponse::MergeFrom(const CGCMsgSQLStatsResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_threads()) {
      set_threads(from.threads());
    }
    if (from.has_threads_connected()) {
      set_threads_connected(from.threads_connected());
    }
    if (from.has_threads_active()) {
      set_threads_active(from.threads_active());
    }
    if (from.has_operations_submitted()) {
      set_operations_submitted(from.operations_submitted());
    }
    if (from.has_prepared_statements_executed()) {
      set_prepared_statements_executed(from.prepared_statements_executed());
    }
    if (from.has_non_prepared_statements_executed()) {
      set_non_prepared_statements_executed(from.non_prepared_statements_executed());
    }
    if (from.has_deadlock_retries()) {
      set_deadlock_retries(from.deadlock_retries());
    }
    if (from.has_operations_timed_out_in_queue()) {
      set_operations_timed_out_in_queue(from.operations_timed_out_in_queue());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_errors()) {
      set_errors(from.errors());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgSQLStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgSQLStatsResponse::CopyFrom(const CGCMsgSQLStatsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgSQLStatsResponse::IsInitialized() const {

  return true;
}

void CGCMsgSQLStatsResponse::Swap(CGCMsgSQLStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgSQLStatsResponse::InternalSwap(CGCMsgSQLStatsResponse* other) {
  std::swap(threads_, other->threads_);
  std::swap(threads_connected_, other->threads_connected_);
  std::swap(threads_active_, other->threads_active_);
  std::swap(operations_submitted_, other->operations_submitted_);
  std::swap(prepared_statements_executed_, other->prepared_statements_executed_);
  std::swap(non_prepared_statements_executed_, other->non_prepared_statements_executed_);
  std::swap(deadlock_retries_, other->deadlock_retries_);
  std::swap(operations_timed_out_in_queue_, other->operations_timed_out_in_queue_);
  std::swap(errors_, other->errors_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgSQLStatsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgSQLStatsResponse_descriptor_;
  metadata.reflection = CGCMsgSQLStatsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgSQLStatsResponse

// optional uint32 threads = 1;
bool CGCMsgSQLStatsResponse::has_threads() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_threads() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCMsgSQLStatsResponse::clear_has_threads() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCMsgSQLStatsResponse::clear_threads() {
  threads_ = 0u;
  clear_has_threads();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.threads)
  return threads_;
}
 void CGCMsgSQLStatsResponse::set_threads(::google::protobuf::uint32 value) {
  set_has_threads();
  threads_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.threads)
}

// optional uint32 threads_connected = 2;
bool CGCMsgSQLStatsResponse::has_threads_connected() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_threads_connected() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCMsgSQLStatsResponse::clear_has_threads_connected() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCMsgSQLStatsResponse::clear_threads_connected() {
  threads_connected_ = 0u;
  clear_has_threads_connected();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads_connected() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.threads_connected)
  return threads_connected_;
}
 void CGCMsgSQLStatsResponse::set_threads_connected(::google::protobuf::uint32 value) {
  set_has_threads_connected();
  threads_connected_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.threads_connected)
}

// optional uint32 threads_active = 3;
bool CGCMsgSQLStatsResponse::has_threads_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_threads_active() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCMsgSQLStatsResponse::clear_has_threads_active() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCMsgSQLStatsResponse::clear_threads_active() {
  threads_active_ = 0u;
  clear_has_threads_active();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads_active() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.threads_active)
  return threads_active_;
}
 void CGCMsgSQLStatsResponse::set_threads_active(::google::protobuf::uint32 value) {
  set_has_threads_active();
  threads_active_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.threads_active)
}

// optional uint32 operations_submitted = 4;
bool CGCMsgSQLStatsResponse::has_operations_submitted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_operations_submitted() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCMsgSQLStatsResponse::clear_has_operations_submitted() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCMsgSQLStatsResponse::clear_operations_submitted() {
  operations_submitted_ = 0u;
  clear_has_operations_submitted();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::operations_submitted() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.operations_submitted)
  return operations_submitted_;
}
 void CGCMsgSQLStatsResponse::set_operations_submitted(::google::protobuf::uint32 value) {
  set_has_operations_submitted();
  operations_submitted_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.operations_submitted)
}

// optional uint32 prepared_statements_executed = 5;
bool CGCMsgSQLStatsResponse::has_prepared_statements_executed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_prepared_statements_executed() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCMsgSQLStatsResponse::clear_has_prepared_statements_executed() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCMsgSQLStatsResponse::clear_prepared_statements_executed() {
  prepared_statements_executed_ = 0u;
  clear_has_prepared_statements_executed();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::prepared_statements_executed() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.prepared_statements_executed)
  return prepared_statements_executed_;
}
 void CGCMsgSQLStatsResponse::set_prepared_statements_executed(::google::protobuf::uint32 value) {
  set_has_prepared_statements_executed();
  prepared_statements_executed_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.prepared_statements_executed)
}

// optional uint32 non_prepared_statements_executed = 6;
bool CGCMsgSQLStatsResponse::has_non_prepared_statements_executed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_non_prepared_statements_executed() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCMsgSQLStatsResponse::clear_has_non_prepared_statements_executed() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCMsgSQLStatsResponse::clear_non_prepared_statements_executed() {
  non_prepared_statements_executed_ = 0u;
  clear_has_non_prepared_statements_executed();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::non_prepared_statements_executed() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.non_prepared_statements_executed)
  return non_prepared_statements_executed_;
}
 void CGCMsgSQLStatsResponse::set_non_prepared_statements_executed(::google::protobuf::uint32 value) {
  set_has_non_prepared_statements_executed();
  non_prepared_statements_executed_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.non_prepared_statements_executed)
}

// optional uint32 deadlock_retries = 7;
bool CGCMsgSQLStatsResponse::has_deadlock_retries() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_deadlock_retries() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCMsgSQLStatsResponse::clear_has_deadlock_retries() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCMsgSQLStatsResponse::clear_deadlock_retries() {
  deadlock_retries_ = 0u;
  clear_has_deadlock_retries();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::deadlock_retries() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.deadlock_retries)
  return deadlock_retries_;
}
 void CGCMsgSQLStatsResponse::set_deadlock_retries(::google::protobuf::uint32 value) {
  set_has_deadlock_retries();
  deadlock_retries_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.deadlock_retries)
}

// optional uint32 operations_timed_out_in_queue = 8;
bool CGCMsgSQLStatsResponse::has_operations_timed_out_in_queue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_operations_timed_out_in_queue() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCMsgSQLStatsResponse::clear_has_operations_timed_out_in_queue() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCMsgSQLStatsResponse::clear_operations_timed_out_in_queue() {
  operations_timed_out_in_queue_ = 0u;
  clear_has_operations_timed_out_in_queue();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::operations_timed_out_in_queue() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.operations_timed_out_in_queue)
  return operations_timed_out_in_queue_;
}
 void CGCMsgSQLStatsResponse::set_operations_timed_out_in_queue(::google::protobuf::uint32 value) {
  set_has_operations_timed_out_in_queue();
  operations_timed_out_in_queue_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.operations_timed_out_in_queue)
}

// optional uint32 errors = 9;
bool CGCMsgSQLStatsResponse::has_errors() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CGCMsgSQLStatsResponse::set_has_errors() {
  _has_bits_[0] |= 0x00000100u;
}
void CGCMsgSQLStatsResponse::clear_has_errors() {
  _has_bits_[0] &= ~0x00000100u;
}
void CGCMsgSQLStatsResponse::clear_errors() {
  errors_ = 0u;
  clear_has_errors();
}
 ::google::protobuf::uint32 CGCMsgSQLStatsResponse::errors() const {
  // @@protoc_insertion_point(field_get:CGCMsgSQLStatsResponse.errors)
  return errors_;
}
 void CGCMsgSQLStatsResponse::set_errors(::google::protobuf::uint32 value) {
  set_has_errors();
  errors_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSQLStatsResponse.errors)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMAddFreeLicense::kSteamidFieldNumber;
const int CMsgAMAddFreeLicense::kIpPublicFieldNumber;
const int CMsgAMAddFreeLicense::kPackageidFieldNumber;
const int CMsgAMAddFreeLicense::kStoreCountryCodeFieldNumber;
#endif  // !_MSC_VER

CMsgAMAddFreeLicense::CMsgAMAddFreeLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMAddFreeLicense)
}

void CMsgAMAddFreeLicense::InitAsDefaultInstance() {
}

CMsgAMAddFreeLicense::CMsgAMAddFreeLicense(const CMsgAMAddFreeLicense& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMAddFreeLicense)
}

void CMsgAMAddFreeLicense::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  ip_public_ = 0u;
  packageid_ = 0u;
  store_country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMAddFreeLicense::~CMsgAMAddFreeLicense() {
  // @@protoc_insertion_point(destructor:CMsgAMAddFreeLicense)
  SharedDtor();
}

void CMsgAMAddFreeLicense::SharedDtor() {
  store_country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgAMAddFreeLicense::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMAddFreeLicense::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMAddFreeLicense_descriptor_;
}

const CMsgAMAddFreeLicense& CMsgAMAddFreeLicense::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMAddFreeLicense* CMsgAMAddFreeLicense::default_instance_ = NULL;

CMsgAMAddFreeLicense* CMsgAMAddFreeLicense::New(::google::protobuf::Arena* arena) const {
  CMsgAMAddFreeLicense* n = new CMsgAMAddFreeLicense;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMAddFreeLicense::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMAddFreeLicense*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(steamid_, packageid_);
    if (has_store_country_code()) {
      store_country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMAddFreeLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMAddFreeLicense)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ip_public;
        break;
      }

      // optional uint32 ip_public = 2;
      case 2: {
        if (tag == 16) {
         parse_ip_public:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_public_)));
          set_has_ip_public();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packageid;
        break;
      }

      // optional uint32 packageid = 3;
      case 3: {
        if (tag == 24) {
         parse_packageid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
          set_has_packageid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_store_country_code;
        break;
      }

      // optional string store_country_code = 4;
      case 4: {
        if (tag == 34) {
         parse_store_country_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store_country_code().data(), this->store_country_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMAddFreeLicense.store_country_code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMAddFreeLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMAddFreeLicense)
  return false;
#undef DO_
}

void CMsgAMAddFreeLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMAddFreeLicense)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 ip_public = 2;
  if (has_ip_public()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip_public(), output);
  }

  // optional uint32 packageid = 3;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packageid(), output);
  }

  // optional string store_country_code = 4;
  if (has_store_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_country_code().data(), this->store_country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMAddFreeLicense.store_country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->store_country_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMAddFreeLicense)
}

::google::protobuf::uint8* CMsgAMAddFreeLicense::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMAddFreeLicense)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 ip_public = 2;
  if (has_ip_public()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip_public(), target);
  }

  // optional uint32 packageid = 3;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packageid(), target);
  }

  // optional string store_country_code = 4;
  if (has_store_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_country_code().data(), this->store_country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMAddFreeLicense.store_country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->store_country_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMAddFreeLicense)
  return target;
}

int CMsgAMAddFreeLicense::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 ip_public = 2;
    if (has_ip_public()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip_public());
    }

    // optional uint32 packageid = 3;
    if (has_packageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

    // optional string store_country_code = 4;
    if (has_store_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store_country_code());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMAddFreeLicense::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMAddFreeLicense* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMAddFreeLicense>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMAddFreeLicense::MergeFrom(const CMsgAMAddFreeLicense& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_ip_public()) {
      set_ip_public(from.ip_public());
    }
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_store_country_code()) {
      set_has_store_country_code();
      store_country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_country_code_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMAddFreeLicense::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMAddFreeLicense::CopyFrom(const CMsgAMAddFreeLicense& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMAddFreeLicense::IsInitialized() const {

  return true;
}

void CMsgAMAddFreeLicense::Swap(CMsgAMAddFreeLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMAddFreeLicense::InternalSwap(CMsgAMAddFreeLicense* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(ip_public_, other->ip_public_);
  std::swap(packageid_, other->packageid_);
  store_country_code_.Swap(&other->store_country_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMAddFreeLicense::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMAddFreeLicense_descriptor_;
  metadata.reflection = CMsgAMAddFreeLicense_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMAddFreeLicense

// optional fixed64 steamid = 1;
bool CMsgAMAddFreeLicense::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMAddFreeLicense::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMAddFreeLicense::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMAddFreeLicense::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgAMAddFreeLicense::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgAMAddFreeLicense.steamid)
  return steamid_;
}
 void CMsgAMAddFreeLicense::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMAddFreeLicense.steamid)
}

// optional uint32 ip_public = 2;
bool CMsgAMAddFreeLicense::has_ip_public() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMAddFreeLicense::set_has_ip_public() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMAddFreeLicense::clear_has_ip_public() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMAddFreeLicense::clear_ip_public() {
  ip_public_ = 0u;
  clear_has_ip_public();
}
 ::google::protobuf::uint32 CMsgAMAddFreeLicense::ip_public() const {
  // @@protoc_insertion_point(field_get:CMsgAMAddFreeLicense.ip_public)
  return ip_public_;
}
 void CMsgAMAddFreeLicense::set_ip_public(::google::protobuf::uint32 value) {
  set_has_ip_public();
  ip_public_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMAddFreeLicense.ip_public)
}

// optional uint32 packageid = 3;
bool CMsgAMAddFreeLicense::has_packageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAMAddFreeLicense::set_has_packageid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAMAddFreeLicense::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAMAddFreeLicense::clear_packageid() {
  packageid_ = 0u;
  clear_has_packageid();
}
 ::google::protobuf::uint32 CMsgAMAddFreeLicense::packageid() const {
  // @@protoc_insertion_point(field_get:CMsgAMAddFreeLicense.packageid)
  return packageid_;
}
 void CMsgAMAddFreeLicense::set_packageid(::google::protobuf::uint32 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMAddFreeLicense.packageid)
}

// optional string store_country_code = 4;
bool CMsgAMAddFreeLicense::has_store_country_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgAMAddFreeLicense::set_has_store_country_code() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgAMAddFreeLicense::clear_has_store_country_code() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgAMAddFreeLicense::clear_store_country_code() {
  store_country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_store_country_code();
}
 const ::std::string& CMsgAMAddFreeLicense::store_country_code() const {
  // @@protoc_insertion_point(field_get:CMsgAMAddFreeLicense.store_country_code)
  return store_country_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMAddFreeLicense::set_store_country_code(const ::std::string& value) {
  set_has_store_country_code();
  store_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgAMAddFreeLicense.store_country_code)
}
 void CMsgAMAddFreeLicense::set_store_country_code(const char* value) {
  set_has_store_country_code();
  store_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgAMAddFreeLicense.store_country_code)
}
 void CMsgAMAddFreeLicense::set_store_country_code(const char* value, size_t size) {
  set_has_store_country_code();
  store_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgAMAddFreeLicense.store_country_code)
}
 ::std::string* CMsgAMAddFreeLicense::mutable_store_country_code() {
  set_has_store_country_code();
  // @@protoc_insertion_point(field_mutable:CMsgAMAddFreeLicense.store_country_code)
  return store_country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgAMAddFreeLicense::release_store_country_code() {
  clear_has_store_country_code();
  return store_country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMAddFreeLicense::set_allocated_store_country_code(::std::string* store_country_code) {
  if (store_country_code != NULL) {
    set_has_store_country_code();
  } else {
    clear_has_store_country_code();
  }
  store_country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_country_code);
  // @@protoc_insertion_point(field_set_allocated:CMsgAMAddFreeLicense.store_country_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMAddFreeLicenseResponse::kEresultFieldNumber;
const int CMsgAMAddFreeLicenseResponse::kPurchaseResultDetailFieldNumber;
const int CMsgAMAddFreeLicenseResponse::kTransidFieldNumber;
#endif  // !_MSC_VER

CMsgAMAddFreeLicenseResponse::CMsgAMAddFreeLicenseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMAddFreeLicenseResponse)
}

void CMsgAMAddFreeLicenseResponse::InitAsDefaultInstance() {
}

CMsgAMAddFreeLicenseResponse::CMsgAMAddFreeLicenseResponse(const CMsgAMAddFreeLicenseResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMAddFreeLicenseResponse)
}

void CMsgAMAddFreeLicenseResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
  purchase_result_detail_ = 0;
  transid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMAddFreeLicenseResponse::~CMsgAMAddFreeLicenseResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMAddFreeLicenseResponse)
  SharedDtor();
}

void CMsgAMAddFreeLicenseResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMAddFreeLicenseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMAddFreeLicenseResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMAddFreeLicenseResponse_descriptor_;
}

const CMsgAMAddFreeLicenseResponse& CMsgAMAddFreeLicenseResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMAddFreeLicenseResponse* CMsgAMAddFreeLicenseResponse::default_instance_ = NULL;

CMsgAMAddFreeLicenseResponse* CMsgAMAddFreeLicenseResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMAddFreeLicenseResponse* n = new CMsgAMAddFreeLicenseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMAddFreeLicenseResponse::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMAddFreeLicenseResponse*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(purchase_result_detail_, transid_);
    eresult_ = 2;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMAddFreeLicenseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMAddFreeLicenseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_purchase_result_detail;
        break;
      }

      // optional int32 purchase_result_detail = 2;
      case 2: {
        if (tag == 16) {
         parse_purchase_result_detail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_result_detail_)));
          set_has_purchase_result_detail();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_transid;
        break;
      }

      // optional fixed64 transid = 3;
      case 3: {
        if (tag == 25) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &transid_)));
          set_has_transid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMAddFreeLicenseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMAddFreeLicenseResponse)
  return false;
#undef DO_
}

void CMsgAMAddFreeLicenseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMAddFreeLicenseResponse)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 purchase_result_detail = 2;
  if (has_purchase_result_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->purchase_result_detail(), output);
  }

  // optional fixed64 transid = 3;
  if (has_transid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->transid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMAddFreeLicenseResponse)
}

::google::protobuf::uint8* CMsgAMAddFreeLicenseResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMAddFreeLicenseResponse)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 purchase_result_detail = 2;
  if (has_purchase_result_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->purchase_result_detail(), target);
  }

  // optional fixed64 transid = 3;
  if (has_transid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->transid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMAddFreeLicenseResponse)
  return target;
}

int CMsgAMAddFreeLicenseResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional int32 purchase_result_detail = 2;
    if (has_purchase_result_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_result_detail());
    }

    // optional fixed64 transid = 3;
    if (has_transid()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMAddFreeLicenseResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMAddFreeLicenseResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMAddFreeLicenseResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMAddFreeLicenseResponse::MergeFrom(const CMsgAMAddFreeLicenseResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
    if (from.has_purchase_result_detail()) {
      set_purchase_result_detail(from.purchase_result_detail());
    }
    if (from.has_transid()) {
      set_transid(from.transid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMAddFreeLicenseResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMAddFreeLicenseResponse::CopyFrom(const CMsgAMAddFreeLicenseResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMAddFreeLicenseResponse::IsInitialized() const {

  return true;
}

void CMsgAMAddFreeLicenseResponse::Swap(CMsgAMAddFreeLicenseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMAddFreeLicenseResponse::InternalSwap(CMsgAMAddFreeLicenseResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(purchase_result_detail_, other->purchase_result_detail_);
  std::swap(transid_, other->transid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMAddFreeLicenseResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMAddFreeLicenseResponse_descriptor_;
  metadata.reflection = CMsgAMAddFreeLicenseResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMAddFreeLicenseResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgAMAddFreeLicenseResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMAddFreeLicenseResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMAddFreeLicenseResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMAddFreeLicenseResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
 ::google::protobuf::int32 CMsgAMAddFreeLicenseResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgAMAddFreeLicenseResponse.eresult)
  return eresult_;
}
 void CMsgAMAddFreeLicenseResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMAddFreeLicenseResponse.eresult)
}

// optional int32 purchase_result_detail = 2;
bool CMsgAMAddFreeLicenseResponse::has_purchase_result_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMAddFreeLicenseResponse::set_has_purchase_result_detail() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMAddFreeLicenseResponse::clear_has_purchase_result_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMAddFreeLicenseResponse::clear_purchase_result_detail() {
  purchase_result_detail_ = 0;
  clear_has_purchase_result_detail();
}
 ::google::protobuf::int32 CMsgAMAddFreeLicenseResponse::purchase_result_detail() const {
  // @@protoc_insertion_point(field_get:CMsgAMAddFreeLicenseResponse.purchase_result_detail)
  return purchase_result_detail_;
}
 void CMsgAMAddFreeLicenseResponse::set_purchase_result_detail(::google::protobuf::int32 value) {
  set_has_purchase_result_detail();
  purchase_result_detail_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMAddFreeLicenseResponse.purchase_result_detail)
}

// optional fixed64 transid = 3;
bool CMsgAMAddFreeLicenseResponse::has_transid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAMAddFreeLicenseResponse::set_has_transid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAMAddFreeLicenseResponse::clear_has_transid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAMAddFreeLicenseResponse::clear_transid() {
  transid_ = GOOGLE_ULONGLONG(0);
  clear_has_transid();
}
 ::google::protobuf::uint64 CMsgAMAddFreeLicenseResponse::transid() const {
  // @@protoc_insertion_point(field_get:CMsgAMAddFreeLicenseResponse.transid)
  return transid_;
}
 void CMsgAMAddFreeLicenseResponse::set_transid(::google::protobuf::uint64 value) {
  set_has_transid();
  transid_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMAddFreeLicenseResponse.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgGetIPLocation::kIpsFieldNumber;
#endif  // !_MSC_VER

CGCMsgGetIPLocation::CGCMsgGetIPLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetIPLocation)
}

void CGCMsgGetIPLocation::InitAsDefaultInstance() {
}

CGCMsgGetIPLocation::CGCMsgGetIPLocation(const CGCMsgGetIPLocation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPLocation)
}

void CGCMsgGetIPLocation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgGetIPLocation::~CGCMsgGetIPLocation() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPLocation)
  SharedDtor();
}

void CGCMsgGetIPLocation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgGetIPLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetIPLocation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgGetIPLocation_descriptor_;
}

const CGCMsgGetIPLocation& CGCMsgGetIPLocation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgGetIPLocation* CGCMsgGetIPLocation::default_instance_ = NULL;

CGCMsgGetIPLocation* CGCMsgGetIPLocation::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetIPLocation* n = new CGCMsgGetIPLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetIPLocation::Clear() {
  ips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgGetIPLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetIPLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 ips = 1;
      case 1: {
        if (tag == 13) {
         parse_ips:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 13, input, this->mutable_ips())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_ips())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_ips;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetIPLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetIPLocation)
  return false;
#undef DO_
}

void CGCMsgGetIPLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetIPLocation)
  // repeated fixed32 ips = 1;
  for (int i = 0; i < this->ips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      1, this->ips(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetIPLocation)
}

::google::protobuf::uint8* CGCMsgGetIPLocation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPLocation)
  // repeated fixed32 ips = 1;
  for (int i = 0; i < this->ips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(1, this->ips(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPLocation)
  return target;
}

int CGCMsgGetIPLocation::ByteSize() const {
  int total_size = 0;

  // repeated fixed32 ips = 1;
  {
    int data_size = 0;
    data_size = 4 * this->ips_size();
    total_size += 1 * this->ips_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetIPLocation::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgGetIPLocation* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetIPLocation>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgGetIPLocation::MergeFrom(const CGCMsgGetIPLocation& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  ips_.MergeFrom(from.ips_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgGetIPLocation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetIPLocation::CopyFrom(const CGCMsgGetIPLocation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetIPLocation::IsInitialized() const {

  return true;
}

void CGCMsgGetIPLocation::Swap(CGCMsgGetIPLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetIPLocation::InternalSwap(CGCMsgGetIPLocation* other) {
  ips_.UnsafeArenaSwap(&other->ips_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetIPLocation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgGetIPLocation_descriptor_;
  metadata.reflection = CGCMsgGetIPLocation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgGetIPLocation

// repeated fixed32 ips = 1;
int CGCMsgGetIPLocation::ips_size() const {
  return ips_.size();
}
void CGCMsgGetIPLocation::clear_ips() {
  ips_.Clear();
}
 ::google::protobuf::uint32 CGCMsgGetIPLocation::ips(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgGetIPLocation.ips)
  return ips_.Get(index);
}
 void CGCMsgGetIPLocation::set_ips(int index, ::google::protobuf::uint32 value) {
  ips_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGCMsgGetIPLocation.ips)
}
 void CGCMsgGetIPLocation::add_ips(::google::protobuf::uint32 value) {
  ips_.Add(value);
  // @@protoc_insertion_point(field_add:CGCMsgGetIPLocation.ips)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGCMsgGetIPLocation::ips() const {
  // @@protoc_insertion_point(field_list:CGCMsgGetIPLocation.ips)
  return ips_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGCMsgGetIPLocation::mutable_ips() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgGetIPLocation.ips)
  return &ips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CIPLocationInfo::kIpFieldNumber;
const int CIPLocationInfo::kLatitudeFieldNumber;
const int CIPLocationInfo::kLongitudeFieldNumber;
const int CIPLocationInfo::kCountryFieldNumber;
const int CIPLocationInfo::kStateFieldNumber;
const int CIPLocationInfo::kCityFieldNumber;
#endif  // !_MSC_VER

CIPLocationInfo::CIPLocationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CIPLocationInfo)
}

void CIPLocationInfo::InitAsDefaultInstance() {
}

CIPLocationInfo::CIPLocationInfo(const CIPLocationInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CIPLocationInfo)
}

void CIPLocationInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ip_ = 0u;
  latitude_ = 0;
  longitude_ = 0;
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CIPLocationInfo::~CIPLocationInfo() {
  // @@protoc_insertion_point(destructor:CIPLocationInfo)
  SharedDtor();
}

void CIPLocationInfo::SharedDtor() {
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CIPLocationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CIPLocationInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CIPLocationInfo_descriptor_;
}

const CIPLocationInfo& CIPLocationInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CIPLocationInfo* CIPLocationInfo::default_instance_ = NULL;

CIPLocationInfo* CIPLocationInfo::New(::google::protobuf::Arena* arena) const {
  CIPLocationInfo* n = new CIPLocationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CIPLocationInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CIPLocationInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(ip_, latitude_);
    longitude_ = 0;
    if (has_country()) {
      country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_state()) {
      state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_city()) {
      city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CIPLocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CIPLocationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ip = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
          set_has_ip();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_latitude;
        break;
      }

      // optional float latitude = 2;
      case 2: {
        if (tag == 21) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
          set_has_latitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_longitude;
        break;
      }

      // optional float longitude = 3;
      case 3: {
        if (tag == 29) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
          set_has_longitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_country;
        break;
      }

      // optional string country = 4;
      case 4: {
        if (tag == 34) {
         parse_country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CIPLocationInfo.country");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_state;
        break;
      }

      // optional string state = 5;
      case 5: {
        if (tag == 42) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CIPLocationInfo.state");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_city;
        break;
      }

      // optional string city = 6;
      case 6: {
        if (tag == 50) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CIPLocationInfo.city");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CIPLocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CIPLocationInfo)
  return false;
#undef DO_
}

void CIPLocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CIPLocationInfo)
  // optional uint32 ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ip(), output);
  }

  // optional float latitude = 2;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->latitude(), output);
  }

  // optional float longitude = 3;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // optional string country = 4;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->country(), output);
  }

  // optional string state = 5;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->state(), output);
  }

  // optional string city = 6;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->city(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CIPLocationInfo)
}

::google::protobuf::uint8* CIPLocationInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CIPLocationInfo)
  // optional uint32 ip = 1;
  if (has_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ip(), target);
  }

  // optional float latitude = 2;
  if (has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->latitude(), target);
  }

  // optional float longitude = 3;
  if (has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // optional string country = 4;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->country(), target);
  }

  // optional string state = 5;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->state(), target);
  }

  // optional string city = 6;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->city(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CIPLocationInfo)
  return target;
}

int CIPLocationInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional float latitude = 2;
    if (has_latitude()) {
      total_size += 1 + 4;
    }

    // optional float longitude = 3;
    if (has_longitude()) {
      total_size += 1 + 4;
    }

    // optional string country = 4;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional string state = 5;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional string city = 6;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CIPLocationInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CIPLocationInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CIPLocationInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CIPLocationInfo::MergeFrom(const CIPLocationInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_country()) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (from.has_state()) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (from.has_city()) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CIPLocationInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CIPLocationInfo::CopyFrom(const CIPLocationInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CIPLocationInfo::IsInitialized() const {

  return true;
}

void CIPLocationInfo::Swap(CIPLocationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CIPLocationInfo::InternalSwap(CIPLocationInfo* other) {
  std::swap(ip_, other->ip_);
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  country_.Swap(&other->country_);
  state_.Swap(&other->state_);
  city_.Swap(&other->city_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CIPLocationInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CIPLocationInfo_descriptor_;
  metadata.reflection = CIPLocationInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CIPLocationInfo

// optional uint32 ip = 1;
bool CIPLocationInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CIPLocationInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void CIPLocationInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void CIPLocationInfo::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
 ::google::protobuf::uint32 CIPLocationInfo::ip() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.ip)
  return ip_;
}
 void CIPLocationInfo::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CIPLocationInfo.ip)
}

// optional float latitude = 2;
bool CIPLocationInfo::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CIPLocationInfo::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
void CIPLocationInfo::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void CIPLocationInfo::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
 float CIPLocationInfo::latitude() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.latitude)
  return latitude_;
}
 void CIPLocationInfo::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CIPLocationInfo.latitude)
}

// optional float longitude = 3;
bool CIPLocationInfo::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CIPLocationInfo::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
void CIPLocationInfo::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void CIPLocationInfo::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
 float CIPLocationInfo::longitude() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.longitude)
  return longitude_;
}
 void CIPLocationInfo::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CIPLocationInfo.longitude)
}

// optional string country = 4;
bool CIPLocationInfo::has_country() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CIPLocationInfo::set_has_country() {
  _has_bits_[0] |= 0x00000008u;
}
void CIPLocationInfo::clear_has_country() {
  _has_bits_[0] &= ~0x00000008u;
}
void CIPLocationInfo::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
 const ::std::string& CIPLocationInfo::country() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CIPLocationInfo::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CIPLocationInfo.country)
}
 void CIPLocationInfo::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CIPLocationInfo.country)
}
 void CIPLocationInfo::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CIPLocationInfo.country)
}
 ::std::string* CIPLocationInfo::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:CIPLocationInfo.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CIPLocationInfo::release_country() {
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CIPLocationInfo::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:CIPLocationInfo.country)
}

// optional string state = 5;
bool CIPLocationInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CIPLocationInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
void CIPLocationInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
void CIPLocationInfo::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
 const ::std::string& CIPLocationInfo::state() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.state)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CIPLocationInfo::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CIPLocationInfo.state)
}
 void CIPLocationInfo::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CIPLocationInfo.state)
}
 void CIPLocationInfo::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CIPLocationInfo.state)
}
 ::std::string* CIPLocationInfo::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:CIPLocationInfo.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CIPLocationInfo::release_state() {
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CIPLocationInfo::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:CIPLocationInfo.state)
}

// optional string city = 6;
bool CIPLocationInfo::has_city() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CIPLocationInfo::set_has_city() {
  _has_bits_[0] |= 0x00000020u;
}
void CIPLocationInfo::clear_has_city() {
  _has_bits_[0] &= ~0x00000020u;
}
void CIPLocationInfo::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
 const ::std::string& CIPLocationInfo::city() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.city)
  return city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CIPLocationInfo::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CIPLocationInfo.city)
}
 void CIPLocationInfo::set_city(const char* value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CIPLocationInfo.city)
}
 void CIPLocationInfo::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CIPLocationInfo.city)
}
 ::std::string* CIPLocationInfo::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:CIPLocationInfo.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CIPLocationInfo::release_city() {
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CIPLocationInfo::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:CIPLocationInfo.city)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgGetIPLocationResponse::kInfosFieldNumber;
#endif  // !_MSC_VER

CGCMsgGetIPLocationResponse::CGCMsgGetIPLocationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetIPLocationResponse)
}

void CGCMsgGetIPLocationResponse::InitAsDefaultInstance() {
}

CGCMsgGetIPLocationResponse::CGCMsgGetIPLocationResponse(const CGCMsgGetIPLocationResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPLocationResponse)
}

void CGCMsgGetIPLocationResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgGetIPLocationResponse::~CGCMsgGetIPLocationResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPLocationResponse)
  SharedDtor();
}

void CGCMsgGetIPLocationResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgGetIPLocationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetIPLocationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgGetIPLocationResponse_descriptor_;
}

const CGCMsgGetIPLocationResponse& CGCMsgGetIPLocationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgGetIPLocationResponse* CGCMsgGetIPLocationResponse::default_instance_ = NULL;

CGCMsgGetIPLocationResponse* CGCMsgGetIPLocationResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetIPLocationResponse* n = new CGCMsgGetIPLocationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetIPLocationResponse::Clear() {
  infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgGetIPLocationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetIPLocationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CIPLocationInfo infos = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_infos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetIPLocationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetIPLocationResponse)
  return false;
#undef DO_
}

void CGCMsgGetIPLocationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetIPLocationResponse)
  // repeated .CIPLocationInfo infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetIPLocationResponse)
}

::google::protobuf::uint8* CGCMsgGetIPLocationResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPLocationResponse)
  // repeated .CIPLocationInfo infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->infos(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPLocationResponse)
  return target;
}

int CGCMsgGetIPLocationResponse::ByteSize() const {
  int total_size = 0;

  // repeated .CIPLocationInfo infos = 1;
  total_size += 1 * this->infos_size();
  for (int i = 0; i < this->infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infos(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetIPLocationResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgGetIPLocationResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetIPLocationResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgGetIPLocationResponse::MergeFrom(const CGCMsgGetIPLocationResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  infos_.MergeFrom(from.infos_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgGetIPLocationResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetIPLocationResponse::CopyFrom(const CGCMsgGetIPLocationResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetIPLocationResponse::IsInitialized() const {

  return true;
}

void CGCMsgGetIPLocationResponse::Swap(CGCMsgGetIPLocationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetIPLocationResponse::InternalSwap(CGCMsgGetIPLocationResponse* other) {
  infos_.UnsafeArenaSwap(&other->infos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetIPLocationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgGetIPLocationResponse_descriptor_;
  metadata.reflection = CGCMsgGetIPLocationResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgGetIPLocationResponse

// repeated .CIPLocationInfo infos = 1;
int CGCMsgGetIPLocationResponse::infos_size() const {
  return infos_.size();
}
void CGCMsgGetIPLocationResponse::clear_infos() {
  infos_.Clear();
}
const ::CIPLocationInfo& CGCMsgGetIPLocationResponse::infos(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgGetIPLocationResponse.infos)
  return infos_.Get(index);
}
::CIPLocationInfo* CGCMsgGetIPLocationResponse::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgGetIPLocationResponse.infos)
  return infos_.Mutable(index);
}
::CIPLocationInfo* CGCMsgGetIPLocationResponse::add_infos() {
  // @@protoc_insertion_point(field_add:CGCMsgGetIPLocationResponse.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::CIPLocationInfo >*
CGCMsgGetIPLocationResponse::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgGetIPLocationResponse.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::CIPLocationInfo >&
CGCMsgGetIPLocationResponse::infos() const {
  // @@protoc_insertion_point(field_list:CGCMsgGetIPLocationResponse.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgGetIPASN::kIpsFieldNumber;
#endif  // !_MSC_VER

CGCMsgGetIPASN::CGCMsgGetIPASN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetIPASN)
}

void CGCMsgGetIPASN::InitAsDefaultInstance() {
}

CGCMsgGetIPASN::CGCMsgGetIPASN(const CGCMsgGetIPASN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPASN)
}

void CGCMsgGetIPASN::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgGetIPASN::~CGCMsgGetIPASN() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPASN)
  SharedDtor();
}

void CGCMsgGetIPASN::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgGetIPASN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetIPASN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgGetIPASN_descriptor_;
}

const CGCMsgGetIPASN& CGCMsgGetIPASN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgGetIPASN* CGCMsgGetIPASN::default_instance_ = NULL;

CGCMsgGetIPASN* CGCMsgGetIPASN::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetIPASN* n = new CGCMsgGetIPASN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetIPASN::Clear() {
  ips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgGetIPASN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetIPASN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 ips = 1;
      case 1: {
        if (tag == 13) {
         parse_ips:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 13, input, this->mutable_ips())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_ips())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_ips;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetIPASN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetIPASN)
  return false;
#undef DO_
}

void CGCMsgGetIPASN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetIPASN)
  // repeated fixed32 ips = 1;
  for (int i = 0; i < this->ips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      1, this->ips(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetIPASN)
}

::google::protobuf::uint8* CGCMsgGetIPASN::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPASN)
  // repeated fixed32 ips = 1;
  for (int i = 0; i < this->ips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(1, this->ips(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPASN)
  return target;
}

int CGCMsgGetIPASN::ByteSize() const {
  int total_size = 0;

  // repeated fixed32 ips = 1;
  {
    int data_size = 0;
    data_size = 4 * this->ips_size();
    total_size += 1 * this->ips_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetIPASN::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgGetIPASN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetIPASN>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgGetIPASN::MergeFrom(const CGCMsgGetIPASN& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  ips_.MergeFrom(from.ips_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgGetIPASN::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetIPASN::CopyFrom(const CGCMsgGetIPASN& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetIPASN::IsInitialized() const {

  return true;
}

void CGCMsgGetIPASN::Swap(CGCMsgGetIPASN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetIPASN::InternalSwap(CGCMsgGetIPASN* other) {
  ips_.UnsafeArenaSwap(&other->ips_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetIPASN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgGetIPASN_descriptor_;
  metadata.reflection = CGCMsgGetIPASN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgGetIPASN

// repeated fixed32 ips = 1;
int CGCMsgGetIPASN::ips_size() const {
  return ips_.size();
}
void CGCMsgGetIPASN::clear_ips() {
  ips_.Clear();
}
 ::google::protobuf::uint32 CGCMsgGetIPASN::ips(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgGetIPASN.ips)
  return ips_.Get(index);
}
 void CGCMsgGetIPASN::set_ips(int index, ::google::protobuf::uint32 value) {
  ips_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGCMsgGetIPASN.ips)
}
 void CGCMsgGetIPASN::add_ips(::google::protobuf::uint32 value) {
  ips_.Add(value);
  // @@protoc_insertion_point(field_add:CGCMsgGetIPASN.ips)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGCMsgGetIPASN::ips() const {
  // @@protoc_insertion_point(field_list:CGCMsgGetIPASN.ips)
  return ips_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGCMsgGetIPASN::mutable_ips() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgGetIPASN.ips)
  return &ips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CIPASNInfo::kIpFieldNumber;
const int CIPASNInfo::kAsnFieldNumber;
#endif  // !_MSC_VER

CIPASNInfo::CIPASNInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CIPASNInfo)
}

void CIPASNInfo::InitAsDefaultInstance() {
}

CIPASNInfo::CIPASNInfo(const CIPASNInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CIPASNInfo)
}

void CIPASNInfo::SharedCtor() {
  _cached_size_ = 0;
  ip_ = 0u;
  asn_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CIPASNInfo::~CIPASNInfo() {
  // @@protoc_insertion_point(destructor:CIPASNInfo)
  SharedDtor();
}

void CIPASNInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CIPASNInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CIPASNInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CIPASNInfo_descriptor_;
}

const CIPASNInfo& CIPASNInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CIPASNInfo* CIPASNInfo::default_instance_ = NULL;

CIPASNInfo* CIPASNInfo::New(::google::protobuf::Arena* arena) const {
  CIPASNInfo* n = new CIPASNInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CIPASNInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CIPASNInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ip_, asn_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CIPASNInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CIPASNInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 ip = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
          set_has_ip();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_asn;
        break;
      }

      // optional uint32 asn = 2;
      case 2: {
        if (tag == 16) {
         parse_asn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asn_)));
          set_has_asn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CIPASNInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CIPASNInfo)
  return false;
#undef DO_
}

void CIPASNInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CIPASNInfo)
  // optional fixed32 ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ip(), output);
  }

  // optional uint32 asn = 2;
  if (has_asn()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->asn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CIPASNInfo)
}

::google::protobuf::uint8* CIPASNInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CIPASNInfo)
  // optional fixed32 ip = 1;
  if (has_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ip(), target);
  }

  // optional uint32 asn = 2;
  if (has_asn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->asn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CIPASNInfo)
  return target;
}

int CIPASNInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed32 ip = 1;
    if (has_ip()) {
      total_size += 1 + 4;
    }

    // optional uint32 asn = 2;
    if (has_asn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asn());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CIPASNInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CIPASNInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CIPASNInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CIPASNInfo::MergeFrom(const CIPASNInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_asn()) {
      set_asn(from.asn());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CIPASNInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CIPASNInfo::CopyFrom(const CIPASNInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CIPASNInfo::IsInitialized() const {

  return true;
}

void CIPASNInfo::Swap(CIPASNInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CIPASNInfo::InternalSwap(CIPASNInfo* other) {
  std::swap(ip_, other->ip_);
  std::swap(asn_, other->asn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CIPASNInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CIPASNInfo_descriptor_;
  metadata.reflection = CIPASNInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CIPASNInfo

// optional fixed32 ip = 1;
bool CIPASNInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CIPASNInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void CIPASNInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void CIPASNInfo::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
 ::google::protobuf::uint32 CIPASNInfo::ip() const {
  // @@protoc_insertion_point(field_get:CIPASNInfo.ip)
  return ip_;
}
 void CIPASNInfo::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CIPASNInfo.ip)
}

// optional uint32 asn = 2;
bool CIPASNInfo::has_asn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CIPASNInfo::set_has_asn() {
  _has_bits_[0] |= 0x00000002u;
}
void CIPASNInfo::clear_has_asn() {
  _has_bits_[0] &= ~0x00000002u;
}
void CIPASNInfo::clear_asn() {
  asn_ = 0u;
  clear_has_asn();
}
 ::google::protobuf::uint32 CIPASNInfo::asn() const {
  // @@protoc_insertion_point(field_get:CIPASNInfo.asn)
  return asn_;
}
 void CIPASNInfo::set_asn(::google::protobuf::uint32 value) {
  set_has_asn();
  asn_ = value;
  // @@protoc_insertion_point(field_set:CIPASNInfo.asn)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgGetIPASNResponse::kInfosFieldNumber;
#endif  // !_MSC_VER

CGCMsgGetIPASNResponse::CGCMsgGetIPASNResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetIPASNResponse)
}

void CGCMsgGetIPASNResponse::InitAsDefaultInstance() {
}

CGCMsgGetIPASNResponse::CGCMsgGetIPASNResponse(const CGCMsgGetIPASNResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPASNResponse)
}

void CGCMsgGetIPASNResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgGetIPASNResponse::~CGCMsgGetIPASNResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPASNResponse)
  SharedDtor();
}

void CGCMsgGetIPASNResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgGetIPASNResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetIPASNResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgGetIPASNResponse_descriptor_;
}

const CGCMsgGetIPASNResponse& CGCMsgGetIPASNResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgGetIPASNResponse* CGCMsgGetIPASNResponse::default_instance_ = NULL;

CGCMsgGetIPASNResponse* CGCMsgGetIPASNResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetIPASNResponse* n = new CGCMsgGetIPASNResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetIPASNResponse::Clear() {
  infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgGetIPASNResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetIPASNResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CIPASNInfo infos = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_infos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetIPASNResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetIPASNResponse)
  return false;
#undef DO_
}

void CGCMsgGetIPASNResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetIPASNResponse)
  // repeated .CIPASNInfo infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetIPASNResponse)
}

::google::protobuf::uint8* CGCMsgGetIPASNResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPASNResponse)
  // repeated .CIPASNInfo infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->infos(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPASNResponse)
  return target;
}

int CGCMsgGetIPASNResponse::ByteSize() const {
  int total_size = 0;

  // repeated .CIPASNInfo infos = 1;
  total_size += 1 * this->infos_size();
  for (int i = 0; i < this->infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infos(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetIPASNResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgGetIPASNResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetIPASNResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgGetIPASNResponse::MergeFrom(const CGCMsgGetIPASNResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  infos_.MergeFrom(from.infos_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgGetIPASNResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetIPASNResponse::CopyFrom(const CGCMsgGetIPASNResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetIPASNResponse::IsInitialized() const {

  return true;
}

void CGCMsgGetIPASNResponse::Swap(CGCMsgGetIPASNResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetIPASNResponse::InternalSwap(CGCMsgGetIPASNResponse* other) {
  infos_.UnsafeArenaSwap(&other->infos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetIPASNResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgGetIPASNResponse_descriptor_;
  metadata.reflection = CGCMsgGetIPASNResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgGetIPASNResponse

// repeated .CIPASNInfo infos = 1;
int CGCMsgGetIPASNResponse::infos_size() const {
  return infos_.size();
}
void CGCMsgGetIPASNResponse::clear_infos() {
  infos_.Clear();
}
const ::CIPASNInfo& CGCMsgGetIPASNResponse::infos(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgGetIPASNResponse.infos)
  return infos_.Get(index);
}
::CIPASNInfo* CGCMsgGetIPASNResponse::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgGetIPASNResponse.infos)
  return infos_.Mutable(index);
}
::CIPASNInfo* CGCMsgGetIPASNResponse::add_infos() {
  // @@protoc_insertion_point(field_add:CGCMsgGetIPASNResponse.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::CIPASNInfo >*
CGCMsgGetIPASNResponse::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgGetIPASNResponse.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::CIPASNInfo >&
CGCMsgGetIPASNResponse::infos() const {
  // @@protoc_insertion_point(field_list:CGCMsgGetIPASNResponse.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgSystemStatsSchema::kGcAppIdFieldNumber;
const int CGCMsgSystemStatsSchema::kSchemaKvFieldNumber;
#endif  // !_MSC_VER

CGCMsgSystemStatsSchema::CGCMsgSystemStatsSchema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgSystemStatsSchema)
}

void CGCMsgSystemStatsSchema::InitAsDefaultInstance() {
}

CGCMsgSystemStatsSchema::CGCMsgSystemStatsSchema(const CGCMsgSystemStatsSchema& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgSystemStatsSchema)
}

void CGCMsgSystemStatsSchema::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gc_app_id_ = 0u;
  schema_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgSystemStatsSchema::~CGCMsgSystemStatsSchema() {
  // @@protoc_insertion_point(destructor:CGCMsgSystemStatsSchema)
  SharedDtor();
}

void CGCMsgSystemStatsSchema::SharedDtor() {
  schema_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCMsgSystemStatsSchema::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgSystemStatsSchema::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgSystemStatsSchema_descriptor_;
}

const CGCMsgSystemStatsSchema& CGCMsgSystemStatsSchema::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgSystemStatsSchema* CGCMsgSystemStatsSchema::default_instance_ = NULL;

CGCMsgSystemStatsSchema* CGCMsgSystemStatsSchema::New(::google::protobuf::Arena* arena) const {
  CGCMsgSystemStatsSchema* n = new CGCMsgSystemStatsSchema;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgSystemStatsSchema::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    gc_app_id_ = 0u;
    if (has_schema_kv()) {
      schema_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgSystemStatsSchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgSystemStatsSchema)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gc_app_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_app_id_)));
          set_has_gc_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_schema_kv;
        break;
      }

      // optional bytes schema_kv = 2;
      case 2: {
        if (tag == 18) {
         parse_schema_kv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schema_kv()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgSystemStatsSchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgSystemStatsSchema)
  return false;
#undef DO_
}

void CGCMsgSystemStatsSchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgSystemStatsSchema)
  // optional uint32 gc_app_id = 1;
  if (has_gc_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gc_app_id(), output);
  }

  // optional bytes schema_kv = 2;
  if (has_schema_kv()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->schema_kv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgSystemStatsSchema)
}

::google::protobuf::uint8* CGCMsgSystemStatsSchema::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSystemStatsSchema)
  // optional uint32 gc_app_id = 1;
  if (has_gc_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gc_app_id(), target);
  }

  // optional bytes schema_kv = 2;
  if (has_schema_kv()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->schema_kv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSystemStatsSchema)
  return target;
}

int CGCMsgSystemStatsSchema::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 gc_app_id = 1;
    if (has_gc_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_app_id());
    }

    // optional bytes schema_kv = 2;
    if (has_schema_kv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schema_kv());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgSystemStatsSchema::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgSystemStatsSchema* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgSystemStatsSchema>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgSystemStatsSchema::MergeFrom(const CGCMsgSystemStatsSchema& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gc_app_id()) {
      set_gc_app_id(from.gc_app_id());
    }
    if (from.has_schema_kv()) {
      set_has_schema_kv();
      schema_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_kv_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgSystemStatsSchema::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgSystemStatsSchema::CopyFrom(const CGCMsgSystemStatsSchema& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgSystemStatsSchema::IsInitialized() const {

  return true;
}

void CGCMsgSystemStatsSchema::Swap(CGCMsgSystemStatsSchema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgSystemStatsSchema::InternalSwap(CGCMsgSystemStatsSchema* other) {
  std::swap(gc_app_id_, other->gc_app_id_);
  schema_kv_.Swap(&other->schema_kv_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgSystemStatsSchema::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgSystemStatsSchema_descriptor_;
  metadata.reflection = CGCMsgSystemStatsSchema_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgSystemStatsSchema

// optional uint32 gc_app_id = 1;
bool CGCMsgSystemStatsSchema::has_gc_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCMsgSystemStatsSchema::set_has_gc_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCMsgSystemStatsSchema::clear_has_gc_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCMsgSystemStatsSchema::clear_gc_app_id() {
  gc_app_id_ = 0u;
  clear_has_gc_app_id();
}
 ::google::protobuf::uint32 CGCMsgSystemStatsSchema::gc_app_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgSystemStatsSchema.gc_app_id)
  return gc_app_id_;
}
 void CGCMsgSystemStatsSchema::set_gc_app_id(::google::protobuf::uint32 value) {
  set_has_gc_app_id();
  gc_app_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgSystemStatsSchema.gc_app_id)
}

// optional bytes schema_kv = 2;
bool CGCMsgSystemStatsSchema::has_schema_kv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCMsgSystemStatsSchema::set_has_schema_kv() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCMsgSystemStatsSchema::clear_has_schema_kv() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCMsgSystemStatsSchema::clear_schema_kv() {
  schema_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_schema_kv();
}
 const ::std::string& CGCMsgSystemStatsSchema::schema_kv() const {
  // @@protoc_insertion_point(field_get:CGCMsgSystemStatsSchema.schema_kv)
  return schema_kv_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgSystemStatsSchema::set_schema_kv(const ::std::string& value) {
  set_has_schema_kv();
  schema_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgSystemStatsSchema.schema_kv)
}
 void CGCMsgSystemStatsSchema::set_schema_kv(const char* value) {
  set_has_schema_kv();
  schema_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgSystemStatsSchema.schema_kv)
}
 void CGCMsgSystemStatsSchema::set_schema_kv(const void* value, size_t size) {
  set_has_schema_kv();
  schema_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgSystemStatsSchema.schema_kv)
}
 ::std::string* CGCMsgSystemStatsSchema::mutable_schema_kv() {
  set_has_schema_kv();
  // @@protoc_insertion_point(field_mutable:CGCMsgSystemStatsSchema.schema_kv)
  return schema_kv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCMsgSystemStatsSchema::release_schema_kv() {
  clear_has_schema_kv();
  return schema_kv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgSystemStatsSchema::set_allocated_schema_kv(::std::string* schema_kv) {
  if (schema_kv != NULL) {
    set_has_schema_kv();
  } else {
    clear_has_schema_kv();
  }
  schema_kv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), schema_kv);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgSystemStatsSchema.schema_kv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CGCMsgGetSystemStats::CGCMsgGetSystemStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetSystemStats)
}

void CGCMsgGetSystemStats::InitAsDefaultInstance() {
}

CGCMsgGetSystemStats::CGCMsgGetSystemStats(const CGCMsgGetSystemStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetSystemStats)
}

void CGCMsgGetSystemStats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgGetSystemStats::~CGCMsgGetSystemStats() {
  // @@protoc_insertion_point(destructor:CGCMsgGetSystemStats)
  SharedDtor();
}

void CGCMsgGetSystemStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCMsgGetSystemStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetSystemStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgGetSystemStats_descriptor_;
}

const CGCMsgGetSystemStats& CGCMsgGetSystemStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgGetSystemStats* CGCMsgGetSystemStats::default_instance_ = NULL;

CGCMsgGetSystemStats* CGCMsgGetSystemStats::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetSystemStats* n = new CGCMsgGetSystemStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetSystemStats::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgGetSystemStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetSystemStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetSystemStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetSystemStats)
  return false;
#undef DO_
}

void CGCMsgGetSystemStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetSystemStats)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetSystemStats)
}

::google::protobuf::uint8* CGCMsgGetSystemStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetSystemStats)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetSystemStats)
  return target;
}

int CGCMsgGetSystemStats::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetSystemStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgGetSystemStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetSystemStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgGetSystemStats::MergeFrom(const CGCMsgGetSystemStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgGetSystemStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetSystemStats::CopyFrom(const CGCMsgGetSystemStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetSystemStats::IsInitialized() const {

  return true;
}

void CGCMsgGetSystemStats::Swap(CGCMsgGetSystemStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetSystemStats::InternalSwap(CGCMsgGetSystemStats* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetSystemStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgGetSystemStats_descriptor_;
  metadata.reflection = CGCMsgGetSystemStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgGetSystemStats

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCMsgGetSystemStatsResponse::kGcAppIdFieldNumber;
const int CGCMsgGetSystemStatsResponse::kStatsKvFieldNumber;
const int CGCMsgGetSystemStatsResponse::kActiveJobsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kYieldingJobsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kUserSessionsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kGameServerSessionsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSocachesFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSocachesToUnloadFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSocachesLoadingFieldNumber;
const int CGCMsgGetSystemStatsResponse::kWritebackQueueFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSteamidLocksFieldNumber;
const int CGCMsgGetSystemStatsResponse::kLogonQueueFieldNumber;
const int CGCMsgGetSystemStatsResponse::kLogonJobsFieldNumber;
#endif  // !_MSC_VER

CGCMsgGetSystemStatsResponse::CGCMsgGetSystemStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetSystemStatsResponse)
}

void CGCMsgGetSystemStatsResponse::InitAsDefaultInstance() {
}

CGCMsgGetSystemStatsResponse::CGCMsgGetSystemStatsResponse(const CGCMsgGetSystemStatsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetSystemStatsResponse)
}

void CGCMsgGetSystemStatsResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gc_app_id_ = 0u;
  stats_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_jobs_ = 0u;
  yielding_jobs_ = 0u;
  user_sessions_ = 0u;
  game_server_sessions_ = 0u;
  socaches_ = 0u;
  socaches_to_unload_ = 0u;
  socaches_loading_ = 0u;
  writeback_queue_ = 0u;
  steamid_locks_ = 0u;
  logon_queue_ = 0u;
  logon_jobs_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCMsgGetSystemStatsResponse::~CGCMsgGetSystemStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgGetSystemStatsResponse)
  SharedDtor();
}

void CGCMsgGetSystemStatsResponse::SharedDtor() {
  stats_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCMsgGetSystemStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetSystemStatsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCMsgGetSystemStatsResponse_descriptor_;
}

const CGCMsgGetSystemStatsResponse& CGCMsgGetSystemStatsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCMsgGetSystemStatsResponse* CGCMsgGetSystemStatsResponse::default_instance_ = NULL;

CGCMsgGetSystemStatsResponse* CGCMsgGetSystemStatsResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetSystemStatsResponse* n = new CGCMsgGetSystemStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetSystemStatsResponse::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCMsgGetSystemStatsResponse*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(gc_app_id_, socaches_to_unload_);
    if (has_stats_kv()) {
      stats_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ZR_(socaches_loading_, logon_jobs_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCMsgGetSystemStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetSystemStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gc_app_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_app_id_)));
          set_has_gc_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stats_kv;
        break;
      }

      // optional bytes stats_kv = 2;
      case 2: {
        if (tag == 18) {
         parse_stats_kv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stats_kv()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_active_jobs;
        break;
      }

      // optional uint32 active_jobs = 3;
      case 3: {
        if (tag == 24) {
         parse_active_jobs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_jobs_)));
          set_has_active_jobs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_yielding_jobs;
        break;
      }

      // optional uint32 yielding_jobs = 4;
      case 4: {
        if (tag == 32) {
         parse_yielding_jobs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &yielding_jobs_)));
          set_has_yielding_jobs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_user_sessions;
        break;
      }

      // optional uint32 user_sessions = 5;
      case 5: {
        if (tag == 40) {
         parse_user_sessions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_sessions_)));
          set_has_user_sessions();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_game_server_sessions;
        break;
      }

      // optional uint32 game_server_sessions = 6;
      case 6: {
        if (tag == 48) {
         parse_game_server_sessions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_sessions_)));
          set_has_game_server_sessions();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_socaches;
        break;
      }

      // optional uint32 socaches = 7;
      case 7: {
        if (tag == 56) {
         parse_socaches:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socaches_)));
          set_has_socaches();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_socaches_to_unload;
        break;
      }

      // optional uint32 socaches_to_unload = 8;
      case 8: {
        if (tag == 64) {
         parse_socaches_to_unload:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socaches_to_unload_)));
          set_has_socaches_to_unload();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_socaches_loading;
        break;
      }

      // optional uint32 socaches_loading = 9;
      case 9: {
        if (tag == 72) {
         parse_socaches_loading:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socaches_loading_)));
          set_has_socaches_loading();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_writeback_queue;
        break;
      }

      // optional uint32 writeback_queue = 10;
      case 10: {
        if (tag == 80) {
         parse_writeback_queue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &writeback_queue_)));
          set_has_writeback_queue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_steamid_locks;
        break;
      }

      // optional uint32 steamid_locks = 11;
      case 11: {
        if (tag == 88) {
         parse_steamid_locks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steamid_locks_)));
          set_has_steamid_locks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_logon_queue;
        break;
      }

      // optional uint32 logon_queue = 12;
      case 12: {
        if (tag == 96) {
         parse_logon_queue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logon_queue_)));
          set_has_logon_queue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_logon_jobs;
        break;
      }

      // optional uint32 logon_jobs = 13;
      case 13: {
        if (tag == 104) {
         parse_logon_jobs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logon_jobs_)));
          set_has_logon_jobs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetSystemStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetSystemStatsResponse)
  return false;
#undef DO_
}

void CGCMsgGetSystemStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetSystemStatsResponse)
  // optional uint32 gc_app_id = 1;
  if (has_gc_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gc_app_id(), output);
  }

  // optional bytes stats_kv = 2;
  if (has_stats_kv()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->stats_kv(), output);
  }

  // optional uint32 active_jobs = 3;
  if (has_active_jobs()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->active_jobs(), output);
  }

  // optional uint32 yielding_jobs = 4;
  if (has_yielding_jobs()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->yielding_jobs(), output);
  }

  // optional uint32 user_sessions = 5;
  if (has_user_sessions()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->user_sessions(), output);
  }

  // optional uint32 game_server_sessions = 6;
  if (has_game_server_sessions()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->game_server_sessions(), output);
  }

  // optional uint32 socaches = 7;
  if (has_socaches()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->socaches(), output);
  }

  // optional uint32 socaches_to_unload = 8;
  if (has_socaches_to_unload()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->socaches_to_unload(), output);
  }

  // optional uint32 socaches_loading = 9;
  if (has_socaches_loading()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->socaches_loading(), output);
  }

  // optional uint32 writeback_queue = 10;
  if (has_writeback_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->writeback_queue(), output);
  }

  // optional uint32 steamid_locks = 11;
  if (has_steamid_locks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->steamid_locks(), output);
  }

  // optional uint32 logon_queue = 12;
  if (has_logon_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->logon_queue(), output);
  }

  // optional uint32 logon_jobs = 13;
  if (has_logon_jobs()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->logon_jobs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetSystemStatsResponse)
}

::google::protobuf::uint8* CGCMsgGetSystemStatsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetSystemStatsResponse)
  // optional uint32 gc_app_id = 1;
  if (has_gc_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gc_app_id(), target);
  }

  // optional bytes stats_kv = 2;
  if (has_stats_kv()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->stats_kv(), target);
  }

  // optional uint32 active_jobs = 3;
  if (has_active_jobs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->active_jobs(), target);
  }

  // optional uint32 yielding_jobs = 4;
  if (has_yielding_jobs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->yielding_jobs(), target);
  }

  // optional uint32 user_sessions = 5;
  if (has_user_sessions()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->user_sessions(), target);
  }

  // optional uint32 game_server_sessions = 6;
  if (has_game_server_sessions()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->game_server_sessions(), target);
  }

  // optional uint32 socaches = 7;
  if (has_socaches()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->socaches(), target);
  }

  // optional uint32 socaches_to_unload = 8;
  if (has_socaches_to_unload()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->socaches_to_unload(), target);
  }

  // optional uint32 socaches_loading = 9;
  if (has_socaches_loading()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->socaches_loading(), target);
  }

  // optional uint32 writeback_queue = 10;
  if (has_writeback_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->writeback_queue(), target);
  }

  // optional uint32 steamid_locks = 11;
  if (has_steamid_locks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->steamid_locks(), target);
  }

  // optional uint32 logon_queue = 12;
  if (has_logon_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->logon_queue(), target);
  }

  // optional uint32 logon_jobs = 13;
  if (has_logon_jobs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->logon_jobs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetSystemStatsResponse)
  return target;
}

int CGCMsgGetSystemStatsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 gc_app_id = 1;
    if (has_gc_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_app_id());
    }

    // optional bytes stats_kv = 2;
    if (has_stats_kv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->stats_kv());
    }

    // optional uint32 active_jobs = 3;
    if (has_active_jobs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_jobs());
    }

    // optional uint32 yielding_jobs = 4;
    if (has_yielding_jobs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->yielding_jobs());
    }

    // optional uint32 user_sessions = 5;
    if (has_user_sessions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_sessions());
    }

    // optional uint32 game_server_sessions = 6;
    if (has_game_server_sessions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_sessions());
    }

    // optional uint32 socaches = 7;
    if (has_socaches()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->socaches());
    }

    // optional uint32 socaches_to_unload = 8;
    if (has_socaches_to_unload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->socaches_to_unload());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 socaches_loading = 9;
    if (has_socaches_loading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->socaches_loading());
    }

    // optional uint32 writeback_queue = 10;
    if (has_writeback_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->writeback_queue());
    }

    // optional uint32 steamid_locks = 11;
    if (has_steamid_locks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steamid_locks());
    }

    // optional uint32 logon_queue = 12;
    if (has_logon_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logon_queue());
    }

    // optional uint32 logon_jobs = 13;
    if (has_logon_jobs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logon_jobs());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetSystemStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCMsgGetSystemStatsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetSystemStatsResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCMsgGetSystemStatsResponse::MergeFrom(const CGCMsgGetSystemStatsResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gc_app_id()) {
      set_gc_app_id(from.gc_app_id());
    }
    if (from.has_stats_kv()) {
      set_has_stats_kv();
      stats_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stats_kv_);
    }
    if (from.has_active_jobs()) {
      set_active_jobs(from.active_jobs());
    }
    if (from.has_yielding_jobs()) {
      set_yielding_jobs(from.yielding_jobs());
    }
    if (from.has_user_sessions()) {
      set_user_sessions(from.user_sessions());
    }
    if (from.has_game_server_sessions()) {
      set_game_server_sessions(from.game_server_sessions());
    }
    if (from.has_socaches()) {
      set_socaches(from.socaches());
    }
    if (from.has_socaches_to_unload()) {
      set_socaches_to_unload(from.socaches_to_unload());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_socaches_loading()) {
      set_socaches_loading(from.socaches_loading());
    }
    if (from.has_writeback_queue()) {
      set_writeback_queue(from.writeback_queue());
    }
    if (from.has_steamid_locks()) {
      set_steamid_locks(from.steamid_locks());
    }
    if (from.has_logon_queue()) {
      set_logon_queue(from.logon_queue());
    }
    if (from.has_logon_jobs()) {
      set_logon_jobs(from.logon_jobs());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCMsgGetSystemStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetSystemStatsResponse::CopyFrom(const CGCMsgGetSystemStatsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetSystemStatsResponse::IsInitialized() const {

  return true;
}

void CGCMsgGetSystemStatsResponse::Swap(CGCMsgGetSystemStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetSystemStatsResponse::InternalSwap(CGCMsgGetSystemStatsResponse* other) {
  std::swap(gc_app_id_, other->gc_app_id_);
  stats_kv_.Swap(&other->stats_kv_);
  std::swap(active_jobs_, other->active_jobs_);
  std::swap(yielding_jobs_, other->yielding_jobs_);
  std::swap(user_sessions_, other->user_sessions_);
  std::swap(game_server_sessions_, other->game_server_sessions_);
  std::swap(socaches_, other->socaches_);
  std::swap(socaches_to_unload_, other->socaches_to_unload_);
  std::swap(socaches_loading_, other->socaches_loading_);
  std::swap(writeback_queue_, other->writeback_queue_);
  std::swap(steamid_locks_, other->steamid_locks_);
  std::swap(logon_queue_, other->logon_queue_);
  std::swap(logon_jobs_, other->logon_jobs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetSystemStatsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCMsgGetSystemStatsResponse_descriptor_;
  metadata.reflection = CGCMsgGetSystemStatsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCMsgGetSystemStatsResponse

// optional uint32 gc_app_id = 1;
bool CGCMsgGetSystemStatsResponse::has_gc_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_gc_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCMsgGetSystemStatsResponse::clear_has_gc_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCMsgGetSystemStatsResponse::clear_gc_app_id() {
  gc_app_id_ = 0u;
  clear_has_gc_app_id();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::gc_app_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.gc_app_id)
  return gc_app_id_;
}
 void CGCMsgGetSystemStatsResponse::set_gc_app_id(::google::protobuf::uint32 value) {
  set_has_gc_app_id();
  gc_app_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.gc_app_id)
}

// optional bytes stats_kv = 2;
bool CGCMsgGetSystemStatsResponse::has_stats_kv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_stats_kv() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCMsgGetSystemStatsResponse::clear_has_stats_kv() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCMsgGetSystemStatsResponse::clear_stats_kv() {
  stats_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stats_kv();
}
 const ::std::string& CGCMsgGetSystemStatsResponse::stats_kv() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.stats_kv)
  return stats_kv_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgGetSystemStatsResponse::set_stats_kv(const ::std::string& value) {
  set_has_stats_kv();
  stats_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.stats_kv)
}
 void CGCMsgGetSystemStatsResponse::set_stats_kv(const char* value) {
  set_has_stats_kv();
  stats_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgGetSystemStatsResponse.stats_kv)
}
 void CGCMsgGetSystemStatsResponse::set_stats_kv(const void* value, size_t size) {
  set_has_stats_kv();
  stats_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgGetSystemStatsResponse.stats_kv)
}
 ::std::string* CGCMsgGetSystemStatsResponse::mutable_stats_kv() {
  set_has_stats_kv();
  // @@protoc_insertion_point(field_mutable:CGCMsgGetSystemStatsResponse.stats_kv)
  return stats_kv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCMsgGetSystemStatsResponse::release_stats_kv() {
  clear_has_stats_kv();
  return stats_kv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCMsgGetSystemStatsResponse::set_allocated_stats_kv(::std::string* stats_kv) {
  if (stats_kv != NULL) {
    set_has_stats_kv();
  } else {
    clear_has_stats_kv();
  }
  stats_kv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stats_kv);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgGetSystemStatsResponse.stats_kv)
}

// optional uint32 active_jobs = 3;
bool CGCMsgGetSystemStatsResponse::has_active_jobs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_active_jobs() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCMsgGetSystemStatsResponse::clear_has_active_jobs() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCMsgGetSystemStatsResponse::clear_active_jobs() {
  active_jobs_ = 0u;
  clear_has_active_jobs();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::active_jobs() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.active_jobs)
  return active_jobs_;
}
 void CGCMsgGetSystemStatsResponse::set_active_jobs(::google::protobuf::uint32 value) {
  set_has_active_jobs();
  active_jobs_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.active_jobs)
}

// optional uint32 yielding_jobs = 4;
bool CGCMsgGetSystemStatsResponse::has_yielding_jobs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_yielding_jobs() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCMsgGetSystemStatsResponse::clear_has_yielding_jobs() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCMsgGetSystemStatsResponse::clear_yielding_jobs() {
  yielding_jobs_ = 0u;
  clear_has_yielding_jobs();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::yielding_jobs() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.yielding_jobs)
  return yielding_jobs_;
}
 void CGCMsgGetSystemStatsResponse::set_yielding_jobs(::google::protobuf::uint32 value) {
  set_has_yielding_jobs();
  yielding_jobs_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.yielding_jobs)
}

// optional uint32 user_sessions = 5;
bool CGCMsgGetSystemStatsResponse::has_user_sessions() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_user_sessions() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCMsgGetSystemStatsResponse::clear_has_user_sessions() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCMsgGetSystemStatsResponse::clear_user_sessions() {
  user_sessions_ = 0u;
  clear_has_user_sessions();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::user_sessions() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.user_sessions)
  return user_sessions_;
}
 void CGCMsgGetSystemStatsResponse::set_user_sessions(::google::protobuf::uint32 value) {
  set_has_user_sessions();
  user_sessions_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.user_sessions)
}

// optional uint32 game_server_sessions = 6;
bool CGCMsgGetSystemStatsResponse::has_game_server_sessions() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_game_server_sessions() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCMsgGetSystemStatsResponse::clear_has_game_server_sessions() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCMsgGetSystemStatsResponse::clear_game_server_sessions() {
  game_server_sessions_ = 0u;
  clear_has_game_server_sessions();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::game_server_sessions() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.game_server_sessions)
  return game_server_sessions_;
}
 void CGCMsgGetSystemStatsResponse::set_game_server_sessions(::google::protobuf::uint32 value) {
  set_has_game_server_sessions();
  game_server_sessions_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.game_server_sessions)
}

// optional uint32 socaches = 7;
bool CGCMsgGetSystemStatsResponse::has_socaches() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_socaches() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCMsgGetSystemStatsResponse::clear_has_socaches() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCMsgGetSystemStatsResponse::clear_socaches() {
  socaches_ = 0u;
  clear_has_socaches();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.socaches)
  return socaches_;
}
 void CGCMsgGetSystemStatsResponse::set_socaches(::google::protobuf::uint32 value) {
  set_has_socaches();
  socaches_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.socaches)
}

// optional uint32 socaches_to_unload = 8;
bool CGCMsgGetSystemStatsResponse::has_socaches_to_unload() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_socaches_to_unload() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCMsgGetSystemStatsResponse::clear_has_socaches_to_unload() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCMsgGetSystemStatsResponse::clear_socaches_to_unload() {
  socaches_to_unload_ = 0u;
  clear_has_socaches_to_unload();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches_to_unload() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.socaches_to_unload)
  return socaches_to_unload_;
}
 void CGCMsgGetSystemStatsResponse::set_socaches_to_unload(::google::protobuf::uint32 value) {
  set_has_socaches_to_unload();
  socaches_to_unload_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.socaches_to_unload)
}

// optional uint32 socaches_loading = 9;
bool CGCMsgGetSystemStatsResponse::has_socaches_loading() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_socaches_loading() {
  _has_bits_[0] |= 0x00000100u;
}
void CGCMsgGetSystemStatsResponse::clear_has_socaches_loading() {
  _has_bits_[0] &= ~0x00000100u;
}
void CGCMsgGetSystemStatsResponse::clear_socaches_loading() {
  socaches_loading_ = 0u;
  clear_has_socaches_loading();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches_loading() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.socaches_loading)
  return socaches_loading_;
}
 void CGCMsgGetSystemStatsResponse::set_socaches_loading(::google::protobuf::uint32 value) {
  set_has_socaches_loading();
  socaches_loading_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.socaches_loading)
}

// optional uint32 writeback_queue = 10;
bool CGCMsgGetSystemStatsResponse::has_writeback_queue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_writeback_queue() {
  _has_bits_[0] |= 0x00000200u;
}
void CGCMsgGetSystemStatsResponse::clear_has_writeback_queue() {
  _has_bits_[0] &= ~0x00000200u;
}
void CGCMsgGetSystemStatsResponse::clear_writeback_queue() {
  writeback_queue_ = 0u;
  clear_has_writeback_queue();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::writeback_queue() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.writeback_queue)
  return writeback_queue_;
}
 void CGCMsgGetSystemStatsResponse::set_writeback_queue(::google::protobuf::uint32 value) {
  set_has_writeback_queue();
  writeback_queue_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.writeback_queue)
}

// optional uint32 steamid_locks = 11;
bool CGCMsgGetSystemStatsResponse::has_steamid_locks() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_steamid_locks() {
  _has_bits_[0] |= 0x00000400u;
}
void CGCMsgGetSystemStatsResponse::clear_has_steamid_locks() {
  _has_bits_[0] &= ~0x00000400u;
}
void CGCMsgGetSystemStatsResponse::clear_steamid_locks() {
  steamid_locks_ = 0u;
  clear_has_steamid_locks();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::steamid_locks() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.steamid_locks)
  return steamid_locks_;
}
 void CGCMsgGetSystemStatsResponse::set_steamid_locks(::google::protobuf::uint32 value) {
  set_has_steamid_locks();
  steamid_locks_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.steamid_locks)
}

// optional uint32 logon_queue = 12;
bool CGCMsgGetSystemStatsResponse::has_logon_queue() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_logon_queue() {
  _has_bits_[0] |= 0x00000800u;
}
void CGCMsgGetSystemStatsResponse::clear_has_logon_queue() {
  _has_bits_[0] &= ~0x00000800u;
}
void CGCMsgGetSystemStatsResponse::clear_logon_queue() {
  logon_queue_ = 0u;
  clear_has_logon_queue();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::logon_queue() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.logon_queue)
  return logon_queue_;
}
 void CGCMsgGetSystemStatsResponse::set_logon_queue(::google::protobuf::uint32 value) {
  set_has_logon_queue();
  logon_queue_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.logon_queue)
}

// optional uint32 logon_jobs = 13;
bool CGCMsgGetSystemStatsResponse::has_logon_jobs() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CGCMsgGetSystemStatsResponse::set_has_logon_jobs() {
  _has_bits_[0] |= 0x00001000u;
}
void CGCMsgGetSystemStatsResponse::clear_has_logon_jobs() {
  _has_bits_[0] &= ~0x00001000u;
}
void CGCMsgGetSystemStatsResponse::clear_logon_jobs() {
  logon_jobs_ = 0u;
  clear_has_logon_jobs();
}
 ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::logon_jobs() const {
  // @@protoc_insertion_point(field_get:CGCMsgGetSystemStatsResponse.logon_jobs)
  return logon_jobs_;
}
 void CGCMsgGetSystemStatsResponse::set_logon_jobs(::google::protobuf::uint32 value) {
  set_has_logon_jobs();
  logon_jobs_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGetSystemStatsResponse.logon_jobs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMSendEmail_ReplacementToken::kTokenNameFieldNumber;
const int CMsgAMSendEmail_ReplacementToken::kTokenValueFieldNumber;
#endif  // !_MSC_VER

CMsgAMSendEmail_ReplacementToken::CMsgAMSendEmail_ReplacementToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmail.ReplacementToken)
}

void CMsgAMSendEmail_ReplacementToken::InitAsDefaultInstance() {
}

CMsgAMSendEmail_ReplacementToken::CMsgAMSendEmail_ReplacementToken(const CMsgAMSendEmail_ReplacementToken& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail.ReplacementToken)
}

void CMsgAMSendEmail_ReplacementToken::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  token_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMSendEmail_ReplacementToken::~CMsgAMSendEmail_ReplacementToken() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail.ReplacementToken)
  SharedDtor();
}

void CMsgAMSendEmail_ReplacementToken::SharedDtor() {
  token_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgAMSendEmail_ReplacementToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmail_ReplacementToken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMSendEmail_ReplacementToken_descriptor_;
}

const CMsgAMSendEmail_ReplacementToken& CMsgAMSendEmail_ReplacementToken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail_ReplacementToken::default_instance_ = NULL;

CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail_ReplacementToken::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmail_ReplacementToken* n = new CMsgAMSendEmail_ReplacementToken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmail_ReplacementToken::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_token_name()) {
      token_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_token_value()) {
      token_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMSendEmail_ReplacementToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmail.ReplacementToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string token_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token_name().data(), this->token_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMSendEmail.ReplacementToken.token_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token_value;
        break;
      }

      // optional string token_value = 2;
      case 2: {
        if (tag == 18) {
         parse_token_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token_value().data(), this->token_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMSendEmail.ReplacementToken.token_value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmail.ReplacementToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmail.ReplacementToken)
  return false;
#undef DO_
}

void CMsgAMSendEmail_ReplacementToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmail.ReplacementToken)
  // optional string token_name = 1;
  if (has_token_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), this->token_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token_name(), output);
  }

  // optional string token_value = 2;
  if (has_token_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_value().data(), this->token_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmail.ReplacementToken)
}

::google::protobuf::uint8* CMsgAMSendEmail_ReplacementToken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail.ReplacementToken)
  // optional string token_name = 1;
  if (has_token_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), this->token_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token_name(), target);
  }

  // optional string token_value = 2;
  if (has_token_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_value().data(), this->token_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail.ReplacementToken)
  return target;
}

int CMsgAMSendEmail_ReplacementToken::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string token_name = 1;
    if (has_token_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token_name());
    }

    // optional string token_value = 2;
    if (has_token_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token_value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmail_ReplacementToken::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMSendEmail_ReplacementToken* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmail_ReplacementToken>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMSendEmail_ReplacementToken::MergeFrom(const CMsgAMSendEmail_ReplacementToken& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_token_name()) {
      set_has_token_name();
      token_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_name_);
    }
    if (from.has_token_value()) {
      set_has_token_value();
      token_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMSendEmail_ReplacementToken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmail_ReplacementToken::CopyFrom(const CMsgAMSendEmail_ReplacementToken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmail_ReplacementToken::IsInitialized() const {

  return true;
}

void CMsgAMSendEmail_ReplacementToken::Swap(CMsgAMSendEmail_ReplacementToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmail_ReplacementToken::InternalSwap(CMsgAMSendEmail_ReplacementToken* other) {
  token_name_.Swap(&other->token_name_);
  token_value_.Swap(&other->token_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmail_ReplacementToken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMSendEmail_ReplacementToken_descriptor_;
  metadata.reflection = CMsgAMSendEmail_ReplacementToken_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgAMSendEmail_PersonaNameReplacementToken::kSteamidFieldNumber;
const int CMsgAMSendEmail_PersonaNameReplacementToken::kTokenNameFieldNumber;
#endif  // !_MSC_VER

CMsgAMSendEmail_PersonaNameReplacementToken::CMsgAMSendEmail_PersonaNameReplacementToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmail.PersonaNameReplacementToken)
}

void CMsgAMSendEmail_PersonaNameReplacementToken::InitAsDefaultInstance() {
}

CMsgAMSendEmail_PersonaNameReplacementToken::CMsgAMSendEmail_PersonaNameReplacementToken(const CMsgAMSendEmail_PersonaNameReplacementToken& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail.PersonaNameReplacementToken)
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  token_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMSendEmail_PersonaNameReplacementToken::~CMsgAMSendEmail_PersonaNameReplacementToken() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail.PersonaNameReplacementToken)
  SharedDtor();
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SharedDtor() {
  token_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmail_PersonaNameReplacementToken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_;
}

const CMsgAMSendEmail_PersonaNameReplacementToken& CMsgAMSendEmail_PersonaNameReplacementToken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail_PersonaNameReplacementToken::default_instance_ = NULL;

CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail_PersonaNameReplacementToken::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmail_PersonaNameReplacementToken* n = new CMsgAMSendEmail_PersonaNameReplacementToken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmail_PersonaNameReplacementToken::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    steamid_ = GOOGLE_ULONGLONG(0);
    if (has_token_name()) {
      token_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMSendEmail_PersonaNameReplacementToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token_name;
        break;
      }

      // optional string token_name = 2;
      case 2: {
        if (tag == 18) {
         parse_token_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token_name().data(), this->token_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMSendEmail.PersonaNameReplacementToken.token_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmail.PersonaNameReplacementToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmail.PersonaNameReplacementToken)
  return false;
#undef DO_
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional string token_name = 2;
  if (has_token_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), this->token_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.PersonaNameReplacementToken.token_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmail.PersonaNameReplacementToken)
}

::google::protobuf::uint8* CMsgAMSendEmail_PersonaNameReplacementToken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional string token_name = 2;
  if (has_token_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), this->token_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.PersonaNameReplacementToken.token_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail.PersonaNameReplacementToken)
  return target;
}

int CMsgAMSendEmail_PersonaNameReplacementToken::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional string token_name = 2;
    if (has_token_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token_name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmail_PersonaNameReplacementToken::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMSendEmail_PersonaNameReplacementToken* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmail_PersonaNameReplacementToken>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMSendEmail_PersonaNameReplacementToken::MergeFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_token_name()) {
      set_has_token_name();
      token_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMSendEmail_PersonaNameReplacementToken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmail_PersonaNameReplacementToken::CopyFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmail_PersonaNameReplacementToken::IsInitialized() const {

  return true;
}

void CMsgAMSendEmail_PersonaNameReplacementToken::Swap(CMsgAMSendEmail_PersonaNameReplacementToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmail_PersonaNameReplacementToken::InternalSwap(CMsgAMSendEmail_PersonaNameReplacementToken* other) {
  std::swap(steamid_, other->steamid_);
  token_name_.Swap(&other->token_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmail_PersonaNameReplacementToken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_;
  metadata.reflection = CMsgAMSendEmail_PersonaNameReplacementToken_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgAMSendEmail::kSteamidFieldNumber;
const int CMsgAMSendEmail::kEmailMsgTypeFieldNumber;
const int CMsgAMSendEmail::kEmailFormatFieldNumber;
const int CMsgAMSendEmail::kPersonaNameTokensFieldNumber;
const int CMsgAMSendEmail::kSourceGcFieldNumber;
const int CMsgAMSendEmail::kTokensFieldNumber;
#endif  // !_MSC_VER

CMsgAMSendEmail::CMsgAMSendEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmail)
}

void CMsgAMSendEmail::InitAsDefaultInstance() {
}

CMsgAMSendEmail::CMsgAMSendEmail(const CMsgAMSendEmail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail)
}

void CMsgAMSendEmail::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  email_msg_type_ = 0u;
  email_format_ = 0u;
  source_gc_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMSendEmail::~CMsgAMSendEmail() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail)
  SharedDtor();
}

void CMsgAMSendEmail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMSendEmail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMSendEmail_descriptor_;
}

const CMsgAMSendEmail& CMsgAMSendEmail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMSendEmail* CMsgAMSendEmail::default_instance_ = NULL;

CMsgAMSendEmail* CMsgAMSendEmail::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmail* n = new CMsgAMSendEmail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmail::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMSendEmail*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 23u) {
    ZR_(steamid_, email_format_);
    source_gc_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  persona_name_tokens_.Clear();
  tokens_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMSendEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_email_msg_type;
        break;
      }

      // optional uint32 email_msg_type = 2;
      case 2: {
        if (tag == 16) {
         parse_email_msg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_msg_type_)));
          set_has_email_msg_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_email_format;
        break;
      }

      // optional uint32 email_format = 3;
      case 3: {
        if (tag == 24) {
         parse_email_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_format_)));
          set_has_email_format();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_persona_name_tokens;
        break;
      }

      // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
      case 5: {
        if (tag == 42) {
         parse_persona_name_tokens:
          DO_(input->IncrementRecursionDepth());
         parse_loop_persona_name_tokens:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_persona_name_tokens()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_persona_name_tokens;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(48)) goto parse_source_gc;
        break;
      }

      // optional uint32 source_gc = 6;
      case 6: {
        if (tag == 48) {
         parse_source_gc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_gc_)));
          set_has_source_gc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tokens;
        break;
      }

      // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
      case 7: {
        if (tag == 58) {
         parse_tokens:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tokens:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tokens()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_tokens;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmail)
  return false;
#undef DO_
}

void CMsgAMSendEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmail)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 email_msg_type = 2;
  if (has_email_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->email_msg_type(), output);
  }

  // optional uint32 email_format = 3;
  if (has_email_format()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->email_format(), output);
  }

  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  for (unsigned int i = 0, n = this->persona_name_tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->persona_name_tokens(i), output);
  }

  // optional uint32 source_gc = 6;
  if (has_source_gc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->source_gc(), output);
  }

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  for (unsigned int i = 0, n = this->tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->tokens(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmail)
}

::google::protobuf::uint8* CMsgAMSendEmail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 email_msg_type = 2;
  if (has_email_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->email_msg_type(), target);
  }

  // optional uint32 email_format = 3;
  if (has_email_format()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->email_format(), target);
  }

  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  for (unsigned int i = 0, n = this->persona_name_tokens_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->persona_name_tokens(i), target);
  }

  // optional uint32 source_gc = 6;
  if (has_source_gc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->source_gc(), target);
  }

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  for (unsigned int i = 0, n = this->tokens_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->tokens(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail)
  return target;
}

int CMsgAMSendEmail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 23u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 email_msg_type = 2;
    if (has_email_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->email_msg_type());
    }

    // optional uint32 email_format = 3;
    if (has_email_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->email_format());
    }

    // optional uint32 source_gc = 6;
    if (has_source_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_gc());
    }

  }
  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  total_size += 1 * this->persona_name_tokens_size();
  for (int i = 0; i < this->persona_name_tokens_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->persona_name_tokens(i));
  }

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  total_size += 1 * this->tokens_size();
  for (int i = 0; i < this->tokens_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tokens(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmail::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMSendEmail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmail>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMSendEmail::MergeFrom(const CMsgAMSendEmail& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  persona_name_tokens_.MergeFrom(from.persona_name_tokens_);
  tokens_.MergeFrom(from.tokens_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_email_msg_type()) {
      set_email_msg_type(from.email_msg_type());
    }
    if (from.has_email_format()) {
      set_email_format(from.email_format());
    }
    if (from.has_source_gc()) {
      set_source_gc(from.source_gc());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMSendEmail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmail::CopyFrom(const CMsgAMSendEmail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmail::IsInitialized() const {

  return true;
}

void CMsgAMSendEmail::Swap(CMsgAMSendEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmail::InternalSwap(CMsgAMSendEmail* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(email_msg_type_, other->email_msg_type_);
  std::swap(email_format_, other->email_format_);
  persona_name_tokens_.UnsafeArenaSwap(&other->persona_name_tokens_);
  std::swap(source_gc_, other->source_gc_);
  tokens_.UnsafeArenaSwap(&other->tokens_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMSendEmail_descriptor_;
  metadata.reflection = CMsgAMSendEmail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMSendEmail_ReplacementToken

// optional string token_name = 1;
bool CMsgAMSendEmail_ReplacementToken::has_token_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMSendEmail_ReplacementToken::set_has_token_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMSendEmail_ReplacementToken::clear_has_token_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMSendEmail_ReplacementToken::clear_token_name() {
  token_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token_name();
}
 const ::std::string& CMsgAMSendEmail_ReplacementToken::token_name() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.ReplacementToken.token_name)
  return token_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMSendEmail_ReplacementToken::set_token_name(const ::std::string& value) {
  set_has_token_name();
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.ReplacementToken.token_name)
}
 void CMsgAMSendEmail_ReplacementToken::set_token_name(const char* value) {
  set_has_token_name();
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgAMSendEmail.ReplacementToken.token_name)
}
 void CMsgAMSendEmail_ReplacementToken::set_token_name(const char* value, size_t size) {
  set_has_token_name();
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgAMSendEmail.ReplacementToken.token_name)
}
 ::std::string* CMsgAMSendEmail_ReplacementToken::mutable_token_name() {
  set_has_token_name();
  // @@protoc_insertion_point(field_mutable:CMsgAMSendEmail.ReplacementToken.token_name)
  return token_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgAMSendEmail_ReplacementToken::release_token_name() {
  clear_has_token_name();
  return token_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMSendEmail_ReplacementToken::set_allocated_token_name(::std::string* token_name) {
  if (token_name != NULL) {
    set_has_token_name();
  } else {
    clear_has_token_name();
  }
  token_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgAMSendEmail.ReplacementToken.token_name)
}

// optional string token_value = 2;
bool CMsgAMSendEmail_ReplacementToken::has_token_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMSendEmail_ReplacementToken::set_has_token_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMSendEmail_ReplacementToken::clear_has_token_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMSendEmail_ReplacementToken::clear_token_value() {
  token_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token_value();
}
 const ::std::string& CMsgAMSendEmail_ReplacementToken::token_value() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.ReplacementToken.token_value)
  return token_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMSendEmail_ReplacementToken::set_token_value(const ::std::string& value) {
  set_has_token_value();
  token_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.ReplacementToken.token_value)
}
 void CMsgAMSendEmail_ReplacementToken::set_token_value(const char* value) {
  set_has_token_value();
  token_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgAMSendEmail.ReplacementToken.token_value)
}
 void CMsgAMSendEmail_ReplacementToken::set_token_value(const char* value, size_t size) {
  set_has_token_value();
  token_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgAMSendEmail.ReplacementToken.token_value)
}
 ::std::string* CMsgAMSendEmail_ReplacementToken::mutable_token_value() {
  set_has_token_value();
  // @@protoc_insertion_point(field_mutable:CMsgAMSendEmail.ReplacementToken.token_value)
  return token_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgAMSendEmail_ReplacementToken::release_token_value() {
  clear_has_token_value();
  return token_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMSendEmail_ReplacementToken::set_allocated_token_value(::std::string* token_value) {
  if (token_value != NULL) {
    set_has_token_value();
  } else {
    clear_has_token_value();
  }
  token_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_value);
  // @@protoc_insertion_point(field_set_allocated:CMsgAMSendEmail.ReplacementToken.token_value)
}

// -------------------------------------------------------------------

// CMsgAMSendEmail_PersonaNameReplacementToken

// optional fixed64 steamid = 1;
bool CMsgAMSendEmail_PersonaNameReplacementToken::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMSendEmail_PersonaNameReplacementToken::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMSendEmail_PersonaNameReplacementToken::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMSendEmail_PersonaNameReplacementToken::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgAMSendEmail_PersonaNameReplacementToken::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.PersonaNameReplacementToken.steamid)
  return steamid_;
}
 void CMsgAMSendEmail_PersonaNameReplacementToken::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.PersonaNameReplacementToken.steamid)
}

// optional string token_name = 2;
bool CMsgAMSendEmail_PersonaNameReplacementToken::has_token_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMSendEmail_PersonaNameReplacementToken::set_has_token_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMSendEmail_PersonaNameReplacementToken::clear_has_token_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMSendEmail_PersonaNameReplacementToken::clear_token_name() {
  token_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token_name();
}
 const ::std::string& CMsgAMSendEmail_PersonaNameReplacementToken::token_name() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
  return token_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const ::std::string& value) {
  set_has_token_name();
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}
 void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const char* value) {
  set_has_token_name();
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}
 void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const char* value, size_t size) {
  set_has_token_name();
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}
 ::std::string* CMsgAMSendEmail_PersonaNameReplacementToken::mutable_token_name() {
  set_has_token_name();
  // @@protoc_insertion_point(field_mutable:CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
  return token_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgAMSendEmail_PersonaNameReplacementToken::release_token_name() {
  clear_has_token_name();
  return token_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgAMSendEmail_PersonaNameReplacementToken::set_allocated_token_name(::std::string* token_name) {
  if (token_name != NULL) {
    set_has_token_name();
  } else {
    clear_has_token_name();
  }
  token_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}

// -------------------------------------------------------------------

// CMsgAMSendEmail

// optional fixed64 steamid = 1;
bool CMsgAMSendEmail::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMSendEmail::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMSendEmail::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMSendEmail::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgAMSendEmail::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.steamid)
  return steamid_;
}
 void CMsgAMSendEmail::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.steamid)
}

// optional uint32 email_msg_type = 2;
bool CMsgAMSendEmail::has_email_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMSendEmail::set_has_email_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMSendEmail::clear_has_email_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMSendEmail::clear_email_msg_type() {
  email_msg_type_ = 0u;
  clear_has_email_msg_type();
}
 ::google::protobuf::uint32 CMsgAMSendEmail::email_msg_type() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.email_msg_type)
  return email_msg_type_;
}
 void CMsgAMSendEmail::set_email_msg_type(::google::protobuf::uint32 value) {
  set_has_email_msg_type();
  email_msg_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.email_msg_type)
}

// optional uint32 email_format = 3;
bool CMsgAMSendEmail::has_email_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAMSendEmail::set_has_email_format() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAMSendEmail::clear_has_email_format() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAMSendEmail::clear_email_format() {
  email_format_ = 0u;
  clear_has_email_format();
}
 ::google::protobuf::uint32 CMsgAMSendEmail::email_format() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.email_format)
  return email_format_;
}
 void CMsgAMSendEmail::set_email_format(::google::protobuf::uint32 value) {
  set_has_email_format();
  email_format_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.email_format)
}

// repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
int CMsgAMSendEmail::persona_name_tokens_size() const {
  return persona_name_tokens_.size();
}
void CMsgAMSendEmail::clear_persona_name_tokens() {
  persona_name_tokens_.Clear();
}
const ::CMsgAMSendEmail_PersonaNameReplacementToken& CMsgAMSendEmail::persona_name_tokens(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_.Get(index);
}
::CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail::mutable_persona_name_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_.Mutable(index);
}
::CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail::add_persona_name_tokens() {
  // @@protoc_insertion_point(field_add:CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_PersonaNameReplacementToken >*
CMsgAMSendEmail::mutable_persona_name_tokens() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAMSendEmail.persona_name_tokens)
  return &persona_name_tokens_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_PersonaNameReplacementToken >&
CMsgAMSendEmail::persona_name_tokens() const {
  // @@protoc_insertion_point(field_list:CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_;
}

// optional uint32 source_gc = 6;
bool CMsgAMSendEmail::has_source_gc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgAMSendEmail::set_has_source_gc() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgAMSendEmail::clear_has_source_gc() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgAMSendEmail::clear_source_gc() {
  source_gc_ = 0u;
  clear_has_source_gc();
}
 ::google::protobuf::uint32 CMsgAMSendEmail::source_gc() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.source_gc)
  return source_gc_;
}
 void CMsgAMSendEmail::set_source_gc(::google::protobuf::uint32 value) {
  set_has_source_gc();
  source_gc_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMSendEmail.source_gc)
}

// repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
int CMsgAMSendEmail::tokens_size() const {
  return tokens_.size();
}
void CMsgAMSendEmail::clear_tokens() {
  tokens_.Clear();
}
const ::CMsgAMSendEmail_ReplacementToken& CMsgAMSendEmail::tokens(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmail.tokens)
  return tokens_.Get(index);
}
::CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail::mutable_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAMSendEmail.tokens)
  return tokens_.Mutable(index);
}
::CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail::add_tokens() {
  // @@protoc_insertion_point(field_add:CMsgAMSendEmail.tokens)
  return tokens_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_ReplacementToken >*
CMsgAMSendEmail::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAMSendEmail.tokens)
  return &tokens_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_ReplacementToken >&
CMsgAMSendEmail::tokens() const {
  // @@protoc_insertion_point(field_list:CMsgAMSendEmail.tokens)
  return tokens_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMSendEmailResponse::kEresultFieldNumber;
#endif  // !_MSC_VER

CMsgAMSendEmailResponse::CMsgAMSendEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmailResponse)
}

void CMsgAMSendEmailResponse::InitAsDefaultInstance() {
}

CMsgAMSendEmailResponse::CMsgAMSendEmailResponse(const CMsgAMSendEmailResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmailResponse)
}

void CMsgAMSendEmailResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMSendEmailResponse::~CMsgAMSendEmailResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmailResponse)
  SharedDtor();
}

void CMsgAMSendEmailResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMSendEmailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmailResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMSendEmailResponse_descriptor_;
}

const CMsgAMSendEmailResponse& CMsgAMSendEmailResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMSendEmailResponse* CMsgAMSendEmailResponse::default_instance_ = NULL;

CMsgAMSendEmailResponse* CMsgAMSendEmailResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmailResponse* n = new CMsgAMSendEmailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmailResponse::Clear() {
  eresult_ = 2u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMSendEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmailResponse)
  return false;
#undef DO_
}

void CMsgAMSendEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmailResponse)
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmailResponse)
}

::google::protobuf::uint8* CMsgAMSendEmailResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmailResponse)
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmailResponse)
  return target;
}

int CMsgAMSendEmailResponse::ByteSize() const {
  int total_size = 0;

  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMSendEmailResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmailResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMSendEmailResponse::MergeFrom(const CMsgAMSendEmailResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMSendEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmailResponse::CopyFrom(const CMsgAMSendEmailResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmailResponse::IsInitialized() const {

  return true;
}

void CMsgAMSendEmailResponse::Swap(CMsgAMSendEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmailResponse::InternalSwap(CMsgAMSendEmailResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmailResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMSendEmailResponse_descriptor_;
  metadata.reflection = CMsgAMSendEmailResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMSendEmailResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgAMSendEmailResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMSendEmailResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMSendEmailResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMSendEmailResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
 ::google::protobuf::uint32 CMsgAMSendEmailResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgAMSendEmailResponse.eresult)
  return eresult_;
}
 void CMsgAMSendEmailResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMSendEmailResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetEmailTemplate::kAppIdFieldNumber;
const int CMsgGCGetEmailTemplate::kEmailMsgTypeFieldNumber;
const int CMsgGCGetEmailTemplate::kEmailLangFieldNumber;
const int CMsgGCGetEmailTemplate::kEmailFormatFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetEmailTemplate::CMsgGCGetEmailTemplate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetEmailTemplate)
}

void CMsgGCGetEmailTemplate::InitAsDefaultInstance() {
}

CMsgGCGetEmailTemplate::CMsgGCGetEmailTemplate(const CMsgGCGetEmailTemplate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetEmailTemplate)
}

void CMsgGCGetEmailTemplate::SharedCtor() {
  _cached_size_ = 0;
  app_id_ = 0u;
  email_msg_type_ = 0u;
  email_lang_ = 0;
  email_format_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetEmailTemplate::~CMsgGCGetEmailTemplate() {
  // @@protoc_insertion_point(destructor:CMsgGCGetEmailTemplate)
  SharedDtor();
}

void CMsgGCGetEmailTemplate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetEmailTemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetEmailTemplate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetEmailTemplate_descriptor_;
}

const CMsgGCGetEmailTemplate& CMsgGCGetEmailTemplate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetEmailTemplate* CMsgGCGetEmailTemplate::default_instance_ = NULL;

CMsgGCGetEmailTemplate* CMsgGCGetEmailTemplate::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetEmailTemplate* n = new CMsgGCGetEmailTemplate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetEmailTemplate::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgGCGetEmailTemplate*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(app_id_, email_format_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetEmailTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetEmailTemplate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
          set_has_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_email_msg_type;
        break;
      }

      // optional uint32 email_msg_type = 2;
      case 2: {
        if (tag == 16) {
         parse_email_msg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_msg_type_)));
          set_has_email_msg_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_email_lang;
        break;
      }

      // optional int32 email_lang = 3;
      case 3: {
        if (tag == 24) {
         parse_email_lang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &email_lang_)));
          set_has_email_lang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_email_format;
        break;
      }

      // optional int32 email_format = 4;
      case 4: {
        if (tag == 32) {
         parse_email_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &email_format_)));
          set_has_email_format();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetEmailTemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetEmailTemplate)
  return false;
#undef DO_
}

void CMsgGCGetEmailTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetEmailTemplate)
  // optional uint32 app_id = 1;
  if (has_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 email_msg_type = 2;
  if (has_email_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->email_msg_type(), output);
  }

  // optional int32 email_lang = 3;
  if (has_email_lang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->email_lang(), output);
  }

  // optional int32 email_format = 4;
  if (has_email_format()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->email_format(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetEmailTemplate)
}

::google::protobuf::uint8* CMsgGCGetEmailTemplate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetEmailTemplate)
  // optional uint32 app_id = 1;
  if (has_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 email_msg_type = 2;
  if (has_email_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->email_msg_type(), target);
  }

  // optional int32 email_lang = 3;
  if (has_email_lang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->email_lang(), target);
  }

  // optional int32 email_format = 4;
  if (has_email_format()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->email_format(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetEmailTemplate)
  return target;
}

int CMsgGCGetEmailTemplate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 email_msg_type = 2;
    if (has_email_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->email_msg_type());
    }

    // optional int32 email_lang = 3;
    if (has_email_lang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->email_lang());
    }

    // optional int32 email_format = 4;
    if (has_email_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->email_format());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetEmailTemplate::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetEmailTemplate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetEmailTemplate>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetEmailTemplate::MergeFrom(const CMsgGCGetEmailTemplate& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_app_id()) {
      set_app_id(from.app_id());
    }
    if (from.has_email_msg_type()) {
      set_email_msg_type(from.email_msg_type());
    }
    if (from.has_email_lang()) {
      set_email_lang(from.email_lang());
    }
    if (from.has_email_format()) {
      set_email_format(from.email_format());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetEmailTemplate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetEmailTemplate::CopyFrom(const CMsgGCGetEmailTemplate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetEmailTemplate::IsInitialized() const {

  return true;
}

void CMsgGCGetEmailTemplate::Swap(CMsgGCGetEmailTemplate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetEmailTemplate::InternalSwap(CMsgGCGetEmailTemplate* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(email_msg_type_, other->email_msg_type_);
  std::swap(email_lang_, other->email_lang_);
  std::swap(email_format_, other->email_format_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetEmailTemplate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetEmailTemplate_descriptor_;
  metadata.reflection = CMsgGCGetEmailTemplate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetEmailTemplate

// optional uint32 app_id = 1;
bool CMsgGCGetEmailTemplate::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetEmailTemplate::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetEmailTemplate::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetEmailTemplate::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
 ::google::protobuf::uint32 CMsgGCGetEmailTemplate::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetEmailTemplate.app_id)
  return app_id_;
}
 void CMsgGCGetEmailTemplate::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetEmailTemplate.app_id)
}

// optional uint32 email_msg_type = 2;
bool CMsgGCGetEmailTemplate::has_email_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCGetEmailTemplate::set_has_email_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCGetEmailTemplate::clear_has_email_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCGetEmailTemplate::clear_email_msg_type() {
  email_msg_type_ = 0u;
  clear_has_email_msg_type();
}
 ::google::protobuf::uint32 CMsgGCGetEmailTemplate::email_msg_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetEmailTemplate.email_msg_type)
  return email_msg_type_;
}
 void CMsgGCGetEmailTemplate::set_email_msg_type(::google::protobuf::uint32 value) {
  set_has_email_msg_type();
  email_msg_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetEmailTemplate.email_msg_type)
}

// optional int32 email_lang = 3;
bool CMsgGCGetEmailTemplate::has_email_lang() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCGetEmailTemplate::set_has_email_lang() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCGetEmailTemplate::clear_has_email_lang() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCGetEmailTemplate::clear_email_lang() {
  email_lang_ = 0;
  clear_has_email_lang();
}
 ::google::protobuf::int32 CMsgGCGetEmailTemplate::email_lang() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetEmailTemplate.email_lang)
  return email_lang_;
}
 void CMsgGCGetEmailTemplate::set_email_lang(::google::protobuf::int32 value) {
  set_has_email_lang();
  email_lang_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetEmailTemplate.email_lang)
}

// optional int32 email_format = 4;
bool CMsgGCGetEmailTemplate::has_email_format() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCGetEmailTemplate::set_has_email_format() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCGetEmailTemplate::clear_has_email_format() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCGetEmailTemplate::clear_email_format() {
  email_format_ = 0;
  clear_has_email_format();
}
 ::google::protobuf::int32 CMsgGCGetEmailTemplate::email_format() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetEmailTemplate.email_format)
  return email_format_;
}
 void CMsgGCGetEmailTemplate::set_email_format(::google::protobuf::int32 value) {
  set_has_email_format();
  email_format_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetEmailTemplate.email_format)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetEmailTemplateResponse::kEresultFieldNumber;
const int CMsgGCGetEmailTemplateResponse::kTemplateExistsFieldNumber;
const int CMsgGCGetEmailTemplateResponse::kTemplateFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetEmailTemplateResponse::CMsgGCGetEmailTemplateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetEmailTemplateResponse)
}

void CMsgGCGetEmailTemplateResponse::InitAsDefaultInstance() {
}

CMsgGCGetEmailTemplateResponse::CMsgGCGetEmailTemplateResponse(const CMsgGCGetEmailTemplateResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetEmailTemplateResponse)
}

void CMsgGCGetEmailTemplateResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eresult_ = 2u;
  template_exists_ = false;
  template__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetEmailTemplateResponse::~CMsgGCGetEmailTemplateResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCGetEmailTemplateResponse)
  SharedDtor();
}

void CMsgGCGetEmailTemplateResponse::SharedDtor() {
  template__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgGCGetEmailTemplateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetEmailTemplateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetEmailTemplateResponse_descriptor_;
}

const CMsgGCGetEmailTemplateResponse& CMsgGCGetEmailTemplateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetEmailTemplateResponse* CMsgGCGetEmailTemplateResponse::default_instance_ = NULL;

CMsgGCGetEmailTemplateResponse* CMsgGCGetEmailTemplateResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetEmailTemplateResponse* n = new CMsgGCGetEmailTemplateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetEmailTemplateResponse::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    eresult_ = 2u;
    template_exists_ = false;
    if (has_template_()) {
      template__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetEmailTemplateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetEmailTemplateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_template_exists;
        break;
      }

      // optional bool template_exists = 2;
      case 2: {
        if (tag == 16) {
         parse_template_exists:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &template_exists_)));
          set_has_template_exists();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_template;
        break;
      }

      // optional string template = 3;
      case 3: {
        if (tag == 26) {
         parse_template:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_template_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->template_().data(), this->template_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetEmailTemplateResponse.template");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetEmailTemplateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetEmailTemplateResponse)
  return false;
#undef DO_
}

void CMsgGCGetEmailTemplateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetEmailTemplateResponse)
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bool template_exists = 2;
  if (has_template_exists()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->template_exists(), output);
  }

  // optional string template = 3;
  if (has_template_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetEmailTemplateResponse.template");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->template_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetEmailTemplateResponse)
}

::google::protobuf::uint8* CMsgGCGetEmailTemplateResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetEmailTemplateResponse)
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bool template_exists = 2;
  if (has_template_exists()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->template_exists(), target);
  }

  // optional string template = 3;
  if (has_template_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetEmailTemplateResponse.template");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->template_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetEmailTemplateResponse)
  return target;
}

int CMsgGCGetEmailTemplateResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional bool template_exists = 2;
    if (has_template_exists()) {
      total_size += 1 + 1;
    }

    // optional string template = 3;
    if (has_template_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->template_());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetEmailTemplateResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetEmailTemplateResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetEmailTemplateResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetEmailTemplateResponse::MergeFrom(const CMsgGCGetEmailTemplateResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
    if (from.has_template_exists()) {
      set_template_exists(from.template_exists());
    }
    if (from.has_template_()) {
      set_has_template_();
      template__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.template__);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetEmailTemplateResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetEmailTemplateResponse::CopyFrom(const CMsgGCGetEmailTemplateResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetEmailTemplateResponse::IsInitialized() const {

  return true;
}

void CMsgGCGetEmailTemplateResponse::Swap(CMsgGCGetEmailTemplateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetEmailTemplateResponse::InternalSwap(CMsgGCGetEmailTemplateResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(template_exists_, other->template_exists_);
  template__.Swap(&other->template__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetEmailTemplateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetEmailTemplateResponse_descriptor_;
  metadata.reflection = CMsgGCGetEmailTemplateResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetEmailTemplateResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgGCGetEmailTemplateResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetEmailTemplateResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetEmailTemplateResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetEmailTemplateResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
 ::google::protobuf::uint32 CMsgGCGetEmailTemplateResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetEmailTemplateResponse.eresult)
  return eresult_;
}
 void CMsgGCGetEmailTemplateResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetEmailTemplateResponse.eresult)
}

// optional bool template_exists = 2;
bool CMsgGCGetEmailTemplateResponse::has_template_exists() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCGetEmailTemplateResponse::set_has_template_exists() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCGetEmailTemplateResponse::clear_has_template_exists() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCGetEmailTemplateResponse::clear_template_exists() {
  template_exists_ = false;
  clear_has_template_exists();
}
 bool CMsgGCGetEmailTemplateResponse::template_exists() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetEmailTemplateResponse.template_exists)
  return template_exists_;
}
 void CMsgGCGetEmailTemplateResponse::set_template_exists(bool value) {
  set_has_template_exists();
  template_exists_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetEmailTemplateResponse.template_exists)
}

// optional string template = 3;
bool CMsgGCGetEmailTemplateResponse::has_template_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCGetEmailTemplateResponse::set_has_template_() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCGetEmailTemplateResponse::clear_has_template_() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCGetEmailTemplateResponse::clear_template_() {
  template__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_template_();
}
 const ::std::string& CMsgGCGetEmailTemplateResponse::template_() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetEmailTemplateResponse.template)
  return template__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCGetEmailTemplateResponse::set_template_(const ::std::string& value) {
  set_has_template_();
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCGetEmailTemplateResponse.template)
}
 void CMsgGCGetEmailTemplateResponse::set_template_(const char* value) {
  set_has_template_();
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCGetEmailTemplateResponse.template)
}
 void CMsgGCGetEmailTemplateResponse::set_template_(const char* value, size_t size) {
  set_has_template_();
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCGetEmailTemplateResponse.template)
}
 ::std::string* CMsgGCGetEmailTemplateResponse::mutable_template_() {
  set_has_template_();
  // @@protoc_insertion_point(field_mutable:CMsgGCGetEmailTemplateResponse.template)
  return template__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCGetEmailTemplateResponse::release_template_() {
  clear_has_template_();
  return template__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCGetEmailTemplateResponse::set_allocated_template_(::std::string* template_) {
  if (template_ != NULL) {
    set_has_template_();
  } else {
    clear_has_template_();
  }
  template__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), template_);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCGetEmailTemplateResponse.template)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMGrantGuestPasses2::kSteamIdFieldNumber;
const int CMsgAMGrantGuestPasses2::kPackageIdFieldNumber;
const int CMsgAMGrantGuestPasses2::kPassesToGrantFieldNumber;
const int CMsgAMGrantGuestPasses2::kDaysToExpirationFieldNumber;
const int CMsgAMGrantGuestPasses2::kActionFieldNumber;
#endif  // !_MSC_VER

CMsgAMGrantGuestPasses2::CMsgAMGrantGuestPasses2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGrantGuestPasses2)
}

void CMsgAMGrantGuestPasses2::InitAsDefaultInstance() {
}

CMsgAMGrantGuestPasses2::CMsgAMGrantGuestPasses2(const CMsgAMGrantGuestPasses2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGrantGuestPasses2)
}

void CMsgAMGrantGuestPasses2::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
  package_id_ = 0u;
  passes_to_grant_ = 0;
  days_to_expiration_ = 0;
  action_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGrantGuestPasses2::~CMsgAMGrantGuestPasses2() {
  // @@protoc_insertion_point(destructor:CMsgAMGrantGuestPasses2)
  SharedDtor();
}

void CMsgAMGrantGuestPasses2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGrantGuestPasses2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGrantGuestPasses2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGrantGuestPasses2_descriptor_;
}

const CMsgAMGrantGuestPasses2& CMsgAMGrantGuestPasses2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGrantGuestPasses2* CMsgAMGrantGuestPasses2::default_instance_ = NULL;

CMsgAMGrantGuestPasses2* CMsgAMGrantGuestPasses2::New(::google::protobuf::Arena* arena) const {
  CMsgAMGrantGuestPasses2* n = new CMsgAMGrantGuestPasses2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGrantGuestPasses2::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgAMGrantGuestPasses2*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(steam_id_, action_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGrantGuestPasses2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGrantGuestPasses2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
          set_has_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_package_id;
        break;
      }

      // optional uint32 package_id = 2;
      case 2: {
        if (tag == 16) {
         parse_package_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
          set_has_package_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_passes_to_grant;
        break;
      }

      // optional int32 passes_to_grant = 3;
      case 3: {
        if (tag == 24) {
         parse_passes_to_grant:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passes_to_grant_)));
          set_has_passes_to_grant();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_days_to_expiration;
        break;
      }

      // optional int32 days_to_expiration = 4;
      case 4: {
        if (tag == 32) {
         parse_days_to_expiration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &days_to_expiration_)));
          set_has_days_to_expiration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_action;
        break;
      }

      // optional int32 action = 5;
      case 5: {
        if (tag == 40) {
         parse_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
          set_has_action();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGrantGuestPasses2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGrantGuestPasses2)
  return false;
#undef DO_
}

void CMsgAMGrantGuestPasses2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGrantGuestPasses2)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 package_id = 2;
  if (has_package_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->package_id(), output);
  }

  // optional int32 passes_to_grant = 3;
  if (has_passes_to_grant()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->passes_to_grant(), output);
  }

  // optional int32 days_to_expiration = 4;
  if (has_days_to_expiration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->days_to_expiration(), output);
  }

  // optional int32 action = 5;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGrantGuestPasses2)
}

::google::protobuf::uint8* CMsgAMGrantGuestPasses2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGrantGuestPasses2)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 package_id = 2;
  if (has_package_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->package_id(), target);
  }

  // optional int32 passes_to_grant = 3;
  if (has_passes_to_grant()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->passes_to_grant(), target);
  }

  // optional int32 days_to_expiration = 4;
  if (has_days_to_expiration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->days_to_expiration(), target);
  }

  // optional int32 action = 5;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGrantGuestPasses2)
  return target;
}

int CMsgAMGrantGuestPasses2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 package_id = 2;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional int32 passes_to_grant = 3;
    if (has_passes_to_grant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passes_to_grant());
    }

    // optional int32 days_to_expiration = 4;
    if (has_days_to_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->days_to_expiration());
    }

    // optional int32 action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGrantGuestPasses2::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGrantGuestPasses2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGrantGuestPasses2>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGrantGuestPasses2::MergeFrom(const CMsgAMGrantGuestPasses2& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steam_id()) {
      set_steam_id(from.steam_id());
    }
    if (from.has_package_id()) {
      set_package_id(from.package_id());
    }
    if (from.has_passes_to_grant()) {
      set_passes_to_grant(from.passes_to_grant());
    }
    if (from.has_days_to_expiration()) {
      set_days_to_expiration(from.days_to_expiration());
    }
    if (from.has_action()) {
      set_action(from.action());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGrantGuestPasses2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGrantGuestPasses2::CopyFrom(const CMsgAMGrantGuestPasses2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGrantGuestPasses2::IsInitialized() const {

  return true;
}

void CMsgAMGrantGuestPasses2::Swap(CMsgAMGrantGuestPasses2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGrantGuestPasses2::InternalSwap(CMsgAMGrantGuestPasses2* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(package_id_, other->package_id_);
  std::swap(passes_to_grant_, other->passes_to_grant_);
  std::swap(days_to_expiration_, other->days_to_expiration_);
  std::swap(action_, other->action_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGrantGuestPasses2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGrantGuestPasses2_descriptor_;
  metadata.reflection = CMsgAMGrantGuestPasses2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMGrantGuestPasses2

// optional fixed64 steam_id = 1;
bool CMsgAMGrantGuestPasses2::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMGrantGuestPasses2::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMGrantGuestPasses2::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMGrantGuestPasses2::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
 ::google::protobuf::uint64 CMsgAMGrantGuestPasses2::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGrantGuestPasses2.steam_id)
  return steam_id_;
}
 void CMsgAMGrantGuestPasses2::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGrantGuestPasses2.steam_id)
}

// optional uint32 package_id = 2;
bool CMsgAMGrantGuestPasses2::has_package_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMGrantGuestPasses2::set_has_package_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMGrantGuestPasses2::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMGrantGuestPasses2::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
 ::google::protobuf::uint32 CMsgAMGrantGuestPasses2::package_id() const {
  // @@protoc_insertion_point(field_get:CMsgAMGrantGuestPasses2.package_id)
  return package_id_;
}
 void CMsgAMGrantGuestPasses2::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGrantGuestPasses2.package_id)
}

// optional int32 passes_to_grant = 3;
bool CMsgAMGrantGuestPasses2::has_passes_to_grant() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAMGrantGuestPasses2::set_has_passes_to_grant() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAMGrantGuestPasses2::clear_has_passes_to_grant() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAMGrantGuestPasses2::clear_passes_to_grant() {
  passes_to_grant_ = 0;
  clear_has_passes_to_grant();
}
 ::google::protobuf::int32 CMsgAMGrantGuestPasses2::passes_to_grant() const {
  // @@protoc_insertion_point(field_get:CMsgAMGrantGuestPasses2.passes_to_grant)
  return passes_to_grant_;
}
 void CMsgAMGrantGuestPasses2::set_passes_to_grant(::google::protobuf::int32 value) {
  set_has_passes_to_grant();
  passes_to_grant_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGrantGuestPasses2.passes_to_grant)
}

// optional int32 days_to_expiration = 4;
bool CMsgAMGrantGuestPasses2::has_days_to_expiration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgAMGrantGuestPasses2::set_has_days_to_expiration() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgAMGrantGuestPasses2::clear_has_days_to_expiration() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgAMGrantGuestPasses2::clear_days_to_expiration() {
  days_to_expiration_ = 0;
  clear_has_days_to_expiration();
}
 ::google::protobuf::int32 CMsgAMGrantGuestPasses2::days_to_expiration() const {
  // @@protoc_insertion_point(field_get:CMsgAMGrantGuestPasses2.days_to_expiration)
  return days_to_expiration_;
}
 void CMsgAMGrantGuestPasses2::set_days_to_expiration(::google::protobuf::int32 value) {
  set_has_days_to_expiration();
  days_to_expiration_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGrantGuestPasses2.days_to_expiration)
}

// optional int32 action = 5;
bool CMsgAMGrantGuestPasses2::has_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgAMGrantGuestPasses2::set_has_action() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgAMGrantGuestPasses2::clear_has_action() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgAMGrantGuestPasses2::clear_action() {
  action_ = 0;
  clear_has_action();
}
 ::google::protobuf::int32 CMsgAMGrantGuestPasses2::action() const {
  // @@protoc_insertion_point(field_get:CMsgAMGrantGuestPasses2.action)
  return action_;
}
 void CMsgAMGrantGuestPasses2::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGrantGuestPasses2.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgAMGrantGuestPasses2Response::kEresultFieldNumber;
const int CMsgAMGrantGuestPasses2Response::kPassesGrantedFieldNumber;
#endif  // !_MSC_VER

CMsgAMGrantGuestPasses2Response::CMsgAMGrantGuestPasses2Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGrantGuestPasses2Response)
}

void CMsgAMGrantGuestPasses2Response::InitAsDefaultInstance() {
}

CMsgAMGrantGuestPasses2Response::CMsgAMGrantGuestPasses2Response(const CMsgAMGrantGuestPasses2Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGrantGuestPasses2Response)
}

void CMsgAMGrantGuestPasses2Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
  passes_granted_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAMGrantGuestPasses2Response::~CMsgAMGrantGuestPasses2Response() {
  // @@protoc_insertion_point(destructor:CMsgAMGrantGuestPasses2Response)
  SharedDtor();
}

void CMsgAMGrantGuestPasses2Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAMGrantGuestPasses2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGrantGuestPasses2Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAMGrantGuestPasses2Response_descriptor_;
}

const CMsgAMGrantGuestPasses2Response& CMsgAMGrantGuestPasses2Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgAMGrantGuestPasses2Response* CMsgAMGrantGuestPasses2Response::default_instance_ = NULL;

CMsgAMGrantGuestPasses2Response* CMsgAMGrantGuestPasses2Response::New(::google::protobuf::Arena* arena) const {
  CMsgAMGrantGuestPasses2Response* n = new CMsgAMGrantGuestPasses2Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGrantGuestPasses2Response::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    eresult_ = 2;
    passes_granted_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgAMGrantGuestPasses2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGrantGuestPasses2Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_passes_granted;
        break;
      }

      // optional int32 passes_granted = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_passes_granted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passes_granted_)));
          set_has_passes_granted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGrantGuestPasses2Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGrantGuestPasses2Response)
  return false;
#undef DO_
}

void CMsgAMGrantGuestPasses2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGrantGuestPasses2Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 passes_granted = 2 [default = 0];
  if (has_passes_granted()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->passes_granted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGrantGuestPasses2Response)
}

::google::protobuf::uint8* CMsgAMGrantGuestPasses2Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGrantGuestPasses2Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 passes_granted = 2 [default = 0];
  if (has_passes_granted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->passes_granted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGrantGuestPasses2Response)
  return target;
}

int CMsgAMGrantGuestPasses2Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional int32 passes_granted = 2 [default = 0];
    if (has_passes_granted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passes_granted());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGrantGuestPasses2Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgAMGrantGuestPasses2Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGrantGuestPasses2Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAMGrantGuestPasses2Response::MergeFrom(const CMsgAMGrantGuestPasses2Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
    if (from.has_passes_granted()) {
      set_passes_granted(from.passes_granted());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgAMGrantGuestPasses2Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGrantGuestPasses2Response::CopyFrom(const CMsgAMGrantGuestPasses2Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGrantGuestPasses2Response::IsInitialized() const {

  return true;
}

void CMsgAMGrantGuestPasses2Response::Swap(CMsgAMGrantGuestPasses2Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGrantGuestPasses2Response::InternalSwap(CMsgAMGrantGuestPasses2Response* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(passes_granted_, other->passes_granted_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGrantGuestPasses2Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAMGrantGuestPasses2Response_descriptor_;
  metadata.reflection = CMsgAMGrantGuestPasses2Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMGrantGuestPasses2Response

// optional int32 eresult = 1 [default = 2];
bool CMsgAMGrantGuestPasses2Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMGrantGuestPasses2Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMGrantGuestPasses2Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMGrantGuestPasses2Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
 ::google::protobuf::int32 CMsgAMGrantGuestPasses2Response::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgAMGrantGuestPasses2Response.eresult)
  return eresult_;
}
 void CMsgAMGrantGuestPasses2Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGrantGuestPasses2Response.eresult)
}

// optional int32 passes_granted = 2 [default = 0];
bool CMsgAMGrantGuestPasses2Response::has_passes_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMGrantGuestPasses2Response::set_has_passes_granted() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMGrantGuestPasses2Response::clear_has_passes_granted() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMGrantGuestPasses2Response::clear_passes_granted() {
  passes_granted_ = 0;
  clear_has_passes_granted();
}
 ::google::protobuf::int32 CMsgAMGrantGuestPasses2Response::passes_granted() const {
  // @@protoc_insertion_point(field_get:CMsgAMGrantGuestPasses2Response.passes_granted)
  return passes_granted_;
}
 void CMsgAMGrantGuestPasses2Response::set_passes_granted(::google::protobuf::int32 value) {
  set_has_passes_granted();
  passes_granted_ = value;
  // @@protoc_insertion_point(field_set:CMsgAMGrantGuestPasses2Response.passes_granted)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCSystemMsg_GetAccountDetails::kSteamidFieldNumber;
const int CGCSystemMsg_GetAccountDetails::kAppidFieldNumber;
#endif  // !_MSC_VER

CGCSystemMsg_GetAccountDetails::CGCSystemMsg_GetAccountDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetAccountDetails)
}

void CGCSystemMsg_GetAccountDetails::InitAsDefaultInstance() {
}

CGCSystemMsg_GetAccountDetails::CGCSystemMsg_GetAccountDetails(const CGCSystemMsg_GetAccountDetails& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetAccountDetails)
}

void CGCSystemMsg_GetAccountDetails::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  appid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCSystemMsg_GetAccountDetails::~CGCSystemMsg_GetAccountDetails() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetAccountDetails)
  SharedDtor();
}

void CGCSystemMsg_GetAccountDetails::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCSystemMsg_GetAccountDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetAccountDetails::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCSystemMsg_GetAccountDetails_descriptor_;
}

const CGCSystemMsg_GetAccountDetails& CGCSystemMsg_GetAccountDetails::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCSystemMsg_GetAccountDetails* CGCSystemMsg_GetAccountDetails::default_instance_ = NULL;

CGCSystemMsg_GetAccountDetails* CGCSystemMsg_GetAccountDetails::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetAccountDetails* n = new CGCSystemMsg_GetAccountDetails;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetAccountDetails::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCSystemMsg_GetAccountDetails*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(steamid_, appid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCSystemMsg_GetAccountDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetAccountDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_appid;
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (tag == 16) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetAccountDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetAccountDetails)
  return false;
#undef DO_
}

void CGCSystemMsg_GetAccountDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetAccountDetails)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetAccountDetails)
}

::google::protobuf::uint8* CGCSystemMsg_GetAccountDetails::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetAccountDetails)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetAccountDetails)
  return target;
}

int CGCSystemMsg_GetAccountDetails::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetAccountDetails::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCSystemMsg_GetAccountDetails* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetAccountDetails>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetAccountDetails::MergeFrom(const CGCSystemMsg_GetAccountDetails& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCSystemMsg_GetAccountDetails::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetAccountDetails::CopyFrom(const CGCSystemMsg_GetAccountDetails& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetAccountDetails::IsInitialized() const {

  return true;
}

void CGCSystemMsg_GetAccountDetails::Swap(CGCSystemMsg_GetAccountDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetAccountDetails::InternalSwap(CGCSystemMsg_GetAccountDetails* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(appid_, other->appid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetAccountDetails::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCSystemMsg_GetAccountDetails_descriptor_;
  metadata.reflection = CGCSystemMsg_GetAccountDetails_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCSystemMsg_GetAccountDetails

// optional fixed64 steamid = 1;
bool CGCSystemMsg_GetAccountDetails::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCSystemMsg_GetAccountDetails::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCSystemMsg_GetAccountDetails::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCSystemMsg_GetAccountDetails::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CGCSystemMsg_GetAccountDetails::steamid() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails.steamid)
  return steamid_;
}
 void CGCSystemMsg_GetAccountDetails::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails.steamid)
}

// optional uint32 appid = 2;
bool CGCSystemMsg_GetAccountDetails::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCSystemMsg_GetAccountDetails::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCSystemMsg_GetAccountDetails::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCSystemMsg_GetAccountDetails::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails::appid() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails.appid)
  return appid_;
}
 void CGCSystemMsg_GetAccountDetails::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails.appid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCSystemMsg_GetAccountDetails_Response::kEresultDeprecatedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kAccountNameFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kPersonaNameFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsProfileCreatedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsProfilePublicFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsInventoryPublicFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsVacBannedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsCyberCafeFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsSchoolAccountFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsLimitedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsSubscribedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kPackageFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsFreeTrialAccountFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kFreeTrialExpirationFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsLowViolenceFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsAccountLockedDownFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsCommunityBannedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsTradeBannedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kTradeBanExpirationFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kAccountidFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kSuspensionEndTimeFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kCurrencyFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kSteamLevelFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kFriendCountFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kAccountCreationTimeFieldNumber;
#endif  // !_MSC_VER

CGCSystemMsg_GetAccountDetails_Response::CGCSystemMsg_GetAccountDetails_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetAccountDetails_Response)
}

void CGCSystemMsg_GetAccountDetails_Response::InitAsDefaultInstance() {
}

CGCSystemMsg_GetAccountDetails_Response::CGCSystemMsg_GetAccountDetails_Response(const CGCSystemMsg_GetAccountDetails_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetAccountDetails_Response)
}

void CGCSystemMsg_GetAccountDetails_Response::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eresult_deprecated_ = 2u;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_profile_created_ = false;
  is_profile_public_ = false;
  is_inventory_public_ = false;
  is_vac_banned_ = false;
  is_cyber_cafe_ = false;
  is_school_account_ = false;
  is_limited_ = false;
  is_subscribed_ = false;
  package_ = 0u;
  is_free_trial_account_ = false;
  free_trial_expiration_ = 0u;
  is_low_violence_ = false;
  is_account_locked_down_ = false;
  is_community_banned_ = false;
  is_trade_banned_ = false;
  trade_ban_expiration_ = 0u;
  accountid_ = 0u;
  suspension_end_time_ = 0u;
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steam_level_ = 0u;
  friend_count_ = 0u;
  account_creation_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCSystemMsg_GetAccountDetails_Response::~CGCSystemMsg_GetAccountDetails_Response() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetAccountDetails_Response)
  SharedDtor();
}

void CGCSystemMsg_GetAccountDetails_Response::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCSystemMsg_GetAccountDetails_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetAccountDetails_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCSystemMsg_GetAccountDetails_Response_descriptor_;
}

const CGCSystemMsg_GetAccountDetails_Response& CGCSystemMsg_GetAccountDetails_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCSystemMsg_GetAccountDetails_Response* CGCSystemMsg_GetAccountDetails_Response::default_instance_ = NULL;

CGCSystemMsg_GetAccountDetails_Response* CGCSystemMsg_GetAccountDetails_Response::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetAccountDetails_Response* n = new CGCSystemMsg_GetAccountDetails_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetAccountDetails_Response::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCSystemMsg_GetAccountDetails_Response*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(is_profile_created_, is_cyber_cafe_);
    eresult_deprecated_ = 2u;
    if (has_account_name()) {
      account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_persona_name()) {
      persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(is_school_account_, is_account_locked_down_);
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    ZR_(is_community_banned_, suspension_end_time_);
    ZR_(steam_level_, friend_count_);
    if (has_currency()) {
      currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  account_creation_time_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCSystemMsg_GetAccountDetails_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetAccountDetails_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult_deprecated = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_deprecated_)));
          set_has_eresult_deprecated();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account_name;
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (tag == 18) {
         parse_account_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCSystemMsg_GetAccountDetails_Response.account_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_persona_name;
        break;
      }

      // optional string persona_name = 3;
      case 3: {
        if (tag == 26) {
         parse_persona_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), this->persona_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCSystemMsg_GetAccountDetails_Response.persona_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_is_profile_public;
        break;
      }

      // optional bool is_profile_public = 4;
      case 4: {
        if (tag == 32) {
         parse_is_profile_public:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_profile_public_)));
          set_has_is_profile_public();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_inventory_public;
        break;
      }

      // optional bool is_inventory_public = 5;
      case 5: {
        if (tag == 40) {
         parse_is_inventory_public:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inventory_public_)));
          set_has_is_inventory_public();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_is_vac_banned;
        break;
      }

      // optional bool is_vac_banned = 7;
      case 7: {
        if (tag == 56) {
         parse_is_vac_banned:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_vac_banned_)));
          set_has_is_vac_banned();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_is_cyber_cafe;
        break;
      }

      // optional bool is_cyber_cafe = 8;
      case 8: {
        if (tag == 64) {
         parse_is_cyber_cafe:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cyber_cafe_)));
          set_has_is_cyber_cafe();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_is_school_account;
        break;
      }

      // optional bool is_school_account = 9;
      case 9: {
        if (tag == 72) {
         parse_is_school_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_school_account_)));
          set_has_is_school_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_is_limited;
        break;
      }

      // optional bool is_limited = 10;
      case 10: {
        if (tag == 80) {
         parse_is_limited:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_limited_)));
          set_has_is_limited();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_is_subscribed;
        break;
      }

      // optional bool is_subscribed = 11;
      case 11: {
        if (tag == 88) {
         parse_is_subscribed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_subscribed_)));
          set_has_is_subscribed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_package;
        break;
      }

      // optional uint32 package = 12;
      case 12: {
        if (tag == 96) {
         parse_package:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_)));
          set_has_package();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_is_free_trial_account;
        break;
      }

      // optional bool is_free_trial_account = 13;
      case 13: {
        if (tag == 104) {
         parse_is_free_trial_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_free_trial_account_)));
          set_has_is_free_trial_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_free_trial_expiration;
        break;
      }

      // optional uint32 free_trial_expiration = 14;
      case 14: {
        if (tag == 112) {
         parse_free_trial_expiration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &free_trial_expiration_)));
          set_has_free_trial_expiration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_is_low_violence;
        break;
      }

      // optional bool is_low_violence = 15;
      case 15: {
        if (tag == 120) {
         parse_is_low_violence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_low_violence_)));
          set_has_is_low_violence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_is_account_locked_down;
        break;
      }

      // optional bool is_account_locked_down = 16;
      case 16: {
        if (tag == 128) {
         parse_is_account_locked_down:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_account_locked_down_)));
          set_has_is_account_locked_down();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_is_community_banned;
        break;
      }

      // optional bool is_community_banned = 17;
      case 17: {
        if (tag == 136) {
         parse_is_community_banned:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_community_banned_)));
          set_has_is_community_banned();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_is_trade_banned;
        break;
      }

      // optional bool is_trade_banned = 18;
      case 18: {
        if (tag == 144) {
         parse_is_trade_banned:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_trade_banned_)));
          set_has_is_trade_banned();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_trade_ban_expiration;
        break;
      }

      // optional uint32 trade_ban_expiration = 19;
      case 19: {
        if (tag == 152) {
         parse_trade_ban_expiration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_ban_expiration_)));
          set_has_trade_ban_expiration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_accountid;
        break;
      }

      // optional uint32 accountid = 20;
      case 20: {
        if (tag == 160) {
         parse_accountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_suspension_end_time;
        break;
      }

      // optional uint32 suspension_end_time = 21;
      case 21: {
        if (tag == 168) {
         parse_suspension_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suspension_end_time_)));
          set_has_suspension_end_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_currency;
        break;
      }

      // optional string currency = 22;
      case 22: {
        if (tag == 178) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCSystemMsg_GetAccountDetails_Response.currency");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_steam_level;
        break;
      }

      // optional uint32 steam_level = 23;
      case 23: {
        if (tag == 184) {
         parse_steam_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steam_level_)));
          set_has_steam_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_friend_count;
        break;
      }

      // optional uint32 friend_count = 24;
      case 24: {
        if (tag == 192) {
         parse_friend_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_count_)));
          set_has_friend_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_account_creation_time;
        break;
      }

      // optional uint32 account_creation_time = 25;
      case 25: {
        if (tag == 200) {
         parse_account_creation_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_creation_time_)));
          set_has_account_creation_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_is_profile_created;
        break;
      }

      // optional bool is_profile_created = 26;
      case 26: {
        if (tag == 208) {
         parse_is_profile_created:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_profile_created_)));
          set_has_is_profile_created();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetAccountDetails_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetAccountDetails_Response)
  return false;
#undef DO_
}

void CGCSystemMsg_GetAccountDetails_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetAccountDetails_Response)
  // optional uint32 eresult_deprecated = 1 [default = 2];
  if (has_eresult_deprecated()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult_deprecated(), output);
  }

  // optional string account_name = 2;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // optional string persona_name = 3;
  if (has_persona_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), this->persona_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->persona_name(), output);
  }

  // optional bool is_profile_public = 4;
  if (has_is_profile_public()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_profile_public(), output);
  }

  // optional bool is_inventory_public = 5;
  if (has_is_inventory_public()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_inventory_public(), output);
  }

  // optional bool is_vac_banned = 7;
  if (has_is_vac_banned()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_vac_banned(), output);
  }

  // optional bool is_cyber_cafe = 8;
  if (has_is_cyber_cafe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_cyber_cafe(), output);
  }

  // optional bool is_school_account = 9;
  if (has_is_school_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_school_account(), output);
  }

  // optional bool is_limited = 10;
  if (has_is_limited()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_limited(), output);
  }

  // optional bool is_subscribed = 11;
  if (has_is_subscribed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_subscribed(), output);
  }

  // optional uint32 package = 12;
  if (has_package()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->package(), output);
  }

  // optional bool is_free_trial_account = 13;
  if (has_is_free_trial_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_free_trial_account(), output);
  }

  // optional uint32 free_trial_expiration = 14;
  if (has_free_trial_expiration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->free_trial_expiration(), output);
  }

  // optional bool is_low_violence = 15;
  if (has_is_low_violence()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_low_violence(), output);
  }

  // optional bool is_account_locked_down = 16;
  if (has_is_account_locked_down()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->is_account_locked_down(), output);
  }

  // optional bool is_community_banned = 17;
  if (has_is_community_banned()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->is_community_banned(), output);
  }

  // optional bool is_trade_banned = 18;
  if (has_is_trade_banned()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->is_trade_banned(), output);
  }

  // optional uint32 trade_ban_expiration = 19;
  if (has_trade_ban_expiration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->trade_ban_expiration(), output);
  }

  // optional uint32 accountid = 20;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->accountid(), output);
  }

  // optional uint32 suspension_end_time = 21;
  if (has_suspension_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->suspension_end_time(), output);
  }

  // optional string currency = 22;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->currency(), output);
  }

  // optional uint32 steam_level = 23;
  if (has_steam_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->steam_level(), output);
  }

  // optional uint32 friend_count = 24;
  if (has_friend_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->friend_count(), output);
  }

  // optional uint32 account_creation_time = 25;
  if (has_account_creation_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->account_creation_time(), output);
  }

  // optional bool is_profile_created = 26;
  if (has_is_profile_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->is_profile_created(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetAccountDetails_Response)
}

::google::protobuf::uint8* CGCSystemMsg_GetAccountDetails_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetAccountDetails_Response)
  // optional uint32 eresult_deprecated = 1 [default = 2];
  if (has_eresult_deprecated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult_deprecated(), target);
  }

  // optional string account_name = 2;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // optional string persona_name = 3;
  if (has_persona_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), this->persona_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->persona_name(), target);
  }

  // optional bool is_profile_public = 4;
  if (has_is_profile_public()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_profile_public(), target);
  }

  // optional bool is_inventory_public = 5;
  if (has_is_inventory_public()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_inventory_public(), target);
  }

  // optional bool is_vac_banned = 7;
  if (has_is_vac_banned()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_vac_banned(), target);
  }

  // optional bool is_cyber_cafe = 8;
  if (has_is_cyber_cafe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_cyber_cafe(), target);
  }

  // optional bool is_school_account = 9;
  if (has_is_school_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_school_account(), target);
  }

  // optional bool is_limited = 10;
  if (has_is_limited()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_limited(), target);
  }

  // optional bool is_subscribed = 11;
  if (has_is_subscribed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_subscribed(), target);
  }

  // optional uint32 package = 12;
  if (has_package()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->package(), target);
  }

  // optional bool is_free_trial_account = 13;
  if (has_is_free_trial_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_free_trial_account(), target);
  }

  // optional uint32 free_trial_expiration = 14;
  if (has_free_trial_expiration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->free_trial_expiration(), target);
  }

  // optional bool is_low_violence = 15;
  if (has_is_low_violence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_low_violence(), target);
  }

  // optional bool is_account_locked_down = 16;
  if (has_is_account_locked_down()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->is_account_locked_down(), target);
  }

  // optional bool is_community_banned = 17;
  if (has_is_community_banned()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->is_community_banned(), target);
  }

  // optional bool is_trade_banned = 18;
  if (has_is_trade_banned()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->is_trade_banned(), target);
  }

  // optional uint32 trade_ban_expiration = 19;
  if (has_trade_ban_expiration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->trade_ban_expiration(), target);
  }

  // optional uint32 accountid = 20;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->accountid(), target);
  }

  // optional uint32 suspension_end_time = 21;
  if (has_suspension_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->suspension_end_time(), target);
  }

  // optional string currency = 22;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->currency(), target);
  }

  // optional uint32 steam_level = 23;
  if (has_steam_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->steam_level(), target);
  }

  // optional uint32 friend_count = 24;
  if (has_friend_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->friend_count(), target);
  }

  // optional uint32 account_creation_time = 25;
  if (has_account_creation_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->account_creation_time(), target);
  }

  // optional bool is_profile_created = 26;
  if (has_is_profile_created()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->is_profile_created(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetAccountDetails_Response)
  return target;
}

int CGCSystemMsg_GetAccountDetails_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 eresult_deprecated = 1 [default = 2];
    if (has_eresult_deprecated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult_deprecated());
    }

    // optional string account_name = 2;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string persona_name = 3;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional bool is_profile_created = 26;
    if (has_is_profile_created()) {
      total_size += 2 + 1;
    }

    // optional bool is_profile_public = 4;
    if (has_is_profile_public()) {
      total_size += 1 + 1;
    }

    // optional bool is_inventory_public = 5;
    if (has_is_inventory_public()) {
      total_size += 1 + 1;
    }

    // optional bool is_vac_banned = 7;
    if (has_is_vac_banned()) {
      total_size += 1 + 1;
    }

    // optional bool is_cyber_cafe = 8;
    if (has_is_cyber_cafe()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool is_school_account = 9;
    if (has_is_school_account()) {
      total_size += 1 + 1;
    }

    // optional bool is_limited = 10;
    if (has_is_limited()) {
      total_size += 1 + 1;
    }

    // optional bool is_subscribed = 11;
    if (has_is_subscribed()) {
      total_size += 1 + 1;
    }

    // optional uint32 package = 12;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package());
    }

    // optional bool is_free_trial_account = 13;
    if (has_is_free_trial_account()) {
      total_size += 1 + 1;
    }

    // optional uint32 free_trial_expiration = 14;
    if (has_free_trial_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->free_trial_expiration());
    }

    // optional bool is_low_violence = 15;
    if (has_is_low_violence()) {
      total_size += 1 + 1;
    }

    // optional bool is_account_locked_down = 16;
    if (has_is_account_locked_down()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional bool is_community_banned = 17;
    if (has_is_community_banned()) {
      total_size += 2 + 1;
    }

    // optional bool is_trade_banned = 18;
    if (has_is_trade_banned()) {
      total_size += 2 + 1;
    }

    // optional uint32 trade_ban_expiration = 19;
    if (has_trade_ban_expiration()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_ban_expiration());
    }

    // optional uint32 accountid = 20;
    if (has_accountid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 suspension_end_time = 21;
    if (has_suspension_end_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->suspension_end_time());
    }

    // optional string currency = 22;
    if (has_currency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

    // optional uint32 steam_level = 23;
    if (has_steam_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steam_level());
    }

    // optional uint32 friend_count = 24;
    if (has_friend_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friend_count());
    }

  }
  // optional uint32 account_creation_time = 25;
  if (has_account_creation_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_creation_time());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetAccountDetails_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCSystemMsg_GetAccountDetails_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetAccountDetails_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetAccountDetails_Response::MergeFrom(const CGCSystemMsg_GetAccountDetails_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult_deprecated()) {
      set_eresult_deprecated(from.eresult_deprecated());
    }
    if (from.has_account_name()) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (from.has_persona_name()) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (from.has_is_profile_created()) {
      set_is_profile_created(from.is_profile_created());
    }
    if (from.has_is_profile_public()) {
      set_is_profile_public(from.is_profile_public());
    }
    if (from.has_is_inventory_public()) {
      set_is_inventory_public(from.is_inventory_public());
    }
    if (from.has_is_vac_banned()) {
      set_is_vac_banned(from.is_vac_banned());
    }
    if (from.has_is_cyber_cafe()) {
      set_is_cyber_cafe(from.is_cyber_cafe());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_is_school_account()) {
      set_is_school_account(from.is_school_account());
    }
    if (from.has_is_limited()) {
      set_is_limited(from.is_limited());
    }
    if (from.has_is_subscribed()) {
      set_is_subscribed(from.is_subscribed());
    }
    if (from.has_package()) {
      set_package(from.package());
    }
    if (from.has_is_free_trial_account()) {
      set_is_free_trial_account(from.is_free_trial_account());
    }
    if (from.has_free_trial_expiration()) {
      set_free_trial_expiration(from.free_trial_expiration());
    }
    if (from.has_is_low_violence()) {
      set_is_low_violence(from.is_low_violence());
    }
    if (from.has_is_account_locked_down()) {
      set_is_account_locked_down(from.is_account_locked_down());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_is_community_banned()) {
      set_is_community_banned(from.is_community_banned());
    }
    if (from.has_is_trade_banned()) {
      set_is_trade_banned(from.is_trade_banned());
    }
    if (from.has_trade_ban_expiration()) {
      set_trade_ban_expiration(from.trade_ban_expiration());
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
    if (from.has_suspension_end_time()) {
      set_suspension_end_time(from.suspension_end_time());
    }
    if (from.has_currency()) {
      set_has_currency();
      currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
    }
    if (from.has_steam_level()) {
      set_steam_level(from.steam_level());
    }
    if (from.has_friend_count()) {
      set_friend_count(from.friend_count());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_account_creation_time()) {
      set_account_creation_time(from.account_creation_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCSystemMsg_GetAccountDetails_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetAccountDetails_Response::CopyFrom(const CGCSystemMsg_GetAccountDetails_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetAccountDetails_Response::IsInitialized() const {

  return true;
}

void CGCSystemMsg_GetAccountDetails_Response::Swap(CGCSystemMsg_GetAccountDetails_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetAccountDetails_Response::InternalSwap(CGCSystemMsg_GetAccountDetails_Response* other) {
  std::swap(eresult_deprecated_, other->eresult_deprecated_);
  account_name_.Swap(&other->account_name_);
  persona_name_.Swap(&other->persona_name_);
  std::swap(is_profile_created_, other->is_profile_created_);
  std::swap(is_profile_public_, other->is_profile_public_);
  std::swap(is_inventory_public_, other->is_inventory_public_);
  std::swap(is_vac_banned_, other->is_vac_banned_);
  std::swap(is_cyber_cafe_, other->is_cyber_cafe_);
  std::swap(is_school_account_, other->is_school_account_);
  std::swap(is_limited_, other->is_limited_);
  std::swap(is_subscribed_, other->is_subscribed_);
  std::swap(package_, other->package_);
  std::swap(is_free_trial_account_, other->is_free_trial_account_);
  std::swap(free_trial_expiration_, other->free_trial_expiration_);
  std::swap(is_low_violence_, other->is_low_violence_);
  std::swap(is_account_locked_down_, other->is_account_locked_down_);
  std::swap(is_community_banned_, other->is_community_banned_);
  std::swap(is_trade_banned_, other->is_trade_banned_);
  std::swap(trade_ban_expiration_, other->trade_ban_expiration_);
  std::swap(accountid_, other->accountid_);
  std::swap(suspension_end_time_, other->suspension_end_time_);
  currency_.Swap(&other->currency_);
  std::swap(steam_level_, other->steam_level_);
  std::swap(friend_count_, other->friend_count_);
  std::swap(account_creation_time_, other->account_creation_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetAccountDetails_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCSystemMsg_GetAccountDetails_Response_descriptor_;
  metadata.reflection = CGCSystemMsg_GetAccountDetails_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCSystemMsg_GetAccountDetails_Response

// optional uint32 eresult_deprecated = 1 [default = 2];
bool CGCSystemMsg_GetAccountDetails_Response::has_eresult_deprecated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_eresult_deprecated() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_eresult_deprecated() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_eresult_deprecated() {
  eresult_deprecated_ = 2u;
  clear_has_eresult_deprecated();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::eresult_deprecated() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.eresult_deprecated)
  return eresult_deprecated_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_eresult_deprecated(::google::protobuf::uint32 value) {
  set_has_eresult_deprecated();
  eresult_deprecated_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.eresult_deprecated)
}

// optional string account_name = 2;
bool CGCSystemMsg_GetAccountDetails_Response::has_account_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_account_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name();
}
 const ::std::string& CGCSystemMsg_GetAccountDetails_Response::account_name() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const ::std::string& value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.account_name)
}
 void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const char* value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCSystemMsg_GetAccountDetails_Response.account_name)
}
 void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCSystemMsg_GetAccountDetails_Response.account_name)
}
 ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_account_name() {
  set_has_account_name();
  // @@protoc_insertion_point(field_mutable:CGCSystemMsg_GetAccountDetails_Response.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_account_name() {
  clear_has_account_name();
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSystemMsg_GetAccountDetails_Response::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    set_has_account_name();
  } else {
    clear_has_account_name();
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:CGCSystemMsg_GetAccountDetails_Response.account_name)
}

// optional string persona_name = 3;
bool CGCSystemMsg_GetAccountDetails_Response::has_persona_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_persona_name() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona_name();
}
 const ::std::string& CGCSystemMsg_GetAccountDetails_Response::persona_name() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.persona_name)
  return persona_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
 void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const char* value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
 void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
 ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_persona_name() {
  set_has_persona_name();
  // @@protoc_insertion_point(field_mutable:CGCSystemMsg_GetAccountDetails_Response.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_persona_name() {
  clear_has_persona_name();
  return persona_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSystemMsg_GetAccountDetails_Response::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != NULL) {
    set_has_persona_name();
  } else {
    clear_has_persona_name();
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:CGCSystemMsg_GetAccountDetails_Response.persona_name)
}

// optional bool is_profile_created = 26;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_profile_created() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_profile_created() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_profile_created() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_profile_created() {
  is_profile_created_ = false;
  clear_has_is_profile_created();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_profile_created() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_profile_created)
  return is_profile_created_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_profile_created(bool value) {
  set_has_is_profile_created();
  is_profile_created_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_profile_created)
}

// optional bool is_profile_public = 4;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_profile_public() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_profile_public() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_profile_public() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_profile_public() {
  is_profile_public_ = false;
  clear_has_is_profile_public();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_profile_public() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_profile_public)
  return is_profile_public_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_profile_public(bool value) {
  set_has_is_profile_public();
  is_profile_public_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_profile_public)
}

// optional bool is_inventory_public = 5;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_inventory_public() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_inventory_public() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_inventory_public() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_inventory_public() {
  is_inventory_public_ = false;
  clear_has_is_inventory_public();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_inventory_public() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_inventory_public)
  return is_inventory_public_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_inventory_public(bool value) {
  set_has_is_inventory_public();
  is_inventory_public_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_inventory_public)
}

// optional bool is_vac_banned = 7;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_vac_banned() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_vac_banned() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_vac_banned() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_vac_banned() {
  is_vac_banned_ = false;
  clear_has_is_vac_banned();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_vac_banned() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_vac_banned)
  return is_vac_banned_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_vac_banned(bool value) {
  set_has_is_vac_banned();
  is_vac_banned_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_vac_banned)
}

// optional bool is_cyber_cafe = 8;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_cyber_cafe() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_cyber_cafe() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_cyber_cafe() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_cyber_cafe() {
  is_cyber_cafe_ = false;
  clear_has_is_cyber_cafe();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_cyber_cafe() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_cyber_cafe)
  return is_cyber_cafe_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_cyber_cafe(bool value) {
  set_has_is_cyber_cafe();
  is_cyber_cafe_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_cyber_cafe)
}

// optional bool is_school_account = 9;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_school_account() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_school_account() {
  _has_bits_[0] |= 0x00000100u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_school_account() {
  _has_bits_[0] &= ~0x00000100u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_school_account() {
  is_school_account_ = false;
  clear_has_is_school_account();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_school_account() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_school_account)
  return is_school_account_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_school_account(bool value) {
  set_has_is_school_account();
  is_school_account_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_school_account)
}

// optional bool is_limited = 10;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_limited() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_limited() {
  _has_bits_[0] |= 0x00000200u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_limited() {
  _has_bits_[0] &= ~0x00000200u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_limited() {
  is_limited_ = false;
  clear_has_is_limited();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_limited() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_limited)
  return is_limited_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_limited(bool value) {
  set_has_is_limited();
  is_limited_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_limited)
}

// optional bool is_subscribed = 11;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_subscribed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_subscribed() {
  _has_bits_[0] |= 0x00000400u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_subscribed() {
  _has_bits_[0] &= ~0x00000400u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_subscribed() {
  is_subscribed_ = false;
  clear_has_is_subscribed();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_subscribed() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_subscribed)
  return is_subscribed_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_subscribed(bool value) {
  set_has_is_subscribed();
  is_subscribed_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_subscribed)
}

// optional uint32 package = 12;
bool CGCSystemMsg_GetAccountDetails_Response::has_package() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_package() {
  _has_bits_[0] |= 0x00000800u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_package() {
  _has_bits_[0] &= ~0x00000800u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_package() {
  package_ = 0u;
  clear_has_package();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::package() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.package)
  return package_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_package(::google::protobuf::uint32 value) {
  set_has_package();
  package_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.package)
}

// optional bool is_free_trial_account = 13;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_free_trial_account() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_free_trial_account() {
  _has_bits_[0] |= 0x00001000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_free_trial_account() {
  _has_bits_[0] &= ~0x00001000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_free_trial_account() {
  is_free_trial_account_ = false;
  clear_has_is_free_trial_account();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_free_trial_account() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_free_trial_account)
  return is_free_trial_account_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_free_trial_account(bool value) {
  set_has_is_free_trial_account();
  is_free_trial_account_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_free_trial_account)
}

// optional uint32 free_trial_expiration = 14;
bool CGCSystemMsg_GetAccountDetails_Response::has_free_trial_expiration() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_free_trial_expiration() {
  _has_bits_[0] |= 0x00002000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_free_trial_expiration() {
  _has_bits_[0] &= ~0x00002000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_free_trial_expiration() {
  free_trial_expiration_ = 0u;
  clear_has_free_trial_expiration();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::free_trial_expiration() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.free_trial_expiration)
  return free_trial_expiration_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_free_trial_expiration(::google::protobuf::uint32 value) {
  set_has_free_trial_expiration();
  free_trial_expiration_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.free_trial_expiration)
}

// optional bool is_low_violence = 15;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_low_violence() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_low_violence() {
  _has_bits_[0] |= 0x00004000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_low_violence() {
  _has_bits_[0] &= ~0x00004000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_low_violence() {
  is_low_violence_ = false;
  clear_has_is_low_violence();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_low_violence() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_low_violence)
  return is_low_violence_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_low_violence(bool value) {
  set_has_is_low_violence();
  is_low_violence_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_low_violence)
}

// optional bool is_account_locked_down = 16;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_account_locked_down() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_account_locked_down() {
  _has_bits_[0] |= 0x00008000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_account_locked_down() {
  _has_bits_[0] &= ~0x00008000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_account_locked_down() {
  is_account_locked_down_ = false;
  clear_has_is_account_locked_down();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_account_locked_down() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_account_locked_down)
  return is_account_locked_down_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_account_locked_down(bool value) {
  set_has_is_account_locked_down();
  is_account_locked_down_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_account_locked_down)
}

// optional bool is_community_banned = 17;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_community_banned() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_community_banned() {
  _has_bits_[0] |= 0x00010000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_community_banned() {
  _has_bits_[0] &= ~0x00010000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_community_banned() {
  is_community_banned_ = false;
  clear_has_is_community_banned();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_community_banned() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_community_banned)
  return is_community_banned_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_community_banned(bool value) {
  set_has_is_community_banned();
  is_community_banned_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_community_banned)
}

// optional bool is_trade_banned = 18;
bool CGCSystemMsg_GetAccountDetails_Response::has_is_trade_banned() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_is_trade_banned() {
  _has_bits_[0] |= 0x00020000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_trade_banned() {
  _has_bits_[0] &= ~0x00020000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_is_trade_banned() {
  is_trade_banned_ = false;
  clear_has_is_trade_banned();
}
 bool CGCSystemMsg_GetAccountDetails_Response::is_trade_banned() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_trade_banned)
  return is_trade_banned_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_is_trade_banned(bool value) {
  set_has_is_trade_banned();
  is_trade_banned_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_trade_banned)
}

// optional uint32 trade_ban_expiration = 19;
bool CGCSystemMsg_GetAccountDetails_Response::has_trade_ban_expiration() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_trade_ban_expiration() {
  _has_bits_[0] |= 0x00040000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_trade_ban_expiration() {
  _has_bits_[0] &= ~0x00040000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_trade_ban_expiration() {
  trade_ban_expiration_ = 0u;
  clear_has_trade_ban_expiration();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::trade_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.trade_ban_expiration)
  return trade_ban_expiration_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_trade_ban_expiration(::google::protobuf::uint32 value) {
  set_has_trade_ban_expiration();
  trade_ban_expiration_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.trade_ban_expiration)
}

// optional uint32 accountid = 20;
bool CGCSystemMsg_GetAccountDetails_Response::has_accountid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_accountid() {
  _has_bits_[0] |= 0x00080000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_accountid() {
  _has_bits_[0] &= ~0x00080000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::accountid() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.accountid)
  return accountid_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.accountid)
}

// optional uint32 suspension_end_time = 21;
bool CGCSystemMsg_GetAccountDetails_Response::has_suspension_end_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_suspension_end_time() {
  _has_bits_[0] |= 0x00100000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_suspension_end_time() {
  _has_bits_[0] &= ~0x00100000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_suspension_end_time() {
  suspension_end_time_ = 0u;
  clear_has_suspension_end_time();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::suspension_end_time() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.suspension_end_time)
  return suspension_end_time_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_suspension_end_time(::google::protobuf::uint32 value) {
  set_has_suspension_end_time();
  suspension_end_time_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.suspension_end_time)
}

// optional string currency = 22;
bool CGCSystemMsg_GetAccountDetails_Response::has_currency() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_currency() {
  _has_bits_[0] |= 0x00200000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_currency() {
  _has_bits_[0] &= ~0x00200000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_currency();
}
 const ::std::string& CGCSystemMsg_GetAccountDetails_Response::currency() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.currency)
  return currency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSystemMsg_GetAccountDetails_Response::set_currency(const ::std::string& value) {
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.currency)
}
 void CGCSystemMsg_GetAccountDetails_Response::set_currency(const char* value) {
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCSystemMsg_GetAccountDetails_Response.currency)
}
 void CGCSystemMsg_GetAccountDetails_Response::set_currency(const char* value, size_t size) {
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCSystemMsg_GetAccountDetails_Response.currency)
}
 ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_currency() {
  set_has_currency();
  // @@protoc_insertion_point(field_mutable:CGCSystemMsg_GetAccountDetails_Response.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_currency() {
  clear_has_currency();
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSystemMsg_GetAccountDetails_Response::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    set_has_currency();
  } else {
    clear_has_currency();
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:CGCSystemMsg_GetAccountDetails_Response.currency)
}

// optional uint32 steam_level = 23;
bool CGCSystemMsg_GetAccountDetails_Response::has_steam_level() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_steam_level() {
  _has_bits_[0] |= 0x00400000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_steam_level() {
  _has_bits_[0] &= ~0x00400000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_steam_level() {
  steam_level_ = 0u;
  clear_has_steam_level();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::steam_level() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.steam_level)
  return steam_level_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_steam_level(::google::protobuf::uint32 value) {
  set_has_steam_level();
  steam_level_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.steam_level)
}

// optional uint32 friend_count = 24;
bool CGCSystemMsg_GetAccountDetails_Response::has_friend_count() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_friend_count() {
  _has_bits_[0] |= 0x00800000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_friend_count() {
  _has_bits_[0] &= ~0x00800000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_friend_count() {
  friend_count_ = 0u;
  clear_has_friend_count();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::friend_count() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.friend_count)
  return friend_count_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_friend_count(::google::protobuf::uint32 value) {
  set_has_friend_count();
  friend_count_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.friend_count)
}

// optional uint32 account_creation_time = 25;
bool CGCSystemMsg_GetAccountDetails_Response::has_account_creation_time() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void CGCSystemMsg_GetAccountDetails_Response::set_has_account_creation_time() {
  _has_bits_[0] |= 0x01000000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_has_account_creation_time() {
  _has_bits_[0] &= ~0x01000000u;
}
void CGCSystemMsg_GetAccountDetails_Response::clear_account_creation_time() {
  account_creation_time_ = 0u;
  clear_has_account_creation_time();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::account_creation_time() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.account_creation_time)
  return account_creation_time_;
}
 void CGCSystemMsg_GetAccountDetails_Response::set_account_creation_time(::google::protobuf::uint32 value) {
  set_has_account_creation_time();
  account_creation_time_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.account_creation_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetPersonaNames::kSteamidsFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetPersonaNames::CMsgGCGetPersonaNames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPersonaNames)
}

void CMsgGCGetPersonaNames::InitAsDefaultInstance() {
}

CMsgGCGetPersonaNames::CMsgGCGetPersonaNames(const CMsgGCGetPersonaNames& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames)
}

void CMsgGCGetPersonaNames::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetPersonaNames::~CMsgGCGetPersonaNames() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames)
  SharedDtor();
}

void CMsgGCGetPersonaNames::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetPersonaNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetPersonaNames_descriptor_;
}

const CMsgGCGetPersonaNames& CMsgGCGetPersonaNames::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetPersonaNames* CMsgGCGetPersonaNames::default_instance_ = NULL;

CMsgGCGetPersonaNames* CMsgGCGetPersonaNames::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPersonaNames* n = new CMsgGCGetPersonaNames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPersonaNames::Clear() {
  steamids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetPersonaNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPersonaNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 steamids = 1;
      case 1: {
        if (tag == 9) {
         parse_steamids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9, input, this->mutable_steamids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_steamids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPersonaNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPersonaNames)
  return false;
#undef DO_
}

void CMsgGCGetPersonaNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPersonaNames)
  // repeated fixed64 steamids = 1;
  for (int i = 0; i < this->steamids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPersonaNames)
}

::google::protobuf::uint8* CMsgGCGetPersonaNames::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames)
  // repeated fixed64 steamids = 1;
  for (int i = 0; i < this->steamids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(1, this->steamids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames)
  return target;
}

int CMsgGCGetPersonaNames::ByteSize() const {
  int total_size = 0;

  // repeated fixed64 steamids = 1;
  {
    int data_size = 0;
    data_size = 8 * this->steamids_size();
    total_size += 1 * this->steamids_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPersonaNames::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetPersonaNames* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPersonaNames>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetPersonaNames::MergeFrom(const CMsgGCGetPersonaNames& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  steamids_.MergeFrom(from.steamids_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetPersonaNames::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPersonaNames::CopyFrom(const CMsgGCGetPersonaNames& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPersonaNames::IsInitialized() const {

  return true;
}

void CMsgGCGetPersonaNames::Swap(CMsgGCGetPersonaNames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPersonaNames::InternalSwap(CMsgGCGetPersonaNames* other) {
  steamids_.UnsafeArenaSwap(&other->steamids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetPersonaNames_descriptor_;
  metadata.reflection = CMsgGCGetPersonaNames_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetPersonaNames

// repeated fixed64 steamids = 1;
int CMsgGCGetPersonaNames::steamids_size() const {
  return steamids_.size();
}
void CMsgGCGetPersonaNames::clear_steamids() {
  steamids_.Clear();
}
 ::google::protobuf::uint64 CMsgGCGetPersonaNames::steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPersonaNames.steamids)
  return steamids_.Get(index);
}
 void CMsgGCGetPersonaNames::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCGetPersonaNames.steamids)
}
 void CMsgGCGetPersonaNames::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCGetPersonaNames.steamids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetPersonaNames::steamids() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetPersonaNames.steamids)
  return steamids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetPersonaNames::mutable_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetPersonaNames.steamids)
  return &steamids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetPersonaNames_Response_PersonaName::kSteamidFieldNumber;
const int CMsgGCGetPersonaNames_Response_PersonaName::kPersonaNameFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetPersonaNames_Response_PersonaName::CMsgGCGetPersonaNames_Response_PersonaName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPersonaNames_Response.PersonaName)
}

void CMsgGCGetPersonaNames_Response_PersonaName::InitAsDefaultInstance() {
}

CMsgGCGetPersonaNames_Response_PersonaName::CMsgGCGetPersonaNames_Response_PersonaName(const CMsgGCGetPersonaNames_Response_PersonaName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames_Response.PersonaName)
}

void CMsgGCGetPersonaNames_Response_PersonaName::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetPersonaNames_Response_PersonaName::~CMsgGCGetPersonaNames_Response_PersonaName() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames_Response.PersonaName)
  SharedDtor();
}

void CMsgGCGetPersonaNames_Response_PersonaName::SharedDtor() {
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgGCGetPersonaNames_Response_PersonaName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames_Response_PersonaName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetPersonaNames_Response_PersonaName_descriptor_;
}

const CMsgGCGetPersonaNames_Response_PersonaName& CMsgGCGetPersonaNames_Response_PersonaName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response_PersonaName::default_instance_ = NULL;

CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response_PersonaName::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPersonaNames_Response_PersonaName* n = new CMsgGCGetPersonaNames_Response_PersonaName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPersonaNames_Response_PersonaName::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    steamid_ = GOOGLE_ULONGLONG(0);
    if (has_persona_name()) {
      persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetPersonaNames_Response_PersonaName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPersonaNames_Response.PersonaName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_persona_name;
        break;
      }

      // optional string persona_name = 2;
      case 2: {
        if (tag == 18) {
         parse_persona_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), this->persona_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetPersonaNames_Response.PersonaName.persona_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPersonaNames_Response.PersonaName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPersonaNames_Response.PersonaName)
  return false;
#undef DO_
}

void CMsgGCGetPersonaNames_Response_PersonaName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPersonaNames_Response.PersonaName)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional string persona_name = 2;
  if (has_persona_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), this->persona_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetPersonaNames_Response.PersonaName.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPersonaNames_Response.PersonaName)
}

::google::protobuf::uint8* CMsgGCGetPersonaNames_Response_PersonaName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames_Response.PersonaName)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional string persona_name = 2;
  if (has_persona_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), this->persona_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetPersonaNames_Response.PersonaName.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames_Response.PersonaName)
  return target;
}

int CMsgGCGetPersonaNames_Response_PersonaName::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional string persona_name = 2;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPersonaNames_Response_PersonaName::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetPersonaNames_Response_PersonaName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPersonaNames_Response_PersonaName>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetPersonaNames_Response_PersonaName::MergeFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_persona_name()) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetPersonaNames_Response_PersonaName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPersonaNames_Response_PersonaName::CopyFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPersonaNames_Response_PersonaName::IsInitialized() const {

  return true;
}

void CMsgGCGetPersonaNames_Response_PersonaName::Swap(CMsgGCGetPersonaNames_Response_PersonaName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPersonaNames_Response_PersonaName::InternalSwap(CMsgGCGetPersonaNames_Response_PersonaName* other) {
  std::swap(steamid_, other->steamid_);
  persona_name_.Swap(&other->persona_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames_Response_PersonaName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetPersonaNames_Response_PersonaName_descriptor_;
  metadata.reflection = CMsgGCGetPersonaNames_Response_PersonaName_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCGetPersonaNames_Response::kSucceededLookupsFieldNumber;
const int CMsgGCGetPersonaNames_Response::kFailedLookupSteamidsFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetPersonaNames_Response::CMsgGCGetPersonaNames_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPersonaNames_Response)
}

void CMsgGCGetPersonaNames_Response::InitAsDefaultInstance() {
}

CMsgGCGetPersonaNames_Response::CMsgGCGetPersonaNames_Response(const CMsgGCGetPersonaNames_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames_Response)
}

void CMsgGCGetPersonaNames_Response::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetPersonaNames_Response::~CMsgGCGetPersonaNames_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames_Response)
  SharedDtor();
}

void CMsgGCGetPersonaNames_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetPersonaNames_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetPersonaNames_Response_descriptor_;
}

const CMsgGCGetPersonaNames_Response& CMsgGCGetPersonaNames_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetPersonaNames_Response* CMsgGCGetPersonaNames_Response::default_instance_ = NULL;

CMsgGCGetPersonaNames_Response* CMsgGCGetPersonaNames_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPersonaNames_Response* n = new CMsgGCGetPersonaNames_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPersonaNames_Response::Clear() {
  succeeded_lookups_.Clear();
  failed_lookup_steamids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetPersonaNames_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPersonaNames_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_succeeded_lookups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_succeeded_lookups()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_succeeded_lookups;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(17)) goto parse_failed_lookup_steamids;
        break;
      }

      // repeated fixed64 failed_lookup_steamids = 2;
      case 2: {
        if (tag == 17) {
         parse_failed_lookup_steamids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17, input, this->mutable_failed_lookup_steamids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_failed_lookup_steamids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_failed_lookup_steamids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPersonaNames_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPersonaNames_Response)
  return false;
#undef DO_
}

void CMsgGCGetPersonaNames_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPersonaNames_Response)
  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  for (unsigned int i = 0, n = this->succeeded_lookups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->succeeded_lookups(i), output);
  }

  // repeated fixed64 failed_lookup_steamids = 2;
  for (int i = 0; i < this->failed_lookup_steamids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->failed_lookup_steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPersonaNames_Response)
}

::google::protobuf::uint8* CMsgGCGetPersonaNames_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames_Response)
  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  for (unsigned int i = 0, n = this->succeeded_lookups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->succeeded_lookups(i), target);
  }

  // repeated fixed64 failed_lookup_steamids = 2;
  for (int i = 0; i < this->failed_lookup_steamids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(2, this->failed_lookup_steamids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames_Response)
  return target;
}

int CMsgGCGetPersonaNames_Response::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  total_size += 1 * this->succeeded_lookups_size();
  for (int i = 0; i < this->succeeded_lookups_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->succeeded_lookups(i));
  }

  // repeated fixed64 failed_lookup_steamids = 2;
  {
    int data_size = 0;
    data_size = 8 * this->failed_lookup_steamids_size();
    total_size += 1 * this->failed_lookup_steamids_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPersonaNames_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetPersonaNames_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPersonaNames_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetPersonaNames_Response::MergeFrom(const CMsgGCGetPersonaNames_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  succeeded_lookups_.MergeFrom(from.succeeded_lookups_);
  failed_lookup_steamids_.MergeFrom(from.failed_lookup_steamids_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetPersonaNames_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPersonaNames_Response::CopyFrom(const CMsgGCGetPersonaNames_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPersonaNames_Response::IsInitialized() const {

  return true;
}

void CMsgGCGetPersonaNames_Response::Swap(CMsgGCGetPersonaNames_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPersonaNames_Response::InternalSwap(CMsgGCGetPersonaNames_Response* other) {
  succeeded_lookups_.UnsafeArenaSwap(&other->succeeded_lookups_);
  failed_lookup_steamids_.UnsafeArenaSwap(&other->failed_lookup_steamids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetPersonaNames_Response_descriptor_;
  metadata.reflection = CMsgGCGetPersonaNames_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetPersonaNames_Response_PersonaName

// optional fixed64 steamid = 1;
bool CMsgGCGetPersonaNames_Response_PersonaName::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetPersonaNames_Response_PersonaName::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetPersonaNames_Response_PersonaName::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetPersonaNames_Response_PersonaName::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgGCGetPersonaNames_Response_PersonaName::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPersonaNames_Response.PersonaName.steamid)
  return steamid_;
}
 void CMsgGCGetPersonaNames_Response_PersonaName::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetPersonaNames_Response.PersonaName.steamid)
}

// optional string persona_name = 2;
bool CMsgGCGetPersonaNames_Response_PersonaName::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCGetPersonaNames_Response_PersonaName::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCGetPersonaNames_Response_PersonaName::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCGetPersonaNames_Response_PersonaName::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona_name();
}
 const ::std::string& CMsgGCGetPersonaNames_Response_PersonaName::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
  return persona_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}
 void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const char* value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}
 void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}
 ::std::string* CMsgGCGetPersonaNames_Response_PersonaName::mutable_persona_name() {
  set_has_persona_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCGetPersonaNames_Response_PersonaName::release_persona_name() {
  clear_has_persona_name();
  return persona_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCGetPersonaNames_Response_PersonaName::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != NULL) {
    set_has_persona_name();
  } else {
    clear_has_persona_name();
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}

// -------------------------------------------------------------------

// CMsgGCGetPersonaNames_Response

// repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
int CMsgGCGetPersonaNames_Response::succeeded_lookups_size() const {
  return succeeded_lookups_.size();
}
void CMsgGCGetPersonaNames_Response::clear_succeeded_lookups() {
  succeeded_lookups_.Clear();
}
const ::CMsgGCGetPersonaNames_Response_PersonaName& CMsgGCGetPersonaNames_Response::succeeded_lookups(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_.Get(index);
}
::CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response::mutable_succeeded_lookups(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_.Mutable(index);
}
::CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response::add_succeeded_lookups() {
  // @@protoc_insertion_point(field_add:CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgGCGetPersonaNames_Response_PersonaName >*
CMsgGCGetPersonaNames_Response::mutable_succeeded_lookups() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return &succeeded_lookups_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgGCGetPersonaNames_Response_PersonaName >&
CMsgGCGetPersonaNames_Response::succeeded_lookups() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_;
}

// repeated fixed64 failed_lookup_steamids = 2;
int CMsgGCGetPersonaNames_Response::failed_lookup_steamids_size() const {
  return failed_lookup_steamids_.size();
}
void CMsgGCGetPersonaNames_Response::clear_failed_lookup_steamids() {
  failed_lookup_steamids_.Clear();
}
 ::google::protobuf::uint64 CMsgGCGetPersonaNames_Response::failed_lookup_steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
  return failed_lookup_steamids_.Get(index);
}
 void CMsgGCGetPersonaNames_Response::set_failed_lookup_steamids(int index, ::google::protobuf::uint64 value) {
  failed_lookup_steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
}
 void CMsgGCGetPersonaNames_Response::add_failed_lookup_steamids(::google::protobuf::uint64 value) {
  failed_lookup_steamids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetPersonaNames_Response::failed_lookup_steamids() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
  return failed_lookup_steamids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetPersonaNames_Response::mutable_failed_lookup_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
  return &failed_lookup_steamids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCCheckFriendship::kSteamidLeftFieldNumber;
const int CMsgGCCheckFriendship::kSteamidRightFieldNumber;
#endif  // !_MSC_VER

CMsgGCCheckFriendship::CMsgGCCheckFriendship()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCCheckFriendship)
}

void CMsgGCCheckFriendship::InitAsDefaultInstance() {
}

CMsgGCCheckFriendship::CMsgGCCheckFriendship(const CMsgGCCheckFriendship& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckFriendship)
}

void CMsgGCCheckFriendship::SharedCtor() {
  _cached_size_ = 0;
  steamid_left_ = GOOGLE_ULONGLONG(0);
  steamid_right_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCCheckFriendship::~CMsgGCCheckFriendship() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckFriendship)
  SharedDtor();
}

void CMsgGCCheckFriendship::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCCheckFriendship::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckFriendship::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCCheckFriendship_descriptor_;
}

const CMsgGCCheckFriendship& CMsgGCCheckFriendship::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCCheckFriendship* CMsgGCCheckFriendship::default_instance_ = NULL;

CMsgGCCheckFriendship* CMsgGCCheckFriendship::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckFriendship* n = new CMsgGCCheckFriendship;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckFriendship::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgGCCheckFriendship*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(steamid_left_, steamid_right_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCCheckFriendship::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCCheckFriendship)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_left = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_left_)));
          set_has_steamid_left();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_steamid_right;
        break;
      }

      // optional fixed64 steamid_right = 2;
      case 2: {
        if (tag == 17) {
         parse_steamid_right:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_right_)));
          set_has_steamid_right();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCCheckFriendship)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCCheckFriendship)
  return false;
#undef DO_
}

void CMsgGCCheckFriendship::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCCheckFriendship)
  // optional fixed64 steamid_left = 1;
  if (has_steamid_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_left(), output);
  }

  // optional fixed64 steamid_right = 2;
  if (has_steamid_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamid_right(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCCheckFriendship)
}

::google::protobuf::uint8* CMsgGCCheckFriendship::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckFriendship)
  // optional fixed64 steamid_left = 1;
  if (has_steamid_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_left(), target);
  }

  // optional fixed64 steamid_right = 2;
  if (has_steamid_right()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamid_right(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckFriendship)
  return target;
}

int CMsgGCCheckFriendship::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid_left = 1;
    if (has_steamid_left()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steamid_right = 2;
    if (has_steamid_right()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckFriendship::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCCheckFriendship* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckFriendship>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCCheckFriendship::MergeFrom(const CMsgGCCheckFriendship& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid_left()) {
      set_steamid_left(from.steamid_left());
    }
    if (from.has_steamid_right()) {
      set_steamid_right(from.steamid_right());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCCheckFriendship::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckFriendship::CopyFrom(const CMsgGCCheckFriendship& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckFriendship::IsInitialized() const {

  return true;
}

void CMsgGCCheckFriendship::Swap(CMsgGCCheckFriendship* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckFriendship::InternalSwap(CMsgGCCheckFriendship* other) {
  std::swap(steamid_left_, other->steamid_left_);
  std::swap(steamid_right_, other->steamid_right_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckFriendship::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCCheckFriendship_descriptor_;
  metadata.reflection = CMsgGCCheckFriendship_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCCheckFriendship

// optional fixed64 steamid_left = 1;
bool CMsgGCCheckFriendship::has_steamid_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCCheckFriendship::set_has_steamid_left() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCCheckFriendship::clear_has_steamid_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCCheckFriendship::clear_steamid_left() {
  steamid_left_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_left();
}
 ::google::protobuf::uint64 CMsgGCCheckFriendship::steamid_left() const {
  // @@protoc_insertion_point(field_get:CMsgGCCheckFriendship.steamid_left)
  return steamid_left_;
}
 void CMsgGCCheckFriendship::set_steamid_left(::google::protobuf::uint64 value) {
  set_has_steamid_left();
  steamid_left_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCCheckFriendship.steamid_left)
}

// optional fixed64 steamid_right = 2;
bool CMsgGCCheckFriendship::has_steamid_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCCheckFriendship::set_has_steamid_right() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCCheckFriendship::clear_has_steamid_right() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCCheckFriendship::clear_steamid_right() {
  steamid_right_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_right();
}
 ::google::protobuf::uint64 CMsgGCCheckFriendship::steamid_right() const {
  // @@protoc_insertion_point(field_get:CMsgGCCheckFriendship.steamid_right)
  return steamid_right_;
}
 void CMsgGCCheckFriendship::set_steamid_right(::google::protobuf::uint64 value) {
  set_has_steamid_right();
  steamid_right_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCCheckFriendship.steamid_right)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCCheckFriendship_Response::kSuccessFieldNumber;
const int CMsgGCCheckFriendship_Response::kFoundFriendshipFieldNumber;
#endif  // !_MSC_VER

CMsgGCCheckFriendship_Response::CMsgGCCheckFriendship_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCCheckFriendship_Response)
}

void CMsgGCCheckFriendship_Response::InitAsDefaultInstance() {
}

CMsgGCCheckFriendship_Response::CMsgGCCheckFriendship_Response(const CMsgGCCheckFriendship_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckFriendship_Response)
}

void CMsgGCCheckFriendship_Response::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  found_friendship_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCCheckFriendship_Response::~CMsgGCCheckFriendship_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckFriendship_Response)
  SharedDtor();
}

void CMsgGCCheckFriendship_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCCheckFriendship_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckFriendship_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCCheckFriendship_Response_descriptor_;
}

const CMsgGCCheckFriendship_Response& CMsgGCCheckFriendship_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCCheckFriendship_Response* CMsgGCCheckFriendship_Response::default_instance_ = NULL;

CMsgGCCheckFriendship_Response* CMsgGCCheckFriendship_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckFriendship_Response* n = new CMsgGCCheckFriendship_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckFriendship_Response::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgGCCheckFriendship_Response*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(success_, found_friendship_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCCheckFriendship_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCCheckFriendship_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_found_friendship;
        break;
      }

      // optional bool found_friendship = 2;
      case 2: {
        if (tag == 16) {
         parse_found_friendship:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &found_friendship_)));
          set_has_found_friendship();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCCheckFriendship_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCCheckFriendship_Response)
  return false;
#undef DO_
}

void CMsgGCCheckFriendship_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCCheckFriendship_Response)
  // optional bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional bool found_friendship = 2;
  if (has_found_friendship()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->found_friendship(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCCheckFriendship_Response)
}

::google::protobuf::uint8* CMsgGCCheckFriendship_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckFriendship_Response)
  // optional bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional bool found_friendship = 2;
  if (has_found_friendship()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->found_friendship(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckFriendship_Response)
  return target;
}

int CMsgGCCheckFriendship_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

    // optional bool found_friendship = 2;
    if (has_found_friendship()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckFriendship_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCCheckFriendship_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckFriendship_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCCheckFriendship_Response::MergeFrom(const CMsgGCCheckFriendship_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_found_friendship()) {
      set_found_friendship(from.found_friendship());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCCheckFriendship_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckFriendship_Response::CopyFrom(const CMsgGCCheckFriendship_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckFriendship_Response::IsInitialized() const {

  return true;
}

void CMsgGCCheckFriendship_Response::Swap(CMsgGCCheckFriendship_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckFriendship_Response::InternalSwap(CMsgGCCheckFriendship_Response* other) {
  std::swap(success_, other->success_);
  std::swap(found_friendship_, other->found_friendship_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckFriendship_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCCheckFriendship_Response_descriptor_;
  metadata.reflection = CMsgGCCheckFriendship_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCCheckFriendship_Response

// optional bool success = 1;
bool CMsgGCCheckFriendship_Response::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCCheckFriendship_Response::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCCheckFriendship_Response::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCCheckFriendship_Response::clear_success() {
  success_ = false;
  clear_has_success();
}
 bool CMsgGCCheckFriendship_Response::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCCheckFriendship_Response.success)
  return success_;
}
 void CMsgGCCheckFriendship_Response::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCCheckFriendship_Response.success)
}

// optional bool found_friendship = 2;
bool CMsgGCCheckFriendship_Response::has_found_friendship() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCCheckFriendship_Response::set_has_found_friendship() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCCheckFriendship_Response::clear_has_found_friendship() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCCheckFriendship_Response::clear_found_friendship() {
  found_friendship_ = false;
  clear_has_found_friendship();
}
 bool CMsgGCCheckFriendship_Response::found_friendship() const {
  // @@protoc_insertion_point(field_get:CMsgGCCheckFriendship_Response.found_friendship)
  return found_friendship_;
}
 void CMsgGCCheckFriendship_Response::set_found_friendship(bool value) {
  set_has_found_friendship();
  found_friendship_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCCheckFriendship_Response.found_friendship)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetAppFriendsList::kSteamidFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetAppFriendsList::CMsgGCGetAppFriendsList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetAppFriendsList)
}

void CMsgGCGetAppFriendsList::InitAsDefaultInstance() {
}

CMsgGCGetAppFriendsList::CMsgGCGetAppFriendsList(const CMsgGCGetAppFriendsList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetAppFriendsList)
}

void CMsgGCGetAppFriendsList::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetAppFriendsList::~CMsgGCGetAppFriendsList() {
  // @@protoc_insertion_point(destructor:CMsgGCGetAppFriendsList)
  SharedDtor();
}

void CMsgGCGetAppFriendsList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetAppFriendsList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetAppFriendsList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetAppFriendsList_descriptor_;
}

const CMsgGCGetAppFriendsList& CMsgGCGetAppFriendsList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetAppFriendsList* CMsgGCGetAppFriendsList::default_instance_ = NULL;

CMsgGCGetAppFriendsList* CMsgGCGetAppFriendsList::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetAppFriendsList* n = new CMsgGCGetAppFriendsList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetAppFriendsList::Clear() {
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetAppFriendsList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetAppFriendsList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetAppFriendsList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetAppFriendsList)
  return false;
#undef DO_
}

void CMsgGCGetAppFriendsList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetAppFriendsList)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetAppFriendsList)
}

::google::protobuf::uint8* CMsgGCGetAppFriendsList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetAppFriendsList)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetAppFriendsList)
  return target;
}

int CMsgGCGetAppFriendsList::ByteSize() const {
  int total_size = 0;

  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetAppFriendsList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetAppFriendsList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetAppFriendsList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetAppFriendsList::MergeFrom(const CMsgGCGetAppFriendsList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetAppFriendsList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetAppFriendsList::CopyFrom(const CMsgGCGetAppFriendsList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetAppFriendsList::IsInitialized() const {

  return true;
}

void CMsgGCGetAppFriendsList::Swap(CMsgGCGetAppFriendsList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetAppFriendsList::InternalSwap(CMsgGCGetAppFriendsList* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetAppFriendsList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetAppFriendsList_descriptor_;
  metadata.reflection = CMsgGCGetAppFriendsList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetAppFriendsList

// optional fixed64 steamid = 1;
bool CMsgGCGetAppFriendsList::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetAppFriendsList::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetAppFriendsList::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetAppFriendsList::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgGCGetAppFriendsList::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetAppFriendsList.steamid)
  return steamid_;
}
 void CMsgGCGetAppFriendsList::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetAppFriendsList.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetAppFriendsList_Response::kSuccessFieldNumber;
const int CMsgGCGetAppFriendsList_Response::kSteamidsFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetAppFriendsList_Response::CMsgGCGetAppFriendsList_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetAppFriendsList_Response)
}

void CMsgGCGetAppFriendsList_Response::InitAsDefaultInstance() {
}

CMsgGCGetAppFriendsList_Response::CMsgGCGetAppFriendsList_Response(const CMsgGCGetAppFriendsList_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetAppFriendsList_Response)
}

void CMsgGCGetAppFriendsList_Response::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetAppFriendsList_Response::~CMsgGCGetAppFriendsList_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCGetAppFriendsList_Response)
  SharedDtor();
}

void CMsgGCGetAppFriendsList_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetAppFriendsList_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetAppFriendsList_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetAppFriendsList_Response_descriptor_;
}

const CMsgGCGetAppFriendsList_Response& CMsgGCGetAppFriendsList_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetAppFriendsList_Response* CMsgGCGetAppFriendsList_Response::default_instance_ = NULL;

CMsgGCGetAppFriendsList_Response* CMsgGCGetAppFriendsList_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetAppFriendsList_Response* n = new CMsgGCGetAppFriendsList_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetAppFriendsList_Response::Clear() {
  success_ = false;
  steamids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetAppFriendsList_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetAppFriendsList_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_steamids;
        break;
      }

      // repeated fixed64 steamids = 2;
      case 2: {
        if (tag == 17) {
         parse_steamids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17, input, this->mutable_steamids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_steamids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetAppFriendsList_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetAppFriendsList_Response)
  return false;
#undef DO_
}

void CMsgGCGetAppFriendsList_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetAppFriendsList_Response)
  // optional bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated fixed64 steamids = 2;
  for (int i = 0; i < this->steamids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetAppFriendsList_Response)
}

::google::protobuf::uint8* CMsgGCGetAppFriendsList_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetAppFriendsList_Response)
  // optional bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated fixed64 steamids = 2;
  for (int i = 0; i < this->steamids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(2, this->steamids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetAppFriendsList_Response)
  return target;
}

int CMsgGCGetAppFriendsList_Response::ByteSize() const {
  int total_size = 0;

  // optional bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }

  // repeated fixed64 steamids = 2;
  {
    int data_size = 0;
    data_size = 8 * this->steamids_size();
    total_size += 1 * this->steamids_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetAppFriendsList_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetAppFriendsList_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetAppFriendsList_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetAppFriendsList_Response::MergeFrom(const CMsgGCGetAppFriendsList_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  steamids_.MergeFrom(from.steamids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetAppFriendsList_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetAppFriendsList_Response::CopyFrom(const CMsgGCGetAppFriendsList_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetAppFriendsList_Response::IsInitialized() const {

  return true;
}

void CMsgGCGetAppFriendsList_Response::Swap(CMsgGCGetAppFriendsList_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetAppFriendsList_Response::InternalSwap(CMsgGCGetAppFriendsList_Response* other) {
  std::swap(success_, other->success_);
  steamids_.UnsafeArenaSwap(&other->steamids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetAppFriendsList_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetAppFriendsList_Response_descriptor_;
  metadata.reflection = CMsgGCGetAppFriendsList_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetAppFriendsList_Response

// optional bool success = 1;
bool CMsgGCGetAppFriendsList_Response::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetAppFriendsList_Response::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetAppFriendsList_Response::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetAppFriendsList_Response::clear_success() {
  success_ = false;
  clear_has_success();
}
 bool CMsgGCGetAppFriendsList_Response::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetAppFriendsList_Response.success)
  return success_;
}
 void CMsgGCGetAppFriendsList_Response::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetAppFriendsList_Response.success)
}

// repeated fixed64 steamids = 2;
int CMsgGCGetAppFriendsList_Response::steamids_size() const {
  return steamids_.size();
}
void CMsgGCGetAppFriendsList_Response::clear_steamids() {
  steamids_.Clear();
}
 ::google::protobuf::uint64 CMsgGCGetAppFriendsList_Response::steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetAppFriendsList_Response.steamids)
  return steamids_.Get(index);
}
 void CMsgGCGetAppFriendsList_Response::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCGetAppFriendsList_Response.steamids)
}
 void CMsgGCGetAppFriendsList_Response::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCGetAppFriendsList_Response.steamids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetAppFriendsList_Response::steamids() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetAppFriendsList_Response.steamids)
  return steamids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetAppFriendsList_Response::mutable_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetAppFriendsList_Response.steamids)
  return &steamids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetDirectory_SubGC::kDirIndexFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kNameFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kBoxFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kCommandLineFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kGcBinaryFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetDirectory_SubGC::CMsgGCMsgMasterSetDirectory_SubGC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetDirectory.SubGC)
}

void CMsgGCMsgMasterSetDirectory_SubGC::InitAsDefaultInstance() {
}

CMsgGCMsgMasterSetDirectory_SubGC::CMsgGCMsgMasterSetDirectory_SubGC(const CMsgGCMsgMasterSetDirectory_SubGC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory.SubGC)
}

void CMsgGCMsgMasterSetDirectory_SubGC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dir_index_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gc_binary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetDirectory_SubGC::~CMsgGCMsgMasterSetDirectory_SubGC() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory.SubGC)
  SharedDtor();
}

void CMsgGCMsgMasterSetDirectory_SubGC::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  box_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gc_binary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgGCMsgMasterSetDirectory_SubGC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory_SubGC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetDirectory_SubGC_descriptor_;
}

const CMsgGCMsgMasterSetDirectory_SubGC& CMsgGCMsgMasterSetDirectory_SubGC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory_SubGC::default_instance_ = NULL;

CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory_SubGC::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetDirectory_SubGC* n = new CMsgGCMsgMasterSetDirectory_SubGC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetDirectory_SubGC::Clear() {
  if (_has_bits_[0 / 32] & 31u) {
    dir_index_ = 0u;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_box()) {
      box_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_command_line()) {
      command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_gc_binary()) {
      gc_binary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetDirectory_SubGC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetDirectory.SubGC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dir_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_index_)));
          set_has_dir_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_box;
        break;
      }

      // optional string box = 3;
      case 3: {
        if (tag == 26) {
         parse_box:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_box()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->box().data(), this->box().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.box");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_command_line;
        break;
      }

      // optional string command_line = 4;
      case 4: {
        if (tag == 34) {
         parse_command_line:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_line()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command_line().data(), this->command_line().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.command_line");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_gc_binary;
        break;
      }

      // optional string gc_binary = 5;
      case 5: {
        if (tag == 42) {
         parse_gc_binary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gc_binary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gc_binary().data(), this->gc_binary().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.gc_binary");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetDirectory.SubGC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetDirectory.SubGC)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetDirectory_SubGC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetDirectory.SubGC)
  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dir_index(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string box = 3;
  if (has_box()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->box().data(), this->box().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.box");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->box(), output);
  }

  // optional string command_line = 4;
  if (has_command_line()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_line().data(), this->command_line().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.command_line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->command_line(), output);
  }

  // optional string gc_binary = 5;
  if (has_gc_binary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gc_binary().data(), this->gc_binary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.gc_binary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gc_binary(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetDirectory.SubGC)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetDirectory_SubGC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory.SubGC)
  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dir_index(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string box = 3;
  if (has_box()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->box().data(), this->box().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.box");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->box(), target);
  }

  // optional string command_line = 4;
  if (has_command_line()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_line().data(), this->command_line().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.command_line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->command_line(), target);
  }

  // optional string gc_binary = 5;
  if (has_gc_binary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gc_binary().data(), this->gc_binary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.gc_binary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gc_binary(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory.SubGC)
  return target;
}

int CMsgGCMsgMasterSetDirectory_SubGC::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 dir_index = 1;
    if (has_dir_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dir_index());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string box = 3;
    if (has_box()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->box());
    }

    // optional string command_line = 4;
    if (has_command_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command_line());
    }

    // optional string gc_binary = 5;
    if (has_gc_binary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gc_binary());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetDirectory_SubGC::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetDirectory_SubGC* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetDirectory_SubGC>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetDirectory_SubGC::MergeFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dir_index()) {
      set_dir_index(from.dir_index());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_box()) {
      set_has_box();
      box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.box_);
    }
    if (from.has_command_line()) {
      set_has_command_line();
      command_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line_);
    }
    if (from.has_gc_binary()) {
      set_has_gc_binary();
      gc_binary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gc_binary_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetDirectory_SubGC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetDirectory_SubGC::CopyFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetDirectory_SubGC::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetDirectory_SubGC::Swap(CMsgGCMsgMasterSetDirectory_SubGC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetDirectory_SubGC::InternalSwap(CMsgGCMsgMasterSetDirectory_SubGC* other) {
  std::swap(dir_index_, other->dir_index_);
  name_.Swap(&other->name_);
  box_.Swap(&other->box_);
  command_line_.Swap(&other->command_line_);
  gc_binary_.Swap(&other->gc_binary_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory_SubGC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetDirectory_SubGC_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetDirectory_SubGC_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetDirectory::kMasterDirIndexFieldNumber;
const int CMsgGCMsgMasterSetDirectory::kDirFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetDirectory::CMsgGCMsgMasterSetDirectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetDirectory)
}

void CMsgGCMsgMasterSetDirectory::InitAsDefaultInstance() {
}

CMsgGCMsgMasterSetDirectory::CMsgGCMsgMasterSetDirectory(const CMsgGCMsgMasterSetDirectory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory)
}

void CMsgGCMsgMasterSetDirectory::SharedCtor() {
  _cached_size_ = 0;
  master_dir_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetDirectory::~CMsgGCMsgMasterSetDirectory() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory)
  SharedDtor();
}

void CMsgGCMsgMasterSetDirectory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgMasterSetDirectory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetDirectory_descriptor_;
}

const CMsgGCMsgMasterSetDirectory& CMsgGCMsgMasterSetDirectory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetDirectory* CMsgGCMsgMasterSetDirectory::default_instance_ = NULL;

CMsgGCMsgMasterSetDirectory* CMsgGCMsgMasterSetDirectory::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetDirectory* n = new CMsgGCMsgMasterSetDirectory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetDirectory::Clear() {
  master_dir_index_ = 0u;
  dir_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetDirectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetDirectory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 master_dir_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_dir_index_)));
          set_has_master_dir_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dir;
        break;
      }

      // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
      case 2: {
        if (tag == 18) {
         parse_dir:
          DO_(input->IncrementRecursionDepth());
         parse_loop_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_dir;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetDirectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetDirectory)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetDirectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetDirectory)
  // optional uint32 master_dir_index = 1;
  if (has_master_dir_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->master_dir_index(), output);
  }

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  for (unsigned int i = 0, n = this->dir_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dir(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetDirectory)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetDirectory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory)
  // optional uint32 master_dir_index = 1;
  if (has_master_dir_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->master_dir_index(), target);
  }

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  for (unsigned int i = 0, n = this->dir_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dir(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory)
  return target;
}

int CMsgGCMsgMasterSetDirectory::ByteSize() const {
  int total_size = 0;

  // optional uint32 master_dir_index = 1;
  if (has_master_dir_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master_dir_index());
  }

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  total_size += 1 * this->dir_size();
  for (int i = 0; i < this->dir_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dir(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetDirectory::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetDirectory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetDirectory>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetDirectory::MergeFrom(const CMsgGCMsgMasterSetDirectory& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  dir_.MergeFrom(from.dir_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_master_dir_index()) {
      set_master_dir_index(from.master_dir_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetDirectory::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetDirectory::CopyFrom(const CMsgGCMsgMasterSetDirectory& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetDirectory::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetDirectory::Swap(CMsgGCMsgMasterSetDirectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetDirectory::InternalSwap(CMsgGCMsgMasterSetDirectory* other) {
  std::swap(master_dir_index_, other->master_dir_index_);
  dir_.UnsafeArenaSwap(&other->dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetDirectory_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetDirectory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgMasterSetDirectory_SubGC

// optional uint32 dir_index = 1;
bool CMsgGCMsgMasterSetDirectory_SubGC::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgMasterSetDirectory_SubGC::set_has_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
 ::google::protobuf::uint32 CMsgGCMsgMasterSetDirectory_SubGC::dir_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory.SubGC.dir_index)
  return dir_index_;
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetDirectory.SubGC.dir_index)
}

// optional string name = 2;
bool CMsgGCMsgMasterSetDirectory_SubGC::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCMsgMasterSetDirectory_SubGC::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory.SubGC.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetDirectory.SubGC.name)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMsgMasterSetDirectory.SubGC.name)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMsgMasterSetDirectory.SubGC.name)
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetDirectory.SubGC.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetDirectory.SubGC.name)
}

// optional string box = 3;
bool CMsgGCMsgMasterSetDirectory_SubGC::has_box() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCMsgMasterSetDirectory_SubGC::set_has_box() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_box() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_box() {
  box_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_box();
}
 const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::box() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory.SubGC.box)
  return box_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const ::std::string& value) {
  set_has_box();
  box_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetDirectory.SubGC.box)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const char* value) {
  set_has_box();
  box_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMsgMasterSetDirectory.SubGC.box)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const char* value, size_t size) {
  set_has_box();
  box_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMsgMasterSetDirectory.SubGC.box)
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_box() {
  set_has_box();
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetDirectory.SubGC.box)
  return box_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_box() {
  clear_has_box();
  return box_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_box(::std::string* box) {
  if (box != NULL) {
    set_has_box();
  } else {
    clear_has_box();
  }
  box_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), box);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetDirectory.SubGC.box)
}

// optional string command_line = 4;
bool CMsgGCMsgMasterSetDirectory_SubGC::has_command_line() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCMsgMasterSetDirectory_SubGC::set_has_command_line() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_command_line() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_command_line() {
  command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command_line();
}
 const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::command_line() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory.SubGC.command_line)
  return command_line_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const ::std::string& value) {
  set_has_command_line();
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const char* value) {
  set_has_command_line();
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const char* value, size_t size) {
  set_has_command_line();
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_command_line() {
  set_has_command_line();
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetDirectory.SubGC.command_line)
  return command_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_command_line() {
  clear_has_command_line();
  return command_line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_command_line(::std::string* command_line) {
  if (command_line != NULL) {
    set_has_command_line();
  } else {
    clear_has_command_line();
  }
  command_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_line);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}

// optional string gc_binary = 5;
bool CMsgGCMsgMasterSetDirectory_SubGC::has_gc_binary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGCMsgMasterSetDirectory_SubGC::set_has_gc_binary() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_gc_binary() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGCMsgMasterSetDirectory_SubGC::clear_gc_binary() {
  gc_binary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gc_binary();
}
 const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::gc_binary() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
  return gc_binary_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const ::std::string& value) {
  set_has_gc_binary();
  gc_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const char* value) {
  set_has_gc_binary();
  gc_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const char* value, size_t size) {
  set_has_gc_binary();
  gc_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_gc_binary() {
  set_has_gc_binary();
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
  return gc_binary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_gc_binary() {
  clear_has_gc_binary();
  return gc_binary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_gc_binary(::std::string* gc_binary) {
  if (gc_binary != NULL) {
    set_has_gc_binary();
  } else {
    clear_has_gc_binary();
  }
  gc_binary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gc_binary);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetDirectory

// optional uint32 master_dir_index = 1;
bool CMsgGCMsgMasterSetDirectory::has_master_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgMasterSetDirectory::set_has_master_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgMasterSetDirectory::clear_has_master_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgMasterSetDirectory::clear_master_dir_index() {
  master_dir_index_ = 0u;
  clear_has_master_dir_index();
}
 ::google::protobuf::uint32 CMsgGCMsgMasterSetDirectory::master_dir_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory.master_dir_index)
  return master_dir_index_;
}
 void CMsgGCMsgMasterSetDirectory::set_master_dir_index(::google::protobuf::uint32 value) {
  set_has_master_dir_index();
  master_dir_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetDirectory.master_dir_index)
}

// repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
int CMsgGCMsgMasterSetDirectory::dir_size() const {
  return dir_.size();
}
void CMsgGCMsgMasterSetDirectory::clear_dir() {
  dir_.Clear();
}
const ::CMsgGCMsgMasterSetDirectory_SubGC& CMsgGCMsgMasterSetDirectory::dir(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory.dir)
  return dir_.Get(index);
}
::CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory::mutable_dir(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetDirectory.dir)
  return dir_.Mutable(index);
}
::CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory::add_dir() {
  // @@protoc_insertion_point(field_add:CMsgGCMsgMasterSetDirectory.dir)
  return dir_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetDirectory_SubGC >*
CMsgGCMsgMasterSetDirectory::mutable_dir() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMsgMasterSetDirectory.dir)
  return &dir_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetDirectory_SubGC >&
CMsgGCMsgMasterSetDirectory::dir() const {
  // @@protoc_insertion_point(field_list:CMsgGCMsgMasterSetDirectory.dir)
  return dir_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetDirectory_Response::kEresultFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetDirectory_Response::CMsgGCMsgMasterSetDirectory_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetDirectory_Response)
}

void CMsgGCMsgMasterSetDirectory_Response::InitAsDefaultInstance() {
}

CMsgGCMsgMasterSetDirectory_Response::CMsgGCMsgMasterSetDirectory_Response(const CMsgGCMsgMasterSetDirectory_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory_Response)
}

void CMsgGCMsgMasterSetDirectory_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetDirectory_Response::~CMsgGCMsgMasterSetDirectory_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory_Response)
  SharedDtor();
}

void CMsgGCMsgMasterSetDirectory_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgMasterSetDirectory_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetDirectory_Response_descriptor_;
}

const CMsgGCMsgMasterSetDirectory_Response& CMsgGCMsgMasterSetDirectory_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetDirectory_Response* CMsgGCMsgMasterSetDirectory_Response::default_instance_ = NULL;

CMsgGCMsgMasterSetDirectory_Response* CMsgGCMsgMasterSetDirectory_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetDirectory_Response* n = new CMsgGCMsgMasterSetDirectory_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetDirectory_Response::Clear() {
  eresult_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetDirectory_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetDirectory_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetDirectory_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetDirectory_Response)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetDirectory_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetDirectory_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetDirectory_Response)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetDirectory_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory_Response)
  return target;
}

int CMsgGCMsgMasterSetDirectory_Response::ByteSize() const {
  int total_size = 0;

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetDirectory_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetDirectory_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetDirectory_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetDirectory_Response::MergeFrom(const CMsgGCMsgMasterSetDirectory_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetDirectory_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetDirectory_Response::CopyFrom(const CMsgGCMsgMasterSetDirectory_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetDirectory_Response::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetDirectory_Response::Swap(CMsgGCMsgMasterSetDirectory_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetDirectory_Response::InternalSwap(CMsgGCMsgMasterSetDirectory_Response* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetDirectory_Response_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetDirectory_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgMasterSetDirectory_Response

// optional int32 eresult = 1 [default = 2];
bool CMsgGCMsgMasterSetDirectory_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgMasterSetDirectory_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgMasterSetDirectory_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgMasterSetDirectory_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
 ::google::protobuf::int32 CMsgGCMsgMasterSetDirectory_Response::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetDirectory_Response.eresult)
  return eresult_;
}
 void CMsgGCMsgMasterSetDirectory_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetDirectory_Response.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCMsgWebAPIJobRequestForwardResponse::kDirIndexFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgWebAPIJobRequestForwardResponse::CMsgGCMsgWebAPIJobRequestForwardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::InitAsDefaultInstance() {
}

CMsgGCMsgWebAPIJobRequestForwardResponse::CMsgGCMsgWebAPIJobRequestForwardResponse(const CMsgGCMsgWebAPIJobRequestForwardResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SharedCtor() {
  _cached_size_ = 0;
  dir_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgWebAPIJobRequestForwardResponse::~CMsgGCMsgWebAPIJobRequestForwardResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
  SharedDtor();
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgWebAPIJobRequestForwardResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgWebAPIJobRequestForwardResponse_descriptor_;
}

const CMsgGCMsgWebAPIJobRequestForwardResponse& CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgWebAPIJobRequestForwardResponse* CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance_ = NULL;

CMsgGCMsgWebAPIJobRequestForwardResponse* CMsgGCMsgWebAPIJobRequestForwardResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgWebAPIJobRequestForwardResponse* n = new CMsgGCMsgWebAPIJobRequestForwardResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::Clear() {
  dir_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgWebAPIJobRequestForwardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dir_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_index_)));
          set_has_dir_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgWebAPIJobRequestForwardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgWebAPIJobRequestForwardResponse)
  return false;
#undef DO_
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dir_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgWebAPIJobRequestForwardResponse)
}

::google::protobuf::uint8* CMsgGCMsgWebAPIJobRequestForwardResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dir_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgWebAPIJobRequestForwardResponse)
  return target;
}

int CMsgGCMsgWebAPIJobRequestForwardResponse::ByteSize() const {
  int total_size = 0;

  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dir_index());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgWebAPIJobRequestForwardResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgWebAPIJobRequestForwardResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::MergeFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dir_index()) {
      set_dir_index(from.dir_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::CopyFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgWebAPIJobRequestForwardResponse::IsInitialized() const {

  return true;
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::Swap(CMsgGCMsgWebAPIJobRequestForwardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgWebAPIJobRequestForwardResponse::InternalSwap(CMsgGCMsgWebAPIJobRequestForwardResponse* other) {
  std::swap(dir_index_, other->dir_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgWebAPIJobRequestForwardResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgWebAPIJobRequestForwardResponse_descriptor_;
  metadata.reflection = CMsgGCMsgWebAPIJobRequestForwardResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgWebAPIJobRequestForwardResponse

// optional uint32 dir_index = 1;
bool CMsgGCMsgWebAPIJobRequestForwardResponse::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgWebAPIJobRequestForwardResponse::set_has_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgWebAPIJobRequestForwardResponse::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgWebAPIJobRequestForwardResponse::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
 ::google::protobuf::uint32 CMsgGCMsgWebAPIJobRequestForwardResponse::dir_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgWebAPIJobRequestForwardResponse.dir_index)
  return dir_index_;
}
 void CMsgGCMsgWebAPIJobRequestForwardResponse::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgWebAPIJobRequestForwardResponse.dir_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCSystemMsg_GetPurchaseTrust_Request::kSteamidFieldNumber;
#endif  // !_MSC_VER

CGCSystemMsg_GetPurchaseTrust_Request::CGCSystemMsg_GetPurchaseTrust_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetPurchaseTrust_Request)
}

void CGCSystemMsg_GetPurchaseTrust_Request::InitAsDefaultInstance() {
}

CGCSystemMsg_GetPurchaseTrust_Request::CGCSystemMsg_GetPurchaseTrust_Request(const CGCSystemMsg_GetPurchaseTrust_Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetPurchaseTrust_Request)
}

void CGCSystemMsg_GetPurchaseTrust_Request::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCSystemMsg_GetPurchaseTrust_Request::~CGCSystemMsg_GetPurchaseTrust_Request() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetPurchaseTrust_Request)
  SharedDtor();
}

void CGCSystemMsg_GetPurchaseTrust_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCSystemMsg_GetPurchaseTrust_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetPurchaseTrust_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCSystemMsg_GetPurchaseTrust_Request_descriptor_;
}

const CGCSystemMsg_GetPurchaseTrust_Request& CGCSystemMsg_GetPurchaseTrust_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCSystemMsg_GetPurchaseTrust_Request* CGCSystemMsg_GetPurchaseTrust_Request::default_instance_ = NULL;

CGCSystemMsg_GetPurchaseTrust_Request* CGCSystemMsg_GetPurchaseTrust_Request::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetPurchaseTrust_Request* n = new CGCSystemMsg_GetPurchaseTrust_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetPurchaseTrust_Request::Clear() {
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCSystemMsg_GetPurchaseTrust_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetPurchaseTrust_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetPurchaseTrust_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetPurchaseTrust_Request)
  return false;
#undef DO_
}

void CGCSystemMsg_GetPurchaseTrust_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetPurchaseTrust_Request)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetPurchaseTrust_Request)
}

::google::protobuf::uint8* CGCSystemMsg_GetPurchaseTrust_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetPurchaseTrust_Request)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetPurchaseTrust_Request)
  return target;
}

int CGCSystemMsg_GetPurchaseTrust_Request::ByteSize() const {
  int total_size = 0;

  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetPurchaseTrust_Request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCSystemMsg_GetPurchaseTrust_Request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetPurchaseTrust_Request>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetPurchaseTrust_Request::MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCSystemMsg_GetPurchaseTrust_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetPurchaseTrust_Request::CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetPurchaseTrust_Request::IsInitialized() const {

  return true;
}

void CGCSystemMsg_GetPurchaseTrust_Request::Swap(CGCSystemMsg_GetPurchaseTrust_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetPurchaseTrust_Request::InternalSwap(CGCSystemMsg_GetPurchaseTrust_Request* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetPurchaseTrust_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCSystemMsg_GetPurchaseTrust_Request_descriptor_;
  metadata.reflection = CGCSystemMsg_GetPurchaseTrust_Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCSystemMsg_GetPurchaseTrust_Request

// optional fixed64 steamid = 1;
bool CGCSystemMsg_GetPurchaseTrust_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCSystemMsg_GetPurchaseTrust_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCSystemMsg_GetPurchaseTrust_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCSystemMsg_GetPurchaseTrust_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CGCSystemMsg_GetPurchaseTrust_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetPurchaseTrust_Request.steamid)
  return steamid_;
}
 void CGCSystemMsg_GetPurchaseTrust_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetPurchaseTrust_Request.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CGCSystemMsg_GetPurchaseTrust_Response::kHasPriorPurchaseHistoryFieldNumber;
const int CGCSystemMsg_GetPurchaseTrust_Response::kHasNoRecentPasswordResetsFieldNumber;
const int CGCSystemMsg_GetPurchaseTrust_Response::kIsWalletCashTrustedFieldNumber;
const int CGCSystemMsg_GetPurchaseTrust_Response::kTimeAllTrustedFieldNumber;
#endif  // !_MSC_VER

CGCSystemMsg_GetPurchaseTrust_Response::CGCSystemMsg_GetPurchaseTrust_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetPurchaseTrust_Response)
}

void CGCSystemMsg_GetPurchaseTrust_Response::InitAsDefaultInstance() {
}

CGCSystemMsg_GetPurchaseTrust_Response::CGCSystemMsg_GetPurchaseTrust_Response(const CGCSystemMsg_GetPurchaseTrust_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetPurchaseTrust_Response)
}

void CGCSystemMsg_GetPurchaseTrust_Response::SharedCtor() {
  _cached_size_ = 0;
  has_prior_purchase_history_ = false;
  has_no_recent_password_resets_ = false;
  is_wallet_cash_trusted_ = false;
  time_all_trusted_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCSystemMsg_GetPurchaseTrust_Response::~CGCSystemMsg_GetPurchaseTrust_Response() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetPurchaseTrust_Response)
  SharedDtor();
}

void CGCSystemMsg_GetPurchaseTrust_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCSystemMsg_GetPurchaseTrust_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetPurchaseTrust_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCSystemMsg_GetPurchaseTrust_Response_descriptor_;
}

const CGCSystemMsg_GetPurchaseTrust_Response& CGCSystemMsg_GetPurchaseTrust_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CGCSystemMsg_GetPurchaseTrust_Response* CGCSystemMsg_GetPurchaseTrust_Response::default_instance_ = NULL;

CGCSystemMsg_GetPurchaseTrust_Response* CGCSystemMsg_GetPurchaseTrust_Response::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetPurchaseTrust_Response* n = new CGCSystemMsg_GetPurchaseTrust_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetPurchaseTrust_Response::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCSystemMsg_GetPurchaseTrust_Response*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(has_prior_purchase_history_, time_all_trusted_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCSystemMsg_GetPurchaseTrust_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetPurchaseTrust_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool has_prior_purchase_history = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_prior_purchase_history_)));
          set_has_has_prior_purchase_history();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_has_no_recent_password_resets;
        break;
      }

      // optional bool has_no_recent_password_resets = 2;
      case 2: {
        if (tag == 16) {
         parse_has_no_recent_password_resets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_no_recent_password_resets_)));
          set_has_has_no_recent_password_resets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_is_wallet_cash_trusted;
        break;
      }

      // optional bool is_wallet_cash_trusted = 3;
      case 3: {
        if (tag == 24) {
         parse_is_wallet_cash_trusted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_wallet_cash_trusted_)));
          set_has_is_wallet_cash_trusted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time_all_trusted;
        break;
      }

      // optional uint32 time_all_trusted = 4;
      case 4: {
        if (tag == 32) {
         parse_time_all_trusted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_all_trusted_)));
          set_has_time_all_trusted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetPurchaseTrust_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetPurchaseTrust_Response)
  return false;
#undef DO_
}

void CGCSystemMsg_GetPurchaseTrust_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetPurchaseTrust_Response)
  // optional bool has_prior_purchase_history = 1;
  if (has_has_prior_purchase_history()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->has_prior_purchase_history(), output);
  }

  // optional bool has_no_recent_password_resets = 2;
  if (has_has_no_recent_password_resets()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_no_recent_password_resets(), output);
  }

  // optional bool is_wallet_cash_trusted = 3;
  if (has_is_wallet_cash_trusted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_wallet_cash_trusted(), output);
  }

  // optional uint32 time_all_trusted = 4;
  if (has_time_all_trusted()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time_all_trusted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetPurchaseTrust_Response)
}

::google::protobuf::uint8* CGCSystemMsg_GetPurchaseTrust_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetPurchaseTrust_Response)
  // optional bool has_prior_purchase_history = 1;
  if (has_has_prior_purchase_history()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->has_prior_purchase_history(), target);
  }

  // optional bool has_no_recent_password_resets = 2;
  if (has_has_no_recent_password_resets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->has_no_recent_password_resets(), target);
  }

  // optional bool is_wallet_cash_trusted = 3;
  if (has_is_wallet_cash_trusted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_wallet_cash_trusted(), target);
  }

  // optional uint32 time_all_trusted = 4;
  if (has_time_all_trusted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time_all_trusted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetPurchaseTrust_Response)
  return target;
}

int CGCSystemMsg_GetPurchaseTrust_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional bool has_prior_purchase_history = 1;
    if (has_has_prior_purchase_history()) {
      total_size += 1 + 1;
    }

    // optional bool has_no_recent_password_resets = 2;
    if (has_has_no_recent_password_resets()) {
      total_size += 1 + 1;
    }

    // optional bool is_wallet_cash_trusted = 3;
    if (has_is_wallet_cash_trusted()) {
      total_size += 1 + 1;
    }

    // optional uint32 time_all_trusted = 4;
    if (has_time_all_trusted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_all_trusted());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetPurchaseTrust_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCSystemMsg_GetPurchaseTrust_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetPurchaseTrust_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetPurchaseTrust_Response::MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_has_prior_purchase_history()) {
      set_has_prior_purchase_history(from.has_prior_purchase_history());
    }
    if (from.has_has_no_recent_password_resets()) {
      set_has_no_recent_password_resets(from.has_no_recent_password_resets());
    }
    if (from.has_is_wallet_cash_trusted()) {
      set_is_wallet_cash_trusted(from.is_wallet_cash_trusted());
    }
    if (from.has_time_all_trusted()) {
      set_time_all_trusted(from.time_all_trusted());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCSystemMsg_GetPurchaseTrust_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetPurchaseTrust_Response::CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetPurchaseTrust_Response::IsInitialized() const {

  return true;
}

void CGCSystemMsg_GetPurchaseTrust_Response::Swap(CGCSystemMsg_GetPurchaseTrust_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetPurchaseTrust_Response::InternalSwap(CGCSystemMsg_GetPurchaseTrust_Response* other) {
  std::swap(has_prior_purchase_history_, other->has_prior_purchase_history_);
  std::swap(has_no_recent_password_resets_, other->has_no_recent_password_resets_);
  std::swap(is_wallet_cash_trusted_, other->is_wallet_cash_trusted_);
  std::swap(time_all_trusted_, other->time_all_trusted_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetPurchaseTrust_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCSystemMsg_GetPurchaseTrust_Response_descriptor_;
  metadata.reflection = CGCSystemMsg_GetPurchaseTrust_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCSystemMsg_GetPurchaseTrust_Response

// optional bool has_prior_purchase_history = 1;
bool CGCSystemMsg_GetPurchaseTrust_Response::has_has_prior_purchase_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCSystemMsg_GetPurchaseTrust_Response::set_has_has_prior_purchase_history() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_has_prior_purchase_history() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_prior_purchase_history() {
  has_prior_purchase_history_ = false;
  clear_has_has_prior_purchase_history();
}
 bool CGCSystemMsg_GetPurchaseTrust_Response::has_prior_purchase_history() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetPurchaseTrust_Response.has_prior_purchase_history)
  return has_prior_purchase_history_;
}
 void CGCSystemMsg_GetPurchaseTrust_Response::set_has_prior_purchase_history(bool value) {
  set_has_has_prior_purchase_history();
  has_prior_purchase_history_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetPurchaseTrust_Response.has_prior_purchase_history)
}

// optional bool has_no_recent_password_resets = 2;
bool CGCSystemMsg_GetPurchaseTrust_Response::has_has_no_recent_password_resets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCSystemMsg_GetPurchaseTrust_Response::set_has_has_no_recent_password_resets() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_has_no_recent_password_resets() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_no_recent_password_resets() {
  has_no_recent_password_resets_ = false;
  clear_has_has_no_recent_password_resets();
}
 bool CGCSystemMsg_GetPurchaseTrust_Response::has_no_recent_password_resets() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetPurchaseTrust_Response.has_no_recent_password_resets)
  return has_no_recent_password_resets_;
}
 void CGCSystemMsg_GetPurchaseTrust_Response::set_has_no_recent_password_resets(bool value) {
  set_has_has_no_recent_password_resets();
  has_no_recent_password_resets_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetPurchaseTrust_Response.has_no_recent_password_resets)
}

// optional bool is_wallet_cash_trusted = 3;
bool CGCSystemMsg_GetPurchaseTrust_Response::has_is_wallet_cash_trusted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCSystemMsg_GetPurchaseTrust_Response::set_has_is_wallet_cash_trusted() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_is_wallet_cash_trusted() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_is_wallet_cash_trusted() {
  is_wallet_cash_trusted_ = false;
  clear_has_is_wallet_cash_trusted();
}
 bool CGCSystemMsg_GetPurchaseTrust_Response::is_wallet_cash_trusted() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetPurchaseTrust_Response.is_wallet_cash_trusted)
  return is_wallet_cash_trusted_;
}
 void CGCSystemMsg_GetPurchaseTrust_Response::set_is_wallet_cash_trusted(bool value) {
  set_has_is_wallet_cash_trusted();
  is_wallet_cash_trusted_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetPurchaseTrust_Response.is_wallet_cash_trusted)
}

// optional uint32 time_all_trusted = 4;
bool CGCSystemMsg_GetPurchaseTrust_Response::has_time_all_trusted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCSystemMsg_GetPurchaseTrust_Response::set_has_time_all_trusted() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_time_all_trusted() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCSystemMsg_GetPurchaseTrust_Response::clear_time_all_trusted() {
  time_all_trusted_ = 0u;
  clear_has_time_all_trusted();
}
 ::google::protobuf::uint32 CGCSystemMsg_GetPurchaseTrust_Response::time_all_trusted() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetPurchaseTrust_Response.time_all_trusted)
  return time_all_trusted_;
}
 void CGCSystemMsg_GetPurchaseTrust_Response::set_time_all_trusted(::google::protobuf::uint32 value) {
  set_has_time_all_trusted();
  time_all_trusted_ = value;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetPurchaseTrust_Response.time_all_trusted)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCHAccountVacStatusChange::kSteamIdFieldNumber;
const int CMsgGCHAccountVacStatusChange::kAppIdFieldNumber;
const int CMsgGCHAccountVacStatusChange::kRtimeVacbanStartsFieldNumber;
const int CMsgGCHAccountVacStatusChange::kIsBannedNowFieldNumber;
const int CMsgGCHAccountVacStatusChange::kIsBannedFutureFieldNumber;
#endif  // !_MSC_VER

CMsgGCHAccountVacStatusChange::CMsgGCHAccountVacStatusChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHAccountVacStatusChange)
}

void CMsgGCHAccountVacStatusChange::InitAsDefaultInstance() {
}

CMsgGCHAccountVacStatusChange::CMsgGCHAccountVacStatusChange(const CMsgGCHAccountVacStatusChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountVacStatusChange)
}

void CMsgGCHAccountVacStatusChange::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
  app_id_ = 0u;
  rtime_vacban_starts_ = 0u;
  is_banned_now_ = false;
  is_banned_future_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCHAccountVacStatusChange::~CMsgGCHAccountVacStatusChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountVacStatusChange)
  SharedDtor();
}

void CMsgGCHAccountVacStatusChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCHAccountVacStatusChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHAccountVacStatusChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCHAccountVacStatusChange_descriptor_;
}

const CMsgGCHAccountVacStatusChange& CMsgGCHAccountVacStatusChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCHAccountVacStatusChange* CMsgGCHAccountVacStatusChange::default_instance_ = NULL;

CMsgGCHAccountVacStatusChange* CMsgGCHAccountVacStatusChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHAccountVacStatusChange* n = new CMsgGCHAccountVacStatusChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHAccountVacStatusChange::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgGCHAccountVacStatusChange*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(steam_id_, is_banned_future_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCHAccountVacStatusChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHAccountVacStatusChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
          set_has_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_app_id;
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (tag == 16) {
         parse_app_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
          set_has_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rtime_vacban_starts;
        break;
      }

      // optional uint32 rtime_vacban_starts = 3;
      case 3: {
        if (tag == 24) {
         parse_rtime_vacban_starts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_vacban_starts_)));
          set_has_rtime_vacban_starts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_is_banned_now;
        break;
      }

      // optional bool is_banned_now = 4;
      case 4: {
        if (tag == 32) {
         parse_is_banned_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_banned_now_)));
          set_has_is_banned_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_banned_future;
        break;
      }

      // optional bool is_banned_future = 5;
      case 5: {
        if (tag == 40) {
         parse_is_banned_future:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_banned_future_)));
          set_has_is_banned_future();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHAccountVacStatusChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHAccountVacStatusChange)
  return false;
#undef DO_
}

void CMsgGCHAccountVacStatusChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHAccountVacStatusChange)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 app_id = 2;
  if (has_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 rtime_vacban_starts = 3;
  if (has_rtime_vacban_starts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rtime_vacban_starts(), output);
  }

  // optional bool is_banned_now = 4;
  if (has_is_banned_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_banned_now(), output);
  }

  // optional bool is_banned_future = 5;
  if (has_is_banned_future()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_banned_future(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHAccountVacStatusChange)
}

::google::protobuf::uint8* CMsgGCHAccountVacStatusChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountVacStatusChange)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 app_id = 2;
  if (has_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 rtime_vacban_starts = 3;
  if (has_rtime_vacban_starts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rtime_vacban_starts(), target);
  }

  // optional bool is_banned_now = 4;
  if (has_is_banned_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_banned_now(), target);
  }

  // optional bool is_banned_future = 5;
  if (has_is_banned_future()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_banned_future(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountVacStatusChange)
  return target;
}

int CMsgGCHAccountVacStatusChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 rtime_vacban_starts = 3;
    if (has_rtime_vacban_starts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_vacban_starts());
    }

    // optional bool is_banned_now = 4;
    if (has_is_banned_now()) {
      total_size += 1 + 1;
    }

    // optional bool is_banned_future = 5;
    if (has_is_banned_future()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHAccountVacStatusChange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCHAccountVacStatusChange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHAccountVacStatusChange>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCHAccountVacStatusChange::MergeFrom(const CMsgGCHAccountVacStatusChange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steam_id()) {
      set_steam_id(from.steam_id());
    }
    if (from.has_app_id()) {
      set_app_id(from.app_id());
    }
    if (from.has_rtime_vacban_starts()) {
      set_rtime_vacban_starts(from.rtime_vacban_starts());
    }
    if (from.has_is_banned_now()) {
      set_is_banned_now(from.is_banned_now());
    }
    if (from.has_is_banned_future()) {
      set_is_banned_future(from.is_banned_future());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCHAccountVacStatusChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHAccountVacStatusChange::CopyFrom(const CMsgGCHAccountVacStatusChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHAccountVacStatusChange::IsInitialized() const {

  return true;
}

void CMsgGCHAccountVacStatusChange::Swap(CMsgGCHAccountVacStatusChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHAccountVacStatusChange::InternalSwap(CMsgGCHAccountVacStatusChange* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(rtime_vacban_starts_, other->rtime_vacban_starts_);
  std::swap(is_banned_now_, other->is_banned_now_);
  std::swap(is_banned_future_, other->is_banned_future_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHAccountVacStatusChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCHAccountVacStatusChange_descriptor_;
  metadata.reflection = CMsgGCHAccountVacStatusChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCHAccountVacStatusChange

// optional fixed64 steam_id = 1;
bool CMsgGCHAccountVacStatusChange::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCHAccountVacStatusChange::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCHAccountVacStatusChange::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCHAccountVacStatusChange::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
 ::google::protobuf::uint64 CMsgGCHAccountVacStatusChange::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountVacStatusChange.steam_id)
  return steam_id_;
}
 void CMsgGCHAccountVacStatusChange::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountVacStatusChange.steam_id)
}

// optional uint32 app_id = 2;
bool CMsgGCHAccountVacStatusChange::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCHAccountVacStatusChange::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCHAccountVacStatusChange::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCHAccountVacStatusChange::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
 ::google::protobuf::uint32 CMsgGCHAccountVacStatusChange::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountVacStatusChange.app_id)
  return app_id_;
}
 void CMsgGCHAccountVacStatusChange::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountVacStatusChange.app_id)
}

// optional uint32 rtime_vacban_starts = 3;
bool CMsgGCHAccountVacStatusChange::has_rtime_vacban_starts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCHAccountVacStatusChange::set_has_rtime_vacban_starts() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCHAccountVacStatusChange::clear_has_rtime_vacban_starts() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCHAccountVacStatusChange::clear_rtime_vacban_starts() {
  rtime_vacban_starts_ = 0u;
  clear_has_rtime_vacban_starts();
}
 ::google::protobuf::uint32 CMsgGCHAccountVacStatusChange::rtime_vacban_starts() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountVacStatusChange.rtime_vacban_starts)
  return rtime_vacban_starts_;
}
 void CMsgGCHAccountVacStatusChange::set_rtime_vacban_starts(::google::protobuf::uint32 value) {
  set_has_rtime_vacban_starts();
  rtime_vacban_starts_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountVacStatusChange.rtime_vacban_starts)
}

// optional bool is_banned_now = 4;
bool CMsgGCHAccountVacStatusChange::has_is_banned_now() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCHAccountVacStatusChange::set_has_is_banned_now() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCHAccountVacStatusChange::clear_has_is_banned_now() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCHAccountVacStatusChange::clear_is_banned_now() {
  is_banned_now_ = false;
  clear_has_is_banned_now();
}
 bool CMsgGCHAccountVacStatusChange::is_banned_now() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountVacStatusChange.is_banned_now)
  return is_banned_now_;
}
 void CMsgGCHAccountVacStatusChange::set_is_banned_now(bool value) {
  set_has_is_banned_now();
  is_banned_now_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountVacStatusChange.is_banned_now)
}

// optional bool is_banned_future = 5;
bool CMsgGCHAccountVacStatusChange::has_is_banned_future() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGCHAccountVacStatusChange::set_has_is_banned_future() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGCHAccountVacStatusChange::clear_has_is_banned_future() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGCHAccountVacStatusChange::clear_is_banned_future() {
  is_banned_future_ = false;
  clear_has_is_banned_future();
}
 bool CMsgGCHAccountVacStatusChange::is_banned_future() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountVacStatusChange.is_banned_future)
  return is_banned_future_;
}
 void CMsgGCHAccountVacStatusChange::set_is_banned_future(bool value) {
  set_has_is_banned_future();
  is_banned_future_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountVacStatusChange.is_banned_future)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetPartnerAccountLink::kSteamidFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetPartnerAccountLink::CMsgGCGetPartnerAccountLink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPartnerAccountLink)
}

void CMsgGCGetPartnerAccountLink::InitAsDefaultInstance() {
}

CMsgGCGetPartnerAccountLink::CMsgGCGetPartnerAccountLink(const CMsgGCGetPartnerAccountLink& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPartnerAccountLink)
}

void CMsgGCGetPartnerAccountLink::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetPartnerAccountLink::~CMsgGCGetPartnerAccountLink() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPartnerAccountLink)
  SharedDtor();
}

void CMsgGCGetPartnerAccountLink::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetPartnerAccountLink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPartnerAccountLink::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetPartnerAccountLink_descriptor_;
}

const CMsgGCGetPartnerAccountLink& CMsgGCGetPartnerAccountLink::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetPartnerAccountLink* CMsgGCGetPartnerAccountLink::default_instance_ = NULL;

CMsgGCGetPartnerAccountLink* CMsgGCGetPartnerAccountLink::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPartnerAccountLink* n = new CMsgGCGetPartnerAccountLink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPartnerAccountLink::Clear() {
  steamid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetPartnerAccountLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPartnerAccountLink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPartnerAccountLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPartnerAccountLink)
  return false;
#undef DO_
}

void CMsgGCGetPartnerAccountLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPartnerAccountLink)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPartnerAccountLink)
}

::google::protobuf::uint8* CMsgGCGetPartnerAccountLink::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPartnerAccountLink)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPartnerAccountLink)
  return target;
}

int CMsgGCGetPartnerAccountLink::ByteSize() const {
  int total_size = 0;

  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPartnerAccountLink::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetPartnerAccountLink* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPartnerAccountLink>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetPartnerAccountLink::MergeFrom(const CMsgGCGetPartnerAccountLink& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetPartnerAccountLink::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPartnerAccountLink::CopyFrom(const CMsgGCGetPartnerAccountLink& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPartnerAccountLink::IsInitialized() const {

  return true;
}

void CMsgGCGetPartnerAccountLink::Swap(CMsgGCGetPartnerAccountLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPartnerAccountLink::InternalSwap(CMsgGCGetPartnerAccountLink* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPartnerAccountLink::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetPartnerAccountLink_descriptor_;
  metadata.reflection = CMsgGCGetPartnerAccountLink_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetPartnerAccountLink

// optional fixed64 steamid = 1;
bool CMsgGCGetPartnerAccountLink::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetPartnerAccountLink::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetPartnerAccountLink::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetPartnerAccountLink::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgGCGetPartnerAccountLink::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPartnerAccountLink.steamid)
  return steamid_;
}
 void CMsgGCGetPartnerAccountLink::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetPartnerAccountLink.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGetPartnerAccountLink_Response::kPwidFieldNumber;
const int CMsgGCGetPartnerAccountLink_Response::kNexonidFieldNumber;
#endif  // !_MSC_VER

CMsgGCGetPartnerAccountLink_Response::CMsgGCGetPartnerAccountLink_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPartnerAccountLink_Response)
}

void CMsgGCGetPartnerAccountLink_Response::InitAsDefaultInstance() {
}

CMsgGCGetPartnerAccountLink_Response::CMsgGCGetPartnerAccountLink_Response(const CMsgGCGetPartnerAccountLink_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPartnerAccountLink_Response)
}

void CMsgGCGetPartnerAccountLink_Response::SharedCtor() {
  _cached_size_ = 0;
  pwid_ = 0u;
  nexonid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGetPartnerAccountLink_Response::~CMsgGCGetPartnerAccountLink_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPartnerAccountLink_Response)
  SharedDtor();
}

void CMsgGCGetPartnerAccountLink_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGetPartnerAccountLink_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPartnerAccountLink_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGetPartnerAccountLink_Response_descriptor_;
}

const CMsgGCGetPartnerAccountLink_Response& CMsgGCGetPartnerAccountLink_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCGetPartnerAccountLink_Response* CMsgGCGetPartnerAccountLink_Response::default_instance_ = NULL;

CMsgGCGetPartnerAccountLink_Response* CMsgGCGetPartnerAccountLink_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPartnerAccountLink_Response* n = new CMsgGCGetPartnerAccountLink_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPartnerAccountLink_Response::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgGCGetPartnerAccountLink_Response*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(pwid_, nexonid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCGetPartnerAccountLink_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPartnerAccountLink_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pwid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pwid_)));
          set_has_pwid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nexonid;
        break;
      }

      // optional uint32 nexonid = 2;
      case 2: {
        if (tag == 16) {
         parse_nexonid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nexonid_)));
          set_has_nexonid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPartnerAccountLink_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPartnerAccountLink_Response)
  return false;
#undef DO_
}

void CMsgGCGetPartnerAccountLink_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPartnerAccountLink_Response)
  // optional uint32 pwid = 1;
  if (has_pwid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pwid(), output);
  }

  // optional uint32 nexonid = 2;
  if (has_nexonid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nexonid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPartnerAccountLink_Response)
}

::google::protobuf::uint8* CMsgGCGetPartnerAccountLink_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPartnerAccountLink_Response)
  // optional uint32 pwid = 1;
  if (has_pwid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pwid(), target);
  }

  // optional uint32 nexonid = 2;
  if (has_nexonid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nexonid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPartnerAccountLink_Response)
  return target;
}

int CMsgGCGetPartnerAccountLink_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 pwid = 1;
    if (has_pwid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pwid());
    }

    // optional uint32 nexonid = 2;
    if (has_nexonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nexonid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPartnerAccountLink_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCGetPartnerAccountLink_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPartnerAccountLink_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGetPartnerAccountLink_Response::MergeFrom(const CMsgGCGetPartnerAccountLink_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pwid()) {
      set_pwid(from.pwid());
    }
    if (from.has_nexonid()) {
      set_nexonid(from.nexonid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCGetPartnerAccountLink_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPartnerAccountLink_Response::CopyFrom(const CMsgGCGetPartnerAccountLink_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPartnerAccountLink_Response::IsInitialized() const {

  return true;
}

void CMsgGCGetPartnerAccountLink_Response::Swap(CMsgGCGetPartnerAccountLink_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPartnerAccountLink_Response::InternalSwap(CMsgGCGetPartnerAccountLink_Response* other) {
  std::swap(pwid_, other->pwid_);
  std::swap(nexonid_, other->nexonid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPartnerAccountLink_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGetPartnerAccountLink_Response_descriptor_;
  metadata.reflection = CMsgGCGetPartnerAccountLink_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCGetPartnerAccountLink_Response

// optional uint32 pwid = 1;
bool CMsgGCGetPartnerAccountLink_Response::has_pwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCGetPartnerAccountLink_Response::set_has_pwid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCGetPartnerAccountLink_Response::clear_has_pwid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCGetPartnerAccountLink_Response::clear_pwid() {
  pwid_ = 0u;
  clear_has_pwid();
}
 ::google::protobuf::uint32 CMsgGCGetPartnerAccountLink_Response::pwid() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPartnerAccountLink_Response.pwid)
  return pwid_;
}
 void CMsgGCGetPartnerAccountLink_Response::set_pwid(::google::protobuf::uint32 value) {
  set_has_pwid();
  pwid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetPartnerAccountLink_Response.pwid)
}

// optional uint32 nexonid = 2;
bool CMsgGCGetPartnerAccountLink_Response::has_nexonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCGetPartnerAccountLink_Response::set_has_nexonid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCGetPartnerAccountLink_Response::clear_has_nexonid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCGetPartnerAccountLink_Response::clear_nexonid() {
  nexonid_ = 0u;
  clear_has_nexonid();
}
 ::google::protobuf::uint32 CMsgGCGetPartnerAccountLink_Response::nexonid() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetPartnerAccountLink_Response.nexonid)
  return nexonid_;
}
 void CMsgGCGetPartnerAccountLink_Response::set_nexonid(::google::protobuf::uint32 value) {
  set_has_nexonid();
  nexonid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetPartnerAccountLink_Response.nexonid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGCRoutingInfo_RoutingMethod_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRoutingInfo_RoutingMethod_descriptor_;
}
bool CMsgGCRoutingInfo_RoutingMethod_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RANDOM;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::DISCARD;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::CLIENT_STEAMID;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::PROTOBUF_FIELD_UINT64;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::WEBAPI_PARAM_UINT64;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RoutingMethod_MIN;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RoutingMethod_MAX;
const int CMsgGCRoutingInfo::RoutingMethod_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgGCRoutingInfo::kDirIndexFieldNumber;
const int CMsgGCRoutingInfo::kMethodFieldNumber;
const int CMsgGCRoutingInfo::kFallbackFieldNumber;
const int CMsgGCRoutingInfo::kProtobufFieldFieldNumber;
const int CMsgGCRoutingInfo::kWebapiParamFieldNumber;
#endif  // !_MSC_VER

CMsgGCRoutingInfo::CMsgGCRoutingInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRoutingInfo)
}

void CMsgGCRoutingInfo::InitAsDefaultInstance() {
}

CMsgGCRoutingInfo::CMsgGCRoutingInfo(const CMsgGCRoutingInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRoutingInfo)
}

void CMsgGCRoutingInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  method_ = 0;
  fallback_ = 1;
  protobuf_field_ = 0u;
  webapi_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRoutingInfo::~CMsgGCRoutingInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCRoutingInfo)
  SharedDtor();
}

void CMsgGCRoutingInfo::SharedDtor() {
  webapi_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgGCRoutingInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRoutingInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRoutingInfo_descriptor_;
}

const CMsgGCRoutingInfo& CMsgGCRoutingInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCRoutingInfo* CMsgGCRoutingInfo::default_instance_ = NULL;

CMsgGCRoutingInfo* CMsgGCRoutingInfo::New(::google::protobuf::Arena* arena) const {
  CMsgGCRoutingInfo* n = new CMsgGCRoutingInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRoutingInfo::Clear() {
  if (_has_bits_[0 / 32] & 30u) {
    method_ = 0;
    fallback_ = 1;
    protobuf_field_ = 0u;
    if (has_webapi_param()) {
      webapi_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  dir_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCRoutingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRoutingInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 dir_index = 1;
      case 1: {
        if (tag == 8) {
         parse_dir_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_dir_index())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dir_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_dir_index;
        if (input->ExpectTag(16)) goto parse_method;
        break;
      }

      // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
      case 2: {
        if (tag == 16) {
         parse_method:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCRoutingInfo_RoutingMethod_IsValid(value)) {
            set_method(static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fallback;
        break;
      }

      // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
      case 3: {
        if (tag == 24) {
         parse_fallback:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCRoutingInfo_RoutingMethod_IsValid(value)) {
            set_fallback(static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_protobuf_field;
        break;
      }

      // optional uint32 protobuf_field = 4;
      case 4: {
        if (tag == 32) {
         parse_protobuf_field:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protobuf_field_)));
          set_has_protobuf_field();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_webapi_param;
        break;
      }

      // optional string webapi_param = 5;
      case 5: {
        if (tag == 42) {
         parse_webapi_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webapi_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->webapi_param().data(), this->webapi_param().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCRoutingInfo.webapi_param");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRoutingInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRoutingInfo)
  return false;
#undef DO_
}

void CMsgGCRoutingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRoutingInfo)
  // repeated uint32 dir_index = 1;
  for (int i = 0; i < this->dir_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->dir_index(i), output);
  }

  // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
  if (has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->method(), output);
  }

  // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
  if (has_fallback()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->fallback(), output);
  }

  // optional uint32 protobuf_field = 4;
  if (has_protobuf_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->protobuf_field(), output);
  }

  // optional string webapi_param = 5;
  if (has_webapi_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webapi_param().data(), this->webapi_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRoutingInfo.webapi_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->webapi_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRoutingInfo)
}

::google::protobuf::uint8* CMsgGCRoutingInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRoutingInfo)
  // repeated uint32 dir_index = 1;
  for (int i = 0; i < this->dir_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->dir_index(i), target);
  }

  // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
  if (has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->method(), target);
  }

  // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
  if (has_fallback()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->fallback(), target);
  }

  // optional uint32 protobuf_field = 4;
  if (has_protobuf_field()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->protobuf_field(), target);
  }

  // optional string webapi_param = 5;
  if (has_webapi_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webapi_param().data(), this->webapi_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRoutingInfo.webapi_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->webapi_param(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRoutingInfo)
  return target;
}

int CMsgGCRoutingInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & 30u) {
    // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
    }

    // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
    if (has_fallback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->fallback());
    }

    // optional uint32 protobuf_field = 4;
    if (has_protobuf_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protobuf_field());
    }

    // optional string webapi_param = 5;
    if (has_webapi_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->webapi_param());
    }

  }
  // repeated uint32 dir_index = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->dir_index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->dir_index(i));
    }
    total_size += 1 * this->dir_index_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRoutingInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCRoutingInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRoutingInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRoutingInfo::MergeFrom(const CMsgGCRoutingInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  dir_index_.MergeFrom(from.dir_index_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_method()) {
      set_method(from.method());
    }
    if (from.has_fallback()) {
      set_fallback(from.fallback());
    }
    if (from.has_protobuf_field()) {
      set_protobuf_field(from.protobuf_field());
    }
    if (from.has_webapi_param()) {
      set_has_webapi_param();
      webapi_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webapi_param_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCRoutingInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRoutingInfo::CopyFrom(const CMsgGCRoutingInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRoutingInfo::IsInitialized() const {

  return true;
}

void CMsgGCRoutingInfo::Swap(CMsgGCRoutingInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRoutingInfo::InternalSwap(CMsgGCRoutingInfo* other) {
  dir_index_.UnsafeArenaSwap(&other->dir_index_);
  std::swap(method_, other->method_);
  std::swap(fallback_, other->fallback_);
  std::swap(protobuf_field_, other->protobuf_field_);
  webapi_param_.Swap(&other->webapi_param_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRoutingInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRoutingInfo_descriptor_;
  metadata.reflection = CMsgGCRoutingInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCRoutingInfo

// repeated uint32 dir_index = 1;
int CMsgGCRoutingInfo::dir_index_size() const {
  return dir_index_.size();
}
void CMsgGCRoutingInfo::clear_dir_index() {
  dir_index_.Clear();
}
 ::google::protobuf::uint32 CMsgGCRoutingInfo::dir_index(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCRoutingInfo.dir_index)
  return dir_index_.Get(index);
}
 void CMsgGCRoutingInfo::set_dir_index(int index, ::google::protobuf::uint32 value) {
  dir_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCRoutingInfo.dir_index)
}
 void CMsgGCRoutingInfo::add_dir_index(::google::protobuf::uint32 value) {
  dir_index_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCRoutingInfo.dir_index)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRoutingInfo::dir_index() const {
  // @@protoc_insertion_point(field_list:CMsgGCRoutingInfo.dir_index)
  return dir_index_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRoutingInfo::mutable_dir_index() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCRoutingInfo.dir_index)
  return &dir_index_;
}

// optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
bool CMsgGCRoutingInfo::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCRoutingInfo::set_has_method() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCRoutingInfo::clear_has_method() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCRoutingInfo::clear_method() {
  method_ = 0;
  clear_has_method();
}
 ::CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::method() const {
  // @@protoc_insertion_point(field_get:CMsgGCRoutingInfo.method)
  return static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(method_);
}
 void CMsgGCRoutingInfo::set_method(::CMsgGCRoutingInfo_RoutingMethod value) {
  assert(::CMsgGCRoutingInfo_RoutingMethod_IsValid(value));
  set_has_method();
  method_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRoutingInfo.method)
}

// optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
bool CMsgGCRoutingInfo::has_fallback() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCRoutingInfo::set_has_fallback() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCRoutingInfo::clear_has_fallback() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCRoutingInfo::clear_fallback() {
  fallback_ = 1;
  clear_has_fallback();
}
 ::CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::fallback() const {
  // @@protoc_insertion_point(field_get:CMsgGCRoutingInfo.fallback)
  return static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(fallback_);
}
 void CMsgGCRoutingInfo::set_fallback(::CMsgGCRoutingInfo_RoutingMethod value) {
  assert(::CMsgGCRoutingInfo_RoutingMethod_IsValid(value));
  set_has_fallback();
  fallback_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRoutingInfo.fallback)
}

// optional uint32 protobuf_field = 4;
bool CMsgGCRoutingInfo::has_protobuf_field() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCRoutingInfo::set_has_protobuf_field() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCRoutingInfo::clear_has_protobuf_field() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCRoutingInfo::clear_protobuf_field() {
  protobuf_field_ = 0u;
  clear_has_protobuf_field();
}
 ::google::protobuf::uint32 CMsgGCRoutingInfo::protobuf_field() const {
  // @@protoc_insertion_point(field_get:CMsgGCRoutingInfo.protobuf_field)
  return protobuf_field_;
}
 void CMsgGCRoutingInfo::set_protobuf_field(::google::protobuf::uint32 value) {
  set_has_protobuf_field();
  protobuf_field_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRoutingInfo.protobuf_field)
}

// optional string webapi_param = 5;
bool CMsgGCRoutingInfo::has_webapi_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGCRoutingInfo::set_has_webapi_param() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGCRoutingInfo::clear_has_webapi_param() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGCRoutingInfo::clear_webapi_param() {
  webapi_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webapi_param();
}
 const ::std::string& CMsgGCRoutingInfo::webapi_param() const {
  // @@protoc_insertion_point(field_get:CMsgGCRoutingInfo.webapi_param)
  return webapi_param_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCRoutingInfo::set_webapi_param(const ::std::string& value) {
  set_has_webapi_param();
  webapi_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCRoutingInfo.webapi_param)
}
 void CMsgGCRoutingInfo::set_webapi_param(const char* value) {
  set_has_webapi_param();
  webapi_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCRoutingInfo.webapi_param)
}
 void CMsgGCRoutingInfo::set_webapi_param(const char* value, size_t size) {
  set_has_webapi_param();
  webapi_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCRoutingInfo.webapi_param)
}
 ::std::string* CMsgGCRoutingInfo::mutable_webapi_param() {
  set_has_webapi_param();
  // @@protoc_insertion_point(field_mutable:CMsgGCRoutingInfo.webapi_param)
  return webapi_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCRoutingInfo::release_webapi_param() {
  clear_has_webapi_param();
  return webapi_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCRoutingInfo::set_allocated_webapi_param(::std::string* webapi_param) {
  if (webapi_param != NULL) {
    set_has_webapi_param();
  } else {
    clear_has_webapi_param();
  }
  webapi_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webapi_param);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCRoutingInfo.webapi_param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetWebAPIRouting_Entry::kInterfaceNameFieldNumber;
const int CMsgGCMsgMasterSetWebAPIRouting_Entry::kMethodNameFieldNumber;
const int CMsgGCMsgMasterSetWebAPIRouting_Entry::kRoutingFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetWebAPIRouting_Entry::CMsgGCMsgMasterSetWebAPIRouting_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::InitAsDefaultInstance() {
  routing_ = const_cast< ::CMsgGCRoutingInfo*>(&::CMsgGCRoutingInfo::default_instance());
}

CMsgGCMsgMasterSetWebAPIRouting_Entry::CMsgGCMsgMasterSetWebAPIRouting_Entry(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetWebAPIRouting_Entry::~CMsgGCMsgMasterSetWebAPIRouting_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  SharedDtor();
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SharedDtor() {
  interface_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete routing_;
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting_Entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetWebAPIRouting_Entry_descriptor_;
}

const CMsgGCMsgMasterSetWebAPIRouting_Entry& CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance_ = NULL;

CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting_Entry::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetWebAPIRouting_Entry* n = new CMsgGCMsgMasterSetWebAPIRouting_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_interface_name()) {
      interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_method_name()) {
      method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_routing()) {
      if (routing_ != NULL) routing_->::CMsgGCRoutingInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetWebAPIRouting_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string interface_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interface_name().data(), this->interface_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_method_name;
        break;
      }

      // optional string method_name = 2;
      case 2: {
        if (tag == 18) {
         parse_method_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), this->method_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_routing;
        break;
      }

      // optional .CMsgGCRoutingInfo routing = 3;
      case 3: {
        if (tag == 26) {
         parse_routing:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_routing()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  // optional string interface_name = 1;
  if (has_interface_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), this->interface_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interface_name(), output);
  }

  // optional string method_name = 2;
  if (has_method_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method_name(), output);
  }

  // optional .CMsgGCRoutingInfo routing = 3;
  if (has_routing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->routing_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetWebAPIRouting_Entry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  // optional string interface_name = 1;
  if (has_interface_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), this->interface_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interface_name(), target);
  }

  // optional string method_name = 2;
  if (has_method_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method_name(), target);
  }

  // optional .CMsgGCRoutingInfo routing = 3;
  if (has_routing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->routing_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  return target;
}

int CMsgGCMsgMasterSetWebAPIRouting_Entry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string interface_name = 1;
    if (has_interface_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interface_name());
    }

    // optional string method_name = 2;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional .CMsgGCRoutingInfo routing = 3;
    if (has_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->routing_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetWebAPIRouting_Entry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetWebAPIRouting_Entry>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_interface_name()) {
      set_has_interface_name();
      interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
    }
    if (from.has_method_name()) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (from.has_routing()) {
      mutable_routing()->::CMsgGCRoutingInfo::MergeFrom(from.routing());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetWebAPIRouting_Entry::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::Swap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other) {
  interface_name_.Swap(&other->interface_name_);
  method_name_.Swap(&other->method_name_);
  std::swap(routing_, other->routing_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting_Entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetWebAPIRouting_Entry_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetWebAPIRouting_Entry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetWebAPIRouting::kEntriesFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetWebAPIRouting::CMsgGCMsgMasterSetWebAPIRouting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetWebAPIRouting)
}

void CMsgGCMsgMasterSetWebAPIRouting::InitAsDefaultInstance() {
}

CMsgGCMsgMasterSetWebAPIRouting::CMsgGCMsgMasterSetWebAPIRouting(const CMsgGCMsgMasterSetWebAPIRouting& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting)
}

void CMsgGCMsgMasterSetWebAPIRouting::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetWebAPIRouting::~CMsgGCMsgMasterSetWebAPIRouting() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting)
  SharedDtor();
}

void CMsgGCMsgMasterSetWebAPIRouting::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgMasterSetWebAPIRouting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetWebAPIRouting_descriptor_;
}

const CMsgGCMsgMasterSetWebAPIRouting& CMsgGCMsgMasterSetWebAPIRouting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetWebAPIRouting* CMsgGCMsgMasterSetWebAPIRouting::default_instance_ = NULL;

CMsgGCMsgMasterSetWebAPIRouting* CMsgGCMsgMasterSetWebAPIRouting::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetWebAPIRouting* n = new CMsgGCMsgMasterSetWebAPIRouting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetWebAPIRouting::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetWebAPIRouting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetWebAPIRouting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetWebAPIRouting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetWebAPIRouting)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetWebAPIRouting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetWebAPIRouting)
  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetWebAPIRouting)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetWebAPIRouting::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting)
  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->entries(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting)
  return target;
}

int CMsgGCMsgMasterSetWebAPIRouting::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetWebAPIRouting::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetWebAPIRouting* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetWebAPIRouting>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetWebAPIRouting::MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetWebAPIRouting::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetWebAPIRouting::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetWebAPIRouting::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting::Swap(CMsgGCMsgMasterSetWebAPIRouting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetWebAPIRouting::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetWebAPIRouting_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetWebAPIRouting_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgMasterSetWebAPIRouting_Entry

// optional string interface_name = 1;
bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_interface_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_has_interface_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_has_interface_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_interface_name() {
  interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_interface_name();
}
 const ::std::string& CMsgGCMsgMasterSetWebAPIRouting_Entry::interface_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
  return interface_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const ::std::string& value) {
  set_has_interface_name();
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const char* value) {
  set_has_interface_name();
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const char* value, size_t size) {
  set_has_interface_name();
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}
 ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_interface_name() {
  set_has_interface_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
  return interface_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_interface_name() {
  clear_has_interface_name();
  return interface_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_interface_name(::std::string* interface_name) {
  if (interface_name != NULL) {
    set_has_interface_name();
  } else {
    clear_has_interface_name();
  }
  interface_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}

// optional string method_name = 2;
bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_method_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_has_method_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_name();
}
 const ::std::string& CMsgGCMsgMasterSetWebAPIRouting_Entry::method_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
  return method_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const ::std::string& value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const char* value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}
 ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_method_name() {
  set_has_method_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_method_name() {
  clear_has_method_name();
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    set_has_method_name();
  } else {
    clear_has_method_name();
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}

// optional .CMsgGCRoutingInfo routing = 3;
bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_routing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_has_routing() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_has_routing() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_routing() {
  if (routing_ != NULL) routing_->::CMsgGCRoutingInfo::Clear();
  clear_has_routing();
}
const ::CMsgGCRoutingInfo& CMsgGCMsgMasterSetWebAPIRouting_Entry::routing() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetWebAPIRouting.Entry.routing)
  return routing_ != NULL ? *routing_ : *default_instance_->routing_;
}
::CMsgGCRoutingInfo* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_routing() {
  set_has_routing();
  if (routing_ == NULL) {
    routing_ = new ::CMsgGCRoutingInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetWebAPIRouting.Entry.routing)
  return routing_;
}
::CMsgGCRoutingInfo* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_routing() {
  clear_has_routing();
  ::CMsgGCRoutingInfo* temp = routing_;
  routing_ = NULL;
  return temp;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_routing(::CMsgGCRoutingInfo* routing) {
  delete routing_;
  routing_ = routing;
  if (routing) {
    set_has_routing();
  } else {
    clear_has_routing();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetWebAPIRouting.Entry.routing)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetWebAPIRouting

// repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
int CMsgGCMsgMasterSetWebAPIRouting::entries_size() const {
  return entries_.size();
}
void CMsgGCMsgMasterSetWebAPIRouting::clear_entries() {
  entries_.Clear();
}
const ::CMsgGCMsgMasterSetWebAPIRouting_Entry& CMsgGCMsgMasterSetWebAPIRouting::entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_.Get(index);
}
::CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_.Mutable(index);
}
::CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting::add_entries() {
  // @@protoc_insertion_point(field_add:CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetWebAPIRouting_Entry >*
CMsgGCMsgMasterSetWebAPIRouting::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMsgMasterSetWebAPIRouting.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetWebAPIRouting_Entry >&
CMsgGCMsgMasterSetWebAPIRouting::entries() const {
  // @@protoc_insertion_point(field_list:CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetClientMsgRouting_Entry::kMsgTypeFieldNumber;
const int CMsgGCMsgMasterSetClientMsgRouting_Entry::kRoutingFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetClientMsgRouting_Entry::CMsgGCMsgMasterSetClientMsgRouting_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::InitAsDefaultInstance() {
  routing_ = const_cast< ::CMsgGCRoutingInfo*>(&::CMsgGCRoutingInfo::default_instance());
}

CMsgGCMsgMasterSetClientMsgRouting_Entry::CMsgGCMsgMasterSetClientMsgRouting_Entry(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SharedCtor() {
  _cached_size_ = 0;
  msg_type_ = 0u;
  routing_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetClientMsgRouting_Entry::~CMsgGCMsgMasterSetClientMsgRouting_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  SharedDtor();
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SharedDtor() {
  if (this != default_instance_) {
    delete routing_;
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting_Entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetClientMsgRouting_Entry_descriptor_;
}

const CMsgGCMsgMasterSetClientMsgRouting_Entry& CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance_ = NULL;

CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting_Entry::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetClientMsgRouting_Entry* n = new CMsgGCMsgMasterSetClientMsgRouting_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    msg_type_ = 0u;
    if (has_routing()) {
      if (routing_ != NULL) routing_->::CMsgGCRoutingInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetClientMsgRouting_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_type_)));
          set_has_msg_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_routing;
        break;
      }

      // optional .CMsgGCRoutingInfo routing = 2;
      case 2: {
        if (tag == 18) {
         parse_routing:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_routing()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  // optional uint32 msg_type = 1;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_type(), output);
  }

  // optional .CMsgGCRoutingInfo routing = 2;
  if (has_routing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->routing_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetClientMsgRouting_Entry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  // optional uint32 msg_type = 1;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_type(), target);
  }

  // optional .CMsgGCRoutingInfo routing = 2;
  if (has_routing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->routing_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  return target;
}

int CMsgGCMsgMasterSetClientMsgRouting_Entry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_type());
    }

    // optional .CMsgGCRoutingInfo routing = 2;
    if (has_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->routing_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetClientMsgRouting_Entry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetClientMsgRouting_Entry>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_routing()) {
      mutable_routing()->::CMsgGCRoutingInfo::MergeFrom(from.routing());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetClientMsgRouting_Entry::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::Swap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other) {
  std::swap(msg_type_, other->msg_type_);
  std::swap(routing_, other->routing_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting_Entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetClientMsgRouting_Entry_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetClientMsgRouting_Entry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetClientMsgRouting::kEntriesFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetClientMsgRouting::CMsgGCMsgMasterSetClientMsgRouting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetClientMsgRouting)
}

void CMsgGCMsgMasterSetClientMsgRouting::InitAsDefaultInstance() {
}

CMsgGCMsgMasterSetClientMsgRouting::CMsgGCMsgMasterSetClientMsgRouting(const CMsgGCMsgMasterSetClientMsgRouting& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting)
}

void CMsgGCMsgMasterSetClientMsgRouting::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetClientMsgRouting::~CMsgGCMsgMasterSetClientMsgRouting() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting)
  SharedDtor();
}

void CMsgGCMsgMasterSetClientMsgRouting::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgMasterSetClientMsgRouting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetClientMsgRouting_descriptor_;
}

const CMsgGCMsgMasterSetClientMsgRouting& CMsgGCMsgMasterSetClientMsgRouting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetClientMsgRouting* CMsgGCMsgMasterSetClientMsgRouting::default_instance_ = NULL;

CMsgGCMsgMasterSetClientMsgRouting* CMsgGCMsgMasterSetClientMsgRouting::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetClientMsgRouting* n = new CMsgGCMsgMasterSetClientMsgRouting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetClientMsgRouting::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetClientMsgRouting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetClientMsgRouting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetClientMsgRouting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetClientMsgRouting)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetClientMsgRouting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetClientMsgRouting)
  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetClientMsgRouting)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetClientMsgRouting::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting)
  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->entries(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting)
  return target;
}

int CMsgGCMsgMasterSetClientMsgRouting::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetClientMsgRouting::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetClientMsgRouting* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetClientMsgRouting>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetClientMsgRouting::MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetClientMsgRouting::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetClientMsgRouting::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetClientMsgRouting::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting::Swap(CMsgGCMsgMasterSetClientMsgRouting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetClientMsgRouting::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetClientMsgRouting_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetClientMsgRouting_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgMasterSetClientMsgRouting_Entry

// optional uint32 msg_type = 1;
bool CMsgGCMsgMasterSetClientMsgRouting_Entry::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
 ::google::protobuf::uint32 CMsgGCMsgMasterSetClientMsgRouting_Entry::msg_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetClientMsgRouting.Entry.msg_type)
  return msg_type_;
}
 void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetClientMsgRouting.Entry.msg_type)
}

// optional .CMsgGCRoutingInfo routing = 2;
bool CMsgGCMsgMasterSetClientMsgRouting_Entry::has_routing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_has_routing() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_has_routing() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_routing() {
  if (routing_ != NULL) routing_->::CMsgGCRoutingInfo::Clear();
  clear_has_routing();
}
const ::CMsgGCRoutingInfo& CMsgGCMsgMasterSetClientMsgRouting_Entry::routing() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetClientMsgRouting.Entry.routing)
  return routing_ != NULL ? *routing_ : *default_instance_->routing_;
}
::CMsgGCRoutingInfo* CMsgGCMsgMasterSetClientMsgRouting_Entry::mutable_routing() {
  set_has_routing();
  if (routing_ == NULL) {
    routing_ = new ::CMsgGCRoutingInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetClientMsgRouting.Entry.routing)
  return routing_;
}
::CMsgGCRoutingInfo* CMsgGCMsgMasterSetClientMsgRouting_Entry::release_routing() {
  clear_has_routing();
  ::CMsgGCRoutingInfo* temp = routing_;
  routing_ = NULL;
  return temp;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_allocated_routing(::CMsgGCRoutingInfo* routing) {
  delete routing_;
  routing_ = routing;
  if (routing) {
    set_has_routing();
  } else {
    clear_has_routing();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMsgMasterSetClientMsgRouting.Entry.routing)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetClientMsgRouting

// repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
int CMsgGCMsgMasterSetClientMsgRouting::entries_size() const {
  return entries_.size();
}
void CMsgGCMsgMasterSetClientMsgRouting::clear_entries() {
  entries_.Clear();
}
const ::CMsgGCMsgMasterSetClientMsgRouting_Entry& CMsgGCMsgMasterSetClientMsgRouting::entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_.Get(index);
}
::CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_.Mutable(index);
}
::CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting::add_entries() {
  // @@protoc_insertion_point(field_add:CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetClientMsgRouting_Entry >*
CMsgGCMsgMasterSetClientMsgRouting::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMsgMasterSetClientMsgRouting.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetClientMsgRouting_Entry >&
CMsgGCMsgMasterSetClientMsgRouting::entries() const {
  // @@protoc_insertion_point(field_list:CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetWebAPIRouting_Response::kEresultFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetWebAPIRouting_Response::CMsgGCMsgMasterSetWebAPIRouting_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::InitAsDefaultInstance() {
}

CMsgGCMsgMasterSetWebAPIRouting_Response::CMsgGCMsgMasterSetWebAPIRouting_Response(const CMsgGCMsgMasterSetWebAPIRouting_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetWebAPIRouting_Response::~CMsgGCMsgMasterSetWebAPIRouting_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
  SharedDtor();
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetWebAPIRouting_Response_descriptor_;
}

const CMsgGCMsgMasterSetWebAPIRouting_Response& CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetWebAPIRouting_Response* CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance_ = NULL;

CMsgGCMsgMasterSetWebAPIRouting_Response* CMsgGCMsgMasterSetWebAPIRouting_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetWebAPIRouting_Response* n = new CMsgGCMsgMasterSetWebAPIRouting_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::Clear() {
  eresult_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetWebAPIRouting_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetWebAPIRouting_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetWebAPIRouting_Response)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetWebAPIRouting_Response)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetWebAPIRouting_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting_Response)
  return target;
}

int CMsgGCMsgMasterSetWebAPIRouting_Response::ByteSize() const {
  int total_size = 0;

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetWebAPIRouting_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetWebAPIRouting_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetWebAPIRouting_Response::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::Swap(CMsgGCMsgMasterSetWebAPIRouting_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetWebAPIRouting_Response::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Response* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetWebAPIRouting_Response_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetWebAPIRouting_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgMasterSetWebAPIRouting_Response

// optional int32 eresult = 1 [default = 2];
bool CMsgGCMsgMasterSetWebAPIRouting_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgMasterSetWebAPIRouting_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgMasterSetWebAPIRouting_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
 ::google::protobuf::int32 CMsgGCMsgMasterSetWebAPIRouting_Response::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetWebAPIRouting_Response.eresult)
  return eresult_;
}
 void CMsgGCMsgMasterSetWebAPIRouting_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetWebAPIRouting_Response.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCMsgMasterSetClientMsgRouting_Response::kEresultFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgMasterSetClientMsgRouting_Response::CMsgGCMsgMasterSetClientMsgRouting_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::InitAsDefaultInstance() {
}

CMsgGCMsgMasterSetClientMsgRouting_Response::CMsgGCMsgMasterSetClientMsgRouting_Response(const CMsgGCMsgMasterSetClientMsgRouting_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgMasterSetClientMsgRouting_Response::~CMsgGCMsgMasterSetClientMsgRouting_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
  SharedDtor();
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgMasterSetClientMsgRouting_Response_descriptor_;
}

const CMsgGCMsgMasterSetClientMsgRouting_Response& CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgMasterSetClientMsgRouting_Response* CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance_ = NULL;

CMsgGCMsgMasterSetClientMsgRouting_Response* CMsgGCMsgMasterSetClientMsgRouting_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetClientMsgRouting_Response* n = new CMsgGCMsgMasterSetClientMsgRouting_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::Clear() {
  eresult_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgMasterSetClientMsgRouting_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetClientMsgRouting_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetClientMsgRouting_Response)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetClientMsgRouting_Response)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetClientMsgRouting_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting_Response)
  return target;
}

int CMsgGCMsgMasterSetClientMsgRouting_Response::ByteSize() const {
  int total_size = 0;

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgMasterSetClientMsgRouting_Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetClientMsgRouting_Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetClientMsgRouting_Response::IsInitialized() const {

  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::Swap(CMsgGCMsgMasterSetClientMsgRouting_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetClientMsgRouting_Response::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Response* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgMasterSetClientMsgRouting_Response_descriptor_;
  metadata.reflection = CMsgGCMsgMasterSetClientMsgRouting_Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgMasterSetClientMsgRouting_Response

// optional int32 eresult = 1 [default = 2];
bool CMsgGCMsgMasterSetClientMsgRouting_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgMasterSetClientMsgRouting_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgMasterSetClientMsgRouting_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgMasterSetClientMsgRouting_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
 ::google::protobuf::int32 CMsgGCMsgMasterSetClientMsgRouting_Response::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgMasterSetClientMsgRouting_Response.eresult)
  return eresult_;
}
 void CMsgGCMsgMasterSetClientMsgRouting_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgMasterSetClientMsgRouting_Response.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_Option_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgSetOptions_Option_descriptor_;
}
bool CMsgGCMsgSetOptions_Option_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_USER_SESSIONS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_SERVER_SESSIONS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_ACHIEVEMENTS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_VAC_ACTION;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::Option_MIN;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::Option_MAX;
const int CMsgGCMsgSetOptions::Option_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_GCSQLVersion_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgSetOptions_GCSQLVersion_descriptor_;
}
bool CMsgGCMsgSetOptions_GCSQLVersion_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQL_VERSION_BASELINE;
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQL_VERSION_BOOLTYPE;
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQLVersion_MIN;
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQLVersion_MAX;
const int CMsgGCMsgSetOptions::GCSQLVersion_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgGCMsgSetOptions_MessageRange::kLowFieldNumber;
const int CMsgGCMsgSetOptions_MessageRange::kHighFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgSetOptions_MessageRange::CMsgGCMsgSetOptions_MessageRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgSetOptions.MessageRange)
}

void CMsgGCMsgSetOptions_MessageRange::InitAsDefaultInstance() {
}

CMsgGCMsgSetOptions_MessageRange::CMsgGCMsgSetOptions_MessageRange(const CMsgGCMsgSetOptions_MessageRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgSetOptions.MessageRange)
}

void CMsgGCMsgSetOptions_MessageRange::SharedCtor() {
  _cached_size_ = 0;
  low_ = 0u;
  high_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgSetOptions_MessageRange::~CMsgGCMsgSetOptions_MessageRange() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgSetOptions.MessageRange)
  SharedDtor();
}

void CMsgGCMsgSetOptions_MessageRange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgSetOptions_MessageRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgSetOptions_MessageRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgSetOptions_MessageRange_descriptor_;
}

const CMsgGCMsgSetOptions_MessageRange& CMsgGCMsgSetOptions_MessageRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions_MessageRange::default_instance_ = NULL;

CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions_MessageRange::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgSetOptions_MessageRange* n = new CMsgGCMsgSetOptions_MessageRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgSetOptions_MessageRange::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgGCMsgSetOptions_MessageRange*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(low_, high_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgSetOptions_MessageRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgSetOptions.MessageRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 low = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &low_)));
          set_has_low();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_high;
        break;
      }

      // required uint32 high = 2;
      case 2: {
        if (tag == 16) {
         parse_high:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &high_)));
          set_has_high();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgSetOptions.MessageRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgSetOptions.MessageRange)
  return false;
#undef DO_
}

void CMsgGCMsgSetOptions_MessageRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgSetOptions.MessageRange)
  // required uint32 low = 1;
  if (has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->low(), output);
  }

  // required uint32 high = 2;
  if (has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->high(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgSetOptions.MessageRange)
}

::google::protobuf::uint8* CMsgGCMsgSetOptions_MessageRange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgSetOptions.MessageRange)
  // required uint32 low = 1;
  if (has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->low(), target);
  }

  // required uint32 high = 2;
  if (has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->high(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgSetOptions.MessageRange)
  return target;
}

int CMsgGCMsgSetOptions_MessageRange::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_low()) {
    // required uint32 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->low());
  }

  if (has_high()) {
    // required uint32 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->high());
  }

  return total_size;
}
int CMsgGCMsgSetOptions_MessageRange::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->low());

    // required uint32 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->high());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgSetOptions_MessageRange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgSetOptions_MessageRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgSetOptions_MessageRange>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgSetOptions_MessageRange::MergeFrom(const CMsgGCMsgSetOptions_MessageRange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_low()) {
      set_low(from.low());
    }
    if (from.has_high()) {
      set_high(from.high());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgSetOptions_MessageRange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgSetOptions_MessageRange::CopyFrom(const CMsgGCMsgSetOptions_MessageRange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgSetOptions_MessageRange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CMsgGCMsgSetOptions_MessageRange::Swap(CMsgGCMsgSetOptions_MessageRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgSetOptions_MessageRange::InternalSwap(CMsgGCMsgSetOptions_MessageRange* other) {
  std::swap(low_, other->low_);
  std::swap(high_, other->high_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgSetOptions_MessageRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgSetOptions_MessageRange_descriptor_;
  metadata.reflection = CMsgGCMsgSetOptions_MessageRange_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCMsgSetOptions::kOptionsFieldNumber;
const int CMsgGCMsgSetOptions::kClientMsgRangesFieldNumber;
const int CMsgGCMsgSetOptions::kGcsqlVersionFieldNumber;
#endif  // !_MSC_VER

CMsgGCMsgSetOptions::CMsgGCMsgSetOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgSetOptions)
}

void CMsgGCMsgSetOptions::InitAsDefaultInstance() {
}

CMsgGCMsgSetOptions::CMsgGCMsgSetOptions(const CMsgGCMsgSetOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgSetOptions)
}

void CMsgGCMsgSetOptions::SharedCtor() {
  _cached_size_ = 0;
  gcsql_version_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCMsgSetOptions::~CMsgGCMsgSetOptions() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgSetOptions)
  SharedDtor();
}

void CMsgGCMsgSetOptions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCMsgSetOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgSetOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCMsgSetOptions_descriptor_;
}

const CMsgGCMsgSetOptions& CMsgGCMsgSetOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCMsgSetOptions* CMsgGCMsgSetOptions::default_instance_ = NULL;

CMsgGCMsgSetOptions* CMsgGCMsgSetOptions::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgSetOptions* n = new CMsgGCMsgSetOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgSetOptions::Clear() {
  gcsql_version_ = 1;
  options_.Clear();
  client_msg_ranges_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCMsgSetOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgSetOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCMsgSetOptions.Option options = 1;
      case 1: {
        if (tag == 8) {
         parse_options:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCMsgSetOptions_Option_IsValid(value)) {
            add_options(static_cast< ::CMsgGCMsgSetOptions_Option >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::CMsgGCMsgSetOptions_Option_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_options())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_options;
        if (input->ExpectTag(18)) goto parse_client_msg_ranges;
        break;
      }

      // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
      case 2: {
        if (tag == 18) {
         parse_client_msg_ranges:
          DO_(input->IncrementRecursionDepth());
         parse_loop_client_msg_ranges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_client_msg_ranges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_client_msg_ranges;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_gcsql_version;
        break;
      }

      // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
      case 3: {
        if (tag == 24) {
         parse_gcsql_version:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCMsgSetOptions_GCSQLVersion_IsValid(value)) {
            set_gcsql_version(static_cast< ::CMsgGCMsgSetOptions_GCSQLVersion >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgSetOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgSetOptions)
  return false;
#undef DO_
}

void CMsgGCMsgSetOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgSetOptions)
  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  for (int i = 0; i < this->options_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->options(i), output);
  }

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  for (unsigned int i = 0, n = this->client_msg_ranges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->client_msg_ranges(i), output);
  }

  // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
  if (has_gcsql_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->gcsql_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgSetOptions)
}

::google::protobuf::uint8* CMsgGCMsgSetOptions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgSetOptions)
  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  for (int i = 0; i < this->options_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->options(i), target);
  }

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  for (unsigned int i = 0, n = this->client_msg_ranges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->client_msg_ranges(i), target);
  }

  // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
  if (has_gcsql_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->gcsql_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgSetOptions)
  return target;
}

int CMsgGCMsgSetOptions::ByteSize() const {
  int total_size = 0;

  // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
  if (has_gcsql_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gcsql_version());
  }

  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->options_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->options(i));
    }
    total_size += 1 * this->options_size() + data_size;
  }

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  total_size += 1 * this->client_msg_ranges_size();
  for (int i = 0; i < this->client_msg_ranges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->client_msg_ranges(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgSetOptions::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCMsgSetOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgSetOptions>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCMsgSetOptions::MergeFrom(const CMsgGCMsgSetOptions& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  options_.MergeFrom(from.options_);
  client_msg_ranges_.MergeFrom(from.client_msg_ranges_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_gcsql_version()) {
      set_gcsql_version(from.gcsql_version());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCMsgSetOptions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgSetOptions::CopyFrom(const CMsgGCMsgSetOptions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgSetOptions::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->client_msg_ranges())) return false;
  return true;
}

void CMsgGCMsgSetOptions::Swap(CMsgGCMsgSetOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgSetOptions::InternalSwap(CMsgGCMsgSetOptions* other) {
  options_.UnsafeArenaSwap(&other->options_);
  client_msg_ranges_.UnsafeArenaSwap(&other->client_msg_ranges_);
  std::swap(gcsql_version_, other->gcsql_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgSetOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCMsgSetOptions_descriptor_;
  metadata.reflection = CMsgGCMsgSetOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMsgSetOptions_MessageRange

// required uint32 low = 1;
bool CMsgGCMsgSetOptions_MessageRange::has_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMsgSetOptions_MessageRange::set_has_low() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMsgSetOptions_MessageRange::clear_has_low() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMsgSetOptions_MessageRange::clear_low() {
  low_ = 0u;
  clear_has_low();
}
 ::google::protobuf::uint32 CMsgGCMsgSetOptions_MessageRange::low() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgSetOptions.MessageRange.low)
  return low_;
}
 void CMsgGCMsgSetOptions_MessageRange::set_low(::google::protobuf::uint32 value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgSetOptions.MessageRange.low)
}

// required uint32 high = 2;
bool CMsgGCMsgSetOptions_MessageRange::has_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCMsgSetOptions_MessageRange::set_has_high() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCMsgSetOptions_MessageRange::clear_has_high() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCMsgSetOptions_MessageRange::clear_high() {
  high_ = 0u;
  clear_has_high();
}
 ::google::protobuf::uint32 CMsgGCMsgSetOptions_MessageRange::high() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgSetOptions.MessageRange.high)
  return high_;
}
 void CMsgGCMsgSetOptions_MessageRange::set_high(::google::protobuf::uint32 value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgSetOptions.MessageRange.high)
}

// -------------------------------------------------------------------

// CMsgGCMsgSetOptions

// repeated .CMsgGCMsgSetOptions.Option options = 1;
int CMsgGCMsgSetOptions::options_size() const {
  return options_.size();
}
void CMsgGCMsgSetOptions::clear_options() {
  options_.Clear();
}
 ::CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::options(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgSetOptions.options)
  return static_cast< ::CMsgGCMsgSetOptions_Option >(options_.Get(index));
}
 void CMsgGCMsgSetOptions::set_options(int index, ::CMsgGCMsgSetOptions_Option value) {
  assert(::CMsgGCMsgSetOptions_Option_IsValid(value));
  options_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCMsgSetOptions.options)
}
 void CMsgGCMsgSetOptions::add_options(::CMsgGCMsgSetOptions_Option value) {
  assert(::CMsgGCMsgSetOptions_Option_IsValid(value));
  options_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCMsgSetOptions.options)
}
 const ::google::protobuf::RepeatedField<int>&
CMsgGCMsgSetOptions::options() const {
  // @@protoc_insertion_point(field_list:CMsgGCMsgSetOptions.options)
  return options_;
}
 ::google::protobuf::RepeatedField<int>*
CMsgGCMsgSetOptions::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMsgSetOptions.options)
  return &options_;
}

// repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
int CMsgGCMsgSetOptions::client_msg_ranges_size() const {
  return client_msg_ranges_.size();
}
void CMsgGCMsgSetOptions::clear_client_msg_ranges() {
  client_msg_ranges_.Clear();
}
const ::CMsgGCMsgSetOptions_MessageRange& CMsgGCMsgSetOptions::client_msg_ranges(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_.Get(index);
}
::CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions::mutable_client_msg_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_.Mutable(index);
}
::CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions::add_client_msg_ranges() {
  // @@protoc_insertion_point(field_add:CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgGCMsgSetOptions_MessageRange >*
CMsgGCMsgSetOptions::mutable_client_msg_ranges() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMsgSetOptions.client_msg_ranges)
  return &client_msg_ranges_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgSetOptions_MessageRange >&
CMsgGCMsgSetOptions::client_msg_ranges() const {
  // @@protoc_insertion_point(field_list:CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_;
}

// optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
bool CMsgGCMsgSetOptions::has_gcsql_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCMsgSetOptions::set_has_gcsql_version() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCMsgSetOptions::clear_has_gcsql_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCMsgSetOptions::clear_gcsql_version() {
  gcsql_version_ = 1;
  clear_has_gcsql_version();
}
 ::CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::gcsql_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCMsgSetOptions.gcsql_version)
  return static_cast< ::CMsgGCMsgSetOptions_GCSQLVersion >(gcsql_version_);
}
 void CMsgGCMsgSetOptions::set_gcsql_version(::CMsgGCMsgSetOptions_GCSQLVersion value) {
  assert(::CMsgGCMsgSetOptions_GCSQLVersion_IsValid(value));
  set_has_gcsql_version();
  gcsql_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMsgSetOptions.gcsql_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgGCHUpdateSession_ExtraField::kNameFieldNumber;
const int CMsgGCHUpdateSession_ExtraField::kValueFieldNumber;
#endif  // !_MSC_VER

CMsgGCHUpdateSession_ExtraField::CMsgGCHUpdateSession_ExtraField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHUpdateSession.ExtraField)
}

void CMsgGCHUpdateSession_ExtraField::InitAsDefaultInstance() {
}

CMsgGCHUpdateSession_ExtraField::CMsgGCHUpdateSession_ExtraField(const CMsgGCHUpdateSession_ExtraField& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHUpdateSession.ExtraField)
}

void CMsgGCHUpdateSession_ExtraField::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCHUpdateSession_ExtraField::~CMsgGCHUpdateSession_ExtraField() {
  // @@protoc_insertion_point(destructor:CMsgGCHUpdateSession.ExtraField)
  SharedDtor();
}

void CMsgGCHUpdateSession_ExtraField::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgGCHUpdateSession_ExtraField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHUpdateSession_ExtraField::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCHUpdateSession_ExtraField_descriptor_;
}

const CMsgGCHUpdateSession_ExtraField& CMsgGCHUpdateSession_ExtraField::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession_ExtraField::default_instance_ = NULL;

CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession_ExtraField::New(::google::protobuf::Arena* arena) const {
  CMsgGCHUpdateSession_ExtraField* n = new CMsgGCHUpdateSession_ExtraField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHUpdateSession_ExtraField::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCHUpdateSession_ExtraField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHUpdateSession.ExtraField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCHUpdateSession.ExtraField.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCHUpdateSession.ExtraField.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHUpdateSession.ExtraField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHUpdateSession.ExtraField)
  return false;
#undef DO_
}

void CMsgGCHUpdateSession_ExtraField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHUpdateSession.ExtraField)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHUpdateSession.ExtraField)
}

::google::protobuf::uint8* CMsgGCHUpdateSession_ExtraField::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHUpdateSession.ExtraField)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHUpdateSession.ExtraField)
  return target;
}

int CMsgGCHUpdateSession_ExtraField::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHUpdateSession_ExtraField::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCHUpdateSession_ExtraField* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHUpdateSession_ExtraField>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCHUpdateSession_ExtraField::MergeFrom(const CMsgGCHUpdateSession_ExtraField& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCHUpdateSession_ExtraField::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHUpdateSession_ExtraField::CopyFrom(const CMsgGCHUpdateSession_ExtraField& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHUpdateSession_ExtraField::IsInitialized() const {

  return true;
}

void CMsgGCHUpdateSession_ExtraField::Swap(CMsgGCHUpdateSession_ExtraField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHUpdateSession_ExtraField::InternalSwap(CMsgGCHUpdateSession_ExtraField* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHUpdateSession_ExtraField::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCHUpdateSession_ExtraField_descriptor_;
  metadata.reflection = CMsgGCHUpdateSession_ExtraField_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCHUpdateSession::kSteamIdFieldNumber;
const int CMsgGCHUpdateSession::kAppIdFieldNumber;
const int CMsgGCHUpdateSession::kOnlineFieldNumber;
const int CMsgGCHUpdateSession::kServerSteamIdFieldNumber;
const int CMsgGCHUpdateSession::kServerAddrFieldNumber;
const int CMsgGCHUpdateSession::kServerPortFieldNumber;
const int CMsgGCHUpdateSession::kOsTypeFieldNumber;
const int CMsgGCHUpdateSession::kClientAddrFieldNumber;
const int CMsgGCHUpdateSession::kExtraFieldsFieldNumber;
#endif  // !_MSC_VER

CMsgGCHUpdateSession::CMsgGCHUpdateSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHUpdateSession)
}

void CMsgGCHUpdateSession::InitAsDefaultInstance() {
}

CMsgGCHUpdateSession::CMsgGCHUpdateSession(const CMsgGCHUpdateSession& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHUpdateSession)
}

void CMsgGCHUpdateSession::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
  app_id_ = 0u;
  online_ = false;
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  server_addr_ = 0u;
  server_port_ = 0u;
  os_type_ = 0u;
  client_addr_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCHUpdateSession::~CMsgGCHUpdateSession() {
  // @@protoc_insertion_point(destructor:CMsgGCHUpdateSession)
  SharedDtor();
}

void CMsgGCHUpdateSession::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCHUpdateSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHUpdateSession::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCHUpdateSession_descriptor_;
}

const CMsgGCHUpdateSession& CMsgGCHUpdateSession::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgGCHUpdateSession* CMsgGCHUpdateSession::default_instance_ = NULL;

CMsgGCHUpdateSession* CMsgGCHUpdateSession::New(::google::protobuf::Arena* arena) const {
  CMsgGCHUpdateSession* n = new CMsgGCHUpdateSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHUpdateSession::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgGCHUpdateSession*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(steam_id_, client_addr_);
  }

#undef ZR_HELPER_
#undef ZR_

  extra_fields_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgGCHUpdateSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHUpdateSession)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
          set_has_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_app_id;
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (tag == 16) {
         parse_app_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
          set_has_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_online;
        break;
      }

      // optional bool online = 3;
      case 3: {
        if (tag == 24) {
         parse_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
          set_has_online();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_server_steam_id;
        break;
      }

      // optional fixed64 server_steam_id = 4;
      case 4: {
        if (tag == 33) {
         parse_server_steam_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_steam_id_)));
          set_has_server_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_server_addr;
        break;
      }

      // optional uint32 server_addr = 5;
      case 5: {
        if (tag == 40) {
         parse_server_addr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_addr_)));
          set_has_server_addr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_server_port;
        break;
      }

      // optional uint32 server_port = 6;
      case 6: {
        if (tag == 48) {
         parse_server_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
          set_has_server_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_os_type;
        break;
      }

      // optional uint32 os_type = 7;
      case 7: {
        if (tag == 56) {
         parse_os_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &os_type_)));
          set_has_os_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_client_addr;
        break;
      }

      // optional uint32 client_addr = 8;
      case 8: {
        if (tag == 64) {
         parse_client_addr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_addr_)));
          set_has_client_addr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_extra_fields;
        break;
      }

      // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
      case 9: {
        if (tag == 74) {
         parse_extra_fields:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_fields()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_extra_fields;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHUpdateSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHUpdateSession)
  return false;
#undef DO_
}

void CMsgGCHUpdateSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHUpdateSession)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 app_id = 2;
  if (has_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional bool online = 3;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->online(), output);
  }

  // optional fixed64 server_steam_id = 4;
  if (has_server_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->server_steam_id(), output);
  }

  // optional uint32 server_addr = 5;
  if (has_server_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->server_addr(), output);
  }

  // optional uint32 server_port = 6;
  if (has_server_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->server_port(), output);
  }

  // optional uint32 os_type = 7;
  if (has_os_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->os_type(), output);
  }

  // optional uint32 client_addr = 8;
  if (has_client_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->client_addr(), output);
  }

  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  for (unsigned int i = 0, n = this->extra_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->extra_fields(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHUpdateSession)
}

::google::protobuf::uint8* CMsgGCHUpdateSession::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHUpdateSession)
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 app_id = 2;
  if (has_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional bool online = 3;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->online(), target);
  }

  // optional fixed64 server_steam_id = 4;
  if (has_server_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->server_steam_id(), target);
  }

  // optional uint32 server_addr = 5;
  if (has_server_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->server_addr(), target);
  }

  // optional uint32 server_port = 6;
  if (has_server_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->server_port(), target);
  }

  // optional uint32 os_type = 7;
  if (has_os_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->os_type(), target);
  }

  // optional uint32 client_addr = 8;
  if (has_client_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->client_addr(), target);
  }

  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  for (unsigned int i = 0, n = this->extra_fields_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->extra_fields(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHUpdateSession)
  return target;
}

int CMsgGCHUpdateSession::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional bool online = 3;
    if (has_online()) {
      total_size += 1 + 1;
    }

    // optional fixed64 server_steam_id = 4;
    if (has_server_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 server_addr = 5;
    if (has_server_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_addr());
    }

    // optional uint32 server_port = 6;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

    // optional uint32 os_type = 7;
    if (has_os_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->os_type());
    }

    // optional uint32 client_addr = 8;
    if (has_client_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_addr());
    }

  }
  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  total_size += 1 * this->extra_fields_size();
  for (int i = 0; i < this->extra_fields_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_fields(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHUpdateSession::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgGCHUpdateSession* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHUpdateSession>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCHUpdateSession::MergeFrom(const CMsgGCHUpdateSession& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  extra_fields_.MergeFrom(from.extra_fields_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steam_id()) {
      set_steam_id(from.steam_id());
    }
    if (from.has_app_id()) {
      set_app_id(from.app_id());
    }
    if (from.has_online()) {
      set_online(from.online());
    }
    if (from.has_server_steam_id()) {
      set_server_steam_id(from.server_steam_id());
    }
    if (from.has_server_addr()) {
      set_server_addr(from.server_addr());
    }
    if (from.has_server_port()) {
      set_server_port(from.server_port());
    }
    if (from.has_os_type()) {
      set_os_type(from.os_type());
    }
    if (from.has_client_addr()) {
      set_client_addr(from.client_addr());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgGCHUpdateSession::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHUpdateSession::CopyFrom(const CMsgGCHUpdateSession& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHUpdateSession::IsInitialized() const {

  return true;
}

void CMsgGCHUpdateSession::Swap(CMsgGCHUpdateSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHUpdateSession::InternalSwap(CMsgGCHUpdateSession* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(online_, other->online_);
  std::swap(server_steam_id_, other->server_steam_id_);
  std::swap(server_addr_, other->server_addr_);
  std::swap(server_port_, other->server_port_);
  std::swap(os_type_, other->os_type_);
  std::swap(client_addr_, other->client_addr_);
  extra_fields_.UnsafeArenaSwap(&other->extra_fields_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHUpdateSession::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCHUpdateSession_descriptor_;
  metadata.reflection = CMsgGCHUpdateSession_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCHUpdateSession_ExtraField

// optional string name = 1;
bool CMsgGCHUpdateSession_ExtraField::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCHUpdateSession_ExtraField::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCHUpdateSession_ExtraField::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCHUpdateSession_ExtraField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CMsgGCHUpdateSession_ExtraField::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.ExtraField.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCHUpdateSession_ExtraField::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.ExtraField.name)
}
 void CMsgGCHUpdateSession_ExtraField::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCHUpdateSession.ExtraField.name)
}
 void CMsgGCHUpdateSession_ExtraField::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCHUpdateSession.ExtraField.name)
}
 ::std::string* CMsgGCHUpdateSession_ExtraField::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCHUpdateSession.ExtraField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCHUpdateSession_ExtraField::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCHUpdateSession_ExtraField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCHUpdateSession.ExtraField.name)
}

// optional string value = 2;
bool CMsgGCHUpdateSession_ExtraField::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCHUpdateSession_ExtraField::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCHUpdateSession_ExtraField::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCHUpdateSession_ExtraField::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& CMsgGCHUpdateSession_ExtraField::value() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.ExtraField.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCHUpdateSession_ExtraField::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.ExtraField.value)
}
 void CMsgGCHUpdateSession_ExtraField::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCHUpdateSession.ExtraField.value)
}
 void CMsgGCHUpdateSession_ExtraField::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCHUpdateSession.ExtraField.value)
}
 ::std::string* CMsgGCHUpdateSession_ExtraField::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CMsgGCHUpdateSession.ExtraField.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgGCHUpdateSession_ExtraField::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgGCHUpdateSession_ExtraField::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCHUpdateSession.ExtraField.value)
}

// -------------------------------------------------------------------

// CMsgGCHUpdateSession

// optional fixed64 steam_id = 1;
bool CMsgGCHUpdateSession::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCHUpdateSession::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCHUpdateSession::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCHUpdateSession::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
 ::google::protobuf::uint64 CMsgGCHUpdateSession::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.steam_id)
  return steam_id_;
}
 void CMsgGCHUpdateSession::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.steam_id)
}

// optional uint32 app_id = 2;
bool CMsgGCHUpdateSession::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCHUpdateSession::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCHUpdateSession::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCHUpdateSession::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
 ::google::protobuf::uint32 CMsgGCHUpdateSession::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.app_id)
  return app_id_;
}
 void CMsgGCHUpdateSession::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.app_id)
}

// optional bool online = 3;
bool CMsgGCHUpdateSession::has_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCHUpdateSession::set_has_online() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCHUpdateSession::clear_has_online() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCHUpdateSession::clear_online() {
  online_ = false;
  clear_has_online();
}
 bool CMsgGCHUpdateSession::online() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.online)
  return online_;
}
 void CMsgGCHUpdateSession::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.online)
}

// optional fixed64 server_steam_id = 4;
bool CMsgGCHUpdateSession::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCHUpdateSession::set_has_server_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCHUpdateSession::clear_has_server_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCHUpdateSession::clear_server_steam_id() {
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steam_id();
}
 ::google::protobuf::uint64 CMsgGCHUpdateSession::server_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.server_steam_id)
  return server_steam_id_;
}
 void CMsgGCHUpdateSession::set_server_steam_id(::google::protobuf::uint64 value) {
  set_has_server_steam_id();
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.server_steam_id)
}

// optional uint32 server_addr = 5;
bool CMsgGCHUpdateSession::has_server_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGCHUpdateSession::set_has_server_addr() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGCHUpdateSession::clear_has_server_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGCHUpdateSession::clear_server_addr() {
  server_addr_ = 0u;
  clear_has_server_addr();
}
 ::google::protobuf::uint32 CMsgGCHUpdateSession::server_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.server_addr)
  return server_addr_;
}
 void CMsgGCHUpdateSession::set_server_addr(::google::protobuf::uint32 value) {
  set_has_server_addr();
  server_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.server_addr)
}

// optional uint32 server_port = 6;
bool CMsgGCHUpdateSession::has_server_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgGCHUpdateSession::set_has_server_port() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgGCHUpdateSession::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgGCHUpdateSession::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
 ::google::protobuf::uint32 CMsgGCHUpdateSession::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.server_port)
  return server_port_;
}
 void CMsgGCHUpdateSession::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.server_port)
}

// optional uint32 os_type = 7;
bool CMsgGCHUpdateSession::has_os_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgGCHUpdateSession::set_has_os_type() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgGCHUpdateSession::clear_has_os_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgGCHUpdateSession::clear_os_type() {
  os_type_ = 0u;
  clear_has_os_type();
}
 ::google::protobuf::uint32 CMsgGCHUpdateSession::os_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.os_type)
  return os_type_;
}
 void CMsgGCHUpdateSession::set_os_type(::google::protobuf::uint32 value) {
  set_has_os_type();
  os_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.os_type)
}

// optional uint32 client_addr = 8;
bool CMsgGCHUpdateSession::has_client_addr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgGCHUpdateSession::set_has_client_addr() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgGCHUpdateSession::clear_has_client_addr() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgGCHUpdateSession::clear_client_addr() {
  client_addr_ = 0u;
  clear_has_client_addr();
}
 ::google::protobuf::uint32 CMsgGCHUpdateSession::client_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.client_addr)
  return client_addr_;
}
 void CMsgGCHUpdateSession::set_client_addr(::google::protobuf::uint32 value) {
  set_has_client_addr();
  client_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHUpdateSession.client_addr)
}

// repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
int CMsgGCHUpdateSession::extra_fields_size() const {
  return extra_fields_.size();
}
void CMsgGCHUpdateSession::clear_extra_fields() {
  extra_fields_.Clear();
}
const ::CMsgGCHUpdateSession_ExtraField& CMsgGCHUpdateSession::extra_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCHUpdateSession.extra_fields)
  return extra_fields_.Get(index);
}
::CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession::mutable_extra_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCHUpdateSession.extra_fields)
  return extra_fields_.Mutable(index);
}
::CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession::add_extra_fields() {
  // @@protoc_insertion_point(field_add:CMsgGCHUpdateSession.extra_fields)
  return extra_fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgGCHUpdateSession_ExtraField >*
CMsgGCHUpdateSession::mutable_extra_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCHUpdateSession.extra_fields)
  return &extra_fields_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgGCHUpdateSession_ExtraField >&
CMsgGCHUpdateSession::extra_fields() const {
  // @@protoc_insertion_point(field_list:CMsgGCHUpdateSession.extra_fields)
  return extra_fields_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::kAppInstanceCountFieldNumber;
const int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::kOtherSteamidsFieldNumber;
#endif  // !_MSC_VER

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::InitAsDefaultInstance() {
}

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SharedCtor() {
  _cached_size_ = 0;
  app_instance_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::~CMsgNotificationOfSuspiciousActivity_MultipleGameInstances() {
  // @@protoc_insertion_point(destructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  SharedDtor();
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_descriptor_;
}

const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance_ = NULL;

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::New(::google::protobuf::Arena* arena) const {
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* n = new CMsgNotificationOfSuspiciousActivity_MultipleGameInstances;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Clear() {
  app_instance_count_ = 0u;
  other_steamids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_instance_count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_instance_count_)));
          set_has_app_instance_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_other_steamids;
        break;
      }

      // repeated fixed64 other_steamids = 2;
      case 2: {
        if (tag == 17) {
         parse_other_steamids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17, input, this->mutable_other_steamids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_other_steamids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_other_steamids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  return false;
#undef DO_
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  // optional uint32 app_instance_count = 1;
  if (has_app_instance_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_instance_count(), output);
  }

  // repeated fixed64 other_steamids = 2;
  for (int i = 0; i < this->other_steamids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->other_steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}

::google::protobuf::uint8* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  // optional uint32 app_instance_count = 1;
  if (has_app_instance_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_instance_count(), target);
  }

  // repeated fixed64 other_steamids = 2;
  for (int i = 0; i < this->other_steamids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(2, this->other_steamids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  return target;
}

int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::ByteSize() const {
  int total_size = 0;

  // optional uint32 app_instance_count = 1;
  if (has_app_instance_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_instance_count());
  }

  // repeated fixed64 other_steamids = 2;
  {
    int data_size = 0;
    data_size = 8 * this->other_steamids_size();
    total_size += 1 * this->other_steamids_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  other_steamids_.MergeFrom(from.other_steamids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_app_instance_count()) {
      set_app_instance_count(from.app_instance_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CopyFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::IsInitialized() const {

  return true;
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Swap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::InternalSwap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other) {
  std::swap(app_instance_count_, other->app_instance_count_);
  other_steamids_.UnsafeArenaSwap(&other->other_steamids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_descriptor_;
  metadata.reflection = CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgNotificationOfSuspiciousActivity::kSteamidFieldNumber;
const int CMsgNotificationOfSuspiciousActivity::kAppidFieldNumber;
const int CMsgNotificationOfSuspiciousActivity::kMultipleInstancesFieldNumber;
#endif  // !_MSC_VER

CMsgNotificationOfSuspiciousActivity::CMsgNotificationOfSuspiciousActivity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNotificationOfSuspiciousActivity)
}

void CMsgNotificationOfSuspiciousActivity::InitAsDefaultInstance() {
  multiple_instances_ = const_cast< ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances*>(&::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance());
}

CMsgNotificationOfSuspiciousActivity::CMsgNotificationOfSuspiciousActivity(const CMsgNotificationOfSuspiciousActivity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgNotificationOfSuspiciousActivity)
}

void CMsgNotificationOfSuspiciousActivity::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  appid_ = 0u;
  multiple_instances_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgNotificationOfSuspiciousActivity::~CMsgNotificationOfSuspiciousActivity() {
  // @@protoc_insertion_point(destructor:CMsgNotificationOfSuspiciousActivity)
  SharedDtor();
}

void CMsgNotificationOfSuspiciousActivity::SharedDtor() {
  if (this != default_instance_) {
    delete multiple_instances_;
  }
}

void CMsgNotificationOfSuspiciousActivity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgNotificationOfSuspiciousActivity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgNotificationOfSuspiciousActivity_descriptor_;
}

const CMsgNotificationOfSuspiciousActivity& CMsgNotificationOfSuspiciousActivity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgNotificationOfSuspiciousActivity* CMsgNotificationOfSuspiciousActivity::default_instance_ = NULL;

CMsgNotificationOfSuspiciousActivity* CMsgNotificationOfSuspiciousActivity::New(::google::protobuf::Arena* arena) const {
  CMsgNotificationOfSuspiciousActivity* n = new CMsgNotificationOfSuspiciousActivity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgNotificationOfSuspiciousActivity::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    steamid_ = GOOGLE_ULONGLONG(0);
    appid_ = 0u;
    if (has_multiple_instances()) {
      if (multiple_instances_ != NULL) multiple_instances_->::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgNotificationOfSuspiciousActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNotificationOfSuspiciousActivity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_appid;
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (tag == 16) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_multiple_instances;
        break;
      }

      // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
      case 3: {
        if (tag == 26) {
         parse_multiple_instances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multiple_instances()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNotificationOfSuspiciousActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNotificationOfSuspiciousActivity)
  return false;
#undef DO_
}

void CMsgNotificationOfSuspiciousActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNotificationOfSuspiciousActivity)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
  if (has_multiple_instances()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->multiple_instances_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNotificationOfSuspiciousActivity)
}

::google::protobuf::uint8* CMsgNotificationOfSuspiciousActivity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotificationOfSuspiciousActivity)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
  if (has_multiple_instances()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->multiple_instances_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotificationOfSuspiciousActivity)
  return target;
}

int CMsgNotificationOfSuspiciousActivity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
    if (has_multiple_instances()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->multiple_instances_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgNotificationOfSuspiciousActivity::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgNotificationOfSuspiciousActivity* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNotificationOfSuspiciousActivity>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgNotificationOfSuspiciousActivity::MergeFrom(const CMsgNotificationOfSuspiciousActivity& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_multiple_instances()) {
      mutable_multiple_instances()->::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(from.multiple_instances());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgNotificationOfSuspiciousActivity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNotificationOfSuspiciousActivity::CopyFrom(const CMsgNotificationOfSuspiciousActivity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNotificationOfSuspiciousActivity::IsInitialized() const {

  return true;
}

void CMsgNotificationOfSuspiciousActivity::Swap(CMsgNotificationOfSuspiciousActivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNotificationOfSuspiciousActivity::InternalSwap(CMsgNotificationOfSuspiciousActivity* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(appid_, other->appid_);
  std::swap(multiple_instances_, other->multiple_instances_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgNotificationOfSuspiciousActivity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgNotificationOfSuspiciousActivity_descriptor_;
  metadata.reflection = CMsgNotificationOfSuspiciousActivity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgNotificationOfSuspiciousActivity_MultipleGameInstances

// optional uint32 app_instance_count = 1;
bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::has_app_instance_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_has_app_instance_count() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_has_app_instance_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_app_instance_count() {
  app_instance_count_ = 0u;
  clear_has_app_instance_count();
}
 ::google::protobuf::uint32 CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::app_instance_count() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.app_instance_count)
  return app_instance_count_;
}
 void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_app_instance_count(::google::protobuf::uint32 value) {
  set_has_app_instance_count();
  app_instance_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.app_instance_count)
}

// repeated fixed64 other_steamids = 2;
int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids_size() const {
  return other_steamids_.size();
}
void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_other_steamids() {
  other_steamids_.Clear();
}
 ::google::protobuf::uint64 CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
  return other_steamids_.Get(index);
}
 void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_other_steamids(int index, ::google::protobuf::uint64 value) {
  other_steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
}
 void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::add_other_steamids(::google::protobuf::uint64 value) {
  other_steamids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids() const {
  // @@protoc_insertion_point(field_list:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
  return other_steamids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::mutable_other_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
  return &other_steamids_;
}

// -------------------------------------------------------------------

// CMsgNotificationOfSuspiciousActivity

// optional fixed64 steamid = 1;
bool CMsgNotificationOfSuspiciousActivity::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgNotificationOfSuspiciousActivity::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgNotificationOfSuspiciousActivity::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgNotificationOfSuspiciousActivity::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
 ::google::protobuf::uint64 CMsgNotificationOfSuspiciousActivity::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationOfSuspiciousActivity.steamid)
  return steamid_;
}
 void CMsgNotificationOfSuspiciousActivity::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotificationOfSuspiciousActivity.steamid)
}

// optional uint32 appid = 2;
bool CMsgNotificationOfSuspiciousActivity::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgNotificationOfSuspiciousActivity::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgNotificationOfSuspiciousActivity::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgNotificationOfSuspiciousActivity::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
 ::google::protobuf::uint32 CMsgNotificationOfSuspiciousActivity::appid() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationOfSuspiciousActivity.appid)
  return appid_;
}
 void CMsgNotificationOfSuspiciousActivity::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotificationOfSuspiciousActivity.appid)
}

// optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
bool CMsgNotificationOfSuspiciousActivity::has_multiple_instances() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgNotificationOfSuspiciousActivity::set_has_multiple_instances() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgNotificationOfSuspiciousActivity::clear_has_multiple_instances() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgNotificationOfSuspiciousActivity::clear_multiple_instances() {
  if (multiple_instances_ != NULL) multiple_instances_->::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Clear();
  clear_has_multiple_instances();
}
const ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& CMsgNotificationOfSuspiciousActivity::multiple_instances() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationOfSuspiciousActivity.multiple_instances)
  return multiple_instances_ != NULL ? *multiple_instances_ : *default_instance_->multiple_instances_;
}
::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity::mutable_multiple_instances() {
  set_has_multiple_instances();
  if (multiple_instances_ == NULL) {
    multiple_instances_ = new ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances;
  }
  // @@protoc_insertion_point(field_mutable:CMsgNotificationOfSuspiciousActivity.multiple_instances)
  return multiple_instances_;
}
::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity::release_multiple_instances() {
  clear_has_multiple_instances();
  ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* temp = multiple_instances_;
  multiple_instances_ = NULL;
  return temp;
}
void CMsgNotificationOfSuspiciousActivity::set_allocated_multiple_instances(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* multiple_instances) {
  delete multiple_instances_;
  multiple_instances_ = multiple_instances;
  if (multiple_instances) {
    set_has_multiple_instances();
  } else {
    clear_has_multiple_instances();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgNotificationOfSuspiciousActivity.multiple_instances)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kInitTimeFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kLastUpdateTimeFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kTxnIdFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kAccountIdFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kLineItemFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kItemIdFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kDefIndexFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kPriceFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kTaxFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kPriceUsdFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kTaxUsdFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kPurchaseTypeFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kSteamTxnTypeFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kCountryCodeFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kRegionCodeFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kQuantityFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerMicroTxn::kRefTransIdFieldNumber;
#endif  // !_MSC_VER

CMsgDPPartnerMicroTxns_PartnerMicroTxn::CMsgDPPartnerMicroTxns_PartnerMicroTxn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::InitAsDefaultInstance() {
}

CMsgDPPartnerMicroTxns_PartnerMicroTxn::CMsgDPPartnerMicroTxns_PartnerMicroTxn(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  init_time_ = 0u;
  last_update_time_ = 0u;
  txn_id_ = GOOGLE_ULONGLONG(0);
  account_id_ = 0u;
  line_item_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  def_index_ = 0u;
  price_ = 0u;
  tax_ = 0u;
  price_usd_ = 0u;
  tax_usd_ = 0u;
  purchase_type_ = 0u;
  steam_txn_type_ = 0u;
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
  ref_trans_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDPPartnerMicroTxns_PartnerMicroTxn::~CMsgDPPartnerMicroTxns_PartnerMicroTxn() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  SharedDtor();
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxns_PartnerMicroTxn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDPPartnerMicroTxns_PartnerMicroTxn_descriptor_;
}

const CMsgDPPartnerMicroTxns_PartnerMicroTxn& CMsgDPPartnerMicroTxns_PartnerMicroTxn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns_PartnerMicroTxn::default_instance_ = NULL;

CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns_PartnerMicroTxn::New(::google::protobuf::Arena* arena) const {
  CMsgDPPartnerMicroTxns_PartnerMicroTxn* n = new CMsgDPPartnerMicroTxns_PartnerMicroTxn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgDPPartnerMicroTxns_PartnerMicroTxn*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(init_time_, price_);
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(tax_, purchase_type_);
    ZR_(steam_txn_type_, quantity_);
    if (has_country_code()) {
      country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_region_code()) {
      region_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ref_trans_id_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 init_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &init_time_)));
          set_has_init_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_last_update_time;
        break;
      }

      // optional uint32 last_update_time = 2;
      case 2: {
        if (tag == 16) {
         parse_last_update_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_update_time_)));
          set_has_last_update_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_txn_id;
        break;
      }

      // optional uint64 txn_id = 3;
      case 3: {
        if (tag == 24) {
         parse_txn_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
          set_has_txn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_account_id;
        break;
      }

      // optional uint32 account_id = 4;
      case 4: {
        if (tag == 32) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_line_item;
        break;
      }

      // optional uint32 line_item = 5;
      case 5: {
        if (tag == 40) {
         parse_line_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &line_item_)));
          set_has_line_item();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 6;
      case 6: {
        if (tag == 48) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_def_index;
        break;
      }

      // optional uint32 def_index = 7;
      case 7: {
        if (tag == 56) {
         parse_def_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
          set_has_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_price;
        break;
      }

      // optional uint32 price = 8;
      case 8: {
        if (tag == 64) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_tax;
        break;
      }

      // optional uint32 tax = 9;
      case 9: {
        if (tag == 72) {
         parse_tax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tax_)));
          set_has_tax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_price_usd;
        break;
      }

      // optional uint32 price_usd = 10;
      case 10: {
        if (tag == 80) {
         parse_price_usd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_usd_)));
          set_has_price_usd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_tax_usd;
        break;
      }

      // optional uint32 tax_usd = 11;
      case 11: {
        if (tag == 88) {
         parse_tax_usd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tax_usd_)));
          set_has_tax_usd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_purchase_type;
        break;
      }

      // optional uint32 purchase_type = 12;
      case 12: {
        if (tag == 96) {
         parse_purchase_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &purchase_type_)));
          set_has_purchase_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_steam_txn_type;
        break;
      }

      // optional uint32 steam_txn_type = 13;
      case 13: {
        if (tag == 104) {
         parse_steam_txn_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steam_txn_type_)));
          set_has_steam_txn_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_country_code;
        break;
      }

      // optional string country_code = 14;
      case 14: {
        if (tag == 114) {
         parse_country_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), this->country_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_region_code;
        break;
      }

      // optional string region_code = 15;
      case 15: {
        if (tag == 122) {
         parse_region_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region_code().data(), this->region_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_quantity;
        break;
      }

      // optional int32 quantity = 16;
      case 16: {
        if (tag == 128) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quantity_)));
          set_has_quantity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_ref_trans_id;
        break;
      }

      // optional uint64 ref_trans_id = 17;
      case 17: {
        if (tag == 136) {
         parse_ref_trans_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ref_trans_id_)));
          set_has_ref_trans_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  return false;
#undef DO_
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  // optional uint32 init_time = 1;
  if (has_init_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->init_time(), output);
  }

  // optional uint32 last_update_time = 2;
  if (has_last_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_update_time(), output);
  }

  // optional uint64 txn_id = 3;
  if (has_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->txn_id(), output);
  }

  // optional uint32 account_id = 4;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->account_id(), output);
  }

  // optional uint32 line_item = 5;
  if (has_line_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->line_item(), output);
  }

  // optional uint64 item_id = 6;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->item_id(), output);
  }

  // optional uint32 def_index = 7;
  if (has_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->def_index(), output);
  }

  // optional uint32 price = 8;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->price(), output);
  }

  // optional uint32 tax = 9;
  if (has_tax()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->tax(), output);
  }

  // optional uint32 price_usd = 10;
  if (has_price_usd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->price_usd(), output);
  }

  // optional uint32 tax_usd = 11;
  if (has_tax_usd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->tax_usd(), output);
  }

  // optional uint32 purchase_type = 12;
  if (has_purchase_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->purchase_type(), output);
  }

  // optional uint32 steam_txn_type = 13;
  if (has_steam_txn_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->steam_txn_type(), output);
  }

  // optional string country_code = 14;
  if (has_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->country_code(), output);
  }

  // optional string region_code = 15;
  if (has_region_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_code().data(), this->region_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->region_code(), output);
  }

  // optional int32 quantity = 16;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->quantity(), output);
  }

  // optional uint64 ref_trans_id = 17;
  if (has_ref_trans_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->ref_trans_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
}

::google::protobuf::uint8* CMsgDPPartnerMicroTxns_PartnerMicroTxn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  // optional uint32 init_time = 1;
  if (has_init_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->init_time(), target);
  }

  // optional uint32 last_update_time = 2;
  if (has_last_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_update_time(), target);
  }

  // optional uint64 txn_id = 3;
  if (has_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->txn_id(), target);
  }

  // optional uint32 account_id = 4;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->account_id(), target);
  }

  // optional uint32 line_item = 5;
  if (has_line_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->line_item(), target);
  }

  // optional uint64 item_id = 6;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->item_id(), target);
  }

  // optional uint32 def_index = 7;
  if (has_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->def_index(), target);
  }

  // optional uint32 price = 8;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->price(), target);
  }

  // optional uint32 tax = 9;
  if (has_tax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->tax(), target);
  }

  // optional uint32 price_usd = 10;
  if (has_price_usd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->price_usd(), target);
  }

  // optional uint32 tax_usd = 11;
  if (has_tax_usd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->tax_usd(), target);
  }

  // optional uint32 purchase_type = 12;
  if (has_purchase_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->purchase_type(), target);
  }

  // optional uint32 steam_txn_type = 13;
  if (has_steam_txn_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->steam_txn_type(), target);
  }

  // optional string country_code = 14;
  if (has_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->country_code(), target);
  }

  // optional string region_code = 15;
  if (has_region_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_code().data(), this->region_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->region_code(), target);
  }

  // optional int32 quantity = 16;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->quantity(), target);
  }

  // optional uint64 ref_trans_id = 17;
  if (has_ref_trans_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->ref_trans_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  return target;
}

int CMsgDPPartnerMicroTxns_PartnerMicroTxn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 init_time = 1;
    if (has_init_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->init_time());
    }

    // optional uint32 last_update_time = 2;
    if (has_last_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_update_time());
    }

    // optional uint64 txn_id = 3;
    if (has_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_id());
    }

    // optional uint32 account_id = 4;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 line_item = 5;
    if (has_line_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->line_item());
    }

    // optional uint64 item_id = 6;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 7;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional uint32 price = 8;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 tax = 9;
    if (has_tax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tax());
    }

    // optional uint32 price_usd = 10;
    if (has_price_usd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_usd());
    }

    // optional uint32 tax_usd = 11;
    if (has_tax_usd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tax_usd());
    }

    // optional uint32 purchase_type = 12;
    if (has_purchase_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->purchase_type());
    }

    // optional uint32 steam_txn_type = 13;
    if (has_steam_txn_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steam_txn_type());
    }

    // optional string country_code = 14;
    if (has_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional string region_code = 15;
    if (has_region_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region_code());
    }

    // optional int32 quantity = 16;
    if (has_quantity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quantity());
    }

  }
  // optional uint64 ref_trans_id = 17;
  if (has_ref_trans_id()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ref_trans_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgDPPartnerMicroTxns_PartnerMicroTxn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPPartnerMicroTxns_PartnerMicroTxn>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::MergeFrom(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_init_time()) {
      set_init_time(from.init_time());
    }
    if (from.has_last_update_time()) {
      set_last_update_time(from.last_update_time());
    }
    if (from.has_txn_id()) {
      set_txn_id(from.txn_id());
    }
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_line_item()) {
      set_line_item(from.line_item());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_def_index()) {
      set_def_index(from.def_index());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_tax()) {
      set_tax(from.tax());
    }
    if (from.has_price_usd()) {
      set_price_usd(from.price_usd());
    }
    if (from.has_tax_usd()) {
      set_tax_usd(from.tax_usd());
    }
    if (from.has_purchase_type()) {
      set_purchase_type(from.purchase_type());
    }
    if (from.has_steam_txn_type()) {
      set_steam_txn_type(from.steam_txn_type());
    }
    if (from.has_country_code()) {
      set_has_country_code();
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (from.has_region_code()) {
      set_has_region_code();
      region_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_code_);
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_ref_trans_id()) {
      set_ref_trans_id(from.ref_trans_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::CopyFrom(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::IsInitialized() const {

  return true;
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::Swap(CMsgDPPartnerMicroTxns_PartnerMicroTxn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::InternalSwap(CMsgDPPartnerMicroTxns_PartnerMicroTxn* other) {
  std::swap(init_time_, other->init_time_);
  std::swap(last_update_time_, other->last_update_time_);
  std::swap(txn_id_, other->txn_id_);
  std::swap(account_id_, other->account_id_);
  std::swap(line_item_, other->line_item_);
  std::swap(item_id_, other->item_id_);
  std::swap(def_index_, other->def_index_);
  std::swap(price_, other->price_);
  std::swap(tax_, other->tax_);
  std::swap(price_usd_, other->price_usd_);
  std::swap(tax_usd_, other->tax_usd_);
  std::swap(purchase_type_, other->purchase_type_);
  std::swap(steam_txn_type_, other->steam_txn_type_);
  country_code_.Swap(&other->country_code_);
  region_code_.Swap(&other->region_code_);
  std::swap(quantity_, other->quantity_);
  std::swap(ref_trans_id_, other->ref_trans_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxns_PartnerMicroTxn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDPPartnerMicroTxns_PartnerMicroTxn_descriptor_;
  metadata.reflection = CMsgDPPartnerMicroTxns_PartnerMicroTxn_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgDPPartnerMicroTxns_PartnerInfo::kPartnerIdFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerInfo::kPartnerNameFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerInfo::kCurrencyCodeFieldNumber;
const int CMsgDPPartnerMicroTxns_PartnerInfo::kCurrencyNameFieldNumber;
#endif  // !_MSC_VER

CMsgDPPartnerMicroTxns_PartnerInfo::CMsgDPPartnerMicroTxns_PartnerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDPPartnerMicroTxns.PartnerInfo)
}

void CMsgDPPartnerMicroTxns_PartnerInfo::InitAsDefaultInstance() {
}

CMsgDPPartnerMicroTxns_PartnerInfo::CMsgDPPartnerMicroTxns_PartnerInfo(const CMsgDPPartnerMicroTxns_PartnerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxns.PartnerInfo)
}

void CMsgDPPartnerMicroTxns_PartnerInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  partner_id_ = 0u;
  partner_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDPPartnerMicroTxns_PartnerInfo::~CMsgDPPartnerMicroTxns_PartnerInfo() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxns.PartnerInfo)
  SharedDtor();
}

void CMsgDPPartnerMicroTxns_PartnerInfo::SharedDtor() {
  partner_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMsgDPPartnerMicroTxns_PartnerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxns_PartnerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDPPartnerMicroTxns_PartnerInfo_descriptor_;
}

const CMsgDPPartnerMicroTxns_PartnerInfo& CMsgDPPartnerMicroTxns_PartnerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns_PartnerInfo::default_instance_ = NULL;

CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns_PartnerInfo::New(::google::protobuf::Arena* arena) const {
  CMsgDPPartnerMicroTxns_PartnerInfo* n = new CMsgDPPartnerMicroTxns_PartnerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDPPartnerMicroTxns_PartnerInfo::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    partner_id_ = 0u;
    if (has_partner_name()) {
      partner_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_currency_code()) {
      currency_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_currency_name()) {
      currency_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgDPPartnerMicroTxns_PartnerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 partner_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_id_)));
          set_has_partner_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partner_name;
        break;
      }

      // optional string partner_name = 2;
      case 2: {
        if (tag == 18) {
         parse_partner_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->partner_name().data(), this->partner_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDPPartnerMicroTxns.PartnerInfo.partner_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_currency_code;
        break;
      }

      // optional string currency_code = 3;
      case 3: {
        if (tag == 26) {
         parse_currency_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currency_code().data(), this->currency_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDPPartnerMicroTxns.PartnerInfo.currency_code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_currency_name;
        break;
      }

      // optional string currency_name = 4;
      case 4: {
        if (tag == 34) {
         parse_currency_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currency_name().data(), this->currency_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDPPartnerMicroTxns.PartnerInfo.currency_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDPPartnerMicroTxns.PartnerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDPPartnerMicroTxns.PartnerInfo)
  return false;
#undef DO_
}

void CMsgDPPartnerMicroTxns_PartnerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  // optional uint32 partner_id = 1;
  if (has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->partner_id(), output);
  }

  // optional string partner_name = 2;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerInfo.partner_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->partner_name(), output);
  }

  // optional string currency_code = 3;
  if (has_currency_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency_code().data(), this->currency_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerInfo.currency_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->currency_code(), output);
  }

  // optional string currency_name = 4;
  if (has_currency_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency_name().data(), this->currency_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerInfo.currency_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->currency_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDPPartnerMicroTxns.PartnerInfo)
}

::google::protobuf::uint8* CMsgDPPartnerMicroTxns_PartnerInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  // optional uint32 partner_id = 1;
  if (has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->partner_id(), target);
  }

  // optional string partner_name = 2;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerInfo.partner_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->partner_name(), target);
  }

  // optional string currency_code = 3;
  if (has_currency_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency_code().data(), this->currency_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerInfo.currency_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->currency_code(), target);
  }

  // optional string currency_name = 4;
  if (has_currency_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency_name().data(), this->currency_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.PartnerInfo.currency_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->currency_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxns.PartnerInfo)
  return target;
}

int CMsgDPPartnerMicroTxns_PartnerInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 partner_id = 1;
    if (has_partner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_id());
    }

    // optional string partner_name = 2;
    if (has_partner_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partner_name());
    }

    // optional string currency_code = 3;
    if (has_currency_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency_code());
    }

    // optional string currency_name = 4;
    if (has_currency_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency_name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDPPartnerMicroTxns_PartnerInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgDPPartnerMicroTxns_PartnerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPPartnerMicroTxns_PartnerInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDPPartnerMicroTxns_PartnerInfo::MergeFrom(const CMsgDPPartnerMicroTxns_PartnerInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_partner_id()) {
      set_partner_id(from.partner_id());
    }
    if (from.has_partner_name()) {
      set_has_partner_name();
      partner_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partner_name_);
    }
    if (from.has_currency_code()) {
      set_has_currency_code();
      currency_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_code_);
    }
    if (from.has_currency_name()) {
      set_has_currency_name();
      currency_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgDPPartnerMicroTxns_PartnerInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPPartnerMicroTxns_PartnerInfo::CopyFrom(const CMsgDPPartnerMicroTxns_PartnerInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPPartnerMicroTxns_PartnerInfo::IsInitialized() const {

  return true;
}

void CMsgDPPartnerMicroTxns_PartnerInfo::Swap(CMsgDPPartnerMicroTxns_PartnerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPPartnerMicroTxns_PartnerInfo::InternalSwap(CMsgDPPartnerMicroTxns_PartnerInfo* other) {
  std::swap(partner_id_, other->partner_id_);
  partner_name_.Swap(&other->partner_name_);
  currency_code_.Swap(&other->currency_code_);
  currency_name_.Swap(&other->currency_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxns_PartnerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDPPartnerMicroTxns_PartnerInfo_descriptor_;
  metadata.reflection = CMsgDPPartnerMicroTxns_PartnerInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgDPPartnerMicroTxns::kAppidFieldNumber;
const int CMsgDPPartnerMicroTxns::kGcNameFieldNumber;
const int CMsgDPPartnerMicroTxns::kPartnerFieldNumber;
const int CMsgDPPartnerMicroTxns::kTransactionsFieldNumber;
#endif  // !_MSC_VER

CMsgDPPartnerMicroTxns::CMsgDPPartnerMicroTxns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDPPartnerMicroTxns)
}

void CMsgDPPartnerMicroTxns::InitAsDefaultInstance() {
  partner_ = const_cast< ::CMsgDPPartnerMicroTxns_PartnerInfo*>(&::CMsgDPPartnerMicroTxns_PartnerInfo::default_instance());
}

CMsgDPPartnerMicroTxns::CMsgDPPartnerMicroTxns(const CMsgDPPartnerMicroTxns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxns)
}

void CMsgDPPartnerMicroTxns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  appid_ = 0u;
  gc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partner_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDPPartnerMicroTxns::~CMsgDPPartnerMicroTxns() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxns)
  SharedDtor();
}

void CMsgDPPartnerMicroTxns::SharedDtor() {
  gc_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete partner_;
  }
}

void CMsgDPPartnerMicroTxns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDPPartnerMicroTxns_descriptor_;
}

const CMsgDPPartnerMicroTxns& CMsgDPPartnerMicroTxns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgDPPartnerMicroTxns* CMsgDPPartnerMicroTxns::default_instance_ = NULL;

CMsgDPPartnerMicroTxns* CMsgDPPartnerMicroTxns::New(::google::protobuf::Arena* arena) const {
  CMsgDPPartnerMicroTxns* n = new CMsgDPPartnerMicroTxns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDPPartnerMicroTxns::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    appid_ = 0u;
    if (has_gc_name()) {
      gc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_partner()) {
      if (partner_ != NULL) partner_->::CMsgDPPartnerMicroTxns_PartnerInfo::Clear();
    }
  }
  transactions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgDPPartnerMicroTxns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDPPartnerMicroTxns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gc_name;
        break;
      }

      // optional string gc_name = 2;
      case 2: {
        if (tag == 18) {
         parse_gc_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gc_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gc_name().data(), this->gc_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDPPartnerMicroTxns.gc_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_partner;
        break;
      }

      // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
      case 3: {
        if (tag == 26) {
         parse_partner:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partner()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_transactions;
        break;
      }

      // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
      case 4: {
        if (tag == 34) {
         parse_transactions:
          DO_(input->IncrementRecursionDepth());
         parse_loop_transactions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_transactions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_transactions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDPPartnerMicroTxns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDPPartnerMicroTxns)
  return false;
#undef DO_
}

void CMsgDPPartnerMicroTxns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDPPartnerMicroTxns)
  // optional uint32 appid = 1;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string gc_name = 2;
  if (has_gc_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gc_name().data(), this->gc_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.gc_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gc_name(), output);
  }

  // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
  if (has_partner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->partner_, output);
  }

  // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
  for (unsigned int i = 0, n = this->transactions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->transactions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDPPartnerMicroTxns)
}

::google::protobuf::uint8* CMsgDPPartnerMicroTxns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxns)
  // optional uint32 appid = 1;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string gc_name = 2;
  if (has_gc_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gc_name().data(), this->gc_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDPPartnerMicroTxns.gc_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gc_name(), target);
  }

  // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
  if (has_partner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->partner_, target);
  }

  // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
  for (unsigned int i = 0, n = this->transactions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->transactions(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxns)
  return target;
}

int CMsgDPPartnerMicroTxns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional string gc_name = 2;
    if (has_gc_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gc_name());
    }

    // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
    if (has_partner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->partner_);
    }

  }
  // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
  total_size += 1 * this->transactions_size();
  for (int i = 0; i < this->transactions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transactions(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDPPartnerMicroTxns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgDPPartnerMicroTxns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPPartnerMicroTxns>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDPPartnerMicroTxns::MergeFrom(const CMsgDPPartnerMicroTxns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  transactions_.MergeFrom(from.transactions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_gc_name()) {
      set_has_gc_name();
      gc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gc_name_);
    }
    if (from.has_partner()) {
      mutable_partner()->::CMsgDPPartnerMicroTxns_PartnerInfo::MergeFrom(from.partner());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgDPPartnerMicroTxns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPPartnerMicroTxns::CopyFrom(const CMsgDPPartnerMicroTxns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPPartnerMicroTxns::IsInitialized() const {

  return true;
}

void CMsgDPPartnerMicroTxns::Swap(CMsgDPPartnerMicroTxns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPPartnerMicroTxns::InternalSwap(CMsgDPPartnerMicroTxns* other) {
  std::swap(appid_, other->appid_);
  gc_name_.Swap(&other->gc_name_);
  std::swap(partner_, other->partner_);
  transactions_.UnsafeArenaSwap(&other->transactions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDPPartnerMicroTxns_descriptor_;
  metadata.reflection = CMsgDPPartnerMicroTxns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDPPartnerMicroTxns_PartnerMicroTxn

// optional uint32 init_time = 1;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_init_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_init_time() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_init_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_init_time() {
  init_time_ = 0u;
  clear_has_init_time();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::init_time() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.init_time)
  return init_time_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_init_time(::google::protobuf::uint32 value) {
  set_has_init_time();
  init_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.init_time)
}

// optional uint32 last_update_time = 2;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_last_update_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_last_update_time() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_last_update_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_last_update_time() {
  last_update_time_ = 0u;
  clear_has_last_update_time();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::last_update_time() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.last_update_time)
  return last_update_time_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_last_update_time(::google::protobuf::uint32 value) {
  set_has_last_update_time();
  last_update_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.last_update_time)
}

// optional uint64 txn_id = 3;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_txn_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_txn_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
 ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.txn_id)
  return txn_id_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.txn_id)
}

// optional uint32 account_id = 4;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.account_id)
  return account_id_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.account_id)
}

// optional uint32 line_item = 5;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_line_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_line_item() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_line_item() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_line_item() {
  line_item_ = 0u;
  clear_has_line_item();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::line_item() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.line_item)
  return line_item_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_line_item(::google::protobuf::uint32 value) {
  set_has_line_item();
  line_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.line_item)
}

// optional uint64 item_id = 6;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_item_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_item_id() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
 ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.item_id)
  return item_id_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.item_id)
}

// optional uint32 def_index = 7;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_def_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_def_index() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.def_index)
  return def_index_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.def_index)
}

// optional uint32 price = 8;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_price() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_price() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_price() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_price() {
  price_ = 0u;
  clear_has_price();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::price() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.price)
  return price_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.price)
}

// optional uint32 tax = 9;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_tax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_tax() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_tax() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_tax() {
  tax_ = 0u;
  clear_has_tax();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::tax() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax)
  return tax_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_tax(::google::protobuf::uint32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax)
}

// optional uint32 price_usd = 10;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_price_usd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_price_usd() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_price_usd() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_price_usd() {
  price_usd_ = 0u;
  clear_has_price_usd();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::price_usd() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.price_usd)
  return price_usd_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_price_usd(::google::protobuf::uint32 value) {
  set_has_price_usd();
  price_usd_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.price_usd)
}

// optional uint32 tax_usd = 11;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_tax_usd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_tax_usd() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_tax_usd() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_tax_usd() {
  tax_usd_ = 0u;
  clear_has_tax_usd();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::tax_usd() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax_usd)
  return tax_usd_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_tax_usd(::google::protobuf::uint32 value) {
  set_has_tax_usd();
  tax_usd_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax_usd)
}

// optional uint32 purchase_type = 12;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_purchase_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_purchase_type() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_purchase_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_purchase_type() {
  purchase_type_ = 0u;
  clear_has_purchase_type();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::purchase_type() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.purchase_type)
  return purchase_type_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_purchase_type(::google::protobuf::uint32 value) {
  set_has_purchase_type();
  purchase_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.purchase_type)
}

// optional uint32 steam_txn_type = 13;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_steam_txn_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_steam_txn_type() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_steam_txn_type() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_steam_txn_type() {
  steam_txn_type_ = 0u;
  clear_has_steam_txn_type();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::steam_txn_type() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.steam_txn_type)
  return steam_txn_type_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_steam_txn_type(::google::protobuf::uint32 value) {
  set_has_steam_txn_type();
  steam_txn_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.steam_txn_type)
}

// optional string country_code = 14;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_country_code() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_country_code() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_country_code() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
 const ::std::string& CMsgDPPartnerMicroTxns_PartnerMicroTxn::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
  return country_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const char* value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::release_country_code() {
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}

// optional string region_code = 15;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_region_code() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_region_code() {
  _has_bits_[0] |= 0x00004000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_region_code() {
  _has_bits_[0] &= ~0x00004000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_region_code() {
  region_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region_code();
}
 const ::std::string& CMsgDPPartnerMicroTxns_PartnerMicroTxn::region_code() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
  return region_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const ::std::string& value) {
  set_has_region_code();
  region_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const char* value) {
  set_has_region_code();
  region_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const char* value, size_t size) {
  set_has_region_code();
  region_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::mutable_region_code() {
  set_has_region_code();
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
  return region_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::release_region_code() {
  clear_has_region_code();
  return region_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_allocated_region_code(::std::string* region_code) {
  if (region_code != NULL) {
    set_has_region_code();
  } else {
    clear_has_region_code();
  }
  region_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_code);
  // @@protoc_insertion_point(field_set_allocated:CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}

// optional int32 quantity = 16;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_quantity() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_quantity() {
  _has_bits_[0] |= 0x00008000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_quantity() {
  _has_bits_[0] &= ~0x00008000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
 ::google::protobuf::int32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::quantity() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.quantity)
  return quantity_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.quantity)
}

// optional uint64 ref_trans_id = 17;
bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_ref_trans_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_ref_trans_id() {
  _has_bits_[0] |= 0x00010000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_ref_trans_id() {
  _has_bits_[0] &= ~0x00010000u;
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_ref_trans_id() {
  ref_trans_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ref_trans_id();
}
 ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::ref_trans_id() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerMicroTxn.ref_trans_id)
  return ref_trans_id_;
}
 void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_ref_trans_id(::google::protobuf::uint64 value) {
  set_has_ref_trans_id();
  ref_trans_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerMicroTxn.ref_trans_id)
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns_PartnerInfo

// optional uint32 partner_id = 1;
bool CMsgDPPartnerMicroTxns_PartnerInfo::has_partner_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_partner_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_partner_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_partner_id() {
  partner_id_ = 0u;
  clear_has_partner_id();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerInfo::partner_id() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerInfo.partner_id)
  return partner_id_;
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_id(::google::protobuf::uint32 value) {
  set_has_partner_id();
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerInfo.partner_id)
}

// optional string partner_name = 2;
bool CMsgDPPartnerMicroTxns_PartnerInfo::has_partner_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_partner_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_partner_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_partner_name() {
  partner_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_partner_name();
}
 const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::partner_name() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
  return partner_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const ::std::string& value) {
  set_has_partner_name();
  partner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const char* value) {
  set_has_partner_name();
  partner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const char* value, size_t size) {
  set_has_partner_name();
  partner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_partner_name() {
  set_has_partner_name();
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
  return partner_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_partner_name() {
  clear_has_partner_name();
  return partner_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_partner_name(::std::string* partner_name) {
  if (partner_name != NULL) {
    set_has_partner_name();
  } else {
    clear_has_partner_name();
  }
  partner_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), partner_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}

// optional string currency_code = 3;
bool CMsgDPPartnerMicroTxns_PartnerInfo::has_currency_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_currency_code() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_currency_code() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_currency_code() {
  currency_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_currency_code();
}
 const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::currency_code() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
  return currency_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const ::std::string& value) {
  set_has_currency_code();
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const char* value) {
  set_has_currency_code();
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const char* value, size_t size) {
  set_has_currency_code();
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_currency_code() {
  set_has_currency_code();
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
  return currency_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_currency_code() {
  clear_has_currency_code();
  return currency_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_currency_code(::std::string* currency_code) {
  if (currency_code != NULL) {
    set_has_currency_code();
  } else {
    clear_has_currency_code();
  }
  currency_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_code);
  // @@protoc_insertion_point(field_set_allocated:CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}

// optional string currency_name = 4;
bool CMsgDPPartnerMicroTxns_PartnerInfo::has_currency_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_currency_name() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_currency_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgDPPartnerMicroTxns_PartnerInfo::clear_currency_name() {
  currency_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_currency_name();
}
 const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::currency_name() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
  return currency_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const ::std::string& value) {
  set_has_currency_name();
  currency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const char* value) {
  set_has_currency_name();
  currency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const char* value, size_t size) {
  set_has_currency_name();
  currency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_currency_name() {
  set_has_currency_name();
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
  return currency_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_currency_name() {
  clear_has_currency_name();
  return currency_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_currency_name(::std::string* currency_name) {
  if (currency_name != NULL) {
    set_has_currency_name();
  } else {
    clear_has_currency_name();
  }
  currency_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns

// optional uint32 appid = 1;
bool CMsgDPPartnerMicroTxns::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDPPartnerMicroTxns::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDPPartnerMicroTxns::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDPPartnerMicroTxns::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxns::appid() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.appid)
  return appid_;
}
 void CMsgDPPartnerMicroTxns::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.appid)
}

// optional string gc_name = 2;
bool CMsgDPPartnerMicroTxns::has_gc_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDPPartnerMicroTxns::set_has_gc_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDPPartnerMicroTxns::clear_has_gc_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDPPartnerMicroTxns::clear_gc_name() {
  gc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gc_name();
}
 const ::std::string& CMsgDPPartnerMicroTxns::gc_name() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.gc_name)
  return gc_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns::set_gc_name(const ::std::string& value) {
  set_has_gc_name();
  gc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxns.gc_name)
}
 void CMsgDPPartnerMicroTxns::set_gc_name(const char* value) {
  set_has_gc_name();
  gc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDPPartnerMicroTxns.gc_name)
}
 void CMsgDPPartnerMicroTxns::set_gc_name(const char* value, size_t size) {
  set_has_gc_name();
  gc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDPPartnerMicroTxns.gc_name)
}
 ::std::string* CMsgDPPartnerMicroTxns::mutable_gc_name() {
  set_has_gc_name();
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.gc_name)
  return gc_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgDPPartnerMicroTxns::release_gc_name() {
  clear_has_gc_name();
  return gc_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgDPPartnerMicroTxns::set_allocated_gc_name(::std::string* gc_name) {
  if (gc_name != NULL) {
    set_has_gc_name();
  } else {
    clear_has_gc_name();
  }
  gc_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gc_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgDPPartnerMicroTxns.gc_name)
}

// optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
bool CMsgDPPartnerMicroTxns::has_partner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgDPPartnerMicroTxns::set_has_partner() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgDPPartnerMicroTxns::clear_has_partner() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgDPPartnerMicroTxns::clear_partner() {
  if (partner_ != NULL) partner_->::CMsgDPPartnerMicroTxns_PartnerInfo::Clear();
  clear_has_partner();
}
const ::CMsgDPPartnerMicroTxns_PartnerInfo& CMsgDPPartnerMicroTxns::partner() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.partner)
  return partner_ != NULL ? *partner_ : *default_instance_->partner_;
}
::CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns::mutable_partner() {
  set_has_partner();
  if (partner_ == NULL) {
    partner_ = new ::CMsgDPPartnerMicroTxns_PartnerInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.partner)
  return partner_;
}
::CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns::release_partner() {
  clear_has_partner();
  ::CMsgDPPartnerMicroTxns_PartnerInfo* temp = partner_;
  partner_ = NULL;
  return temp;
}
void CMsgDPPartnerMicroTxns::set_allocated_partner(::CMsgDPPartnerMicroTxns_PartnerInfo* partner) {
  delete partner_;
  partner_ = partner;
  if (partner) {
    set_has_partner();
  } else {
    clear_has_partner();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDPPartnerMicroTxns.partner)
}

// repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
int CMsgDPPartnerMicroTxns::transactions_size() const {
  return transactions_.size();
}
void CMsgDPPartnerMicroTxns::clear_transactions() {
  transactions_.Clear();
}
const ::CMsgDPPartnerMicroTxns_PartnerMicroTxn& CMsgDPPartnerMicroTxns::transactions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxns.transactions)
  return transactions_.Get(index);
}
::CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDPPartnerMicroTxns.transactions)
  return transactions_.Mutable(index);
}
::CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns::add_transactions() {
  // @@protoc_insertion_point(field_add:CMsgDPPartnerMicroTxns.transactions)
  return transactions_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgDPPartnerMicroTxns_PartnerMicroTxn >*
CMsgDPPartnerMicroTxns::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDPPartnerMicroTxns.transactions)
  return &transactions_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgDPPartnerMicroTxns_PartnerMicroTxn >&
CMsgDPPartnerMicroTxns::transactions() const {
  // @@protoc_insertion_point(field_list:CMsgDPPartnerMicroTxns.transactions)
  return transactions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor_;
}
bool CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgValid;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgInvalidAppID;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgInvalidPartnerInfo;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgNoTransactions;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgSQLFailure;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgPartnerInfoDiscrepancy;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgTransactionInsertFailed;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgAlreadyRunning;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgInvalidTransactionData;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::EErrorCode_MIN;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::EErrorCode_MAX;
const int CMsgDPPartnerMicroTxnsResponse::EErrorCode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgDPPartnerMicroTxnsResponse::kEresultFieldNumber;
const int CMsgDPPartnerMicroTxnsResponse::kEerrorcodeFieldNumber;
#endif  // !_MSC_VER

CMsgDPPartnerMicroTxnsResponse::CMsgDPPartnerMicroTxnsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDPPartnerMicroTxnsResponse)
}

void CMsgDPPartnerMicroTxnsResponse::InitAsDefaultInstance() {
}

CMsgDPPartnerMicroTxnsResponse::CMsgDPPartnerMicroTxnsResponse(const CMsgDPPartnerMicroTxnsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxnsResponse)
}

void CMsgDPPartnerMicroTxnsResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2u;
  eerrorcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDPPartnerMicroTxnsResponse::~CMsgDPPartnerMicroTxnsResponse() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxnsResponse)
  SharedDtor();
}

void CMsgDPPartnerMicroTxnsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgDPPartnerMicroTxnsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDPPartnerMicroTxnsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDPPartnerMicroTxnsResponse_descriptor_;
}

const CMsgDPPartnerMicroTxnsResponse& CMsgDPPartnerMicroTxnsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_2eproto();
  return *default_instance_;
}

CMsgDPPartnerMicroTxnsResponse* CMsgDPPartnerMicroTxnsResponse::default_instance_ = NULL;

CMsgDPPartnerMicroTxnsResponse* CMsgDPPartnerMicroTxnsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgDPPartnerMicroTxnsResponse* n = new CMsgDPPartnerMicroTxnsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDPPartnerMicroTxnsResponse::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    eresult_ = 2u;
    eerrorcode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CMsgDPPartnerMicroTxnsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDPPartnerMicroTxnsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
          set_has_eresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eerrorcode;
        break;
      }

      // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
      case 2: {
        if (tag == 16) {
         parse_eerrorcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(value)) {
            set_eerrorcode(static_cast< ::CMsgDPPartnerMicroTxnsResponse_EErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDPPartnerMicroTxnsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDPPartnerMicroTxnsResponse)
  return false;
#undef DO_
}

void CMsgDPPartnerMicroTxnsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDPPartnerMicroTxnsResponse)
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
  if (has_eerrorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->eerrorcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDPPartnerMicroTxnsResponse)
}

::google::protobuf::uint8* CMsgDPPartnerMicroTxnsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxnsResponse)
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
  if (has_eerrorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->eerrorcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxnsResponse)
  return target;
}

int CMsgDPPartnerMicroTxnsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
    if (has_eerrorcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eerrorcode());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDPPartnerMicroTxnsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMsgDPPartnerMicroTxnsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPPartnerMicroTxnsResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDPPartnerMicroTxnsResponse::MergeFrom(const CMsgDPPartnerMicroTxnsResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
    if (from.has_eerrorcode()) {
      set_eerrorcode(from.eerrorcode());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CMsgDPPartnerMicroTxnsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPPartnerMicroTxnsResponse::CopyFrom(const CMsgDPPartnerMicroTxnsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPPartnerMicroTxnsResponse::IsInitialized() const {

  return true;
}

void CMsgDPPartnerMicroTxnsResponse::Swap(CMsgDPPartnerMicroTxnsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPPartnerMicroTxnsResponse::InternalSwap(CMsgDPPartnerMicroTxnsResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(eerrorcode_, other->eerrorcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxnsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDPPartnerMicroTxnsResponse_descriptor_;
  metadata.reflection = CMsgDPPartnerMicroTxnsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDPPartnerMicroTxnsResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgDPPartnerMicroTxnsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDPPartnerMicroTxnsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDPPartnerMicroTxnsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDPPartnerMicroTxnsResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
 ::google::protobuf::uint32 CMsgDPPartnerMicroTxnsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxnsResponse.eresult)
  return eresult_;
}
 void CMsgDPPartnerMicroTxnsResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxnsResponse.eresult)
}

// optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
bool CMsgDPPartnerMicroTxnsResponse::has_eerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDPPartnerMicroTxnsResponse::set_has_eerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDPPartnerMicroTxnsResponse::clear_has_eerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDPPartnerMicroTxnsResponse::clear_eerrorcode() {
  eerrorcode_ = 0;
  clear_has_eerrorcode();
}
 ::CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::eerrorcode() const {
  // @@protoc_insertion_point(field_get:CMsgDPPartnerMicroTxnsResponse.eerrorcode)
  return static_cast< ::CMsgDPPartnerMicroTxnsResponse_EErrorCode >(eerrorcode_);
}
 void CMsgDPPartnerMicroTxnsResponse::set_eerrorcode(::CMsgDPPartnerMicroTxnsResponse_EErrorCode value) {
  assert(::CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(value));
  set_has_eerrorcode();
  eerrorcode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDPPartnerMicroTxnsResponse.eerrorcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  key_field(kKeyFieldFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_soft_limit(kMsgpoolSoftLimitFieldNumber, 32);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_hard_limit(kMsgpoolHardLimitFieldNumber, 384);

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
