// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_cloud.steamworkssdk.proto

#ifndef PROTOBUF_steammessages_5fcloud_2esteamworkssdk_2eproto__INCLUDED
#define PROTOBUF_steammessages_5fcloud_2esteamworkssdk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

class CCloud_Delete_Request;
class CCloud_Delete_Response;
class CCloud_EnumerateUserFiles_Request;
class CCloud_EnumerateUserFiles_Response;
class CCloud_GetFileDetails_Request;
class CCloud_GetFileDetails_Response;
class CCloud_GetUploadServerInfo_Request;
class CCloud_GetUploadServerInfo_Response;
class CCloud_UserFile;

// ===================================================================

class CCloud_GetUploadServerInfo_Request : public ::google::protobuf::Message {
 public:
  CCloud_GetUploadServerInfo_Request();
  virtual ~CCloud_GetUploadServerInfo_Request();

  CCloud_GetUploadServerInfo_Request(const CCloud_GetUploadServerInfo_Request& from);

  inline CCloud_GetUploadServerInfo_Request& operator=(const CCloud_GetUploadServerInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_GetUploadServerInfo_Request& default_instance();

  void Swap(CCloud_GetUploadServerInfo_Request* other);

  // implements Message ----------------------------------------------

  inline CCloud_GetUploadServerInfo_Request* New() const { return New(NULL); }

  CCloud_GetUploadServerInfo_Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_GetUploadServerInfo_Request& from);
  void MergeFrom(const CCloud_GetUploadServerInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_GetUploadServerInfo_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCloud_GetUploadServerInfo_Request)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 appid_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_GetUploadServerInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_GetUploadServerInfo_Response : public ::google::protobuf::Message {
 public:
  CCloud_GetUploadServerInfo_Response();
  virtual ~CCloud_GetUploadServerInfo_Response();

  CCloud_GetUploadServerInfo_Response(const CCloud_GetUploadServerInfo_Response& from);

  inline CCloud_GetUploadServerInfo_Response& operator=(const CCloud_GetUploadServerInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_GetUploadServerInfo_Response& default_instance();

  void Swap(CCloud_GetUploadServerInfo_Response* other);

  // implements Message ----------------------------------------------

  inline CCloud_GetUploadServerInfo_Response* New() const { return New(NULL); }

  CCloud_GetUploadServerInfo_Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_GetUploadServerInfo_Response& from);
  void MergeFrom(const CCloud_GetUploadServerInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_GetUploadServerInfo_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string server_url = 1;
  bool has_server_url() const;
  void clear_server_url();
  static const int kServerUrlFieldNumber = 1;
  const ::std::string& server_url() const;
  void set_server_url(const ::std::string& value);
  void set_server_url(const char* value);
  void set_server_url(const char* value, size_t size);
  ::std::string* mutable_server_url();
  ::std::string* release_server_url();
  void set_allocated_server_url(::std::string* server_url);

  // @@protoc_insertion_point(class_scope:CCloud_GetUploadServerInfo_Response)
 private:
  inline void set_has_server_url();
  inline void clear_has_server_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr server_url_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_GetUploadServerInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_GetFileDetails_Request : public ::google::protobuf::Message {
 public:
  CCloud_GetFileDetails_Request();
  virtual ~CCloud_GetFileDetails_Request();

  CCloud_GetFileDetails_Request(const CCloud_GetFileDetails_Request& from);

  inline CCloud_GetFileDetails_Request& operator=(const CCloud_GetFileDetails_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_GetFileDetails_Request& default_instance();

  void Swap(CCloud_GetFileDetails_Request* other);

  // implements Message ----------------------------------------------

  inline CCloud_GetFileDetails_Request* New() const { return New(NULL); }

  CCloud_GetFileDetails_Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_GetFileDetails_Request& from);
  void MergeFrom(const CCloud_GetFileDetails_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_GetFileDetails_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ugcid = 1;
  bool has_ugcid() const;
  void clear_ugcid();
  static const int kUgcidFieldNumber = 1;
  ::google::protobuf::uint64 ugcid() const;
  void set_ugcid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCloud_GetFileDetails_Request)
 private:
  inline void set_has_ugcid();
  inline void clear_has_ugcid();
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ugcid_;
  ::google::protobuf::uint32 appid_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_GetFileDetails_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_UserFile : public ::google::protobuf::Message {
 public:
  CCloud_UserFile();
  virtual ~CCloud_UserFile();

  CCloud_UserFile(const CCloud_UserFile& from);

  inline CCloud_UserFile& operator=(const CCloud_UserFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_UserFile& default_instance();

  void Swap(CCloud_UserFile* other);

  // implements Message ----------------------------------------------

  inline CCloud_UserFile* New() const { return New(NULL); }

  CCloud_UserFile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_UserFile& from);
  void MergeFrom(const CCloud_UserFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_UserFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint64 ugcid = 2;
  bool has_ugcid() const;
  void clear_ugcid();
  static const int kUgcidFieldNumber = 2;
  ::google::protobuf::uint64 ugcid() const;
  void set_ugcid(::google::protobuf::uint64 value);

  // optional string filename = 3;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional uint64 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional uint32 file_size = 5;
  bool has_file_size() const;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 5;
  ::google::protobuf::uint32 file_size() const;
  void set_file_size(::google::protobuf::uint32 value);

  // optional string url = 6;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 6;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional fixed64 steamid_creator = 7;
  bool has_steamid_creator() const;
  void clear_steamid_creator();
  static const int kSteamidCreatorFieldNumber = 7;
  ::google::protobuf::uint64 steamid_creator() const;
  void set_steamid_creator(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CCloud_UserFile)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_ugcid();
  inline void clear_has_ugcid();
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_file_size();
  inline void clear_has_file_size();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_steamid_creator();
  inline void clear_has_steamid_creator();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ugcid_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 file_size_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint64 steamid_creator_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_UserFile* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_GetFileDetails_Response : public ::google::protobuf::Message {
 public:
  CCloud_GetFileDetails_Response();
  virtual ~CCloud_GetFileDetails_Response();

  CCloud_GetFileDetails_Response(const CCloud_GetFileDetails_Response& from);

  inline CCloud_GetFileDetails_Response& operator=(const CCloud_GetFileDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_GetFileDetails_Response& default_instance();

  void Swap(CCloud_GetFileDetails_Response* other);

  // implements Message ----------------------------------------------

  inline CCloud_GetFileDetails_Response* New() const { return New(NULL); }

  CCloud_GetFileDetails_Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_GetFileDetails_Response& from);
  void MergeFrom(const CCloud_GetFileDetails_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_GetFileDetails_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CCloud_UserFile details = 1;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 1;
  const ::CCloud_UserFile& details() const;
  ::CCloud_UserFile* mutable_details();
  ::CCloud_UserFile* release_details();
  void set_allocated_details(::CCloud_UserFile* details);

  // @@protoc_insertion_point(class_scope:CCloud_GetFileDetails_Response)
 private:
  inline void set_has_details();
  inline void clear_has_details();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CCloud_UserFile* details_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_GetFileDetails_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_EnumerateUserFiles_Request : public ::google::protobuf::Message {
 public:
  CCloud_EnumerateUserFiles_Request();
  virtual ~CCloud_EnumerateUserFiles_Request();

  CCloud_EnumerateUserFiles_Request(const CCloud_EnumerateUserFiles_Request& from);

  inline CCloud_EnumerateUserFiles_Request& operator=(const CCloud_EnumerateUserFiles_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_EnumerateUserFiles_Request& default_instance();

  void Swap(CCloud_EnumerateUserFiles_Request* other);

  // implements Message ----------------------------------------------

  inline CCloud_EnumerateUserFiles_Request* New() const { return New(NULL); }

  CCloud_EnumerateUserFiles_Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_EnumerateUserFiles_Request& from);
  void MergeFrom(const CCloud_EnumerateUserFiles_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_EnumerateUserFiles_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool extended_details = 2;
  bool has_extended_details() const;
  void clear_extended_details();
  static const int kExtendedDetailsFieldNumber = 2;
  bool extended_details() const;
  void set_extended_details(bool value);

  // optional uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 start_index = 4;
  bool has_start_index() const;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 4;
  ::google::protobuf::uint32 start_index() const;
  void set_start_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCloud_EnumerateUserFiles_Request)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_extended_details();
  inline void clear_has_extended_details();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_start_index();
  inline void clear_has_start_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 appid_;
  bool extended_details_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 start_index_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_EnumerateUserFiles_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_EnumerateUserFiles_Response : public ::google::protobuf::Message {
 public:
  CCloud_EnumerateUserFiles_Response();
  virtual ~CCloud_EnumerateUserFiles_Response();

  CCloud_EnumerateUserFiles_Response(const CCloud_EnumerateUserFiles_Response& from);

  inline CCloud_EnumerateUserFiles_Response& operator=(const CCloud_EnumerateUserFiles_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_EnumerateUserFiles_Response& default_instance();

  void Swap(CCloud_EnumerateUserFiles_Response* other);

  // implements Message ----------------------------------------------

  inline CCloud_EnumerateUserFiles_Response* New() const { return New(NULL); }

  CCloud_EnumerateUserFiles_Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_EnumerateUserFiles_Response& from);
  void MergeFrom(const CCloud_EnumerateUserFiles_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_EnumerateUserFiles_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CCloud_UserFile files = 1;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 1;
  const ::CCloud_UserFile& files(int index) const;
  ::CCloud_UserFile* mutable_files(int index);
  ::CCloud_UserFile* add_files();
  ::google::protobuf::RepeatedPtrField< ::CCloud_UserFile >*
      mutable_files();
  const ::google::protobuf::RepeatedPtrField< ::CCloud_UserFile >&
      files() const;

  // optional uint32 total_files = 2;
  bool has_total_files() const;
  void clear_total_files();
  static const int kTotalFilesFieldNumber = 2;
  ::google::protobuf::uint32 total_files() const;
  void set_total_files(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCloud_EnumerateUserFiles_Response)
 private:
  inline void set_has_total_files();
  inline void clear_has_total_files();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CCloud_UserFile > files_;
  ::google::protobuf::uint32 total_files_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_EnumerateUserFiles_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_Delete_Request : public ::google::protobuf::Message {
 public:
  CCloud_Delete_Request();
  virtual ~CCloud_Delete_Request();

  CCloud_Delete_Request(const CCloud_Delete_Request& from);

  inline CCloud_Delete_Request& operator=(const CCloud_Delete_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_Delete_Request& default_instance();

  void Swap(CCloud_Delete_Request* other);

  // implements Message ----------------------------------------------

  inline CCloud_Delete_Request* New() const { return New(NULL); }

  CCloud_Delete_Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_Delete_Request& from);
  void MergeFrom(const CCloud_Delete_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_Delete_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCloud_Delete_Request)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint32 appid_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_Delete_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCloud_Delete_Response : public ::google::protobuf::Message {
 public:
  CCloud_Delete_Response();
  virtual ~CCloud_Delete_Response();

  CCloud_Delete_Response(const CCloud_Delete_Response& from);

  inline CCloud_Delete_Response& operator=(const CCloud_Delete_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCloud_Delete_Response& default_instance();

  void Swap(CCloud_Delete_Response* other);

  // implements Message ----------------------------------------------

  inline CCloud_Delete_Response* New() const { return New(NULL); }

  CCloud_Delete_Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCloud_Delete_Response& from);
  void MergeFrom(const CCloud_Delete_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CCloud_Delete_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCloud_Delete_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fcloud_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fcloud_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static CCloud_Delete_Response* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CCloud_GetUploadServerInfo_Request

// optional uint32 appid = 1;
inline bool CCloud_GetUploadServerInfo_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetUploadServerInfo_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCloud_GetUploadServerInfo_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCloud_GetUploadServerInfo_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCloud_GetUploadServerInfo_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_GetUploadServerInfo_Request.appid)
  return appid_;
}
inline void CCloud_GetUploadServerInfo_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CCloud_GetUploadServerInfo_Request.appid)
}

// -------------------------------------------------------------------

// CCloud_GetUploadServerInfo_Response

// optional string server_url = 1;
inline bool CCloud_GetUploadServerInfo_Response::has_server_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetUploadServerInfo_Response::set_has_server_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCloud_GetUploadServerInfo_Response::clear_has_server_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCloud_GetUploadServerInfo_Response::clear_server_url() {
  server_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_url();
}
inline const ::std::string& CCloud_GetUploadServerInfo_Response::server_url() const {
  // @@protoc_insertion_point(field_get:CCloud_GetUploadServerInfo_Response.server_url)
  return server_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_GetUploadServerInfo_Response::set_server_url(const ::std::string& value) {
  set_has_server_url();
  server_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCloud_GetUploadServerInfo_Response.server_url)
}
inline void CCloud_GetUploadServerInfo_Response::set_server_url(const char* value) {
  set_has_server_url();
  server_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCloud_GetUploadServerInfo_Response.server_url)
}
inline void CCloud_GetUploadServerInfo_Response::set_server_url(const char* value, size_t size) {
  set_has_server_url();
  server_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCloud_GetUploadServerInfo_Response.server_url)
}
inline ::std::string* CCloud_GetUploadServerInfo_Response::mutable_server_url() {
  set_has_server_url();
  // @@protoc_insertion_point(field_mutable:CCloud_GetUploadServerInfo_Response.server_url)
  return server_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_GetUploadServerInfo_Response::release_server_url() {
  clear_has_server_url();
  return server_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_GetUploadServerInfo_Response::set_allocated_server_url(::std::string* server_url) {
  if (server_url != NULL) {
    set_has_server_url();
  } else {
    clear_has_server_url();
  }
  server_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_url);
  // @@protoc_insertion_point(field_set_allocated:CCloud_GetUploadServerInfo_Response.server_url)
}

// -------------------------------------------------------------------

// CCloud_GetFileDetails_Request

// optional uint64 ugcid = 1;
inline bool CCloud_GetFileDetails_Request::has_ugcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetFileDetails_Request::set_has_ugcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCloud_GetFileDetails_Request::clear_has_ugcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCloud_GetFileDetails_Request::clear_ugcid() {
  ugcid_ = GOOGLE_ULONGLONG(0);
  clear_has_ugcid();
}
inline ::google::protobuf::uint64 CCloud_GetFileDetails_Request::ugcid() const {
  // @@protoc_insertion_point(field_get:CCloud_GetFileDetails_Request.ugcid)
  return ugcid_;
}
inline void CCloud_GetFileDetails_Request::set_ugcid(::google::protobuf::uint64 value) {
  set_has_ugcid();
  ugcid_ = value;
  // @@protoc_insertion_point(field_set:CCloud_GetFileDetails_Request.ugcid)
}

// optional uint32 appid = 2;
inline bool CCloud_GetFileDetails_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_GetFileDetails_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCloud_GetFileDetails_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCloud_GetFileDetails_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCloud_GetFileDetails_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_GetFileDetails_Request.appid)
  return appid_;
}
inline void CCloud_GetFileDetails_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CCloud_GetFileDetails_Request.appid)
}

// -------------------------------------------------------------------

// CCloud_UserFile

// optional uint32 appid = 1;
inline bool CCloud_UserFile::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_UserFile::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCloud_UserFile::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCloud_UserFile::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCloud_UserFile::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.appid)
  return appid_;
}
inline void CCloud_UserFile::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.appid)
}

// optional uint64 ugcid = 2;
inline bool CCloud_UserFile::has_ugcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_UserFile::set_has_ugcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCloud_UserFile::clear_has_ugcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCloud_UserFile::clear_ugcid() {
  ugcid_ = GOOGLE_ULONGLONG(0);
  clear_has_ugcid();
}
inline ::google::protobuf::uint64 CCloud_UserFile::ugcid() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.ugcid)
  return ugcid_;
}
inline void CCloud_UserFile::set_ugcid(::google::protobuf::uint64 value) {
  set_has_ugcid();
  ugcid_ = value;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.ugcid)
}

// optional string filename = 3;
inline bool CCloud_UserFile::has_filename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCloud_UserFile::set_has_filename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCloud_UserFile::clear_has_filename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCloud_UserFile::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& CCloud_UserFile::filename() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.filename)
  return filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_UserFile::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCloud_UserFile.filename)
}
inline void CCloud_UserFile::set_filename(const char* value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCloud_UserFile.filename)
}
inline void CCloud_UserFile::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCloud_UserFile.filename)
}
inline ::std::string* CCloud_UserFile::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:CCloud_UserFile.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_UserFile::release_filename() {
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_UserFile::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CCloud_UserFile.filename)
}

// optional uint64 timestamp = 4;
inline bool CCloud_UserFile::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCloud_UserFile::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCloud_UserFile::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCloud_UserFile::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 CCloud_UserFile::timestamp() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.timestamp)
  return timestamp_;
}
inline void CCloud_UserFile::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.timestamp)
}

// optional uint32 file_size = 5;
inline bool CCloud_UserFile::has_file_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCloud_UserFile::set_has_file_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCloud_UserFile::clear_has_file_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCloud_UserFile::clear_file_size() {
  file_size_ = 0u;
  clear_has_file_size();
}
inline ::google::protobuf::uint32 CCloud_UserFile::file_size() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.file_size)
  return file_size_;
}
inline void CCloud_UserFile::set_file_size(::google::protobuf::uint32 value) {
  set_has_file_size();
  file_size_ = value;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.file_size)
}

// optional string url = 6;
inline bool CCloud_UserFile::has_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCloud_UserFile::set_has_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCloud_UserFile::clear_has_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCloud_UserFile::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CCloud_UserFile::url() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_UserFile::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCloud_UserFile.url)
}
inline void CCloud_UserFile::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCloud_UserFile.url)
}
inline void CCloud_UserFile::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCloud_UserFile.url)
}
inline ::std::string* CCloud_UserFile::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:CCloud_UserFile.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_UserFile::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_UserFile::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:CCloud_UserFile.url)
}

// optional fixed64 steamid_creator = 7;
inline bool CCloud_UserFile::has_steamid_creator() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCloud_UserFile::set_has_steamid_creator() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCloud_UserFile::clear_has_steamid_creator() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCloud_UserFile::clear_steamid_creator() {
  steamid_creator_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_creator();
}
inline ::google::protobuf::uint64 CCloud_UserFile::steamid_creator() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.steamid_creator)
  return steamid_creator_;
}
inline void CCloud_UserFile::set_steamid_creator(::google::protobuf::uint64 value) {
  set_has_steamid_creator();
  steamid_creator_ = value;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.steamid_creator)
}

// -------------------------------------------------------------------

// CCloud_GetFileDetails_Response

// optional .CCloud_UserFile details = 1;
inline bool CCloud_GetFileDetails_Response::has_details() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetFileDetails_Response::set_has_details() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCloud_GetFileDetails_Response::clear_has_details() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCloud_GetFileDetails_Response::clear_details() {
  if (details_ != NULL) details_->::CCloud_UserFile::Clear();
  clear_has_details();
}
inline const ::CCloud_UserFile& CCloud_GetFileDetails_Response::details() const {
  // @@protoc_insertion_point(field_get:CCloud_GetFileDetails_Response.details)
  return details_ != NULL ? *details_ : *default_instance_->details_;
}
inline ::CCloud_UserFile* CCloud_GetFileDetails_Response::mutable_details() {
  set_has_details();
  if (details_ == NULL) {
    details_ = new ::CCloud_UserFile;
  }
  // @@protoc_insertion_point(field_mutable:CCloud_GetFileDetails_Response.details)
  return details_;
}
inline ::CCloud_UserFile* CCloud_GetFileDetails_Response::release_details() {
  clear_has_details();
  ::CCloud_UserFile* temp = details_;
  details_ = NULL;
  return temp;
}
inline void CCloud_GetFileDetails_Response::set_allocated_details(::CCloud_UserFile* details) {
  delete details_;
  details_ = details;
  if (details) {
    set_has_details();
  } else {
    clear_has_details();
  }
  // @@protoc_insertion_point(field_set_allocated:CCloud_GetFileDetails_Response.details)
}

// -------------------------------------------------------------------

// CCloud_EnumerateUserFiles_Request

// optional uint32 appid = 1;
inline bool CCloud_EnumerateUserFiles_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.appid)
  return appid_;
}
inline void CCloud_EnumerateUserFiles_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.appid)
}

// optional bool extended_details = 2;
inline bool CCloud_EnumerateUserFiles_Request::has_extended_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::set_has_extended_details() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_has_extended_details() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_extended_details() {
  extended_details_ = false;
  clear_has_extended_details();
}
inline bool CCloud_EnumerateUserFiles_Request::extended_details() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.extended_details)
  return extended_details_;
}
inline void CCloud_EnumerateUserFiles_Request::set_extended_details(bool value) {
  set_has_extended_details();
  extended_details_ = value;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.extended_details)
}

// optional uint32 count = 3;
inline bool CCloud_EnumerateUserFiles_Request::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Request::count() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.count)
  return count_;
}
inline void CCloud_EnumerateUserFiles_Request::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.count)
}

// optional uint32 start_index = 4;
inline bool CCloud_EnumerateUserFiles_Request::has_start_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::set_has_start_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCloud_EnumerateUserFiles_Request::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Request::start_index() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.start_index)
  return start_index_;
}
inline void CCloud_EnumerateUserFiles_Request::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.start_index)
}

// -------------------------------------------------------------------

// CCloud_EnumerateUserFiles_Response

// repeated .CCloud_UserFile files = 1;
inline int CCloud_EnumerateUserFiles_Response::files_size() const {
  return files_.size();
}
inline void CCloud_EnumerateUserFiles_Response::clear_files() {
  files_.Clear();
}
inline const ::CCloud_UserFile& CCloud_EnumerateUserFiles_Response::files(int index) const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Response.files)
  return files_.Get(index);
}
inline ::CCloud_UserFile* CCloud_EnumerateUserFiles_Response::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:CCloud_EnumerateUserFiles_Response.files)
  return files_.Mutable(index);
}
inline ::CCloud_UserFile* CCloud_EnumerateUserFiles_Response::add_files() {
  // @@protoc_insertion_point(field_add:CCloud_EnumerateUserFiles_Response.files)
  return files_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CCloud_UserFile >*
CCloud_EnumerateUserFiles_Response::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:CCloud_EnumerateUserFiles_Response.files)
  return &files_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CCloud_UserFile >&
CCloud_EnumerateUserFiles_Response::files() const {
  // @@protoc_insertion_point(field_list:CCloud_EnumerateUserFiles_Response.files)
  return files_;
}

// optional uint32 total_files = 2;
inline bool CCloud_EnumerateUserFiles_Response::has_total_files() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_EnumerateUserFiles_Response::set_has_total_files() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCloud_EnumerateUserFiles_Response::clear_has_total_files() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCloud_EnumerateUserFiles_Response::clear_total_files() {
  total_files_ = 0u;
  clear_has_total_files();
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Response::total_files() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Response.total_files)
  return total_files_;
}
inline void CCloud_EnumerateUserFiles_Response::set_total_files(::google::protobuf::uint32 value) {
  set_has_total_files();
  total_files_ = value;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Response.total_files)
}

// -------------------------------------------------------------------

// CCloud_Delete_Request

// optional string filename = 1;
inline bool CCloud_Delete_Request::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_Delete_Request::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCloud_Delete_Request::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCloud_Delete_Request::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& CCloud_Delete_Request::filename() const {
  // @@protoc_insertion_point(field_get:CCloud_Delete_Request.filename)
  return filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_Delete_Request::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCloud_Delete_Request.filename)
}
inline void CCloud_Delete_Request::set_filename(const char* value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCloud_Delete_Request.filename)
}
inline void CCloud_Delete_Request::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCloud_Delete_Request.filename)
}
inline ::std::string* CCloud_Delete_Request::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:CCloud_Delete_Request.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_Delete_Request::release_filename() {
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_Delete_Request::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CCloud_Delete_Request.filename)
}

// optional uint32 appid = 2;
inline bool CCloud_Delete_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_Delete_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCloud_Delete_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCloud_Delete_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCloud_Delete_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_Delete_Request.appid)
  return appid_;
}
inline void CCloud_Delete_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CCloud_Delete_Request.appid)
}

// -------------------------------------------------------------------

// CCloud_Delete_Response

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5fcloud_2esteamworkssdk_2eproto__INCLUDED
