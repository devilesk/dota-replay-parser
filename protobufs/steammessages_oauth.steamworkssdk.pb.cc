// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_oauth.steamworkssdk.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "steammessages_oauth.steamworkssdk.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* COAuthToken_ImplicitGrantNoPrompt_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  COAuthToken_ImplicitGrantNoPrompt_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* COAuthToken_ImplicitGrantNoPrompt_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  COAuthToken_ImplicitGrantNoPrompt_Response_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_steammessages_5foauth_2esteamworkssdk_2eproto() {
  protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "steammessages_oauth.steamworkssdk.proto");
  GOOGLE_CHECK(file != NULL);
  COAuthToken_ImplicitGrantNoPrompt_Request_descriptor_ = file->message_type(0);
  static const int COAuthToken_ImplicitGrantNoPrompt_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COAuthToken_ImplicitGrantNoPrompt_Request, clientid_),
  };
  COAuthToken_ImplicitGrantNoPrompt_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      COAuthToken_ImplicitGrantNoPrompt_Request_descriptor_,
      COAuthToken_ImplicitGrantNoPrompt_Request::default_instance_,
      COAuthToken_ImplicitGrantNoPrompt_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COAuthToken_ImplicitGrantNoPrompt_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COAuthToken_ImplicitGrantNoPrompt_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(COAuthToken_ImplicitGrantNoPrompt_Request));
  COAuthToken_ImplicitGrantNoPrompt_Response_descriptor_ = file->message_type(1);
  static const int COAuthToken_ImplicitGrantNoPrompt_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COAuthToken_ImplicitGrantNoPrompt_Response, access_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COAuthToken_ImplicitGrantNoPrompt_Response, redirect_uri_),
  };
  COAuthToken_ImplicitGrantNoPrompt_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      COAuthToken_ImplicitGrantNoPrompt_Response_descriptor_,
      COAuthToken_ImplicitGrantNoPrompt_Response::default_instance_,
      COAuthToken_ImplicitGrantNoPrompt_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COAuthToken_ImplicitGrantNoPrompt_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COAuthToken_ImplicitGrantNoPrompt_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(COAuthToken_ImplicitGrantNoPrompt_Response));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_steammessages_5foauth_2esteamworkssdk_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    COAuthToken_ImplicitGrantNoPrompt_Request_descriptor_, &COAuthToken_ImplicitGrantNoPrompt_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    COAuthToken_ImplicitGrantNoPrompt_Response_descriptor_, &COAuthToken_ImplicitGrantNoPrompt_Response::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_steammessages_5foauth_2esteamworkssdk_2eproto() {
  delete COAuthToken_ImplicitGrantNoPrompt_Request::default_instance_;
  delete COAuthToken_ImplicitGrantNoPrompt_Request_reflection_;
  delete COAuthToken_ImplicitGrantNoPrompt_Response::default_instance_;
  delete COAuthToken_ImplicitGrantNoPrompt_Response_reflection_;
}

void protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_steammessages_5funified_5fbase_2esteamworkssdk_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'steammessages_oauth.steamworkssdk.prot"
    "o\032.steammessages_unified_base.steamworks"
    "sdk.proto\"{\n)COAuthToken_ImplicitGrantNo"
    "Prompt_Request\022N\n\010clientid\030\001 \001(\tB<\202\265\0308Cl"
    "ient ID for which to count the number of"
    " issued tokens\"\267\001\n*COAuthToken_ImplicitG"
    "rantNoPrompt_Response\0229\n\014access_token\030\001 "
    "\001(\tB#\202\265\030\037OAuth Token, granted on success"
    "\022N\n\014redirect_uri\030\002 \001(\tB8\202\265\0304Redirection "
    "URI provided during client registration."
    "2\261\002\n\nOAuthToken\022\353\001\n\025ImplicitGrantNoPromp"
    "t\022*.COAuthToken_ImplicitGrantNoPrompt_Re"
    "quest\032+.COAuthToken_ImplicitGrantNoPromp"
    "t_Response\"y\202\265\030uGrants an implicit OAuth"
    " token (grant type \'token\') for the spec"
    "ified client ID on behalf of a user with"
    "out prompting\0325\202\265\0301Service containing me"
    "thods to manage OAuth tokens", 708);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_oauth.steamworkssdk.proto", &protobuf_RegisterTypes);
  COAuthToken_ImplicitGrantNoPrompt_Request::default_instance_ = new COAuthToken_ImplicitGrantNoPrompt_Request();
  COAuthToken_ImplicitGrantNoPrompt_Response::default_instance_ = new COAuthToken_ImplicitGrantNoPrompt_Response();
  COAuthToken_ImplicitGrantNoPrompt_Request::default_instance_->InitAsDefaultInstance();
  COAuthToken_ImplicitGrantNoPrompt_Response::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_steammessages_5foauth_2esteamworkssdk_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_steammessages_5foauth_2esteamworkssdk_2eproto {
  StaticDescriptorInitializer_steammessages_5foauth_2esteamworkssdk_2eproto() {
    protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  }
} static_descriptor_initializer_steammessages_5foauth_2esteamworkssdk_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int COAuthToken_ImplicitGrantNoPrompt_Request::kClientidFieldNumber;
#endif  // !_MSC_VER

COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:COAuthToken_ImplicitGrantNoPrompt_Request)
}

void COAuthToken_ImplicitGrantNoPrompt_Request::InitAsDefaultInstance() {
}

COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(const COAuthToken_ImplicitGrantNoPrompt_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:COAuthToken_ImplicitGrantNoPrompt_Request)
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clientid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

COAuthToken_ImplicitGrantNoPrompt_Request::~COAuthToken_ImplicitGrantNoPrompt_Request() {
  // @@protoc_insertion_point(destructor:COAuthToken_ImplicitGrantNoPrompt_Request)
  SharedDtor();
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SharedDtor() {
  if (clientid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete clientid_;
  }
  if (this != default_instance_) {
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* COAuthToken_ImplicitGrantNoPrompt_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return COAuthToken_ImplicitGrantNoPrompt_Request_descriptor_;
}

const COAuthToken_ImplicitGrantNoPrompt_Request& COAuthToken_ImplicitGrantNoPrompt_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  return *default_instance_;
}

COAuthToken_ImplicitGrantNoPrompt_Request* COAuthToken_ImplicitGrantNoPrompt_Request::default_instance_ = NULL;

COAuthToken_ImplicitGrantNoPrompt_Request* COAuthToken_ImplicitGrantNoPrompt_Request::New() const {
  return new COAuthToken_ImplicitGrantNoPrompt_Request;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::Clear() {
  if (has_clientid()) {
    if (clientid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      clientid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool COAuthToken_ImplicitGrantNoPrompt_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string clientid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientid().data(), this->clientid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "clientid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COAuthToken_ImplicitGrantNoPrompt_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COAuthToken_ImplicitGrantNoPrompt_Request)
  return false;
#undef DO_
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  // optional string clientid = 1;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientid().data(), this->clientid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "clientid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COAuthToken_ImplicitGrantNoPrompt_Request)
}

::google::protobuf::uint8* COAuthToken_ImplicitGrantNoPrompt_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  // optional string clientid = 1;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientid().data(), this->clientid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "clientid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COAuthToken_ImplicitGrantNoPrompt_Request)
  return target;
}

int COAuthToken_ImplicitGrantNoPrompt_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string clientid = 1;
    if (has_clientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const COAuthToken_ImplicitGrantNoPrompt_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const COAuthToken_ImplicitGrantNoPrompt_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Request::MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void COAuthToken_ImplicitGrantNoPrompt_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COAuthToken_ImplicitGrantNoPrompt_Request::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Request::IsInitialized() const {

  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::Swap(COAuthToken_ImplicitGrantNoPrompt_Request* other) {
  if (other != this) {
    std::swap(clientid_, other->clientid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata COAuthToken_ImplicitGrantNoPrompt_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = COAuthToken_ImplicitGrantNoPrompt_Request_descriptor_;
  metadata.reflection = COAuthToken_ImplicitGrantNoPrompt_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int COAuthToken_ImplicitGrantNoPrompt_Response::kAccessTokenFieldNumber;
const int COAuthToken_ImplicitGrantNoPrompt_Response::kRedirectUriFieldNumber;
#endif  // !_MSC_VER

COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:COAuthToken_ImplicitGrantNoPrompt_Response)
}

void COAuthToken_ImplicitGrantNoPrompt_Response::InitAsDefaultInstance() {
}

COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(const COAuthToken_ImplicitGrantNoPrompt_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:COAuthToken_ImplicitGrantNoPrompt_Response)
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  access_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

COAuthToken_ImplicitGrantNoPrompt_Response::~COAuthToken_ImplicitGrantNoPrompt_Response() {
  // @@protoc_insertion_point(destructor:COAuthToken_ImplicitGrantNoPrompt_Response)
  SharedDtor();
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SharedDtor() {
  if (access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete access_token_;
  }
  if (redirect_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete redirect_uri_;
  }
  if (this != default_instance_) {
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* COAuthToken_ImplicitGrantNoPrompt_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return COAuthToken_ImplicitGrantNoPrompt_Response_descriptor_;
}

const COAuthToken_ImplicitGrantNoPrompt_Response& COAuthToken_ImplicitGrantNoPrompt_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  return *default_instance_;
}

COAuthToken_ImplicitGrantNoPrompt_Response* COAuthToken_ImplicitGrantNoPrompt_Response::default_instance_ = NULL;

COAuthToken_ImplicitGrantNoPrompt_Response* COAuthToken_ImplicitGrantNoPrompt_Response::New() const {
  return new COAuthToken_ImplicitGrantNoPrompt_Response;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_access_token()) {
      if (access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        access_token_->clear();
      }
    }
    if (has_redirect_uri()) {
      if (redirect_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        redirect_uri_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool COAuthToken_ImplicitGrantNoPrompt_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string access_token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->access_token().data(), this->access_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "access_token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_redirect_uri;
        break;
      }

      // optional string redirect_uri = 2;
      case 2: {
        if (tag == 18) {
         parse_redirect_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect_uri().data(), this->redirect_uri().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "redirect_uri");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COAuthToken_ImplicitGrantNoPrompt_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COAuthToken_ImplicitGrantNoPrompt_Response)
  return false;
#undef DO_
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  // optional string access_token = 1;
  if (has_access_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), this->access_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_token(), output);
  }

  // optional string redirect_uri = 2;
  if (has_redirect_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), this->redirect_uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "redirect_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect_uri(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COAuthToken_ImplicitGrantNoPrompt_Response)
}

::google::protobuf::uint8* COAuthToken_ImplicitGrantNoPrompt_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  // optional string access_token = 1;
  if (has_access_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), this->access_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_token(), target);
  }

  // optional string redirect_uri = 2;
  if (has_redirect_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), this->redirect_uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "redirect_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect_uri(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COAuthToken_ImplicitGrantNoPrompt_Response)
  return target;
}

int COAuthToken_ImplicitGrantNoPrompt_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string access_token = 1;
    if (has_access_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->access_token());
    }

    // optional string redirect_uri = 2;
    if (has_redirect_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect_uri());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const COAuthToken_ImplicitGrantNoPrompt_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const COAuthToken_ImplicitGrantNoPrompt_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Response::MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_access_token()) {
      set_access_token(from.access_token());
    }
    if (from.has_redirect_uri()) {
      set_redirect_uri(from.redirect_uri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void COAuthToken_ImplicitGrantNoPrompt_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COAuthToken_ImplicitGrantNoPrompt_Response::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Response::IsInitialized() const {

  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::Swap(COAuthToken_ImplicitGrantNoPrompt_Response* other) {
  if (other != this) {
    std::swap(access_token_, other->access_token_);
    std::swap(redirect_uri_, other->redirect_uri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata COAuthToken_ImplicitGrantNoPrompt_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = COAuthToken_ImplicitGrantNoPrompt_Response_descriptor_;
  metadata.reflection = COAuthToken_ImplicitGrantNoPrompt_Response_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
