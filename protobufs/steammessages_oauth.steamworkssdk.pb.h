// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_oauth.steamworkssdk.proto

#ifndef PROTOBUF_steammessages_5foauth_2esteamworkssdk_2eproto__INCLUDED
#define PROTOBUF_steammessages_5foauth_2esteamworkssdk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
void protobuf_AssignDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
void protobuf_ShutdownFile_steammessages_5foauth_2esteamworkssdk_2eproto();

class COAuthToken_ImplicitGrantNoPrompt_Request;
class COAuthToken_ImplicitGrantNoPrompt_Response;

// ===================================================================

class COAuthToken_ImplicitGrantNoPrompt_Request : public ::google::protobuf::Message {
 public:
  COAuthToken_ImplicitGrantNoPrompt_Request();
  virtual ~COAuthToken_ImplicitGrantNoPrompt_Request();

  COAuthToken_ImplicitGrantNoPrompt_Request(const COAuthToken_ImplicitGrantNoPrompt_Request& from);

  inline COAuthToken_ImplicitGrantNoPrompt_Request& operator=(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COAuthToken_ImplicitGrantNoPrompt_Request& default_instance();

  void Swap(COAuthToken_ImplicitGrantNoPrompt_Request* other);

  // implements Message ----------------------------------------------

  COAuthToken_ImplicitGrantNoPrompt_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from);
  void MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string clientid = 1;
  inline bool has_clientid() const;
  inline void clear_clientid();
  static const int kClientidFieldNumber = 1;
  inline const ::std::string& clientid() const;
  inline void set_clientid(const ::std::string& value);
  inline void set_clientid(const char* value);
  inline void set_clientid(const char* value, size_t size);
  inline ::std::string* mutable_clientid();
  inline ::std::string* release_clientid();
  inline void set_allocated_clientid(::std::string* clientid);

  // @@protoc_insertion_point(class_scope:COAuthToken_ImplicitGrantNoPrompt_Request)
 private:
  inline void set_has_clientid();
  inline void clear_has_clientid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* clientid_;
  friend void  protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5foauth_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static COAuthToken_ImplicitGrantNoPrompt_Request* default_instance_;
};
// -------------------------------------------------------------------

class COAuthToken_ImplicitGrantNoPrompt_Response : public ::google::protobuf::Message {
 public:
  COAuthToken_ImplicitGrantNoPrompt_Response();
  virtual ~COAuthToken_ImplicitGrantNoPrompt_Response();

  COAuthToken_ImplicitGrantNoPrompt_Response(const COAuthToken_ImplicitGrantNoPrompt_Response& from);

  inline COAuthToken_ImplicitGrantNoPrompt_Response& operator=(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COAuthToken_ImplicitGrantNoPrompt_Response& default_instance();

  void Swap(COAuthToken_ImplicitGrantNoPrompt_Response* other);

  // implements Message ----------------------------------------------

  COAuthToken_ImplicitGrantNoPrompt_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from);
  void MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string access_token = 1;
  inline bool has_access_token() const;
  inline void clear_access_token();
  static const int kAccessTokenFieldNumber = 1;
  inline const ::std::string& access_token() const;
  inline void set_access_token(const ::std::string& value);
  inline void set_access_token(const char* value);
  inline void set_access_token(const char* value, size_t size);
  inline ::std::string* mutable_access_token();
  inline ::std::string* release_access_token();
  inline void set_allocated_access_token(::std::string* access_token);

  // optional string redirect_uri = 2;
  inline bool has_redirect_uri() const;
  inline void clear_redirect_uri();
  static const int kRedirectUriFieldNumber = 2;
  inline const ::std::string& redirect_uri() const;
  inline void set_redirect_uri(const ::std::string& value);
  inline void set_redirect_uri(const char* value);
  inline void set_redirect_uri(const char* value, size_t size);
  inline ::std::string* mutable_redirect_uri();
  inline ::std::string* release_redirect_uri();
  inline void set_allocated_redirect_uri(::std::string* redirect_uri);

  // @@protoc_insertion_point(class_scope:COAuthToken_ImplicitGrantNoPrompt_Response)
 private:
  inline void set_has_access_token();
  inline void clear_has_access_token();
  inline void set_has_redirect_uri();
  inline void clear_has_redirect_uri();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* access_token_;
  ::std::string* redirect_uri_;
  friend void  protobuf_AddDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  friend void protobuf_AssignDesc_steammessages_5foauth_2esteamworkssdk_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5foauth_2esteamworkssdk_2eproto();

  void InitAsDefaultInstance();
  static COAuthToken_ImplicitGrantNoPrompt_Response* default_instance_;
};
// ===================================================================


// ===================================================================

// COAuthToken_ImplicitGrantNoPrompt_Request

// optional string clientid = 1;
inline bool COAuthToken_ImplicitGrantNoPrompt_Request::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Request::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Request::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Request::clear_clientid() {
  if (clientid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clientid_->clear();
  }
  clear_has_clientid();
}
inline const ::std::string& COAuthToken_ImplicitGrantNoPrompt_Request::clientid() const {
  // @@protoc_insertion_point(field_get:COAuthToken_ImplicitGrantNoPrompt_Request.clientid)
  return *clientid_;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Request::set_clientid(const ::std::string& value) {
  set_has_clientid();
  if (clientid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clientid_ = new ::std::string;
  }
  clientid_->assign(value);
  // @@protoc_insertion_point(field_set:COAuthToken_ImplicitGrantNoPrompt_Request.clientid)
}
inline void COAuthToken_ImplicitGrantNoPrompt_Request::set_clientid(const char* value) {
  set_has_clientid();
  if (clientid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clientid_ = new ::std::string;
  }
  clientid_->assign(value);
  // @@protoc_insertion_point(field_set_char:COAuthToken_ImplicitGrantNoPrompt_Request.clientid)
}
inline void COAuthToken_ImplicitGrantNoPrompt_Request::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  if (clientid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clientid_ = new ::std::string;
  }
  clientid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:COAuthToken_ImplicitGrantNoPrompt_Request.clientid)
}
inline ::std::string* COAuthToken_ImplicitGrantNoPrompt_Request::mutable_clientid() {
  set_has_clientid();
  if (clientid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clientid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:COAuthToken_ImplicitGrantNoPrompt_Request.clientid)
  return clientid_;
}
inline ::std::string* COAuthToken_ImplicitGrantNoPrompt_Request::release_clientid() {
  clear_has_clientid();
  if (clientid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = clientid_;
    clientid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void COAuthToken_ImplicitGrantNoPrompt_Request::set_allocated_clientid(::std::string* clientid) {
  if (clientid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete clientid_;
  }
  if (clientid) {
    set_has_clientid();
    clientid_ = clientid;
  } else {
    clear_has_clientid();
    clientid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:COAuthToken_ImplicitGrantNoPrompt_Request.clientid)
}

// -------------------------------------------------------------------

// COAuthToken_ImplicitGrantNoPrompt_Response

// optional string access_token = 1;
inline bool COAuthToken_ImplicitGrantNoPrompt_Response::has_access_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_has_access_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::clear_has_access_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::clear_access_token() {
  if (access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_->clear();
  }
  clear_has_access_token();
}
inline const ::std::string& COAuthToken_ImplicitGrantNoPrompt_Response::access_token() const {
  // @@protoc_insertion_point(field_get:COAuthToken_ImplicitGrantNoPrompt_Response.access_token)
  return *access_token_;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_access_token(const ::std::string& value) {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  access_token_->assign(value);
  // @@protoc_insertion_point(field_set:COAuthToken_ImplicitGrantNoPrompt_Response.access_token)
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_access_token(const char* value) {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  access_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:COAuthToken_ImplicitGrantNoPrompt_Response.access_token)
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_access_token(const char* value, size_t size) {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  access_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:COAuthToken_ImplicitGrantNoPrompt_Response.access_token)
}
inline ::std::string* COAuthToken_ImplicitGrantNoPrompt_Response::mutable_access_token() {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:COAuthToken_ImplicitGrantNoPrompt_Response.access_token)
  return access_token_;
}
inline ::std::string* COAuthToken_ImplicitGrantNoPrompt_Response::release_access_token() {
  clear_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = access_token_;
    access_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_allocated_access_token(::std::string* access_token) {
  if (access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete access_token_;
  }
  if (access_token) {
    set_has_access_token();
    access_token_ = access_token;
  } else {
    clear_has_access_token();
    access_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:COAuthToken_ImplicitGrantNoPrompt_Response.access_token)
}

// optional string redirect_uri = 2;
inline bool COAuthToken_ImplicitGrantNoPrompt_Response::has_redirect_uri() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_has_redirect_uri() {
  _has_bits_[0] |= 0x00000002u;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::clear_has_redirect_uri() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::clear_redirect_uri() {
  if (redirect_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_uri_->clear();
  }
  clear_has_redirect_uri();
}
inline const ::std::string& COAuthToken_ImplicitGrantNoPrompt_Response::redirect_uri() const {
  // @@protoc_insertion_point(field_get:COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri)
  return *redirect_uri_;
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_redirect_uri(const ::std::string& value) {
  set_has_redirect_uri();
  if (redirect_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_uri_ = new ::std::string;
  }
  redirect_uri_->assign(value);
  // @@protoc_insertion_point(field_set:COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri)
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_redirect_uri(const char* value) {
  set_has_redirect_uri();
  if (redirect_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_uri_ = new ::std::string;
  }
  redirect_uri_->assign(value);
  // @@protoc_insertion_point(field_set_char:COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri)
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_redirect_uri(const char* value, size_t size) {
  set_has_redirect_uri();
  if (redirect_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_uri_ = new ::std::string;
  }
  redirect_uri_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri)
}
inline ::std::string* COAuthToken_ImplicitGrantNoPrompt_Response::mutable_redirect_uri() {
  set_has_redirect_uri();
  if (redirect_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_uri_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri)
  return redirect_uri_;
}
inline ::std::string* COAuthToken_ImplicitGrantNoPrompt_Response::release_redirect_uri() {
  clear_has_redirect_uri();
  if (redirect_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = redirect_uri_;
    redirect_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void COAuthToken_ImplicitGrantNoPrompt_Response::set_allocated_redirect_uri(::std::string* redirect_uri) {
  if (redirect_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete redirect_uri_;
  }
  if (redirect_uri) {
    set_has_redirect_uri();
    redirect_uri_ = redirect_uri;
  } else {
    clear_has_redirect_uri();
    redirect_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5foauth_2esteamworkssdk_2eproto__INCLUDED
